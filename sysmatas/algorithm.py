import sys
import numpy as np
import ctypes as ct
# Stub code for OpenCL setup.

import pyopencl as cl
import numpy as np
import sys

if cl.version.VERSION < (2015,2):
    raise Exception('Futhark requires at least PyOpenCL version 2015.2.  Installed version is %s.' %
                    cl.version.VERSION_TEXT)

def parse_preferred_device(s):
    pref_num = 0
    if len(s) > 1 and s[0] == '#':
        i = 1
        while i < len(s):
            if not s[i].isdigit():
                break
            else:
                pref_num = pref_num * 10 + int(s[i])
            i += 1
        while i < len(s) and s[i].isspace():
            i += 1
        return (s[i:], pref_num)
    else:
        return (s, 0)

def get_prefered_context(interactive=False, platform_pref=None, device_pref=None):
    if device_pref != None:
        (device_pref, device_num) = parse_preferred_device(device_pref)
    else:
        device_num = 0

    if interactive:
        return cl.create_some_context(interactive=True)

    def blacklisted(p, d):
        return platform_pref == None and device_pref == None and \
            p.name == "Apple" and d.name.find("Intel(R) Core(TM)") >= 0
    def platform_ok(p):
        return not platform_pref or p.name.find(platform_pref) >= 0
    def device_ok(d):
        return not device_pref or d.name.find(device_pref) >= 0

    device_matches = 0

    for p in cl.get_platforms():
        if not platform_ok(p):
            continue
        for d in p.get_devices():
            if blacklisted(p,d) or not device_ok(d):
                continue
            if device_matches == device_num:
                return cl.Context(devices=[d])
            else:
                device_matches += 1
    raise Exception('No OpenCL platform and device matching constraints found.')

def check_types(self, required_types):
    if 'f64' in required_types:
        if self.device.get_info(cl.device_info.PREFERRED_VECTOR_WIDTH_DOUBLE) == 0:
            raise Exception('Program uses double-precision floats, but this is not supported on chosen device: %s' % self.device.name)

def apply_size_heuristics(self, size_heuristics, sizes):
    for (platform_name, device_type, size, value) in size_heuristics:
        if sizes[size] == None \
           and self.platform.name.find(platform_name) >= 0 \
           and self.device.type == device_type:
               if type(value) == str:
                   sizes[size] = self.device.get_info(getattr(cl.device_info,value))
               else:
                   sizes[size] = value
    return sizes

def initialise_opencl_object(self,
                             program_src='',
                             command_queue=None,
                             interactive=False,
                             platform_pref=None,
                             device_pref=None,
                             default_group_size=None,
                             default_num_groups=None,
                             default_tile_size=None,
                             default_threshold=None,
                             transpose_block_dim=16,
                             size_heuristics=[],
                             required_types=[],
                             all_sizes={},
                             user_sizes={}):
    if command_queue is None:
        self.ctx = get_prefered_context(interactive, platform_pref, device_pref)
        self.queue = cl.CommandQueue(self.ctx)
    else:
        self.ctx = command_queue.context
        self.queue = command_queue
    self.device = self.queue.device
    self.platform = self.device.platform
    self.pool = cl.tools.MemoryPool(cl.tools.ImmediateAllocator(self.queue))
    device_type = self.device.type

    check_types(self, required_types)

    max_group_size = int(self.device.max_work_group_size)
    max_tile_size = int(np.sqrt(self.device.max_work_group_size))

    self.max_group_size = max_group_size
    self.max_tile_size = max_tile_size
    self.max_threshold = 0
    self.max_num_groups = 0
    self.free_list = {}

    default_group_size_set = default_group_size != None
    default_tile_size_set = default_tile_size != None
    default_sizes = apply_size_heuristics(self, size_heuristics,
                                          {'group_size': default_group_size,
                                           'tile_size': default_tile_size,
                                           'num_groups': default_num_groups,
                                           'lockstep_width': None,
                                           'threshold': default_threshold})
    default_group_size = default_sizes['group_size']
    default_num_groups = default_sizes['num_groups']
    default_threshold = default_sizes['threshold']
    default_tile_size = default_sizes['tile_size']
    lockstep_width = default_sizes['lockstep_width']

    if default_group_size > max_group_size and default_group_size_set:
        sys.stderr.write('Note: Device limits group size to {} (down from {})\n'.
                         format(max_tile_size, default_group_size))
        default_group_size = max_group_size

    if default_tile_size > max_tile_size and default_tile_size_set:
        sys.stderr.write('Note: Device limits tile size to {} (down from {})\n'.
                         format(max_tile_size, default_tile_size))
        default_tile_size = max_tile_size

    for (k,v) in user_sizes.items():
        if k in all_sizes:
            all_sizes[k]['value'] = v
        else:
            raise Exception('Unknown size: {}'.format(k))

    self.sizes = {}
    for (k,v) in all_sizes.items():
        if v['class'] == 'group_size':
            max_value = max_group_size
            default_value = default_group_size
        elif v['class'] == 'num_groups':
            max_value = max_group_size # Intentional!
            default_value = default_num_groups
        elif v['class'] == 'tile_size':
            max_value = max_tile_size
            default_value = default_tile_size
        elif v['class'] == 'threshold':
            max_value = None
            default_value = default_threshold
        else:
            raise Exception('Unknown size class for size \'{}\': {}'.format(k, v['class']))
        if v['value'] == None:
            self.sizes[k] = default_value
        elif max_value != None and v['value'] > max_value:
            sys.stderr.write('Note: Device limits {} to {} (down from {}\n'.
                             format(k, max_value, v['value']))
            self.sizes[k] = max_value
        else:
            self.sizes[k] = v['value']

    if (len(program_src) >= 0):
        return cl.Program(self.ctx, program_src).build(
            ["-DFUT_BLOCK_DIM={}".format(transpose_block_dim),
             "-DLOCKSTEP_WIDTH={}".format(lockstep_width)]
            + ["-D{}={}".format(s,v) for (s,v) in self.sizes.items()])

def opencl_alloc(self, min_size, tag):
    min_size = 1 if min_size == 0 else min_size
    assert min_size > 0
    return self.pool.allocate(min_size)

def opencl_free_all(self):
    self.pool.free_held()
import pyopencl.array
import time
import argparse
synchronous = False
preferred_platform = None
preferred_device = None
fut_opencl_src = """#pragma OPENCL EXTENSION cl_khr_fp64 : enable
__kernel void dummy_kernel(__global unsigned char *dummy, int n)
{
    const int thread_gid = get_global_id(0);
    
    if (thread_gid >= n)
        return;
}
typedef char int8_t;
typedef short int16_t;
typedef int int32_t;
typedef long int64_t;
typedef uchar uint8_t;
typedef ushort uint16_t;
typedef uint uint32_t;
typedef ulong uint64_t;
#define ALIGNED_LOCAL_MEMORY(m,size) __local unsigned char m[size] __attribute__ ((align))
static inline int8_t add8(int8_t x, int8_t y)
{
    return x + y;
}
static inline int16_t add16(int16_t x, int16_t y)
{
    return x + y;
}
static inline int32_t add32(int32_t x, int32_t y)
{
    return x + y;
}
static inline int64_t add64(int64_t x, int64_t y)
{
    return x + y;
}
static inline int8_t sub8(int8_t x, int8_t y)
{
    return x - y;
}
static inline int16_t sub16(int16_t x, int16_t y)
{
    return x - y;
}
static inline int32_t sub32(int32_t x, int32_t y)
{
    return x - y;
}
static inline int64_t sub64(int64_t x, int64_t y)
{
    return x - y;
}
static inline int8_t mul8(int8_t x, int8_t y)
{
    return x * y;
}
static inline int16_t mul16(int16_t x, int16_t y)
{
    return x * y;
}
static inline int32_t mul32(int32_t x, int32_t y)
{
    return x * y;
}
static inline int64_t mul64(int64_t x, int64_t y)
{
    return x * y;
}
static inline uint8_t udiv8(uint8_t x, uint8_t y)
{
    return x / y;
}
static inline uint16_t udiv16(uint16_t x, uint16_t y)
{
    return x / y;
}
static inline uint32_t udiv32(uint32_t x, uint32_t y)
{
    return x / y;
}
static inline uint64_t udiv64(uint64_t x, uint64_t y)
{
    return x / y;
}
static inline uint8_t umod8(uint8_t x, uint8_t y)
{
    return x % y;
}
static inline uint16_t umod16(uint16_t x, uint16_t y)
{
    return x % y;
}
static inline uint32_t umod32(uint32_t x, uint32_t y)
{
    return x % y;
}
static inline uint64_t umod64(uint64_t x, uint64_t y)
{
    return x % y;
}
static inline int8_t sdiv8(int8_t x, int8_t y)
{
    int8_t q = x / y;
    int8_t r = x % y;
    
    return q - ((r != 0 && r < 0 != y < 0) ? 1 : 0);
}
static inline int16_t sdiv16(int16_t x, int16_t y)
{
    int16_t q = x / y;
    int16_t r = x % y;
    
    return q - ((r != 0 && r < 0 != y < 0) ? 1 : 0);
}
static inline int32_t sdiv32(int32_t x, int32_t y)
{
    int32_t q = x / y;
    int32_t r = x % y;
    
    return q - ((r != 0 && r < 0 != y < 0) ? 1 : 0);
}
static inline int64_t sdiv64(int64_t x, int64_t y)
{
    int64_t q = x / y;
    int64_t r = x % y;
    
    return q - ((r != 0 && r < 0 != y < 0) ? 1 : 0);
}
static inline int8_t smod8(int8_t x, int8_t y)
{
    int8_t r = x % y;
    
    return r + (r == 0 || (x > 0 && y > 0) || (x < 0 && y < 0) ? 0 : y);
}
static inline int16_t smod16(int16_t x, int16_t y)
{
    int16_t r = x % y;
    
    return r + (r == 0 || (x > 0 && y > 0) || (x < 0 && y < 0) ? 0 : y);
}
static inline int32_t smod32(int32_t x, int32_t y)
{
    int32_t r = x % y;
    
    return r + (r == 0 || (x > 0 && y > 0) || (x < 0 && y < 0) ? 0 : y);
}
static inline int64_t smod64(int64_t x, int64_t y)
{
    int64_t r = x % y;
    
    return r + (r == 0 || (x > 0 && y > 0) || (x < 0 && y < 0) ? 0 : y);
}
static inline int8_t squot8(int8_t x, int8_t y)
{
    return x / y;
}
static inline int16_t squot16(int16_t x, int16_t y)
{
    return x / y;
}
static inline int32_t squot32(int32_t x, int32_t y)
{
    return x / y;
}
static inline int64_t squot64(int64_t x, int64_t y)
{
    return x / y;
}
static inline int8_t srem8(int8_t x, int8_t y)
{
    return x % y;
}
static inline int16_t srem16(int16_t x, int16_t y)
{
    return x % y;
}
static inline int32_t srem32(int32_t x, int32_t y)
{
    return x % y;
}
static inline int64_t srem64(int64_t x, int64_t y)
{
    return x % y;
}
static inline int8_t smin8(int8_t x, int8_t y)
{
    return x < y ? x : y;
}
static inline int16_t smin16(int16_t x, int16_t y)
{
    return x < y ? x : y;
}
static inline int32_t smin32(int32_t x, int32_t y)
{
    return x < y ? x : y;
}
static inline int64_t smin64(int64_t x, int64_t y)
{
    return x < y ? x : y;
}
static inline uint8_t umin8(uint8_t x, uint8_t y)
{
    return x < y ? x : y;
}
static inline uint16_t umin16(uint16_t x, uint16_t y)
{
    return x < y ? x : y;
}
static inline uint32_t umin32(uint32_t x, uint32_t y)
{
    return x < y ? x : y;
}
static inline uint64_t umin64(uint64_t x, uint64_t y)
{
    return x < y ? x : y;
}
static inline int8_t smax8(int8_t x, int8_t y)
{
    return x < y ? y : x;
}
static inline int16_t smax16(int16_t x, int16_t y)
{
    return x < y ? y : x;
}
static inline int32_t smax32(int32_t x, int32_t y)
{
    return x < y ? y : x;
}
static inline int64_t smax64(int64_t x, int64_t y)
{
    return x < y ? y : x;
}
static inline uint8_t umax8(uint8_t x, uint8_t y)
{
    return x < y ? y : x;
}
static inline uint16_t umax16(uint16_t x, uint16_t y)
{
    return x < y ? y : x;
}
static inline uint32_t umax32(uint32_t x, uint32_t y)
{
    return x < y ? y : x;
}
static inline uint64_t umax64(uint64_t x, uint64_t y)
{
    return x < y ? y : x;
}
static inline uint8_t shl8(uint8_t x, uint8_t y)
{
    return x << y;
}
static inline uint16_t shl16(uint16_t x, uint16_t y)
{
    return x << y;
}
static inline uint32_t shl32(uint32_t x, uint32_t y)
{
    return x << y;
}
static inline uint64_t shl64(uint64_t x, uint64_t y)
{
    return x << y;
}
static inline uint8_t lshr8(uint8_t x, uint8_t y)
{
    return x >> y;
}
static inline uint16_t lshr16(uint16_t x, uint16_t y)
{
    return x >> y;
}
static inline uint32_t lshr32(uint32_t x, uint32_t y)
{
    return x >> y;
}
static inline uint64_t lshr64(uint64_t x, uint64_t y)
{
    return x >> y;
}
static inline int8_t ashr8(int8_t x, int8_t y)
{
    return x >> y;
}
static inline int16_t ashr16(int16_t x, int16_t y)
{
    return x >> y;
}
static inline int32_t ashr32(int32_t x, int32_t y)
{
    return x >> y;
}
static inline int64_t ashr64(int64_t x, int64_t y)
{
    return x >> y;
}
static inline uint8_t and8(uint8_t x, uint8_t y)
{
    return x & y;
}
static inline uint16_t and16(uint16_t x, uint16_t y)
{
    return x & y;
}
static inline uint32_t and32(uint32_t x, uint32_t y)
{
    return x & y;
}
static inline uint64_t and64(uint64_t x, uint64_t y)
{
    return x & y;
}
static inline uint8_t or8(uint8_t x, uint8_t y)
{
    return x | y;
}
static inline uint16_t or16(uint16_t x, uint16_t y)
{
    return x | y;
}
static inline uint32_t or32(uint32_t x, uint32_t y)
{
    return x | y;
}
static inline uint64_t or64(uint64_t x, uint64_t y)
{
    return x | y;
}
static inline uint8_t xor8(uint8_t x, uint8_t y)
{
    return x ^ y;
}
static inline uint16_t xor16(uint16_t x, uint16_t y)
{
    return x ^ y;
}
static inline uint32_t xor32(uint32_t x, uint32_t y)
{
    return x ^ y;
}
static inline uint64_t xor64(uint64_t x, uint64_t y)
{
    return x ^ y;
}
static inline char ult8(uint8_t x, uint8_t y)
{
    return x < y;
}
static inline char ult16(uint16_t x, uint16_t y)
{
    return x < y;
}
static inline char ult32(uint32_t x, uint32_t y)
{
    return x < y;
}
static inline char ult64(uint64_t x, uint64_t y)
{
    return x < y;
}
static inline char ule8(uint8_t x, uint8_t y)
{
    return x <= y;
}
static inline char ule16(uint16_t x, uint16_t y)
{
    return x <= y;
}
static inline char ule32(uint32_t x, uint32_t y)
{
    return x <= y;
}
static inline char ule64(uint64_t x, uint64_t y)
{
    return x <= y;
}
static inline char slt8(int8_t x, int8_t y)
{
    return x < y;
}
static inline char slt16(int16_t x, int16_t y)
{
    return x < y;
}
static inline char slt32(int32_t x, int32_t y)
{
    return x < y;
}
static inline char slt64(int64_t x, int64_t y)
{
    return x < y;
}
static inline char sle8(int8_t x, int8_t y)
{
    return x <= y;
}
static inline char sle16(int16_t x, int16_t y)
{
    return x <= y;
}
static inline char sle32(int32_t x, int32_t y)
{
    return x <= y;
}
static inline char sle64(int64_t x, int64_t y)
{
    return x <= y;
}
static inline int8_t pow8(int8_t x, int8_t y)
{
    int8_t res = 1, rem = y;
    
    while (rem != 0) {
        if (rem & 1)
            res *= x;
        rem >>= 1;
        x *= x;
    }
    return res;
}
static inline int16_t pow16(int16_t x, int16_t y)
{
    int16_t res = 1, rem = y;
    
    while (rem != 0) {
        if (rem & 1)
            res *= x;
        rem >>= 1;
        x *= x;
    }
    return res;
}
static inline int32_t pow32(int32_t x, int32_t y)
{
    int32_t res = 1, rem = y;
    
    while (rem != 0) {
        if (rem & 1)
            res *= x;
        rem >>= 1;
        x *= x;
    }
    return res;
}
static inline int64_t pow64(int64_t x, int64_t y)
{
    int64_t res = 1, rem = y;
    
    while (rem != 0) {
        if (rem & 1)
            res *= x;
        rem >>= 1;
        x *= x;
    }
    return res;
}
static inline int8_t sext_i8_i8(int8_t x)
{
    return x;
}
static inline int16_t sext_i8_i16(int8_t x)
{
    return x;
}
static inline int32_t sext_i8_i32(int8_t x)
{
    return x;
}
static inline int64_t sext_i8_i64(int8_t x)
{
    return x;
}
static inline int8_t sext_i16_i8(int16_t x)
{
    return x;
}
static inline int16_t sext_i16_i16(int16_t x)
{
    return x;
}
static inline int32_t sext_i16_i32(int16_t x)
{
    return x;
}
static inline int64_t sext_i16_i64(int16_t x)
{
    return x;
}
static inline int8_t sext_i32_i8(int32_t x)
{
    return x;
}
static inline int16_t sext_i32_i16(int32_t x)
{
    return x;
}
static inline int32_t sext_i32_i32(int32_t x)
{
    return x;
}
static inline int64_t sext_i32_i64(int32_t x)
{
    return x;
}
static inline int8_t sext_i64_i8(int64_t x)
{
    return x;
}
static inline int16_t sext_i64_i16(int64_t x)
{
    return x;
}
static inline int32_t sext_i64_i32(int64_t x)
{
    return x;
}
static inline int64_t sext_i64_i64(int64_t x)
{
    return x;
}
static inline uint8_t zext_i8_i8(uint8_t x)
{
    return x;
}
static inline uint16_t zext_i8_i16(uint8_t x)
{
    return x;
}
static inline uint32_t zext_i8_i32(uint8_t x)
{
    return x;
}
static inline uint64_t zext_i8_i64(uint8_t x)
{
    return x;
}
static inline uint8_t zext_i16_i8(uint16_t x)
{
    return x;
}
static inline uint16_t zext_i16_i16(uint16_t x)
{
    return x;
}
static inline uint32_t zext_i16_i32(uint16_t x)
{
    return x;
}
static inline uint64_t zext_i16_i64(uint16_t x)
{
    return x;
}
static inline uint8_t zext_i32_i8(uint32_t x)
{
    return x;
}
static inline uint16_t zext_i32_i16(uint32_t x)
{
    return x;
}
static inline uint32_t zext_i32_i32(uint32_t x)
{
    return x;
}
static inline uint64_t zext_i32_i64(uint32_t x)
{
    return x;
}
static inline uint8_t zext_i64_i8(uint64_t x)
{
    return x;
}
static inline uint16_t zext_i64_i16(uint64_t x)
{
    return x;
}
static inline uint32_t zext_i64_i32(uint64_t x)
{
    return x;
}
static inline uint64_t zext_i64_i64(uint64_t x)
{
    return x;
}
static inline float fdiv32(float x, float y)
{
    return x / y;
}
static inline float fadd32(float x, float y)
{
    return x + y;
}
static inline float fsub32(float x, float y)
{
    return x - y;
}
static inline float fmul32(float x, float y)
{
    return x * y;
}
static inline float fmin32(float x, float y)
{
    return x < y ? x : y;
}
static inline float fmax32(float x, float y)
{
    return x < y ? y : x;
}
static inline float fpow32(float x, float y)
{
    return pow(x, y);
}
static inline char cmplt32(float x, float y)
{
    return x < y;
}
static inline char cmple32(float x, float y)
{
    return x <= y;
}
static inline float sitofp_i8_f32(int8_t x)
{
    return x;
}
static inline float sitofp_i16_f32(int16_t x)
{
    return x;
}
static inline float sitofp_i32_f32(int32_t x)
{
    return x;
}
static inline float sitofp_i64_f32(int64_t x)
{
    return x;
}
static inline float uitofp_i8_f32(uint8_t x)
{
    return x;
}
static inline float uitofp_i16_f32(uint16_t x)
{
    return x;
}
static inline float uitofp_i32_f32(uint32_t x)
{
    return x;
}
static inline float uitofp_i64_f32(uint64_t x)
{
    return x;
}
static inline int8_t fptosi_f32_i8(float x)
{
    return x;
}
static inline int16_t fptosi_f32_i16(float x)
{
    return x;
}
static inline int32_t fptosi_f32_i32(float x)
{
    return x;
}
static inline int64_t fptosi_f32_i64(float x)
{
    return x;
}
static inline uint8_t fptoui_f32_i8(float x)
{
    return x;
}
static inline uint16_t fptoui_f32_i16(float x)
{
    return x;
}
static inline uint32_t fptoui_f32_i32(float x)
{
    return x;
}
static inline uint64_t fptoui_f32_i64(float x)
{
    return x;
}
static inline float futrts_log32(float x)
{
    return log(x);
}
static inline float futrts_sqrt32(float x)
{
    return sqrt(x);
}
static inline float futrts_exp32(float x)
{
    return exp(x);
}
static inline float futrts_cos32(float x)
{
    return cos(x);
}
static inline float futrts_sin32(float x)
{
    return sin(x);
}
static inline float futrts_acos32(float x)
{
    return acos(x);
}
static inline float futrts_asin32(float x)
{
    return asin(x);
}
static inline float futrts_atan32(float x)
{
    return atan(x);
}
static inline float futrts_atan2_32(float x, float y)
{
    return atan2(x, y);
}
static inline char futrts_isnan32(float x)
{
    return isnan(x);
}
static inline char futrts_isinf32(float x)
{
    return isinf(x);
}
static inline int32_t futrts_to_bits32(float x)
{
    union {
        float f;
        int32_t t;
    } p;
    
    p.f = x;
    return p.t;
}
static inline float futrts_from_bits32(int32_t x)
{
    union {
        int32_t f;
        float t;
    } p;
    
    p.f = x;
    return p.t;
}
static inline double fdiv64(double x, double y)
{
    return x / y;
}
static inline double fadd64(double x, double y)
{
    return x + y;
}
static inline double fsub64(double x, double y)
{
    return x - y;
}
static inline double fmul64(double x, double y)
{
    return x * y;
}
static inline double fmin64(double x, double y)
{
    return x < y ? x : y;
}
static inline double fmax64(double x, double y)
{
    return x < y ? y : x;
}
static inline double fpow64(double x, double y)
{
    return pow(x, y);
}
static inline char cmplt64(double x, double y)
{
    return x < y;
}
static inline char cmple64(double x, double y)
{
    return x <= y;
}
static inline double sitofp_i8_f64(int8_t x)
{
    return x;
}
static inline double sitofp_i16_f64(int16_t x)
{
    return x;
}
static inline double sitofp_i32_f64(int32_t x)
{
    return x;
}
static inline double sitofp_i64_f64(int64_t x)
{
    return x;
}
static inline double uitofp_i8_f64(uint8_t x)
{
    return x;
}
static inline double uitofp_i16_f64(uint16_t x)
{
    return x;
}
static inline double uitofp_i32_f64(uint32_t x)
{
    return x;
}
static inline double uitofp_i64_f64(uint64_t x)
{
    return x;
}
static inline int8_t fptosi_f64_i8(double x)
{
    return x;
}
static inline int16_t fptosi_f64_i16(double x)
{
    return x;
}
static inline int32_t fptosi_f64_i32(double x)
{
    return x;
}
static inline int64_t fptosi_f64_i64(double x)
{
    return x;
}
static inline uint8_t fptoui_f64_i8(double x)
{
    return x;
}
static inline uint16_t fptoui_f64_i16(double x)
{
    return x;
}
static inline uint32_t fptoui_f64_i32(double x)
{
    return x;
}
static inline uint64_t fptoui_f64_i64(double x)
{
    return x;
}
static inline double futrts_log64(double x)
{
    return log(x);
}
static inline double futrts_sqrt64(double x)
{
    return sqrt(x);
}
static inline double futrts_exp64(double x)
{
    return exp(x);
}
static inline double futrts_cos64(double x)
{
    return cos(x);
}
static inline double futrts_sin64(double x)
{
    return sin(x);
}
static inline double futrts_acos64(double x)
{
    return acos(x);
}
static inline double futrts_asin64(double x)
{
    return asin(x);
}
static inline double futrts_atan64(double x)
{
    return atan(x);
}
static inline double futrts_atan2_64(double x, double y)
{
    return atan2(x, y);
}
static inline char futrts_isnan64(double x)
{
    return isnan(x);
}
static inline char futrts_isinf64(double x)
{
    return isinf(x);
}
static inline int64_t futrts_to_bits64(double x)
{
    union {
        double f;
        int64_t t;
    } p;
    
    p.f = x;
    return p.t;
}
static inline double futrts_from_bits64(int64_t x)
{
    union {
        int64_t f;
        double t;
    } p;
    
    p.f = x;
    return p.t;
}
static inline float fpconv_f32_f32(float x)
{
    return x;
}
static inline double fpconv_f32_f64(float x)
{
    return x;
}
static inline float fpconv_f64_f32(double x)
{
    return x;
}
static inline double fpconv_f64_f64(double x)
{
    return x;
}
#define group_sizze_86698 (group_size_86697)
#define max_num_groups_86700 (max_num_groups_86699)
#define group_sizze_86815 (group_size_86814)
#define y_86818 (group_size_86814 - 1)
#define group_sizze_87816 (group_size_87815)
#define group_sizze_88613 (group_size_88612)
#define y_88616 (group_size_88612 - 1)
#define group_sizze_88726 (group_size_88725)
#define y_88729 (group_size_88725 - 1)
#define group_sizze_88838 (group_size_88837)
#define y_88841 (group_size_88837 - 1)
#define group_sizze_89876 (group_size_89875)
#define group_sizze_90619 (group_size_90618)
#define y_90622 (group_size_90618 - 1)
#define group_sizze_90738 (group_size_90737)
#define max_num_groups_90740 (max_num_groups_90739)
#define group_sizze_90855 (group_size_90854)
#define y_90858 (group_size_90854 - 1)
#define group_sizze_91893 (group_size_91892)
#define group_sizze_92636 (group_size_92635)
#define y_92639 (group_size_92635 - 1)
#define group_sizze_92755 (group_size_92754)
#define max_num_groups_92757 (max_num_groups_92756)
#define group_sizze_92872 (group_size_92871)
#define y_92875 (group_size_92871 - 1)
#define group_sizze_93873 (group_size_93872)
#define group_sizze_94670 (group_size_94669)
#define y_94673 (group_size_94669 - 1)
#define group_sizze_94783 (group_size_94782)
#define y_94786 (group_size_94782 - 1)
#define group_sizze_94902 (group_size_94901)
#define max_num_groups_94904 (max_num_groups_94903)
#define group_sizze_95019 (group_size_95018)
#define y_95022 (group_size_95018 - 1)
#define group_sizze_96057 (group_size_96056)
#define group_sizze_96800 (group_size_96799)
#define y_96803 (group_size_96799 - 1)
__kernel void chunked_reduce_kernel_86714(__local volatile
                                          int64_t *mem_aligned_0,
                                          int32_t sizze_73918, double x_73927,
                                          int32_t num_threads_86706,
                                          int32_t per_thread_elements_86709,
                                          __global
                                          unsigned char *angles_mem_97022,
                                          __global unsigned char *mem_97028)
{
    __local volatile char *restrict mem_97025 = mem_aligned_0;
    int32_t wave_sizze_97786;
    int32_t group_sizze_97787;
    char thread_active_97788;
    int32_t global_tid_86714;
    int32_t local_tid_86715;
    int32_t group_id_86716;
    
    global_tid_86714 = get_global_id(0);
    local_tid_86715 = get_local_id(0);
    group_sizze_97787 = get_local_size(0);
    wave_sizze_97786 = LOCKSTEP_WIDTH;
    group_id_86716 = get_group_id(0);
    thread_active_97788 = 1;
    
    int32_t chunk_sizze_86720 = smin32(per_thread_elements_86709,
                                       squot32(sizze_73918 - global_tid_86714 +
                                               num_threads_86706 - 1,
                                               num_threads_86706));
    double res_86723;
    
    if (thread_active_97788) {
        double acc_86726 = -INFINITY;
        
        for (int32_t i_86725 = 0; i_86725 < chunk_sizze_86720; i_86725++) {
            int32_t j_t_s_97017 = i_86725 * num_threads_86706;
            int32_t j_p_i_t_s_97018 = global_tid_86714 + j_t_s_97017;
            double x_86728 = *(__global
                               double *) &angles_mem_97022[j_p_i_t_s_97018 * 8];
            char cond_86730 = 0.0 <= x_86728;
            char res_86731 = x_86728 <= 45.0;
            char x_86732 = cond_86730 && res_86731;
            double res_86733;
            
            if (x_86732) {
                res_86733 = x_86728;
            } else {
                char cond_86734;
                char res_86735;
                char x_86736;
                double res_86737;
                
                cond_86734 = 45.0 < x_86728;
                res_86735 = x_86728 < 90.0;
                x_86736 = cond_86734 && res_86735;
                if (x_86736) {
                    double res_86738 = 90.0 - x_86728;
                    
                    res_86737 = res_86738;
                } else {
                    char cond_86739;
                    char res_86740;
                    char x_86741;
                    double res_86742;
                    
                    cond_86739 = 90.0 <= x_86728;
                    res_86740 = x_86728 <= 135.0;
                    x_86741 = cond_86739 && res_86740;
                    if (x_86741) {
                        double res_86743 = x_86728 - 90.0;
                        
                        res_86742 = res_86743;
                    } else {
                        char cond_86744;
                        char res_86745;
                        char x_86746;
                        double res_86747;
                        
                        cond_86744 = 135.0 < x_86728;
                        res_86745 = x_86728 <= 180.0;
                        x_86746 = cond_86744 && res_86745;
                        if (x_86746) {
                            double res_86748 = 180.0 - x_86728;
                            
                            res_86747 = res_86748;
                        } else {
                            char cond_86749;
                            char res_86750;
                            char x_86751;
                            double res_86752;
                            
                            cond_86749 = 180.0 < x_86728;
                            res_86750 = x_86728 <= 225.0;
                            x_86751 = cond_86749 && res_86750;
                            if (x_86751) {
                                double res_86753 = x_86728 - 180.0;
                                
                                res_86752 = res_86753;
                            } else {
                                char cond_86754;
                                char res_86755;
                                char x_86756;
                                double res_86757;
                                
                                cond_86754 = 225.0 < x_86728;
                                res_86755 = x_86728 <= 270.0;
                                x_86756 = cond_86754 && res_86755;
                                if (x_86756) {
                                    double res_86758 = 270.0 - x_86728;
                                    
                                    res_86757 = res_86758;
                                } else {
                                    char cond_86759;
                                    char res_86760;
                                    char x_86761;
                                    double res_86762;
                                    
                                    cond_86759 = 270.0 < x_86728;
                                    res_86760 = x_86728 <= 315.0;
                                    x_86761 = cond_86759 && res_86760;
                                    if (x_86761) {
                                        double res_86763 = x_86728 - 270.0;
                                        
                                        res_86762 = res_86763;
                                    } else {
                                        double res_86764 = 360.0 - x_86728;
                                        
                                        res_86762 = res_86764;
                                    }
                                    res_86757 = res_86762;
                                }
                                res_86752 = res_86757;
                            }
                            res_86747 = res_86752;
                        }
                        res_86742 = res_86747;
                    }
                    res_86737 = res_86742;
                }
                res_86733 = res_86737;
            }
            
            double arg_86765 = 1.7453292519943295e-2 * res_86733;
            double x_86766;
            
            x_86766 = futrts_sin64(arg_86765);
            
            double y_86767;
            
            y_86767 = futrts_cos64(arg_86765);
            
            double res_86768 = x_86766 / y_86767;
            double arg_86769 = x_73927 * res_86768;
            int64_t res_86770 = fptosi_f64_i64(arg_86769);
            double res_86771 = sitofp_i64_f64(res_86770);
            char cond_86772 = 0.0 <= arg_86769;
            double res_86773;
            
            if (cond_86772) {
                char cond_86774;
                double res_86775;
                
                cond_86774 = res_86771 < arg_86769;
                if (cond_86774) {
                    int64_t res_86776;
                    double res_86777;
                    
                    res_86776 = res_86770 + 1;
                    res_86777 = sitofp_i64_f64(res_86776);
                    res_86775 = res_86777;
                } else {
                    res_86775 = arg_86769;
                }
                res_86773 = res_86775;
            } else {
                char cond_86778;
                double res_86779;
                
                cond_86778 = arg_86769 < res_86771;
                if (cond_86778) {
                    res_86779 = res_86771;
                } else {
                    res_86779 = arg_86769;
                }
                res_86773 = res_86779;
            }
            
            double res_86780 = x_73927 + res_86773;
            double res_86781 = fmax64(acc_86726, res_86780);
            double acc_tmp_97789 = res_86781;
            
            acc_86726 = acc_tmp_97789;
        }
        res_86723 = acc_86726;
    }
    
    double final_result_86784;
    
    if (slt32(local_tid_86715, group_sizze_86698) && 1) {
        *(__local double *) &mem_97025[local_tid_86715 * 8] = res_86723;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t skip_waves_97790;
    int32_t my_index_86785;
    int32_t other_offset_86786;
    double x_86787;
    double x_86788;
    
    my_index_86785 = local_tid_86715;
    other_offset_86786 = 0;
    if (slt32(local_tid_86715, group_sizze_86698)) {
        x_86787 = *(__local double *) &mem_97025[(local_tid_86715 +
                                                  other_offset_86786) * 8];
    }
    other_offset_86786 = 1;
    while (slt32(other_offset_86786, wave_sizze_97786)) {
        if (slt32(local_tid_86715 + other_offset_86786, group_sizze_86698) &&
            ((local_tid_86715 - squot32(local_tid_86715, wave_sizze_97786) *
              wave_sizze_97786) & (2 * other_offset_86786 - 1)) == 0) {
            // read array element
            {
                x_86788 = *(volatile __local
                            double *) &mem_97025[(local_tid_86715 +
                                                  other_offset_86786) * 8];
            }
            
            double res_86789;
            
            if (thread_active_97788) {
                res_86789 = fmax64(x_86787, x_86788);
            }
            x_86787 = res_86789;
            *(volatile __local double *) &mem_97025[local_tid_86715 * 8] =
                x_86787;
        }
        other_offset_86786 *= 2;
    }
    skip_waves_97790 = 1;
    while (slt32(skip_waves_97790, squot32(group_sizze_97787 +
                                           wave_sizze_97786 - 1,
                                           wave_sizze_97786))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        other_offset_86786 = skip_waves_97790 * wave_sizze_97786;
        if (slt32(local_tid_86715 + other_offset_86786, group_sizze_86698) &&
            ((local_tid_86715 - squot32(local_tid_86715, wave_sizze_97786) *
              wave_sizze_97786) == 0 && (squot32(local_tid_86715,
                                                 wave_sizze_97786) & (2 *
                                                                      skip_waves_97790 -
                                                                      1)) ==
             0)) {
            // read array element
            {
                x_86788 = *(__local double *) &mem_97025[(local_tid_86715 +
                                                          other_offset_86786) *
                                                         8];
            }
            
            double res_86789;
            
            if (thread_active_97788) {
                res_86789 = fmax64(x_86787, x_86788);
            }
            x_86787 = res_86789;
            *(__local double *) &mem_97025[local_tid_86715 * 8] = x_86787;
        }
        skip_waves_97790 *= 2;
    }
    final_result_86784 = x_86787;
    if (local_tid_86715 == 0) {
        *(__global double *) &mem_97028[group_id_86716 * 8] =
            final_result_86784;
    }
}
__kernel void chunked_reduce_kernel_90754(__local volatile
                                          int64_t *mem_aligned_0,
                                          double x_78982, int32_t i_79006,
                                          int32_t x_79008,
                                          int32_t num_threads_90746,
                                          int32_t per_thread_elements_90749,
                                          __global
                                          unsigned char *angles_mem_97022,
                                          __global unsigned char *mem_97040)
{
    __local volatile char *restrict mem_97037 = mem_aligned_0;
    int32_t wave_sizze_98122;
    int32_t group_sizze_98123;
    char thread_active_98124;
    int32_t global_tid_90754;
    int32_t local_tid_90755;
    int32_t group_id_90756;
    
    global_tid_90754 = get_global_id(0);
    local_tid_90755 = get_local_id(0);
    group_sizze_98123 = get_local_size(0);
    wave_sizze_98122 = LOCKSTEP_WIDTH;
    group_id_90756 = get_group_id(0);
    thread_active_98124 = 1;
    
    int32_t chunk_sizze_90760 = smin32(per_thread_elements_90749,
                                       squot32(x_79008 - global_tid_90754 +
                                               num_threads_90746 - 1,
                                               num_threads_90746));
    int32_t j_p_s0_t_i_96912;
    double res_90763;
    
    if (thread_active_98124) {
        j_p_s0_t_i_96912 = i_79006 + global_tid_90754;
        
        double acc_90766 = -INFINITY;
        
        for (int32_t i_90765 = 0; i_90765 < chunk_sizze_90760; i_90765++) {
            int32_t j_t_s_97017 = i_90765 * num_threads_90746;
            int32_t j_p_i_t_s_97018 = j_p_s0_t_i_96912 + j_t_s_97017;
            double x_90768 = *(__global
                               double *) &angles_mem_97022[j_p_i_t_s_97018 * 8];
            char cond_90770 = 0.0 <= x_90768;
            char res_90771 = x_90768 <= 45.0;
            char x_90772 = cond_90770 && res_90771;
            double res_90773;
            
            if (x_90772) {
                res_90773 = x_90768;
            } else {
                char cond_90774;
                char res_90775;
                char x_90776;
                double res_90777;
                
                cond_90774 = 45.0 < x_90768;
                res_90775 = x_90768 < 90.0;
                x_90776 = cond_90774 && res_90775;
                if (x_90776) {
                    double res_90778 = 90.0 - x_90768;
                    
                    res_90777 = res_90778;
                } else {
                    char cond_90779;
                    char res_90780;
                    char x_90781;
                    double res_90782;
                    
                    cond_90779 = 90.0 <= x_90768;
                    res_90780 = x_90768 <= 135.0;
                    x_90781 = cond_90779 && res_90780;
                    if (x_90781) {
                        double res_90783 = x_90768 - 90.0;
                        
                        res_90782 = res_90783;
                    } else {
                        char cond_90784;
                        char res_90785;
                        char x_90786;
                        double res_90787;
                        
                        cond_90784 = 135.0 < x_90768;
                        res_90785 = x_90768 <= 180.0;
                        x_90786 = cond_90784 && res_90785;
                        if (x_90786) {
                            double res_90788 = 180.0 - x_90768;
                            
                            res_90787 = res_90788;
                        } else {
                            char cond_90789;
                            char res_90790;
                            char x_90791;
                            double res_90792;
                            
                            cond_90789 = 180.0 < x_90768;
                            res_90790 = x_90768 <= 225.0;
                            x_90791 = cond_90789 && res_90790;
                            if (x_90791) {
                                double res_90793 = x_90768 - 180.0;
                                
                                res_90792 = res_90793;
                            } else {
                                char cond_90794;
                                char res_90795;
                                char x_90796;
                                double res_90797;
                                
                                cond_90794 = 225.0 < x_90768;
                                res_90795 = x_90768 <= 270.0;
                                x_90796 = cond_90794 && res_90795;
                                if (x_90796) {
                                    double res_90798 = 270.0 - x_90768;
                                    
                                    res_90797 = res_90798;
                                } else {
                                    char cond_90799;
                                    char res_90800;
                                    char x_90801;
                                    double res_90802;
                                    
                                    cond_90799 = 270.0 < x_90768;
                                    res_90800 = x_90768 <= 315.0;
                                    x_90801 = cond_90799 && res_90800;
                                    if (x_90801) {
                                        double res_90803 = x_90768 - 270.0;
                                        
                                        res_90802 = res_90803;
                                    } else {
                                        double res_90804 = 360.0 - x_90768;
                                        
                                        res_90802 = res_90804;
                                    }
                                    res_90797 = res_90802;
                                }
                                res_90792 = res_90797;
                            }
                            res_90787 = res_90792;
                        }
                        res_90782 = res_90787;
                    }
                    res_90777 = res_90782;
                }
                res_90773 = res_90777;
            }
            
            double arg_90805 = 1.7453292519943295e-2 * res_90773;
            double x_90806;
            
            x_90806 = futrts_sin64(arg_90805);
            
            double y_90807;
            
            y_90807 = futrts_cos64(arg_90805);
            
            double res_90808 = x_90806 / y_90807;
            double arg_90809 = x_78982 * res_90808;
            int64_t res_90810 = fptosi_f64_i64(arg_90809);
            double res_90811 = sitofp_i64_f64(res_90810);
            char cond_90812 = 0.0 <= arg_90809;
            double res_90813;
            
            if (cond_90812) {
                char cond_90814;
                double res_90815;
                
                cond_90814 = res_90811 < arg_90809;
                if (cond_90814) {
                    int64_t res_90816;
                    double res_90817;
                    
                    res_90816 = res_90810 + 1;
                    res_90817 = sitofp_i64_f64(res_90816);
                    res_90815 = res_90817;
                } else {
                    res_90815 = arg_90809;
                }
                res_90813 = res_90815;
            } else {
                char cond_90818;
                double res_90819;
                
                cond_90818 = arg_90809 < res_90811;
                if (cond_90818) {
                    res_90819 = res_90811;
                } else {
                    res_90819 = arg_90809;
                }
                res_90813 = res_90819;
            }
            
            double res_90820 = x_78982 + res_90813;
            double res_90821 = fmax64(acc_90766, res_90820);
            double acc_tmp_98125 = res_90821;
            
            acc_90766 = acc_tmp_98125;
        }
        res_90763 = acc_90766;
    }
    
    double final_result_90824;
    
    if (slt32(local_tid_90755, group_sizze_90738) && 1) {
        *(__local double *) &mem_97037[local_tid_90755 * 8] = res_90763;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t skip_waves_98126;
    int32_t my_index_90825;
    int32_t other_offset_90826;
    double x_90827;
    double x_90828;
    
    my_index_90825 = local_tid_90755;
    other_offset_90826 = 0;
    if (slt32(local_tid_90755, group_sizze_90738)) {
        x_90827 = *(__local double *) &mem_97037[(local_tid_90755 +
                                                  other_offset_90826) * 8];
    }
    other_offset_90826 = 1;
    while (slt32(other_offset_90826, wave_sizze_98122)) {
        if (slt32(local_tid_90755 + other_offset_90826, group_sizze_90738) &&
            ((local_tid_90755 - squot32(local_tid_90755, wave_sizze_98122) *
              wave_sizze_98122) & (2 * other_offset_90826 - 1)) == 0) {
            // read array element
            {
                x_90828 = *(volatile __local
                            double *) &mem_97037[(local_tid_90755 +
                                                  other_offset_90826) * 8];
            }
            
            double res_90829;
            
            if (thread_active_98124) {
                res_90829 = fmax64(x_90827, x_90828);
            }
            x_90827 = res_90829;
            *(volatile __local double *) &mem_97037[local_tid_90755 * 8] =
                x_90827;
        }
        other_offset_90826 *= 2;
    }
    skip_waves_98126 = 1;
    while (slt32(skip_waves_98126, squot32(group_sizze_98123 +
                                           wave_sizze_98122 - 1,
                                           wave_sizze_98122))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        other_offset_90826 = skip_waves_98126 * wave_sizze_98122;
        if (slt32(local_tid_90755 + other_offset_90826, group_sizze_90738) &&
            ((local_tid_90755 - squot32(local_tid_90755, wave_sizze_98122) *
              wave_sizze_98122) == 0 && (squot32(local_tid_90755,
                                                 wave_sizze_98122) & (2 *
                                                                      skip_waves_98126 -
                                                                      1)) ==
             0)) {
            // read array element
            {
                x_90828 = *(__local double *) &mem_97037[(local_tid_90755 +
                                                          other_offset_90826) *
                                                         8];
            }
            
            double res_90829;
            
            if (thread_active_98124) {
                res_90829 = fmax64(x_90827, x_90828);
            }
            x_90827 = res_90829;
            *(__local double *) &mem_97037[local_tid_90755 * 8] = x_90827;
        }
        skip_waves_98126 *= 2;
    }
    final_result_90824 = x_90827;
    if (local_tid_90755 == 0) {
        *(__global double *) &mem_97040[group_id_90756 * 8] =
            final_result_90824;
    }
}
__kernel void chunked_reduce_kernel_92771(__local volatile
                                          int64_t *mem_aligned_0,
                                          int32_t sizze_81561, double x_81569,
                                          int32_t num_threads_92763,
                                          int32_t per_thread_elements_92766,
                                          __global
                                          unsigned char *angles_mem_97022,
                                          __global unsigned char *mem_97028)
{
    __local volatile char *restrict mem_97025 = mem_aligned_0;
    int32_t wave_sizze_98279;
    int32_t group_sizze_98280;
    char thread_active_98281;
    int32_t global_tid_92771;
    int32_t local_tid_92772;
    int32_t group_id_92773;
    
    global_tid_92771 = get_global_id(0);
    local_tid_92772 = get_local_id(0);
    group_sizze_98280 = get_local_size(0);
    wave_sizze_98279 = LOCKSTEP_WIDTH;
    group_id_92773 = get_group_id(0);
    thread_active_98281 = 1;
    
    int32_t chunk_sizze_92777 = smin32(per_thread_elements_92766,
                                       squot32(sizze_81561 - global_tid_92771 +
                                               num_threads_92763 - 1,
                                               num_threads_92763));
    double res_92780;
    
    if (thread_active_98281) {
        double acc_92783 = -INFINITY;
        
        for (int32_t i_92782 = 0; i_92782 < chunk_sizze_92777; i_92782++) {
            int32_t j_t_s_97017 = i_92782 * num_threads_92763;
            int32_t j_p_i_t_s_97018 = global_tid_92771 + j_t_s_97017;
            double x_92785 = *(__global
                               double *) &angles_mem_97022[j_p_i_t_s_97018 * 8];
            char cond_92787 = 0.0 <= x_92785;
            char res_92788 = x_92785 <= 45.0;
            char x_92789 = cond_92787 && res_92788;
            double res_92790;
            
            if (x_92789) {
                res_92790 = x_92785;
            } else {
                char cond_92791;
                char res_92792;
                char x_92793;
                double res_92794;
                
                cond_92791 = 45.0 < x_92785;
                res_92792 = x_92785 < 90.0;
                x_92793 = cond_92791 && res_92792;
                if (x_92793) {
                    double res_92795 = 90.0 - x_92785;
                    
                    res_92794 = res_92795;
                } else {
                    char cond_92796;
                    char res_92797;
                    char x_92798;
                    double res_92799;
                    
                    cond_92796 = 90.0 <= x_92785;
                    res_92797 = x_92785 <= 135.0;
                    x_92798 = cond_92796 && res_92797;
                    if (x_92798) {
                        double res_92800 = x_92785 - 90.0;
                        
                        res_92799 = res_92800;
                    } else {
                        char cond_92801;
                        char res_92802;
                        char x_92803;
                        double res_92804;
                        
                        cond_92801 = 135.0 < x_92785;
                        res_92802 = x_92785 <= 180.0;
                        x_92803 = cond_92801 && res_92802;
                        if (x_92803) {
                            double res_92805 = 180.0 - x_92785;
                            
                            res_92804 = res_92805;
                        } else {
                            char cond_92806;
                            char res_92807;
                            char x_92808;
                            double res_92809;
                            
                            cond_92806 = 180.0 < x_92785;
                            res_92807 = x_92785 <= 225.0;
                            x_92808 = cond_92806 && res_92807;
                            if (x_92808) {
                                double res_92810 = x_92785 - 180.0;
                                
                                res_92809 = res_92810;
                            } else {
                                char cond_92811;
                                char res_92812;
                                char x_92813;
                                double res_92814;
                                
                                cond_92811 = 225.0 < x_92785;
                                res_92812 = x_92785 <= 270.0;
                                x_92813 = cond_92811 && res_92812;
                                if (x_92813) {
                                    double res_92815 = 270.0 - x_92785;
                                    
                                    res_92814 = res_92815;
                                } else {
                                    char cond_92816;
                                    char res_92817;
                                    char x_92818;
                                    double res_92819;
                                    
                                    cond_92816 = 270.0 < x_92785;
                                    res_92817 = x_92785 <= 315.0;
                                    x_92818 = cond_92816 && res_92817;
                                    if (x_92818) {
                                        double res_92820 = x_92785 - 270.0;
                                        
                                        res_92819 = res_92820;
                                    } else {
                                        double res_92821 = 360.0 - x_92785;
                                        
                                        res_92819 = res_92821;
                                    }
                                    res_92814 = res_92819;
                                }
                                res_92809 = res_92814;
                            }
                            res_92804 = res_92809;
                        }
                        res_92799 = res_92804;
                    }
                    res_92794 = res_92799;
                }
                res_92790 = res_92794;
            }
            
            double arg_92822 = 1.7453292519943295e-2 * res_92790;
            double x_92823;
            
            x_92823 = futrts_sin64(arg_92822);
            
            double y_92824;
            
            y_92824 = futrts_cos64(arg_92822);
            
            double res_92825 = x_92823 / y_92824;
            double arg_92826 = x_81569 * res_92825;
            int64_t res_92827 = fptosi_f64_i64(arg_92826);
            double res_92828 = sitofp_i64_f64(res_92827);
            char cond_92829 = 0.0 <= arg_92826;
            double res_92830;
            
            if (cond_92829) {
                char cond_92831;
                double res_92832;
                
                cond_92831 = res_92828 < arg_92826;
                if (cond_92831) {
                    int64_t res_92833;
                    double res_92834;
                    
                    res_92833 = res_92827 + 1;
                    res_92834 = sitofp_i64_f64(res_92833);
                    res_92832 = res_92834;
                } else {
                    res_92832 = arg_92826;
                }
                res_92830 = res_92832;
            } else {
                char cond_92835;
                double res_92836;
                
                cond_92835 = arg_92826 < res_92828;
                if (cond_92835) {
                    res_92836 = res_92828;
                } else {
                    res_92836 = arg_92826;
                }
                res_92830 = res_92836;
            }
            
            double res_92837 = x_81569 + res_92830;
            double res_92838 = fmax64(acc_92783, res_92837);
            double acc_tmp_98282 = res_92838;
            
            acc_92783 = acc_tmp_98282;
        }
        res_92780 = acc_92783;
    }
    
    double final_result_92841;
    
    if (slt32(local_tid_92772, group_sizze_92755) && 1) {
        *(__local double *) &mem_97025[local_tid_92772 * 8] = res_92780;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t skip_waves_98283;
    int32_t my_index_92842;
    int32_t other_offset_92843;
    double x_92844;
    double x_92845;
    
    my_index_92842 = local_tid_92772;
    other_offset_92843 = 0;
    if (slt32(local_tid_92772, group_sizze_92755)) {
        x_92844 = *(__local double *) &mem_97025[(local_tid_92772 +
                                                  other_offset_92843) * 8];
    }
    other_offset_92843 = 1;
    while (slt32(other_offset_92843, wave_sizze_98279)) {
        if (slt32(local_tid_92772 + other_offset_92843, group_sizze_92755) &&
            ((local_tid_92772 - squot32(local_tid_92772, wave_sizze_98279) *
              wave_sizze_98279) & (2 * other_offset_92843 - 1)) == 0) {
            // read array element
            {
                x_92845 = *(volatile __local
                            double *) &mem_97025[(local_tid_92772 +
                                                  other_offset_92843) * 8];
            }
            
            double res_92846;
            
            if (thread_active_98281) {
                res_92846 = fmax64(x_92844, x_92845);
            }
            x_92844 = res_92846;
            *(volatile __local double *) &mem_97025[local_tid_92772 * 8] =
                x_92844;
        }
        other_offset_92843 *= 2;
    }
    skip_waves_98283 = 1;
    while (slt32(skip_waves_98283, squot32(group_sizze_98280 +
                                           wave_sizze_98279 - 1,
                                           wave_sizze_98279))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        other_offset_92843 = skip_waves_98283 * wave_sizze_98279;
        if (slt32(local_tid_92772 + other_offset_92843, group_sizze_92755) &&
            ((local_tid_92772 - squot32(local_tid_92772, wave_sizze_98279) *
              wave_sizze_98279) == 0 && (squot32(local_tid_92772,
                                                 wave_sizze_98279) & (2 *
                                                                      skip_waves_98283 -
                                                                      1)) ==
             0)) {
            // read array element
            {
                x_92845 = *(__local double *) &mem_97025[(local_tid_92772 +
                                                          other_offset_92843) *
                                                         8];
            }
            
            double res_92846;
            
            if (thread_active_98281) {
                res_92846 = fmax64(x_92844, x_92845);
            }
            x_92844 = res_92846;
            *(__local double *) &mem_97025[local_tid_92772 * 8] = x_92844;
        }
        skip_waves_98283 *= 2;
    }
    final_result_92841 = x_92844;
    if (local_tid_92772 == 0) {
        *(__global double *) &mem_97028[group_id_92773 * 8] =
            final_result_92841;
    }
}
__kernel void chunked_reduce_kernel_94918(__local volatile
                                          int64_t *mem_aligned_0,
                                          int32_t sizze_84152, double x_84159,
                                          int32_t num_threads_94910,
                                          int32_t per_thread_elements_94913,
                                          __global
                                          unsigned char *angles_mem_97022,
                                          __global unsigned char *mem_97028)
{
    __local volatile char *restrict mem_97025 = mem_aligned_0;
    int32_t wave_sizze_98470;
    int32_t group_sizze_98471;
    char thread_active_98472;
    int32_t global_tid_94918;
    int32_t local_tid_94919;
    int32_t group_id_94920;
    
    global_tid_94918 = get_global_id(0);
    local_tid_94919 = get_local_id(0);
    group_sizze_98471 = get_local_size(0);
    wave_sizze_98470 = LOCKSTEP_WIDTH;
    group_id_94920 = get_group_id(0);
    thread_active_98472 = 1;
    
    int32_t chunk_sizze_94924 = smin32(per_thread_elements_94913,
                                       squot32(sizze_84152 - global_tid_94918 +
                                               num_threads_94910 - 1,
                                               num_threads_94910));
    double res_94927;
    
    if (thread_active_98472) {
        double acc_94930 = -INFINITY;
        
        for (int32_t i_94929 = 0; i_94929 < chunk_sizze_94924; i_94929++) {
            int32_t j_t_s_97017 = i_94929 * num_threads_94910;
            int32_t j_p_i_t_s_97018 = global_tid_94918 + j_t_s_97017;
            double x_94932 = *(__global
                               double *) &angles_mem_97022[j_p_i_t_s_97018 * 8];
            char cond_94934 = 0.0 <= x_94932;
            char res_94935 = x_94932 <= 45.0;
            char x_94936 = cond_94934 && res_94935;
            double res_94937;
            
            if (x_94936) {
                res_94937 = x_94932;
            } else {
                char cond_94938;
                char res_94939;
                char x_94940;
                double res_94941;
                
                cond_94938 = 45.0 < x_94932;
                res_94939 = x_94932 < 90.0;
                x_94940 = cond_94938 && res_94939;
                if (x_94940) {
                    double res_94942 = 90.0 - x_94932;
                    
                    res_94941 = res_94942;
                } else {
                    char cond_94943;
                    char res_94944;
                    char x_94945;
                    double res_94946;
                    
                    cond_94943 = 90.0 <= x_94932;
                    res_94944 = x_94932 <= 135.0;
                    x_94945 = cond_94943 && res_94944;
                    if (x_94945) {
                        double res_94947 = x_94932 - 90.0;
                        
                        res_94946 = res_94947;
                    } else {
                        char cond_94948;
                        char res_94949;
                        char x_94950;
                        double res_94951;
                        
                        cond_94948 = 135.0 < x_94932;
                        res_94949 = x_94932 <= 180.0;
                        x_94950 = cond_94948 && res_94949;
                        if (x_94950) {
                            double res_94952 = 180.0 - x_94932;
                            
                            res_94951 = res_94952;
                        } else {
                            char cond_94953;
                            char res_94954;
                            char x_94955;
                            double res_94956;
                            
                            cond_94953 = 180.0 < x_94932;
                            res_94954 = x_94932 <= 225.0;
                            x_94955 = cond_94953 && res_94954;
                            if (x_94955) {
                                double res_94957 = x_94932 - 180.0;
                                
                                res_94956 = res_94957;
                            } else {
                                char cond_94958;
                                char res_94959;
                                char x_94960;
                                double res_94961;
                                
                                cond_94958 = 225.0 < x_94932;
                                res_94959 = x_94932 <= 270.0;
                                x_94960 = cond_94958 && res_94959;
                                if (x_94960) {
                                    double res_94962 = 270.0 - x_94932;
                                    
                                    res_94961 = res_94962;
                                } else {
                                    char cond_94963;
                                    char res_94964;
                                    char x_94965;
                                    double res_94966;
                                    
                                    cond_94963 = 270.0 < x_94932;
                                    res_94964 = x_94932 <= 315.0;
                                    x_94965 = cond_94963 && res_94964;
                                    if (x_94965) {
                                        double res_94967 = x_94932 - 270.0;
                                        
                                        res_94966 = res_94967;
                                    } else {
                                        double res_94968 = 360.0 - x_94932;
                                        
                                        res_94966 = res_94968;
                                    }
                                    res_94961 = res_94966;
                                }
                                res_94956 = res_94961;
                            }
                            res_94951 = res_94956;
                        }
                        res_94946 = res_94951;
                    }
                    res_94941 = res_94946;
                }
                res_94937 = res_94941;
            }
            
            double arg_94969 = 1.7453292519943295e-2 * res_94937;
            double x_94970;
            
            x_94970 = futrts_sin64(arg_94969);
            
            double y_94971;
            
            y_94971 = futrts_cos64(arg_94969);
            
            double res_94972 = x_94970 / y_94971;
            double arg_94973 = x_84159 * res_94972;
            int64_t res_94974 = fptosi_f64_i64(arg_94973);
            double res_94975 = sitofp_i64_f64(res_94974);
            char cond_94976 = 0.0 <= arg_94973;
            double res_94977;
            
            if (cond_94976) {
                char cond_94978;
                double res_94979;
                
                cond_94978 = res_94975 < arg_94973;
                if (cond_94978) {
                    int64_t res_94980;
                    double res_94981;
                    
                    res_94980 = res_94974 + 1;
                    res_94981 = sitofp_i64_f64(res_94980);
                    res_94979 = res_94981;
                } else {
                    res_94979 = arg_94973;
                }
                res_94977 = res_94979;
            } else {
                char cond_94982;
                double res_94983;
                
                cond_94982 = arg_94973 < res_94975;
                if (cond_94982) {
                    res_94983 = res_94975;
                } else {
                    res_94983 = arg_94973;
                }
                res_94977 = res_94983;
            }
            
            double res_94984 = x_84159 + res_94977;
            double res_94985 = fmax64(acc_94930, res_94984);
            double acc_tmp_98473 = res_94985;
            
            acc_94930 = acc_tmp_98473;
        }
        res_94927 = acc_94930;
    }
    
    double final_result_94988;
    
    if (slt32(local_tid_94919, group_sizze_94902) && 1) {
        *(__local double *) &mem_97025[local_tid_94919 * 8] = res_94927;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t skip_waves_98474;
    int32_t my_index_94989;
    int32_t other_offset_94990;
    double x_94991;
    double x_94992;
    
    my_index_94989 = local_tid_94919;
    other_offset_94990 = 0;
    if (slt32(local_tid_94919, group_sizze_94902)) {
        x_94991 = *(__local double *) &mem_97025[(local_tid_94919 +
                                                  other_offset_94990) * 8];
    }
    other_offset_94990 = 1;
    while (slt32(other_offset_94990, wave_sizze_98470)) {
        if (slt32(local_tid_94919 + other_offset_94990, group_sizze_94902) &&
            ((local_tid_94919 - squot32(local_tid_94919, wave_sizze_98470) *
              wave_sizze_98470) & (2 * other_offset_94990 - 1)) == 0) {
            // read array element
            {
                x_94992 = *(volatile __local
                            double *) &mem_97025[(local_tid_94919 +
                                                  other_offset_94990) * 8];
            }
            
            double res_94993;
            
            if (thread_active_98472) {
                res_94993 = fmax64(x_94991, x_94992);
            }
            x_94991 = res_94993;
            *(volatile __local double *) &mem_97025[local_tid_94919 * 8] =
                x_94991;
        }
        other_offset_94990 *= 2;
    }
    skip_waves_98474 = 1;
    while (slt32(skip_waves_98474, squot32(group_sizze_98471 +
                                           wave_sizze_98470 - 1,
                                           wave_sizze_98470))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        other_offset_94990 = skip_waves_98474 * wave_sizze_98470;
        if (slt32(local_tid_94919 + other_offset_94990, group_sizze_94902) &&
            ((local_tid_94919 - squot32(local_tid_94919, wave_sizze_98470) *
              wave_sizze_98470) == 0 && (squot32(local_tid_94919,
                                                 wave_sizze_98470) & (2 *
                                                                      skip_waves_98474 -
                                                                      1)) ==
             0)) {
            // read array element
            {
                x_94992 = *(__local double *) &mem_97025[(local_tid_94919 +
                                                          other_offset_94990) *
                                                         8];
            }
            
            double res_94993;
            
            if (thread_active_98472) {
                res_94993 = fmax64(x_94991, x_94992);
            }
            x_94991 = res_94993;
            *(__local double *) &mem_97025[local_tid_94919 * 8] = x_94991;
        }
        skip_waves_98474 *= 2;
    }
    final_result_94988 = x_94991;
    if (local_tid_94919 == 0) {
        *(__global double *) &mem_97028[group_id_94920 * 8] =
            final_result_94988;
    }
}
__kernel void fut_kernel_map_transpose_f64(__global double *odata,
                                           uint odata_offset, __global
                                           double *idata, uint idata_offset,
                                           uint width, uint height,
                                           uint input_size, uint output_size,
                                           __local double *block)
{
    uint x_index;
    uint y_index;
    uint our_array_offset;
    
    // Adjust the input and output arrays with the basic offset.
    odata += odata_offset / sizeof(double);
    idata += idata_offset / sizeof(double);
    // Adjust the input and output arrays for the third dimension.
    our_array_offset = get_global_id(2) * width * height;
    odata += our_array_offset;
    idata += our_array_offset;
    // read the matrix tile into shared memory
    x_index = get_global_id(0);
    y_index = get_global_id(1);
    
    uint index_in = y_index * width + x_index;
    
    if ((x_index < width && y_index < height) && index_in < input_size)
        block[get_local_id(1) * (FUT_BLOCK_DIM + 1) + get_local_id(0)] =
            idata[index_in];
    barrier(CLK_LOCAL_MEM_FENCE);
    // Scatter the transposed matrix tile to global memory.
    x_index = get_group_id(1) * FUT_BLOCK_DIM + get_local_id(0);
    y_index = get_group_id(0) * FUT_BLOCK_DIM + get_local_id(1);
    
    uint index_out = y_index * height + x_index;
    
    if ((x_index < height && y_index < width) && index_out < output_size)
        odata[index_out] = block[get_local_id(0) * (FUT_BLOCK_DIM + 1) +
                                 get_local_id(1)];
}
__kernel void fut_kernel_map_transpose_i16(__global int16_t *odata,
                                           uint odata_offset, __global
                                           int16_t *idata, uint idata_offset,
                                           uint width, uint height,
                                           uint input_size, uint output_size,
                                           __local int16_t *block)
{
    uint x_index;
    uint y_index;
    uint our_array_offset;
    
    // Adjust the input and output arrays with the basic offset.
    odata += odata_offset / sizeof(int16_t);
    idata += idata_offset / sizeof(int16_t);
    // Adjust the input and output arrays for the third dimension.
    our_array_offset = get_global_id(2) * width * height;
    odata += our_array_offset;
    idata += our_array_offset;
    // read the matrix tile into shared memory
    x_index = get_global_id(0);
    y_index = get_global_id(1);
    
    uint index_in = y_index * width + x_index;
    
    if ((x_index < width && y_index < height) && index_in < input_size)
        block[get_local_id(1) * (FUT_BLOCK_DIM + 1) + get_local_id(0)] =
            idata[index_in];
    barrier(CLK_LOCAL_MEM_FENCE);
    // Scatter the transposed matrix tile to global memory.
    x_index = get_group_id(1) * FUT_BLOCK_DIM + get_local_id(0);
    y_index = get_group_id(0) * FUT_BLOCK_DIM + get_local_id(1);
    
    uint index_out = y_index * height + x_index;
    
    if ((x_index < height && y_index < width) && index_out < output_size)
        odata[index_out] = block[get_local_id(0) * (FUT_BLOCK_DIM + 1) +
                                 get_local_id(1)];
}
__kernel void fut_kernel_map_transpose_lowheight_f64(__global double *odata,
                                                     uint odata_offset, __global
                                                     double *idata,
                                                     uint idata_offset,
                                                     uint width, uint height,
                                                     uint input_size,
                                                     uint output_size,
                                                     uint mulx, __local
                                                     double *block)
{
    uint x_index;
    uint y_index;
    uint our_array_offset;
    
    // Adjust the input and output arrays with the basic offset.
    odata += odata_offset / sizeof(double);
    idata += idata_offset / sizeof(double);
    // Adjust the input and output arrays for the third dimension.
    our_array_offset = get_global_id(2) * width * height;
    odata += our_array_offset;
    idata += our_array_offset;
    // read the matrix tile into shared memory
    x_index = get_group_id(0) * FUT_BLOCK_DIM * mulx + get_local_id(0) +
        get_local_id(1) % mulx * FUT_BLOCK_DIM;
    y_index = get_group_id(1) * FUT_BLOCK_DIM + get_local_id(1) / mulx;
    
    uint index_in = y_index * width + x_index;
    
    if ((x_index < width && y_index < height) && index_in < input_size)
        block[get_local_id(1) * (FUT_BLOCK_DIM + 1) + get_local_id(0)] =
            idata[index_in];
    barrier(CLK_LOCAL_MEM_FENCE);
    // Scatter the transposed matrix tile to global memory.
    x_index = get_group_id(1) * FUT_BLOCK_DIM + get_local_id(0) / mulx;
    y_index = get_group_id(0) * FUT_BLOCK_DIM * mulx + get_local_id(1) +
        get_local_id(0) % mulx * FUT_BLOCK_DIM;
    
    uint index_out = y_index * height + x_index;
    
    if ((x_index < height && y_index < width) && index_out < output_size)
        odata[index_out] = block[get_local_id(0) * (FUT_BLOCK_DIM + 1) +
                                 get_local_id(1)];
}
__kernel void fut_kernel_map_transpose_lowheight_i16(__global int16_t *odata,
                                                     uint odata_offset, __global
                                                     int16_t *idata,
                                                     uint idata_offset,
                                                     uint width, uint height,
                                                     uint input_size,
                                                     uint output_size,
                                                     uint mulx, __local
                                                     int16_t *block)
{
    uint x_index;
    uint y_index;
    uint our_array_offset;
    
    // Adjust the input and output arrays with the basic offset.
    odata += odata_offset / sizeof(int16_t);
    idata += idata_offset / sizeof(int16_t);
    // Adjust the input and output arrays for the third dimension.
    our_array_offset = get_global_id(2) * width * height;
    odata += our_array_offset;
    idata += our_array_offset;
    // read the matrix tile into shared memory
    x_index = get_group_id(0) * FUT_BLOCK_DIM * mulx + get_local_id(0) +
        get_local_id(1) % mulx * FUT_BLOCK_DIM;
    y_index = get_group_id(1) * FUT_BLOCK_DIM + get_local_id(1) / mulx;
    
    uint index_in = y_index * width + x_index;
    
    if ((x_index < width && y_index < height) && index_in < input_size)
        block[get_local_id(1) * (FUT_BLOCK_DIM + 1) + get_local_id(0)] =
            idata[index_in];
    barrier(CLK_LOCAL_MEM_FENCE);
    // Scatter the transposed matrix tile to global memory.
    x_index = get_group_id(1) * FUT_BLOCK_DIM + get_local_id(0) / mulx;
    y_index = get_group_id(0) * FUT_BLOCK_DIM * mulx + get_local_id(1) +
        get_local_id(0) % mulx * FUT_BLOCK_DIM;
    
    uint index_out = y_index * height + x_index;
    
    if ((x_index < height && y_index < width) && index_out < output_size)
        odata[index_out] = block[get_local_id(0) * (FUT_BLOCK_DIM + 1) +
                                 get_local_id(1)];
}
__kernel void fut_kernel_map_transpose_lowwidth_f64(__global double *odata,
                                                    uint odata_offset, __global
                                                    double *idata,
                                                    uint idata_offset,
                                                    uint width, uint height,
                                                    uint input_size,
                                                    uint output_size, uint muly,
                                                    __local double *block)
{
    uint x_index;
    uint y_index;
    uint our_array_offset;
    
    // Adjust the input and output arrays with the basic offset.
    odata += odata_offset / sizeof(double);
    idata += idata_offset / sizeof(double);
    // Adjust the input and output arrays for the third dimension.
    our_array_offset = get_global_id(2) * width * height;
    odata += our_array_offset;
    idata += our_array_offset;
    // read the matrix tile into shared memory
    x_index = get_group_id(0) * FUT_BLOCK_DIM + get_local_id(0) / muly;
    y_index = get_group_id(1) * FUT_BLOCK_DIM * muly + get_local_id(1) +
        get_local_id(0) % muly * FUT_BLOCK_DIM;
    
    uint index_in = y_index * width + x_index;
    
    if ((x_index < width && y_index < height) && index_in < input_size)
        block[get_local_id(1) * (FUT_BLOCK_DIM + 1) + get_local_id(0)] =
            idata[index_in];
    barrier(CLK_LOCAL_MEM_FENCE);
    // Scatter the transposed matrix tile to global memory.
    x_index = get_group_id(1) * FUT_BLOCK_DIM * muly + get_local_id(0) +
        get_local_id(1) % muly * FUT_BLOCK_DIM;
    y_index = get_group_id(0) * FUT_BLOCK_DIM + get_local_id(1) / muly;
    
    uint index_out = y_index * height + x_index;
    
    if ((x_index < height && y_index < width) && index_out < output_size)
        odata[index_out] = block[get_local_id(0) * (FUT_BLOCK_DIM + 1) +
                                 get_local_id(1)];
}
__kernel void fut_kernel_map_transpose_lowwidth_i16(__global int16_t *odata,
                                                    uint odata_offset, __global
                                                    int16_t *idata,
                                                    uint idata_offset,
                                                    uint width, uint height,
                                                    uint input_size,
                                                    uint output_size, uint muly,
                                                    __local int16_t *block)
{
    uint x_index;
    uint y_index;
    uint our_array_offset;
    
    // Adjust the input and output arrays with the basic offset.
    odata += odata_offset / sizeof(int16_t);
    idata += idata_offset / sizeof(int16_t);
    // Adjust the input and output arrays for the third dimension.
    our_array_offset = get_global_id(2) * width * height;
    odata += our_array_offset;
    idata += our_array_offset;
    // read the matrix tile into shared memory
    x_index = get_group_id(0) * FUT_BLOCK_DIM + get_local_id(0) / muly;
    y_index = get_group_id(1) * FUT_BLOCK_DIM * muly + get_local_id(1) +
        get_local_id(0) % muly * FUT_BLOCK_DIM;
    
    uint index_in = y_index * width + x_index;
    
    if ((x_index < width && y_index < height) && index_in < input_size)
        block[get_local_id(1) * (FUT_BLOCK_DIM + 1) + get_local_id(0)] =
            idata[index_in];
    barrier(CLK_LOCAL_MEM_FENCE);
    // Scatter the transposed matrix tile to global memory.
    x_index = get_group_id(1) * FUT_BLOCK_DIM * muly + get_local_id(0) +
        get_local_id(1) % muly * FUT_BLOCK_DIM;
    y_index = get_group_id(0) * FUT_BLOCK_DIM + get_local_id(1) / muly;
    
    uint index_out = y_index * height + x_index;
    
    if ((x_index < height && y_index < width) && index_out < output_size)
        odata[index_out] = block[get_local_id(0) * (FUT_BLOCK_DIM + 1) +
                                 get_local_id(1)];
}
__kernel void fut_kernel_map_transpose_small_f64(__global double *odata,
                                                 uint odata_offset, __global
                                                 double *idata,
                                                 uint idata_offset,
                                                 uint num_arrays, uint width,
                                                 uint height, uint input_size,
                                                 uint output_size)
{
    uint our_array_offset = get_global_id(0) / (height * width) * (height *
                                                                   width);
    uint x_index = get_global_id(0) % (height * width) / height;
    uint y_index = get_global_id(0) % height;
    
    // Adjust the input and output arrays with the basic offset.
    odata += odata_offset / sizeof(double);
    idata += idata_offset / sizeof(double);
    // Adjust the input and output arrays.
    odata += our_array_offset;
    idata += our_array_offset;
    
    uint index_in = y_index * width + x_index;
    uint index_out = x_index * height + y_index;
    
    if (get_global_id(0) < input_size)
        odata[index_out] = idata[index_in];
}
__kernel void fut_kernel_map_transpose_small_i16(__global int16_t *odata,
                                                 uint odata_offset, __global
                                                 int16_t *idata,
                                                 uint idata_offset,
                                                 uint num_arrays, uint width,
                                                 uint height, uint input_size,
                                                 uint output_size)
{
    uint our_array_offset = get_global_id(0) / (height * width) * (height *
                                                                   width);
    uint x_index = get_global_id(0) % (height * width) / height;
    uint y_index = get_global_id(0) % height;
    
    // Adjust the input and output arrays with the basic offset.
    odata += odata_offset / sizeof(int16_t);
    idata += idata_offset / sizeof(int16_t);
    // Adjust the input and output arrays.
    odata += our_array_offset;
    idata += our_array_offset;
    
    uint index_in = y_index * width + x_index;
    uint index_out = x_index * height + y_index;
    
    if (get_global_id(0) < input_size)
        odata[index_out] = idata[index_in];
}
__kernel void kernel_replicate_97901(int32_t num_elems_74003, __global
                                     unsigned char *mem_97316)
{
    const uint replicate_gtid_97901 = get_global_id(0);
    
    if (replicate_gtid_97901 >= num_elems_74003)
        return;
    *(__global int32_t *) &mem_97316[replicate_gtid_97901 * 4] = 0;
}
__kernel void kernel_replicate_98394(int32_t num_elems_81644, __global
                                     unsigned char *mem_97316)
{
    const uint replicate_gtid_98394 = get_global_id(0);
    
    if (replicate_gtid_98394 >= num_elems_81644)
        return;
    *(__global int32_t *) &mem_97316[replicate_gtid_98394 * 4] = 0;
}
__kernel void map_kernel_86809(int32_t sizze_73917, int32_t sizze_73918,
                               __global unsigned char *angles_mem_97022,
                               __global unsigned char *mem_97038)
{
    int32_t wave_sizze_97797;
    int32_t group_sizze_97798;
    char thread_active_97799;
    int32_t gtid_86800;
    int32_t gtid_86801;
    int32_t global_tid_86809;
    int32_t local_tid_86810;
    int32_t group_id_86811;
    
    global_tid_86809 = get_global_id(0);
    local_tid_86810 = get_local_id(0);
    group_sizze_97798 = get_local_size(0);
    wave_sizze_97797 = LOCKSTEP_WIDTH;
    group_id_86811 = get_group_id(0);
    gtid_86800 = squot32(global_tid_86809, sizze_73917);
    gtid_86801 = global_tid_86809 - squot32(global_tid_86809, sizze_73917) *
        sizze_73917;
    thread_active_97799 = slt32(gtid_86800, sizze_73918) && slt32(gtid_86801,
                                                                  sizze_73917);
    
    double x_86812;
    
    if (thread_active_97799) {
        x_86812 = *(__global double *) &angles_mem_97022[gtid_86800 * 8];
    }
    if (thread_active_97799) {
        *(__global double *) &mem_97038[(gtid_86800 * sizze_73917 +
                                         gtid_86801) * 8] = x_86812;
    }
}
__kernel void map_kernel_87769(int32_t nesting_sizze_86802, int32_t y_87697,
                               __global unsigned char *mem_97041, __global
                               unsigned char *mem_97090, __global
                               unsigned char *mem_97093)
{
    int32_t wave_sizze_97829;
    int32_t group_sizze_97830;
    char thread_active_97831;
    int32_t j_87754;
    int32_t global_tid_87769;
    int32_t local_tid_87770;
    int32_t group_id_87771;
    
    global_tid_87769 = get_global_id(0);
    local_tid_87770 = get_local_id(0);
    group_sizze_97830 = get_local_size(0);
    wave_sizze_97829 = LOCKSTEP_WIDTH;
    group_id_87771 = get_group_id(0);
    j_87754 = global_tid_87769;
    thread_active_97831 = slt32(j_87754, nesting_sizze_86802);
    
    int32_t y_87752;
    int32_t group_id_87759;
    char cond_87760;
    int32_t final_result_87762;
    
    if (thread_active_97831) {
        y_87752 = *(__global int32_t *) &mem_97041[j_87754 * 4];
        group_id_87759 = squot32(j_87754, y_87697);
        cond_87760 = 0 == group_id_87759;
        if (cond_87760) {
            final_result_87762 = y_87752;
        } else {
            int32_t carry_in_index_87761;
            int32_t x_87751;
            int32_t zz_87753;
            
            carry_in_index_87761 = group_id_87759 - 1;
            x_87751 = *(__global int32_t *) &mem_97090[carry_in_index_87761 *
                                                       4];
            zz_87753 = x_87751 + y_87752;
            final_result_87762 = zz_87753;
        }
    }
    if (thread_active_97831) {
        *(__global int32_t *) &mem_97093[j_87754 * 4] = final_result_87762;
    }
}
__kernel void map_kernel_87779(int32_t sizze_73917, int32_t rowOffset_73923,
                               int32_t partition_sizze_75707,
                               int32_t nesting_sizze_86802, __global
                               unsigned char *mem_97038, __global
                               unsigned char *mem_97044, __global
                               unsigned char *mem_97047, __global
                               unsigned char *mem_97050, __global
                               unsigned char *mem_97053, __global
                               unsigned char *mem_97055, __global
                               unsigned char *mem_97093, __global
                               unsigned char *mem_97096, __global
                               unsigned char *mem_97099, __global
                               unsigned char *mem_97102, __global
                               unsigned char *mem_97105, __global
                               unsigned char *mem_97107, __global
                               unsigned char *mem_97110)
{
    int32_t wave_sizze_97832;
    int32_t group_sizze_97833;
    char thread_active_97834;
    int32_t write_i_87772;
    int32_t global_tid_87779;
    int32_t local_tid_87780;
    int32_t group_id_87781;
    
    global_tid_87779 = get_global_id(0);
    local_tid_87780 = get_local_id(0);
    group_sizze_97833 = get_local_size(0);
    wave_sizze_97832 = LOCKSTEP_WIDTH;
    group_id_87781 = get_group_id(0);
    write_i_87772 = global_tid_87779;
    thread_active_97834 = slt32(write_i_87772, nesting_sizze_86802);
    
    int32_t c_75722;
    int32_t offset_75723;
    int32_t new_index_96919;
    int32_t binop_y_96921;
    int32_t new_index_96922;
    double v_75724;
    int16_t v_75725;
    int16_t v_75726;
    double v_75727;
    char v_75728;
    int32_t res_75730;
    char is_this_one_75731;
    int32_t this_offset_75732;
    int32_t total_res_75733;
    
    if (thread_active_97834) {
        c_75722 = *(__global int32_t *) &mem_97044[write_i_87772 * 4];
        offset_75723 = *(__global int32_t *) &mem_97093[write_i_87772 * 4];
        new_index_96919 = squot32(write_i_87772, sizze_73917);
        binop_y_96921 = new_index_96919 * sizze_73917;
        new_index_96922 = write_i_87772 - binop_y_96921;
        v_75724 = *(__global double *) &mem_97038[(new_index_96919 *
                                                   sizze_73917 +
                                                   new_index_96922) * 8];
        v_75725 = *(__global int16_t *) &mem_97047[write_i_87772 * 2];
        v_75726 = *(__global int16_t *) &mem_97050[write_i_87772 * 2];
        v_75727 = *(__global double *) &mem_97053[write_i_87772 * 8];
        v_75728 = *(__global char *) &mem_97055[write_i_87772];
        res_75730 = write_i_87772 + rowOffset_73923;
        is_this_one_75731 = c_75722 == 0;
        this_offset_75732 = offset_75723 + -1;
        if (is_this_one_75731) {
            total_res_75733 = this_offset_75732;
        } else {
            total_res_75733 = -1;
        }
    }
    if (thread_active_97834 && (sle32(0, total_res_75733) &&
                                slt32(total_res_75733,
                                      partition_sizze_75707))) {
        *(__global double *) &mem_97096[total_res_75733 * 8] = v_75724;
    }
    if (thread_active_97834 && (sle32(0, total_res_75733) &&
                                slt32(total_res_75733,
                                      partition_sizze_75707))) {
        *(__global int16_t *) &mem_97099[total_res_75733 * 2] = v_75725;
    }
    if (thread_active_97834 && (sle32(0, total_res_75733) &&
                                slt32(total_res_75733,
                                      partition_sizze_75707))) {
        *(__global int16_t *) &mem_97102[total_res_75733 * 2] = v_75726;
    }
    if (thread_active_97834 && (sle32(0, total_res_75733) &&
                                slt32(total_res_75733,
                                      partition_sizze_75707))) {
        *(__global double *) &mem_97105[total_res_75733 * 8] = v_75727;
    }
    if (thread_active_97834 && (sle32(0, total_res_75733) &&
                                slt32(total_res_75733,
                                      partition_sizze_75707))) {
        *(__global char *) &mem_97107[total_res_75733] = v_75728;
    }
    if (thread_active_97834 && (sle32(0, total_res_75733) &&
                                slt32(total_res_75733,
                                      partition_sizze_75707))) {
        *(__global int32_t *) &mem_97110[total_res_75733 * 4] = res_75730;
    }
}
__kernel void map_kernel_87821(double delta_73922, int32_t num_elems_74001,
                               int32_t x_75734, __global
                               unsigned char *mem_97105, __global
                               unsigned char *mem_97107, __global
                               unsigned char *mem_97113, __global
                               unsigned char *mem_97116, __global
                               unsigned char *mem_97118, __global
                               unsigned char *mem_97121, __global
                               unsigned char *mem_97124, __global
                               unsigned char *mem_97127, __global
                               unsigned char *mem_97130, __global
                               unsigned char *mem_97133, __global
                               unsigned char *mem_97136, __global
                               unsigned char *mem_97139, __global
                               unsigned char *mem_97142, __global
                               unsigned char *mem_97301, __global
                               unsigned char *mem_97305, __global
                               unsigned char *mem_97309, __global
                               unsigned char *mem_97313)
{
    int32_t wave_sizze_97838;
    int32_t group_sizze_97839;
    char thread_active_97840;
    int32_t gtid_87814;
    int32_t global_tid_87821;
    int32_t local_tid_87822;
    int32_t group_id_87823;
    
    global_tid_87821 = get_global_id(0);
    local_tid_87822 = get_local_id(0);
    group_sizze_97839 = get_local_size(0);
    wave_sizze_97838 = LOCKSTEP_WIDTH;
    group_id_87823 = get_group_id(0);
    gtid_87814 = global_tid_87821;
    thread_active_97840 = slt32(gtid_87814, x_75734);
    
    double x_87824;
    char x_87825;
    int16_t res_87826;
    int16_t res_87827;
    char res_87828;
    int16_t res_87829;
    int16_t res_87830;
    int16_t res_87831;
    int16_t res_87832;
    double res_87833;
    double x_87837;
    double y_87838;
    double res_87839;
    double res_87840;
    double y_87841;
    double res_87842;
    char cond_87843;
    double x_87844;
    char cond_87845;
    int16_t arg_87846;
    int16_t arg_87847;
    double arg_87848;
    double x_87849;
    double x_87850;
    double x_87851;
    double lw_val_87852;
    int32_t res_87853;
    
    if (thread_active_97840) {
        x_87824 = *(__global double *) &mem_97105[gtid_87814 * 8];
        x_87825 = *(__global char *) &mem_97107[gtid_87814];
        res_87826 = *(__global int16_t *) &mem_97113[gtid_87814 * 2];
        res_87827 = *(__global int16_t *) &mem_97116[gtid_87814 * 2];
        res_87828 = *(__global char *) &mem_97118[gtid_87814];
        res_87829 = *(__global int16_t *) &mem_97121[gtid_87814 * 2];
        res_87830 = *(__global int16_t *) &mem_97124[gtid_87814 * 2];
        res_87831 = *(__global int16_t *) &mem_97127[gtid_87814 * 2];
        res_87832 = *(__global int16_t *) &mem_97130[gtid_87814 * 2];
        res_87833 = *(__global double *) &mem_97133[gtid_87814 * 8];
        for (int32_t i_97841 = 0; i_97841 < num_elems_74001; i_97841++) {
            *(__global int16_t *) &mem_97136[(group_id_87823 *
                                              (num_elems_74001 *
                                               group_sizze_87816) + i_97841 *
                                              group_sizze_87816 +
                                              local_tid_87822) * 2] = 0;
        }
        for (int32_t i_97842 = 0; i_97842 < num_elems_74001; i_97842++) {
            *(__global int16_t *) &mem_97139[(group_id_87823 *
                                              (num_elems_74001 *
                                               group_sizze_87816) + i_97842 *
                                              group_sizze_87816 +
                                              local_tid_87822) * 2] = 0;
        }
        for (int32_t i_97843 = 0; i_97843 < num_elems_74001; i_97843++) {
            *(__global double *) &mem_97142[(group_id_87823 * (num_elems_74001 *
                                                               group_sizze_87816) +
                                             i_97843 * group_sizze_87816 +
                                             local_tid_87822) * 8] = -1.0;
        }
        x_87837 = futrts_sin64(res_87833);
        y_87838 = futrts_cos64(res_87833);
        res_87839 = x_87837 / y_87838;
        res_87840 = delta_73922 * res_87839;
        y_87841 = futrts_cos64(res_87833);
        res_87842 = delta_73922 / y_87841;
        cond_87843 = !x_87825;
        x_87844 = x_87824 + res_87840;
        cond_87845 = x_87844 < delta_73922;
        arg_87846 = res_87831 + res_87826;
        arg_87847 = res_87832 + res_87827;
        arg_87848 = x_87844 - delta_73922;
        x_87849 = res_87840 - delta_73922;
        x_87850 = x_87849 + x_87824;
        x_87851 = x_87850 / res_87840;
        lw_val_87852 = x_87851 * res_87842;
        if (res_87828) {
            int32_t res_87857;
            
            if (cond_87843) {
                int32_t res_87861;
                
                if (cond_87845) {
                    char res_87865;
                    int16_t res_87866;
                    int16_t res_87867;
                    double res_87868;
                    int32_t res_87869;
                    int32_t res_87873;
                    int32_t res_87961;
                    char loop_while_87874;
                    int16_t x_87875;
                    int16_t y_87876;
                    double chi_87877;
                    int32_t i_87878;
                    int32_t lastIndex_87882;
                    
                    loop_while_87874 = 1;
                    x_87875 = arg_87846;
                    y_87876 = res_87832;
                    chi_87877 = x_87844;
                    i_87878 = 0;
                    lastIndex_87882 = 0;
                    while (loop_while_87874) {
                        double x_87883 = chi_87877 + res_87840;
                        char cond_87884 = x_87883 < delta_73922;
                        int16_t res_87885;
                        int16_t res_87886;
                        double res_87887;
                        int32_t res_87888;
                        char res_87892;
                        int32_t res_87893;
                        
                        if (cond_87884) {
                            int16_t res_87894;
                            int32_t res_87895;
                            char not_arg_87899;
                            char res_87900;
                            
                            res_87894 = x_87875 + res_87826;
                            res_87895 = i_87878 + 1;
                            *(__global int16_t *) &mem_97136[(group_id_87823 *
                                                              (num_elems_74001 *
                                                               group_sizze_87816) +
                                                              i_87878 *
                                                              group_sizze_87816 +
                                                              local_tid_87822) *
                                                             2] = x_87875;
                            *(__global int16_t *) &mem_97139[(group_id_87823 *
                                                              (num_elems_74001 *
                                                               group_sizze_87816) +
                                                              i_87878 *
                                                              group_sizze_87816 +
                                                              local_tid_87822) *
                                                             2] = y_87876;
                            *(__global double *) &mem_97142[(group_id_87823 *
                                                             (num_elems_74001 *
                                                              group_sizze_87816) +
                                                             i_87878 *
                                                             group_sizze_87816 +
                                                             local_tid_87822) *
                                                            8] = res_87842;
                            not_arg_87899 = res_87894 == res_87829;
                            res_87900 = !not_arg_87899;
                            res_87885 = res_87894;
                            res_87886 = y_87876;
                            res_87887 = x_87883;
                            res_87888 = res_87895;
                            res_87892 = res_87900;
                            res_87893 = i_87878;
                        } else {
                            int16_t x_87901;
                            char cond_87902;
                            int16_t res_87903;
                            int16_t res_87904;
                            double res_87905;
                            int32_t res_87906;
                            char res_87910;
                            int32_t res_87911;
                            
                            x_87901 = y_87876 + res_87827;
                            cond_87902 = x_87901 == res_87830;
                            if (cond_87902) {
                                double x_87912;
                                double x_87913;
                                double lw_val_87914;
                                
                                x_87912 = delta_73922 - chi_87877;
                                x_87913 = x_87912 / res_87840;
                                lw_val_87914 = x_87913 * res_87842;
                                *(__global
                                  int16_t *) &mem_97136[(group_id_87823 *
                                                         (num_elems_74001 *
                                                          group_sizze_87816) +
                                                         i_87878 *
                                                         group_sizze_87816 +
                                                         local_tid_87822) * 2] =
                                    x_87875;
                                *(__global
                                  int16_t *) &mem_97139[(group_id_87823 *
                                                         (num_elems_74001 *
                                                          group_sizze_87816) +
                                                         i_87878 *
                                                         group_sizze_87816 +
                                                         local_tid_87822) * 2] =
                                    y_87876;
                                *(__global
                                  double *) &mem_97142[(group_id_87823 *
                                                        (num_elems_74001 *
                                                         group_sizze_87816) +
                                                        i_87878 *
                                                        group_sizze_87816 +
                                                        local_tid_87822) * 8] =
                                    lw_val_87914;
                                res_87903 = x_87875;
                                res_87904 = y_87876;
                                res_87905 = chi_87877;
                                res_87906 = i_87878;
                                res_87910 = 0;
                                res_87911 = i_87878;
                            } else {
                                int16_t x_87918;
                                char cond_87919;
                                int16_t res_87920;
                                int16_t res_87921;
                                double res_87922;
                                int32_t res_87923;
                                char res_87927;
                                int32_t res_87928;
                                
                                x_87918 = x_87875 + res_87826;
                                cond_87919 = x_87918 == res_87829;
                                if (cond_87919) {
                                    res_87920 = x_87875;
                                } else {
                                    res_87920 = x_87918;
                                }
                                if (cond_87919) {
                                    res_87921 = y_87876;
                                } else {
                                    res_87921 = x_87901;
                                }
                                if (cond_87919) {
                                    double x_87929;
                                    double x_87930;
                                    double lw_val_87931;
                                    double x_87935;
                                    double x_87936;
                                    double lw_val_87937;
                                    int32_t i_87938;
                                    
                                    x_87929 = delta_73922 - chi_87877;
                                    x_87930 = x_87929 / res_87840;
                                    lw_val_87931 = x_87930 * res_87842;
                                    *(__global
                                      int16_t *) &mem_97136[(group_id_87823 *
                                                             (num_elems_74001 *
                                                              group_sizze_87816) +
                                                             i_87878 *
                                                             group_sizze_87816 +
                                                             local_tid_87822) *
                                                            2] = x_87875;
                                    *(__global
                                      int16_t *) &mem_97139[(group_id_87823 *
                                                             (num_elems_74001 *
                                                              group_sizze_87816) +
                                                             i_87878 *
                                                             group_sizze_87816 +
                                                             local_tid_87822) *
                                                            2] = y_87876;
                                    *(__global
                                      double *) &mem_97142[(group_id_87823 *
                                                            (num_elems_74001 *
                                                             group_sizze_87816) +
                                                            i_87878 *
                                                            group_sizze_87816 +
                                                            local_tid_87822) *
                                                           8] = lw_val_87931;
                                    x_87935 = x_87849 + chi_87877;
                                    x_87936 = x_87935 / res_87840;
                                    lw_val_87937 = x_87936 * res_87842;
                                    i_87938 = i_87878 + 1;
                                    *(__global
                                      int16_t *) &mem_97136[(group_id_87823 *
                                                             (num_elems_74001 *
                                                              group_sizze_87816) +
                                                             i_87938 *
                                                             group_sizze_87816 +
                                                             local_tid_87822) *
                                                            2] = x_87875;
                                    *(__global
                                      int16_t *) &mem_97139[(group_id_87823 *
                                                             (num_elems_74001 *
                                                              group_sizze_87816) +
                                                             i_87938 *
                                                             group_sizze_87816 +
                                                             local_tid_87822) *
                                                            2] = x_87901;
                                    *(__global
                                      double *) &mem_97142[(group_id_87823 *
                                                            (num_elems_74001 *
                                                             group_sizze_87816) +
                                                            i_87938 *
                                                            group_sizze_87816 +
                                                            local_tid_87822) *
                                                           8] = lw_val_87937;
                                    res_87922 = chi_87877;
                                    res_87923 = i_87878;
                                    res_87927 = 0;
                                    res_87928 = i_87938;
                                } else {
                                    double res_87942;
                                    int32_t res_87943;
                                    double x_87944;
                                    double x_87945;
                                    double lw_val_87946;
                                    double x_87950;
                                    double x_87951;
                                    double lw_val_87952;
                                    int32_t i_87953;
                                    char x_87957;
                                    char y_87958;
                                    char not_arg_87959;
                                    char res_87960;
                                    
                                    res_87942 = x_87883 - delta_73922;
                                    res_87943 = i_87878 + 2;
                                    x_87944 = delta_73922 - chi_87877;
                                    x_87945 = x_87944 / res_87840;
                                    lw_val_87946 = x_87945 * res_87842;
                                    *(__global
                                      int16_t *) &mem_97136[(group_id_87823 *
                                                             (num_elems_74001 *
                                                              group_sizze_87816) +
                                                             i_87878 *
                                                             group_sizze_87816 +
                                                             local_tid_87822) *
                                                            2] = x_87875;
                                    *(__global
                                      int16_t *) &mem_97139[(group_id_87823 *
                                                             (num_elems_74001 *
                                                              group_sizze_87816) +
                                                             i_87878 *
                                                             group_sizze_87816 +
                                                             local_tid_87822) *
                                                            2] = y_87876;
                                    *(__global
                                      double *) &mem_97142[(group_id_87823 *
                                                            (num_elems_74001 *
                                                             group_sizze_87816) +
                                                            i_87878 *
                                                            group_sizze_87816 +
                                                            local_tid_87822) *
                                                           8] = lw_val_87946;
                                    x_87950 = x_87849 + chi_87877;
                                    x_87951 = x_87950 / res_87840;
                                    lw_val_87952 = x_87951 * res_87842;
                                    i_87953 = i_87878 + 1;
                                    *(__global
                                      int16_t *) &mem_97136[(group_id_87823 *
                                                             (num_elems_74001 *
                                                              group_sizze_87816) +
                                                             i_87953 *
                                                             group_sizze_87816 +
                                                             local_tid_87822) *
                                                            2] = x_87875;
                                    *(__global
                                      int16_t *) &mem_97139[(group_id_87823 *
                                                             (num_elems_74001 *
                                                              group_sizze_87816) +
                                                             i_87953 *
                                                             group_sizze_87816 +
                                                             local_tid_87822) *
                                                            2] = x_87901;
                                    *(__global
                                      double *) &mem_97142[(group_id_87823 *
                                                            (num_elems_74001 *
                                                             group_sizze_87816) +
                                                            i_87953 *
                                                            group_sizze_87816 +
                                                            local_tid_87822) *
                                                           8] = lw_val_87952;
                                    x_87957 = !cond_87919;
                                    y_87958 = x_87957 && cond_87902;
                                    not_arg_87959 = cond_87919 || y_87958;
                                    res_87960 = !not_arg_87959;
                                    res_87922 = res_87942;
                                    res_87923 = res_87943;
                                    res_87927 = res_87960;
                                    res_87928 = i_87953;
                                }
                                res_87903 = res_87920;
                                res_87904 = res_87921;
                                res_87905 = res_87922;
                                res_87906 = res_87923;
                                res_87910 = res_87927;
                                res_87911 = res_87928;
                            }
                            res_87885 = res_87903;
                            res_87886 = res_87904;
                            res_87887 = res_87905;
                            res_87888 = res_87906;
                            res_87892 = res_87910;
                            res_87893 = res_87911;
                        }
                        
                        char loop_while_tmp_97844 = res_87892;
                        int16_t x_tmp_97845 = res_87885;
                        int16_t y_tmp_97846 = res_87886;
                        double chi_tmp_97847 = res_87887;
                        int32_t i_tmp_97848 = res_87888;
                        int32_t lastIndex_tmp_97852;
                        
                        lastIndex_tmp_97852 = res_87893;
                        loop_while_87874 = loop_while_tmp_97844;
                        x_87875 = x_tmp_97845;
                        y_87876 = y_tmp_97846;
                        chi_87877 = chi_tmp_97847;
                        i_87878 = i_tmp_97848;
                        lastIndex_87882 = lastIndex_tmp_97852;
                    }
                    res_87865 = loop_while_87874;
                    res_87866 = x_87875;
                    res_87867 = y_87876;
                    res_87868 = chi_87877;
                    res_87869 = i_87878;
                    res_87873 = lastIndex_87882;
                    res_87961 = res_87873 + 1;
                    res_87861 = res_87961;
                } else {
                    char res_87965;
                    int16_t res_87966;
                    int16_t res_87967;
                    double res_87968;
                    int32_t res_87969;
                    int32_t res_87973;
                    int32_t res_88061;
                    
                    *(__global int16_t *) &mem_97136[(group_id_87823 *
                                                      (num_elems_74001 *
                                                       group_sizze_87816) +
                                                      local_tid_87822) * 2] =
                        res_87831;
                    *(__global int16_t *) &mem_97139[(group_id_87823 *
                                                      (num_elems_74001 *
                                                       group_sizze_87816) +
                                                      local_tid_87822) * 2] =
                        arg_87847;
                    *(__global double *) &mem_97142[(group_id_87823 *
                                                     (num_elems_74001 *
                                                      group_sizze_87816) +
                                                     local_tid_87822) * 8] =
                        lw_val_87852;
                    
                    char loop_while_87974;
                    int16_t x_87975;
                    int16_t y_87976;
                    double chi_87977;
                    int32_t i_87978;
                    int32_t lastIndex_87982;
                    
                    loop_while_87974 = 1;
                    x_87975 = arg_87846;
                    y_87976 = arg_87847;
                    chi_87977 = arg_87848;
                    i_87978 = 1;
                    lastIndex_87982 = 0;
                    while (loop_while_87974) {
                        double x_87983 = chi_87977 + res_87840;
                        char cond_87984 = x_87983 < delta_73922;
                        int16_t res_87985;
                        int16_t res_87986;
                        double res_87987;
                        int32_t res_87988;
                        char res_87992;
                        int32_t res_87993;
                        
                        if (cond_87984) {
                            int16_t res_87994;
                            int32_t res_87995;
                            char not_arg_87999;
                            char res_88000;
                            
                            res_87994 = x_87975 + res_87826;
                            res_87995 = i_87978 + 1;
                            *(__global int16_t *) &mem_97136[(group_id_87823 *
                                                              (num_elems_74001 *
                                                               group_sizze_87816) +
                                                              i_87978 *
                                                              group_sizze_87816 +
                                                              local_tid_87822) *
                                                             2] = x_87975;
                            *(__global int16_t *) &mem_97139[(group_id_87823 *
                                                              (num_elems_74001 *
                                                               group_sizze_87816) +
                                                              i_87978 *
                                                              group_sizze_87816 +
                                                              local_tid_87822) *
                                                             2] = y_87976;
                            *(__global double *) &mem_97142[(group_id_87823 *
                                                             (num_elems_74001 *
                                                              group_sizze_87816) +
                                                             i_87978 *
                                                             group_sizze_87816 +
                                                             local_tid_87822) *
                                                            8] = res_87842;
                            not_arg_87999 = res_87994 == res_87829;
                            res_88000 = !not_arg_87999;
                            res_87985 = res_87994;
                            res_87986 = y_87976;
                            res_87987 = x_87983;
                            res_87988 = res_87995;
                            res_87992 = res_88000;
                            res_87993 = i_87978;
                        } else {
                            int16_t x_88001;
                            char cond_88002;
                            int16_t res_88003;
                            int16_t res_88004;
                            double res_88005;
                            int32_t res_88006;
                            char res_88010;
                            int32_t res_88011;
                            
                            x_88001 = y_87976 + res_87827;
                            cond_88002 = x_88001 == res_87830;
                            if (cond_88002) {
                                double x_88012;
                                double x_88013;
                                double lw_val_88014;
                                
                                x_88012 = delta_73922 - chi_87977;
                                x_88013 = x_88012 / res_87840;
                                lw_val_88014 = x_88013 * res_87842;
                                *(__global
                                  int16_t *) &mem_97136[(group_id_87823 *
                                                         (num_elems_74001 *
                                                          group_sizze_87816) +
                                                         i_87978 *
                                                         group_sizze_87816 +
                                                         local_tid_87822) * 2] =
                                    x_87975;
                                *(__global
                                  int16_t *) &mem_97139[(group_id_87823 *
                                                         (num_elems_74001 *
                                                          group_sizze_87816) +
                                                         i_87978 *
                                                         group_sizze_87816 +
                                                         local_tid_87822) * 2] =
                                    y_87976;
                                *(__global
                                  double *) &mem_97142[(group_id_87823 *
                                                        (num_elems_74001 *
                                                         group_sizze_87816) +
                                                        i_87978 *
                                                        group_sizze_87816 +
                                                        local_tid_87822) * 8] =
                                    lw_val_88014;
                                res_88003 = x_87975;
                                res_88004 = y_87976;
                                res_88005 = chi_87977;
                                res_88006 = i_87978;
                                res_88010 = 0;
                                res_88011 = i_87978;
                            } else {
                                int16_t x_88018;
                                char cond_88019;
                                int16_t res_88020;
                                int16_t res_88021;
                                double res_88022;
                                int32_t res_88023;
                                char res_88027;
                                int32_t res_88028;
                                
                                x_88018 = x_87975 + res_87826;
                                cond_88019 = x_88018 == res_87829;
                                if (cond_88019) {
                                    res_88020 = x_87975;
                                } else {
                                    res_88020 = x_88018;
                                }
                                if (cond_88019) {
                                    res_88021 = y_87976;
                                } else {
                                    res_88021 = x_88001;
                                }
                                if (cond_88019) {
                                    double x_88029;
                                    double x_88030;
                                    double lw_val_88031;
                                    double x_88035;
                                    double x_88036;
                                    double lw_val_88037;
                                    int32_t i_88038;
                                    
                                    x_88029 = delta_73922 - chi_87977;
                                    x_88030 = x_88029 / res_87840;
                                    lw_val_88031 = x_88030 * res_87842;
                                    *(__global
                                      int16_t *) &mem_97136[(group_id_87823 *
                                                             (num_elems_74001 *
                                                              group_sizze_87816) +
                                                             i_87978 *
                                                             group_sizze_87816 +
                                                             local_tid_87822) *
                                                            2] = x_87975;
                                    *(__global
                                      int16_t *) &mem_97139[(group_id_87823 *
                                                             (num_elems_74001 *
                                                              group_sizze_87816) +
                                                             i_87978 *
                                                             group_sizze_87816 +
                                                             local_tid_87822) *
                                                            2] = y_87976;
                                    *(__global
                                      double *) &mem_97142[(group_id_87823 *
                                                            (num_elems_74001 *
                                                             group_sizze_87816) +
                                                            i_87978 *
                                                            group_sizze_87816 +
                                                            local_tid_87822) *
                                                           8] = lw_val_88031;
                                    x_88035 = x_87849 + chi_87977;
                                    x_88036 = x_88035 / res_87840;
                                    lw_val_88037 = x_88036 * res_87842;
                                    i_88038 = i_87978 + 1;
                                    *(__global
                                      int16_t *) &mem_97136[(group_id_87823 *
                                                             (num_elems_74001 *
                                                              group_sizze_87816) +
                                                             i_88038 *
                                                             group_sizze_87816 +
                                                             local_tid_87822) *
                                                            2] = x_87975;
                                    *(__global
                                      int16_t *) &mem_97139[(group_id_87823 *
                                                             (num_elems_74001 *
                                                              group_sizze_87816) +
                                                             i_88038 *
                                                             group_sizze_87816 +
                                                             local_tid_87822) *
                                                            2] = x_88001;
                                    *(__global
                                      double *) &mem_97142[(group_id_87823 *
                                                            (num_elems_74001 *
                                                             group_sizze_87816) +
                                                            i_88038 *
                                                            group_sizze_87816 +
                                                            local_tid_87822) *
                                                           8] = lw_val_88037;
                                    res_88022 = chi_87977;
                                    res_88023 = i_87978;
                                    res_88027 = 0;
                                    res_88028 = i_88038;
                                } else {
                                    double res_88042;
                                    int32_t res_88043;
                                    double x_88044;
                                    double x_88045;
                                    double lw_val_88046;
                                    double x_88050;
                                    double x_88051;
                                    double lw_val_88052;
                                    int32_t i_88053;
                                    char x_88057;
                                    char y_88058;
                                    char not_arg_88059;
                                    char res_88060;
                                    
                                    res_88042 = x_87983 - delta_73922;
                                    res_88043 = i_87978 + 2;
                                    x_88044 = delta_73922 - chi_87977;
                                    x_88045 = x_88044 / res_87840;
                                    lw_val_88046 = x_88045 * res_87842;
                                    *(__global
                                      int16_t *) &mem_97136[(group_id_87823 *
                                                             (num_elems_74001 *
                                                              group_sizze_87816) +
                                                             i_87978 *
                                                             group_sizze_87816 +
                                                             local_tid_87822) *
                                                            2] = x_87975;
                                    *(__global
                                      int16_t *) &mem_97139[(group_id_87823 *
                                                             (num_elems_74001 *
                                                              group_sizze_87816) +
                                                             i_87978 *
                                                             group_sizze_87816 +
                                                             local_tid_87822) *
                                                            2] = y_87976;
                                    *(__global
                                      double *) &mem_97142[(group_id_87823 *
                                                            (num_elems_74001 *
                                                             group_sizze_87816) +
                                                            i_87978 *
                                                            group_sizze_87816 +
                                                            local_tid_87822) *
                                                           8] = lw_val_88046;
                                    x_88050 = x_87849 + chi_87977;
                                    x_88051 = x_88050 / res_87840;
                                    lw_val_88052 = x_88051 * res_87842;
                                    i_88053 = i_87978 + 1;
                                    *(__global
                                      int16_t *) &mem_97136[(group_id_87823 *
                                                             (num_elems_74001 *
                                                              group_sizze_87816) +
                                                             i_88053 *
                                                             group_sizze_87816 +
                                                             local_tid_87822) *
                                                            2] = x_87975;
                                    *(__global
                                      int16_t *) &mem_97139[(group_id_87823 *
                                                             (num_elems_74001 *
                                                              group_sizze_87816) +
                                                             i_88053 *
                                                             group_sizze_87816 +
                                                             local_tid_87822) *
                                                            2] = x_88001;
                                    *(__global
                                      double *) &mem_97142[(group_id_87823 *
                                                            (num_elems_74001 *
                                                             group_sizze_87816) +
                                                            i_88053 *
                                                            group_sizze_87816 +
                                                            local_tid_87822) *
                                                           8] = lw_val_88052;
                                    x_88057 = !cond_88019;
                                    y_88058 = x_88057 && cond_88002;
                                    not_arg_88059 = cond_88019 || y_88058;
                                    res_88060 = !not_arg_88059;
                                    res_88022 = res_88042;
                                    res_88023 = res_88043;
                                    res_88027 = res_88060;
                                    res_88028 = i_88053;
                                }
                                res_88003 = res_88020;
                                res_88004 = res_88021;
                                res_88005 = res_88022;
                                res_88006 = res_88023;
                                res_88010 = res_88027;
                                res_88011 = res_88028;
                            }
                            res_87985 = res_88003;
                            res_87986 = res_88004;
                            res_87987 = res_88005;
                            res_87988 = res_88006;
                            res_87992 = res_88010;
                            res_87993 = res_88011;
                        }
                        
                        char loop_while_tmp_97853 = res_87992;
                        int16_t x_tmp_97854 = res_87985;
                        int16_t y_tmp_97855 = res_87986;
                        double chi_tmp_97856 = res_87987;
                        int32_t i_tmp_97857 = res_87988;
                        int32_t lastIndex_tmp_97861;
                        
                        lastIndex_tmp_97861 = res_87993;
                        loop_while_87974 = loop_while_tmp_97853;
                        x_87975 = x_tmp_97854;
                        y_87976 = y_tmp_97855;
                        chi_87977 = chi_tmp_97856;
                        i_87978 = i_tmp_97857;
                        lastIndex_87982 = lastIndex_tmp_97861;
                    }
                    res_87965 = loop_while_87974;
                    res_87966 = x_87975;
                    res_87967 = y_87976;
                    res_87968 = chi_87977;
                    res_87969 = i_87978;
                    res_87973 = lastIndex_87982;
                    res_88061 = res_87973 + 1;
                    res_87861 = res_88061;
                }
                res_87857 = res_87861;
            } else {
                char res_88062;
                int16_t res_88063;
                int16_t res_88064;
                double res_88065;
                int32_t res_88066;
                int32_t res_88070;
                int32_t res_88158;
                char loop_while_88071;
                int16_t x_88072;
                int16_t y_88073;
                double chi_88074;
                int32_t i_88075;
                int32_t lastIndex_88079;
                
                loop_while_88071 = 1;
                x_88072 = res_87831;
                y_88073 = res_87832;
                chi_88074 = x_87824;
                i_88075 = 0;
                lastIndex_88079 = 0;
                while (loop_while_88071) {
                    double x_88080 = chi_88074 + res_87840;
                    char cond_88081 = x_88080 < delta_73922;
                    int16_t res_88082;
                    int16_t res_88083;
                    double res_88084;
                    int32_t res_88085;
                    char res_88089;
                    int32_t res_88090;
                    
                    if (cond_88081) {
                        int16_t res_88091;
                        int32_t res_88092;
                        char not_arg_88096;
                        char res_88097;
                        
                        res_88091 = x_88072 + res_87826;
                        res_88092 = i_88075 + 1;
                        *(__global int16_t *) &mem_97136[(group_id_87823 *
                                                          (num_elems_74001 *
                                                           group_sizze_87816) +
                                                          i_88075 *
                                                          group_sizze_87816 +
                                                          local_tid_87822) *
                                                         2] = x_88072;
                        *(__global int16_t *) &mem_97139[(group_id_87823 *
                                                          (num_elems_74001 *
                                                           group_sizze_87816) +
                                                          i_88075 *
                                                          group_sizze_87816 +
                                                          local_tid_87822) *
                                                         2] = y_88073;
                        *(__global double *) &mem_97142[(group_id_87823 *
                                                         (num_elems_74001 *
                                                          group_sizze_87816) +
                                                         i_88075 *
                                                         group_sizze_87816 +
                                                         local_tid_87822) * 8] =
                            res_87842;
                        not_arg_88096 = res_88091 == res_87829;
                        res_88097 = !not_arg_88096;
                        res_88082 = res_88091;
                        res_88083 = y_88073;
                        res_88084 = x_88080;
                        res_88085 = res_88092;
                        res_88089 = res_88097;
                        res_88090 = i_88075;
                    } else {
                        int16_t x_88098;
                        char cond_88099;
                        int16_t res_88100;
                        int16_t res_88101;
                        double res_88102;
                        int32_t res_88103;
                        char res_88107;
                        int32_t res_88108;
                        
                        x_88098 = y_88073 + res_87827;
                        cond_88099 = x_88098 == res_87830;
                        if (cond_88099) {
                            double x_88109;
                            double x_88110;
                            double lw_val_88111;
                            
                            x_88109 = delta_73922 - chi_88074;
                            x_88110 = x_88109 / res_87840;
                            lw_val_88111 = x_88110 * res_87842;
                            *(__global int16_t *) &mem_97136[(group_id_87823 *
                                                              (num_elems_74001 *
                                                               group_sizze_87816) +
                                                              i_88075 *
                                                              group_sizze_87816 +
                                                              local_tid_87822) *
                                                             2] = x_88072;
                            *(__global int16_t *) &mem_97139[(group_id_87823 *
                                                              (num_elems_74001 *
                                                               group_sizze_87816) +
                                                              i_88075 *
                                                              group_sizze_87816 +
                                                              local_tid_87822) *
                                                             2] = y_88073;
                            *(__global double *) &mem_97142[(group_id_87823 *
                                                             (num_elems_74001 *
                                                              group_sizze_87816) +
                                                             i_88075 *
                                                             group_sizze_87816 +
                                                             local_tid_87822) *
                                                            8] = lw_val_88111;
                            res_88100 = x_88072;
                            res_88101 = y_88073;
                            res_88102 = chi_88074;
                            res_88103 = i_88075;
                            res_88107 = 0;
                            res_88108 = i_88075;
                        } else {
                            int16_t x_88115;
                            char cond_88116;
                            int16_t res_88117;
                            int16_t res_88118;
                            double res_88119;
                            int32_t res_88120;
                            char res_88124;
                            int32_t res_88125;
                            
                            x_88115 = x_88072 + res_87826;
                            cond_88116 = x_88115 == res_87829;
                            if (cond_88116) {
                                res_88117 = x_88072;
                            } else {
                                res_88117 = x_88115;
                            }
                            if (cond_88116) {
                                res_88118 = y_88073;
                            } else {
                                res_88118 = x_88098;
                            }
                            if (cond_88116) {
                                double x_88126;
                                double x_88127;
                                double lw_val_88128;
                                double x_88132;
                                double x_88133;
                                double lw_val_88134;
                                int32_t i_88135;
                                
                                x_88126 = delta_73922 - chi_88074;
                                x_88127 = x_88126 / res_87840;
                                lw_val_88128 = x_88127 * res_87842;
                                *(__global
                                  int16_t *) &mem_97136[(group_id_87823 *
                                                         (num_elems_74001 *
                                                          group_sizze_87816) +
                                                         i_88075 *
                                                         group_sizze_87816 +
                                                         local_tid_87822) * 2] =
                                    x_88072;
                                *(__global
                                  int16_t *) &mem_97139[(group_id_87823 *
                                                         (num_elems_74001 *
                                                          group_sizze_87816) +
                                                         i_88075 *
                                                         group_sizze_87816 +
                                                         local_tid_87822) * 2] =
                                    y_88073;
                                *(__global
                                  double *) &mem_97142[(group_id_87823 *
                                                        (num_elems_74001 *
                                                         group_sizze_87816) +
                                                        i_88075 *
                                                        group_sizze_87816 +
                                                        local_tid_87822) * 8] =
                                    lw_val_88128;
                                x_88132 = x_87849 + chi_88074;
                                x_88133 = x_88132 / res_87840;
                                lw_val_88134 = x_88133 * res_87842;
                                i_88135 = i_88075 + 1;
                                *(__global
                                  int16_t *) &mem_97136[(group_id_87823 *
                                                         (num_elems_74001 *
                                                          group_sizze_87816) +
                                                         i_88135 *
                                                         group_sizze_87816 +
                                                         local_tid_87822) * 2] =
                                    x_88072;
                                *(__global
                                  int16_t *) &mem_97139[(group_id_87823 *
                                                         (num_elems_74001 *
                                                          group_sizze_87816) +
                                                         i_88135 *
                                                         group_sizze_87816 +
                                                         local_tid_87822) * 2] =
                                    x_88098;
                                *(__global
                                  double *) &mem_97142[(group_id_87823 *
                                                        (num_elems_74001 *
                                                         group_sizze_87816) +
                                                        i_88135 *
                                                        group_sizze_87816 +
                                                        local_tid_87822) * 8] =
                                    lw_val_88134;
                                res_88119 = chi_88074;
                                res_88120 = i_88075;
                                res_88124 = 0;
                                res_88125 = i_88135;
                            } else {
                                double res_88139;
                                int32_t res_88140;
                                double x_88141;
                                double x_88142;
                                double lw_val_88143;
                                double x_88147;
                                double x_88148;
                                double lw_val_88149;
                                int32_t i_88150;
                                char x_88154;
                                char y_88155;
                                char not_arg_88156;
                                char res_88157;
                                
                                res_88139 = x_88080 - delta_73922;
                                res_88140 = i_88075 + 2;
                                x_88141 = delta_73922 - chi_88074;
                                x_88142 = x_88141 / res_87840;
                                lw_val_88143 = x_88142 * res_87842;
                                *(__global
                                  int16_t *) &mem_97136[(group_id_87823 *
                                                         (num_elems_74001 *
                                                          group_sizze_87816) +
                                                         i_88075 *
                                                         group_sizze_87816 +
                                                         local_tid_87822) * 2] =
                                    x_88072;
                                *(__global
                                  int16_t *) &mem_97139[(group_id_87823 *
                                                         (num_elems_74001 *
                                                          group_sizze_87816) +
                                                         i_88075 *
                                                         group_sizze_87816 +
                                                         local_tid_87822) * 2] =
                                    y_88073;
                                *(__global
                                  double *) &mem_97142[(group_id_87823 *
                                                        (num_elems_74001 *
                                                         group_sizze_87816) +
                                                        i_88075 *
                                                        group_sizze_87816 +
                                                        local_tid_87822) * 8] =
                                    lw_val_88143;
                                x_88147 = x_87849 + chi_88074;
                                x_88148 = x_88147 / res_87840;
                                lw_val_88149 = x_88148 * res_87842;
                                i_88150 = i_88075 + 1;
                                *(__global
                                  int16_t *) &mem_97136[(group_id_87823 *
                                                         (num_elems_74001 *
                                                          group_sizze_87816) +
                                                         i_88150 *
                                                         group_sizze_87816 +
                                                         local_tid_87822) * 2] =
                                    x_88072;
                                *(__global
                                  int16_t *) &mem_97139[(group_id_87823 *
                                                         (num_elems_74001 *
                                                          group_sizze_87816) +
                                                         i_88150 *
                                                         group_sizze_87816 +
                                                         local_tid_87822) * 2] =
                                    x_88098;
                                *(__global
                                  double *) &mem_97142[(group_id_87823 *
                                                        (num_elems_74001 *
                                                         group_sizze_87816) +
                                                        i_88150 *
                                                        group_sizze_87816 +
                                                        local_tid_87822) * 8] =
                                    lw_val_88149;
                                x_88154 = !cond_88116;
                                y_88155 = x_88154 && cond_88099;
                                not_arg_88156 = cond_88116 || y_88155;
                                res_88157 = !not_arg_88156;
                                res_88119 = res_88139;
                                res_88120 = res_88140;
                                res_88124 = res_88157;
                                res_88125 = i_88150;
                            }
                            res_88100 = res_88117;
                            res_88101 = res_88118;
                            res_88102 = res_88119;
                            res_88103 = res_88120;
                            res_88107 = res_88124;
                            res_88108 = res_88125;
                        }
                        res_88082 = res_88100;
                        res_88083 = res_88101;
                        res_88084 = res_88102;
                        res_88085 = res_88103;
                        res_88089 = res_88107;
                        res_88090 = res_88108;
                    }
                    
                    char loop_while_tmp_97862 = res_88089;
                    int16_t x_tmp_97863 = res_88082;
                    int16_t y_tmp_97864 = res_88083;
                    double chi_tmp_97865 = res_88084;
                    int32_t i_tmp_97866 = res_88085;
                    int32_t lastIndex_tmp_97870;
                    
                    lastIndex_tmp_97870 = res_88090;
                    loop_while_88071 = loop_while_tmp_97862;
                    x_88072 = x_tmp_97863;
                    y_88073 = y_tmp_97864;
                    chi_88074 = chi_tmp_97865;
                    i_88075 = i_tmp_97866;
                    lastIndex_88079 = lastIndex_tmp_97870;
                }
                res_88062 = loop_while_88071;
                res_88063 = x_88072;
                res_88064 = y_88073;
                res_88065 = chi_88074;
                res_88066 = i_88075;
                res_88070 = lastIndex_88079;
                res_88158 = res_88070 + 1;
                res_87857 = res_88158;
            }
            res_87853 = res_87857;
        } else {
            int32_t res_88159;
            
            if (cond_87843) {
                int32_t res_88163;
                
                if (cond_87845) {
                    char res_88167;
                    int16_t res_88168;
                    int16_t res_88169;
                    double res_88170;
                    int32_t res_88171;
                    int32_t res_88175;
                    int32_t res_88263;
                    char loop_while_88176;
                    int16_t x_88177;
                    int16_t y_88178;
                    double chi_88179;
                    int32_t i_88180;
                    int32_t lastIndex_88184;
                    
                    loop_while_88176 = 1;
                    x_88177 = res_87831;
                    y_88178 = arg_87847;
                    chi_88179 = x_87844;
                    i_88180 = 0;
                    lastIndex_88184 = 0;
                    while (loop_while_88176) {
                        double x_88185 = chi_88179 + res_87840;
                        char cond_88186 = x_88185 < delta_73922;
                        int16_t res_88187;
                        int16_t res_88188;
                        double res_88189;
                        int32_t res_88190;
                        char res_88194;
                        int32_t res_88195;
                        
                        if (cond_88186) {
                            int16_t res_88196;
                            int32_t res_88197;
                            char not_arg_88201;
                            char res_88202;
                            
                            res_88196 = y_88178 + res_87827;
                            res_88197 = i_88180 + 1;
                            *(__global int16_t *) &mem_97136[(group_id_87823 *
                                                              (num_elems_74001 *
                                                               group_sizze_87816) +
                                                              i_88180 *
                                                              group_sizze_87816 +
                                                              local_tid_87822) *
                                                             2] = x_88177;
                            *(__global int16_t *) &mem_97139[(group_id_87823 *
                                                              (num_elems_74001 *
                                                               group_sizze_87816) +
                                                              i_88180 *
                                                              group_sizze_87816 +
                                                              local_tid_87822) *
                                                             2] = y_88178;
                            *(__global double *) &mem_97142[(group_id_87823 *
                                                             (num_elems_74001 *
                                                              group_sizze_87816) +
                                                             i_88180 *
                                                             group_sizze_87816 +
                                                             local_tid_87822) *
                                                            8] = res_87842;
                            not_arg_88201 = res_88196 == res_87830;
                            res_88202 = !not_arg_88201;
                            res_88187 = x_88177;
                            res_88188 = res_88196;
                            res_88189 = x_88185;
                            res_88190 = res_88197;
                            res_88194 = res_88202;
                            res_88195 = i_88180;
                        } else {
                            int16_t x_88203;
                            char cond_88204;
                            int16_t res_88205;
                            int16_t res_88206;
                            double res_88207;
                            int32_t res_88208;
                            char res_88212;
                            int32_t res_88213;
                            
                            x_88203 = x_88177 + res_87826;
                            cond_88204 = x_88203 == res_87829;
                            if (cond_88204) {
                                double x_88214;
                                double x_88215;
                                double lw_val_88216;
                                
                                x_88214 = delta_73922 - chi_88179;
                                x_88215 = x_88214 / res_87840;
                                lw_val_88216 = x_88215 * res_87842;
                                *(__global
                                  int16_t *) &mem_97136[(group_id_87823 *
                                                         (num_elems_74001 *
                                                          group_sizze_87816) +
                                                         i_88180 *
                                                         group_sizze_87816 +
                                                         local_tid_87822) * 2] =
                                    x_88177;
                                *(__global
                                  int16_t *) &mem_97139[(group_id_87823 *
                                                         (num_elems_74001 *
                                                          group_sizze_87816) +
                                                         i_88180 *
                                                         group_sizze_87816 +
                                                         local_tid_87822) * 2] =
                                    y_88178;
                                *(__global
                                  double *) &mem_97142[(group_id_87823 *
                                                        (num_elems_74001 *
                                                         group_sizze_87816) +
                                                        i_88180 *
                                                        group_sizze_87816 +
                                                        local_tid_87822) * 8] =
                                    lw_val_88216;
                                res_88205 = x_88177;
                                res_88206 = y_88178;
                                res_88207 = chi_88179;
                                res_88208 = i_88180;
                                res_88212 = 0;
                                res_88213 = i_88180;
                            } else {
                                int16_t x_88220;
                                char cond_88221;
                                int16_t res_88222;
                                int16_t res_88223;
                                double res_88224;
                                int32_t res_88225;
                                char res_88229;
                                int32_t res_88230;
                                
                                x_88220 = y_88178 + res_87827;
                                cond_88221 = x_88220 == res_87830;
                                if (cond_88221) {
                                    res_88222 = x_88177;
                                } else {
                                    res_88222 = x_88203;
                                }
                                if (cond_88221) {
                                    res_88223 = y_88178;
                                } else {
                                    res_88223 = x_88220;
                                }
                                if (cond_88221) {
                                    double x_88231;
                                    double x_88232;
                                    double lw_val_88233;
                                    double x_88237;
                                    double x_88238;
                                    double lw_val_88239;
                                    int32_t i_88240;
                                    
                                    x_88231 = delta_73922 - chi_88179;
                                    x_88232 = x_88231 / res_87840;
                                    lw_val_88233 = x_88232 * res_87842;
                                    *(__global
                                      int16_t *) &mem_97136[(group_id_87823 *
                                                             (num_elems_74001 *
                                                              group_sizze_87816) +
                                                             i_88180 *
                                                             group_sizze_87816 +
                                                             local_tid_87822) *
                                                            2] = x_88177;
                                    *(__global
                                      int16_t *) &mem_97139[(group_id_87823 *
                                                             (num_elems_74001 *
                                                              group_sizze_87816) +
                                                             i_88180 *
                                                             group_sizze_87816 +
                                                             local_tid_87822) *
                                                            2] = y_88178;
                                    *(__global
                                      double *) &mem_97142[(group_id_87823 *
                                                            (num_elems_74001 *
                                                             group_sizze_87816) +
                                                            i_88180 *
                                                            group_sizze_87816 +
                                                            local_tid_87822) *
                                                           8] = lw_val_88233;
                                    x_88237 = x_87849 + chi_88179;
                                    x_88238 = x_88237 / res_87840;
                                    lw_val_88239 = x_88238 * res_87842;
                                    i_88240 = i_88180 + 1;
                                    *(__global
                                      int16_t *) &mem_97136[(group_id_87823 *
                                                             (num_elems_74001 *
                                                              group_sizze_87816) +
                                                             i_88240 *
                                                             group_sizze_87816 +
                                                             local_tid_87822) *
                                                            2] = x_88203;
                                    *(__global
                                      int16_t *) &mem_97139[(group_id_87823 *
                                                             (num_elems_74001 *
                                                              group_sizze_87816) +
                                                             i_88240 *
                                                             group_sizze_87816 +
                                                             local_tid_87822) *
                                                            2] = y_88178;
                                    *(__global
                                      double *) &mem_97142[(group_id_87823 *
                                                            (num_elems_74001 *
                                                             group_sizze_87816) +
                                                            i_88240 *
                                                            group_sizze_87816 +
                                                            local_tid_87822) *
                                                           8] = lw_val_88239;
                                    res_88224 = chi_88179;
                                    res_88225 = i_88180;
                                    res_88229 = 0;
                                    res_88230 = i_88240;
                                } else {
                                    double res_88244;
                                    int32_t res_88245;
                                    double x_88246;
                                    double x_88247;
                                    double lw_val_88248;
                                    double x_88252;
                                    double x_88253;
                                    double lw_val_88254;
                                    int32_t i_88255;
                                    char x_88259;
                                    char y_88260;
                                    char not_arg_88261;
                                    char res_88262;
                                    
                                    res_88244 = x_88185 - delta_73922;
                                    res_88245 = i_88180 + 2;
                                    x_88246 = delta_73922 - chi_88179;
                                    x_88247 = x_88246 / res_87840;
                                    lw_val_88248 = x_88247 * res_87842;
                                    *(__global
                                      int16_t *) &mem_97136[(group_id_87823 *
                                                             (num_elems_74001 *
                                                              group_sizze_87816) +
                                                             i_88180 *
                                                             group_sizze_87816 +
                                                             local_tid_87822) *
                                                            2] = x_88177;
                                    *(__global
                                      int16_t *) &mem_97139[(group_id_87823 *
                                                             (num_elems_74001 *
                                                              group_sizze_87816) +
                                                             i_88180 *
                                                             group_sizze_87816 +
                                                             local_tid_87822) *
                                                            2] = y_88178;
                                    *(__global
                                      double *) &mem_97142[(group_id_87823 *
                                                            (num_elems_74001 *
                                                             group_sizze_87816) +
                                                            i_88180 *
                                                            group_sizze_87816 +
                                                            local_tid_87822) *
                                                           8] = lw_val_88248;
                                    x_88252 = x_87849 + chi_88179;
                                    x_88253 = x_88252 / res_87840;
                                    lw_val_88254 = x_88253 * res_87842;
                                    i_88255 = i_88180 + 1;
                                    *(__global
                                      int16_t *) &mem_97136[(group_id_87823 *
                                                             (num_elems_74001 *
                                                              group_sizze_87816) +
                                                             i_88255 *
                                                             group_sizze_87816 +
                                                             local_tid_87822) *
                                                            2] = x_88203;
                                    *(__global
                                      int16_t *) &mem_97139[(group_id_87823 *
                                                             (num_elems_74001 *
                                                              group_sizze_87816) +
                                                             i_88255 *
                                                             group_sizze_87816 +
                                                             local_tid_87822) *
                                                            2] = y_88178;
                                    *(__global
                                      double *) &mem_97142[(group_id_87823 *
                                                            (num_elems_74001 *
                                                             group_sizze_87816) +
                                                            i_88255 *
                                                            group_sizze_87816 +
                                                            local_tid_87822) *
                                                           8] = lw_val_88254;
                                    x_88259 = !cond_88204;
                                    y_88260 = x_88259 && cond_88221;
                                    not_arg_88261 = cond_88204 || y_88260;
                                    res_88262 = !not_arg_88261;
                                    res_88224 = res_88244;
                                    res_88225 = res_88245;
                                    res_88229 = res_88262;
                                    res_88230 = i_88255;
                                }
                                res_88205 = res_88222;
                                res_88206 = res_88223;
                                res_88207 = res_88224;
                                res_88208 = res_88225;
                                res_88212 = res_88229;
                                res_88213 = res_88230;
                            }
                            res_88187 = res_88205;
                            res_88188 = res_88206;
                            res_88189 = res_88207;
                            res_88190 = res_88208;
                            res_88194 = res_88212;
                            res_88195 = res_88213;
                        }
                        
                        char loop_while_tmp_97871 = res_88194;
                        int16_t x_tmp_97872 = res_88187;
                        int16_t y_tmp_97873 = res_88188;
                        double chi_tmp_97874 = res_88189;
                        int32_t i_tmp_97875 = res_88190;
                        int32_t lastIndex_tmp_97879;
                        
                        lastIndex_tmp_97879 = res_88195;
                        loop_while_88176 = loop_while_tmp_97871;
                        x_88177 = x_tmp_97872;
                        y_88178 = y_tmp_97873;
                        chi_88179 = chi_tmp_97874;
                        i_88180 = i_tmp_97875;
                        lastIndex_88184 = lastIndex_tmp_97879;
                    }
                    res_88167 = loop_while_88176;
                    res_88168 = x_88177;
                    res_88169 = y_88178;
                    res_88170 = chi_88179;
                    res_88171 = i_88180;
                    res_88175 = lastIndex_88184;
                    res_88263 = res_88175 + 1;
                    res_88163 = res_88263;
                } else {
                    char res_88267;
                    int16_t res_88268;
                    int16_t res_88269;
                    double res_88270;
                    int32_t res_88271;
                    int32_t res_88275;
                    int32_t res_88363;
                    
                    *(__global int16_t *) &mem_97136[(group_id_87823 *
                                                      (num_elems_74001 *
                                                       group_sizze_87816) +
                                                      local_tid_87822) * 2] =
                        arg_87846;
                    *(__global int16_t *) &mem_97139[(group_id_87823 *
                                                      (num_elems_74001 *
                                                       group_sizze_87816) +
                                                      local_tid_87822) * 2] =
                        res_87832;
                    *(__global double *) &mem_97142[(group_id_87823 *
                                                     (num_elems_74001 *
                                                      group_sizze_87816) +
                                                     local_tid_87822) * 8] =
                        lw_val_87852;
                    
                    char loop_while_88276;
                    int16_t x_88277;
                    int16_t y_88278;
                    double chi_88279;
                    int32_t i_88280;
                    int32_t lastIndex_88284;
                    
                    loop_while_88276 = 1;
                    x_88277 = arg_87846;
                    y_88278 = arg_87847;
                    chi_88279 = arg_87848;
                    i_88280 = 1;
                    lastIndex_88284 = 0;
                    while (loop_while_88276) {
                        double x_88285 = chi_88279 + res_87840;
                        char cond_88286 = x_88285 < delta_73922;
                        int16_t res_88287;
                        int16_t res_88288;
                        double res_88289;
                        int32_t res_88290;
                        char res_88294;
                        int32_t res_88295;
                        
                        if (cond_88286) {
                            int16_t res_88296;
                            int32_t res_88297;
                            char not_arg_88301;
                            char res_88302;
                            
                            res_88296 = y_88278 + res_87827;
                            res_88297 = i_88280 + 1;
                            *(__global int16_t *) &mem_97136[(group_id_87823 *
                                                              (num_elems_74001 *
                                                               group_sizze_87816) +
                                                              i_88280 *
                                                              group_sizze_87816 +
                                                              local_tid_87822) *
                                                             2] = x_88277;
                            *(__global int16_t *) &mem_97139[(group_id_87823 *
                                                              (num_elems_74001 *
                                                               group_sizze_87816) +
                                                              i_88280 *
                                                              group_sizze_87816 +
                                                              local_tid_87822) *
                                                             2] = y_88278;
                            *(__global double *) &mem_97142[(group_id_87823 *
                                                             (num_elems_74001 *
                                                              group_sizze_87816) +
                                                             i_88280 *
                                                             group_sizze_87816 +
                                                             local_tid_87822) *
                                                            8] = res_87842;
                            not_arg_88301 = res_88296 == res_87830;
                            res_88302 = !not_arg_88301;
                            res_88287 = x_88277;
                            res_88288 = res_88296;
                            res_88289 = x_88285;
                            res_88290 = res_88297;
                            res_88294 = res_88302;
                            res_88295 = i_88280;
                        } else {
                            int16_t x_88303;
                            char cond_88304;
                            int16_t res_88305;
                            int16_t res_88306;
                            double res_88307;
                            int32_t res_88308;
                            char res_88312;
                            int32_t res_88313;
                            
                            x_88303 = x_88277 + res_87826;
                            cond_88304 = x_88303 == res_87829;
                            if (cond_88304) {
                                double x_88314;
                                double x_88315;
                                double lw_val_88316;
                                
                                x_88314 = delta_73922 - chi_88279;
                                x_88315 = x_88314 / res_87840;
                                lw_val_88316 = x_88315 * res_87842;
                                *(__global
                                  int16_t *) &mem_97136[(group_id_87823 *
                                                         (num_elems_74001 *
                                                          group_sizze_87816) +
                                                         i_88280 *
                                                         group_sizze_87816 +
                                                         local_tid_87822) * 2] =
                                    x_88277;
                                *(__global
                                  int16_t *) &mem_97139[(group_id_87823 *
                                                         (num_elems_74001 *
                                                          group_sizze_87816) +
                                                         i_88280 *
                                                         group_sizze_87816 +
                                                         local_tid_87822) * 2] =
                                    y_88278;
                                *(__global
                                  double *) &mem_97142[(group_id_87823 *
                                                        (num_elems_74001 *
                                                         group_sizze_87816) +
                                                        i_88280 *
                                                        group_sizze_87816 +
                                                        local_tid_87822) * 8] =
                                    lw_val_88316;
                                res_88305 = x_88277;
                                res_88306 = y_88278;
                                res_88307 = chi_88279;
                                res_88308 = i_88280;
                                res_88312 = 0;
                                res_88313 = i_88280;
                            } else {
                                int16_t x_88320;
                                char cond_88321;
                                int16_t res_88322;
                                int16_t res_88323;
                                double res_88324;
                                int32_t res_88325;
                                char res_88329;
                                int32_t res_88330;
                                
                                x_88320 = y_88278 + res_87827;
                                cond_88321 = x_88320 == res_87830;
                                if (cond_88321) {
                                    res_88322 = x_88277;
                                } else {
                                    res_88322 = x_88303;
                                }
                                if (cond_88321) {
                                    res_88323 = y_88278;
                                } else {
                                    res_88323 = x_88320;
                                }
                                if (cond_88321) {
                                    double x_88331;
                                    double x_88332;
                                    double lw_val_88333;
                                    double x_88337;
                                    double x_88338;
                                    double lw_val_88339;
                                    int32_t i_88340;
                                    
                                    x_88331 = delta_73922 - chi_88279;
                                    x_88332 = x_88331 / res_87840;
                                    lw_val_88333 = x_88332 * res_87842;
                                    *(__global
                                      int16_t *) &mem_97136[(group_id_87823 *
                                                             (num_elems_74001 *
                                                              group_sizze_87816) +
                                                             i_88280 *
                                                             group_sizze_87816 +
                                                             local_tid_87822) *
                                                            2] = x_88277;
                                    *(__global
                                      int16_t *) &mem_97139[(group_id_87823 *
                                                             (num_elems_74001 *
                                                              group_sizze_87816) +
                                                             i_88280 *
                                                             group_sizze_87816 +
                                                             local_tid_87822) *
                                                            2] = y_88278;
                                    *(__global
                                      double *) &mem_97142[(group_id_87823 *
                                                            (num_elems_74001 *
                                                             group_sizze_87816) +
                                                            i_88280 *
                                                            group_sizze_87816 +
                                                            local_tid_87822) *
                                                           8] = lw_val_88333;
                                    x_88337 = x_87849 + chi_88279;
                                    x_88338 = x_88337 / res_87840;
                                    lw_val_88339 = x_88338 * res_87842;
                                    i_88340 = i_88280 + 1;
                                    *(__global
                                      int16_t *) &mem_97136[(group_id_87823 *
                                                             (num_elems_74001 *
                                                              group_sizze_87816) +
                                                             i_88340 *
                                                             group_sizze_87816 +
                                                             local_tid_87822) *
                                                            2] = x_88303;
                                    *(__global
                                      int16_t *) &mem_97139[(group_id_87823 *
                                                             (num_elems_74001 *
                                                              group_sizze_87816) +
                                                             i_88340 *
                                                             group_sizze_87816 +
                                                             local_tid_87822) *
                                                            2] = y_88278;
                                    *(__global
                                      double *) &mem_97142[(group_id_87823 *
                                                            (num_elems_74001 *
                                                             group_sizze_87816) +
                                                            i_88340 *
                                                            group_sizze_87816 +
                                                            local_tid_87822) *
                                                           8] = lw_val_88339;
                                    res_88324 = chi_88279;
                                    res_88325 = i_88280;
                                    res_88329 = 0;
                                    res_88330 = i_88340;
                                } else {
                                    double res_88344;
                                    int32_t res_88345;
                                    double x_88346;
                                    double x_88347;
                                    double lw_val_88348;
                                    double x_88352;
                                    double x_88353;
                                    double lw_val_88354;
                                    int32_t i_88355;
                                    char x_88359;
                                    char y_88360;
                                    char not_arg_88361;
                                    char res_88362;
                                    
                                    res_88344 = x_88285 - delta_73922;
                                    res_88345 = i_88280 + 2;
                                    x_88346 = delta_73922 - chi_88279;
                                    x_88347 = x_88346 / res_87840;
                                    lw_val_88348 = x_88347 * res_87842;
                                    *(__global
                                      int16_t *) &mem_97136[(group_id_87823 *
                                                             (num_elems_74001 *
                                                              group_sizze_87816) +
                                                             i_88280 *
                                                             group_sizze_87816 +
                                                             local_tid_87822) *
                                                            2] = x_88277;
                                    *(__global
                                      int16_t *) &mem_97139[(group_id_87823 *
                                                             (num_elems_74001 *
                                                              group_sizze_87816) +
                                                             i_88280 *
                                                             group_sizze_87816 +
                                                             local_tid_87822) *
                                                            2] = y_88278;
                                    *(__global
                                      double *) &mem_97142[(group_id_87823 *
                                                            (num_elems_74001 *
                                                             group_sizze_87816) +
                                                            i_88280 *
                                                            group_sizze_87816 +
                                                            local_tid_87822) *
                                                           8] = lw_val_88348;
                                    x_88352 = x_87849 + chi_88279;
                                    x_88353 = x_88352 / res_87840;
                                    lw_val_88354 = x_88353 * res_87842;
                                    i_88355 = i_88280 + 1;
                                    *(__global
                                      int16_t *) &mem_97136[(group_id_87823 *
                                                             (num_elems_74001 *
                                                              group_sizze_87816) +
                                                             i_88355 *
                                                             group_sizze_87816 +
                                                             local_tid_87822) *
                                                            2] = x_88303;
                                    *(__global
                                      int16_t *) &mem_97139[(group_id_87823 *
                                                             (num_elems_74001 *
                                                              group_sizze_87816) +
                                                             i_88355 *
                                                             group_sizze_87816 +
                                                             local_tid_87822) *
                                                            2] = y_88278;
                                    *(__global
                                      double *) &mem_97142[(group_id_87823 *
                                                            (num_elems_74001 *
                                                             group_sizze_87816) +
                                                            i_88355 *
                                                            group_sizze_87816 +
                                                            local_tid_87822) *
                                                           8] = lw_val_88354;
                                    x_88359 = !cond_88304;
                                    y_88360 = x_88359 && cond_88321;
                                    not_arg_88361 = cond_88304 || y_88360;
                                    res_88362 = !not_arg_88361;
                                    res_88324 = res_88344;
                                    res_88325 = res_88345;
                                    res_88329 = res_88362;
                                    res_88330 = i_88355;
                                }
                                res_88305 = res_88322;
                                res_88306 = res_88323;
                                res_88307 = res_88324;
                                res_88308 = res_88325;
                                res_88312 = res_88329;
                                res_88313 = res_88330;
                            }
                            res_88287 = res_88305;
                            res_88288 = res_88306;
                            res_88289 = res_88307;
                            res_88290 = res_88308;
                            res_88294 = res_88312;
                            res_88295 = res_88313;
                        }
                        
                        char loop_while_tmp_97880 = res_88294;
                        int16_t x_tmp_97881 = res_88287;
                        int16_t y_tmp_97882 = res_88288;
                        double chi_tmp_97883 = res_88289;
                        int32_t i_tmp_97884 = res_88290;
                        int32_t lastIndex_tmp_97888;
                        
                        lastIndex_tmp_97888 = res_88295;
                        loop_while_88276 = loop_while_tmp_97880;
                        x_88277 = x_tmp_97881;
                        y_88278 = y_tmp_97882;
                        chi_88279 = chi_tmp_97883;
                        i_88280 = i_tmp_97884;
                        lastIndex_88284 = lastIndex_tmp_97888;
                    }
                    res_88267 = loop_while_88276;
                    res_88268 = x_88277;
                    res_88269 = y_88278;
                    res_88270 = chi_88279;
                    res_88271 = i_88280;
                    res_88275 = lastIndex_88284;
                    res_88363 = res_88275 + 1;
                    res_88163 = res_88363;
                }
                res_88159 = res_88163;
            } else {
                char res_88364;
                int16_t res_88365;
                int16_t res_88366;
                double res_88367;
                int32_t res_88368;
                int32_t res_88372;
                int32_t res_88460;
                char loop_while_88373;
                int16_t x_88374;
                int16_t y_88375;
                double chi_88376;
                int32_t i_88377;
                int32_t lastIndex_88381;
                
                loop_while_88373 = 1;
                x_88374 = res_87831;
                y_88375 = res_87832;
                chi_88376 = x_87824;
                i_88377 = 0;
                lastIndex_88381 = 0;
                while (loop_while_88373) {
                    double x_88382 = chi_88376 + res_87840;
                    char cond_88383 = x_88382 < delta_73922;
                    int16_t res_88384;
                    int16_t res_88385;
                    double res_88386;
                    int32_t res_88387;
                    char res_88391;
                    int32_t res_88392;
                    
                    if (cond_88383) {
                        int16_t res_88393;
                        int32_t res_88394;
                        char not_arg_88398;
                        char res_88399;
                        
                        res_88393 = y_88375 + res_87827;
                        res_88394 = i_88377 + 1;
                        *(__global int16_t *) &mem_97136[(group_id_87823 *
                                                          (num_elems_74001 *
                                                           group_sizze_87816) +
                                                          i_88377 *
                                                          group_sizze_87816 +
                                                          local_tid_87822) *
                                                         2] = x_88374;
                        *(__global int16_t *) &mem_97139[(group_id_87823 *
                                                          (num_elems_74001 *
                                                           group_sizze_87816) +
                                                          i_88377 *
                                                          group_sizze_87816 +
                                                          local_tid_87822) *
                                                         2] = y_88375;
                        *(__global double *) &mem_97142[(group_id_87823 *
                                                         (num_elems_74001 *
                                                          group_sizze_87816) +
                                                         i_88377 *
                                                         group_sizze_87816 +
                                                         local_tid_87822) * 8] =
                            res_87842;
                        not_arg_88398 = res_88393 == res_87830;
                        res_88399 = !not_arg_88398;
                        res_88384 = x_88374;
                        res_88385 = res_88393;
                        res_88386 = x_88382;
                        res_88387 = res_88394;
                        res_88391 = res_88399;
                        res_88392 = i_88377;
                    } else {
                        int16_t x_88400;
                        char cond_88401;
                        int16_t res_88402;
                        int16_t res_88403;
                        double res_88404;
                        int32_t res_88405;
                        char res_88409;
                        int32_t res_88410;
                        
                        x_88400 = x_88374 + res_87826;
                        cond_88401 = x_88400 == res_87829;
                        if (cond_88401) {
                            double x_88411;
                            double x_88412;
                            double lw_val_88413;
                            
                            x_88411 = delta_73922 - chi_88376;
                            x_88412 = x_88411 / res_87840;
                            lw_val_88413 = x_88412 * res_87842;
                            *(__global int16_t *) &mem_97136[(group_id_87823 *
                                                              (num_elems_74001 *
                                                               group_sizze_87816) +
                                                              i_88377 *
                                                              group_sizze_87816 +
                                                              local_tid_87822) *
                                                             2] = x_88374;
                            *(__global int16_t *) &mem_97139[(group_id_87823 *
                                                              (num_elems_74001 *
                                                               group_sizze_87816) +
                                                              i_88377 *
                                                              group_sizze_87816 +
                                                              local_tid_87822) *
                                                             2] = y_88375;
                            *(__global double *) &mem_97142[(group_id_87823 *
                                                             (num_elems_74001 *
                                                              group_sizze_87816) +
                                                             i_88377 *
                                                             group_sizze_87816 +
                                                             local_tid_87822) *
                                                            8] = lw_val_88413;
                            res_88402 = x_88374;
                            res_88403 = y_88375;
                            res_88404 = chi_88376;
                            res_88405 = i_88377;
                            res_88409 = 0;
                            res_88410 = i_88377;
                        } else {
                            int16_t x_88417;
                            char cond_88418;
                            int16_t res_88419;
                            int16_t res_88420;
                            double res_88421;
                            int32_t res_88422;
                            char res_88426;
                            int32_t res_88427;
                            
                            x_88417 = y_88375 + res_87827;
                            cond_88418 = x_88417 == res_87830;
                            if (cond_88418) {
                                res_88419 = x_88374;
                            } else {
                                res_88419 = x_88400;
                            }
                            if (cond_88418) {
                                res_88420 = y_88375;
                            } else {
                                res_88420 = x_88417;
                            }
                            if (cond_88418) {
                                double x_88428;
                                double x_88429;
                                double lw_val_88430;
                                double x_88434;
                                double x_88435;
                                double lw_val_88436;
                                int32_t i_88437;
                                
                                x_88428 = delta_73922 - chi_88376;
                                x_88429 = x_88428 / res_87840;
                                lw_val_88430 = x_88429 * res_87842;
                                *(__global
                                  int16_t *) &mem_97136[(group_id_87823 *
                                                         (num_elems_74001 *
                                                          group_sizze_87816) +
                                                         i_88377 *
                                                         group_sizze_87816 +
                                                         local_tid_87822) * 2] =
                                    x_88374;
                                *(__global
                                  int16_t *) &mem_97139[(group_id_87823 *
                                                         (num_elems_74001 *
                                                          group_sizze_87816) +
                                                         i_88377 *
                                                         group_sizze_87816 +
                                                         local_tid_87822) * 2] =
                                    y_88375;
                                *(__global
                                  double *) &mem_97142[(group_id_87823 *
                                                        (num_elems_74001 *
                                                         group_sizze_87816) +
                                                        i_88377 *
                                                        group_sizze_87816 +
                                                        local_tid_87822) * 8] =
                                    lw_val_88430;
                                x_88434 = x_87849 + chi_88376;
                                x_88435 = x_88434 / res_87840;
                                lw_val_88436 = x_88435 * res_87842;
                                i_88437 = i_88377 + 1;
                                *(__global
                                  int16_t *) &mem_97136[(group_id_87823 *
                                                         (num_elems_74001 *
                                                          group_sizze_87816) +
                                                         i_88437 *
                                                         group_sizze_87816 +
                                                         local_tid_87822) * 2] =
                                    x_88400;
                                *(__global
                                  int16_t *) &mem_97139[(group_id_87823 *
                                                         (num_elems_74001 *
                                                          group_sizze_87816) +
                                                         i_88437 *
                                                         group_sizze_87816 +
                                                         local_tid_87822) * 2] =
                                    y_88375;
                                *(__global
                                  double *) &mem_97142[(group_id_87823 *
                                                        (num_elems_74001 *
                                                         group_sizze_87816) +
                                                        i_88437 *
                                                        group_sizze_87816 +
                                                        local_tid_87822) * 8] =
                                    lw_val_88436;
                                res_88421 = chi_88376;
                                res_88422 = i_88377;
                                res_88426 = 0;
                                res_88427 = i_88437;
                            } else {
                                double res_88441;
                                int32_t res_88442;
                                double x_88443;
                                double x_88444;
                                double lw_val_88445;
                                double x_88449;
                                double x_88450;
                                double lw_val_88451;
                                int32_t i_88452;
                                char x_88456;
                                char y_88457;
                                char not_arg_88458;
                                char res_88459;
                                
                                res_88441 = x_88382 - delta_73922;
                                res_88442 = i_88377 + 2;
                                x_88443 = delta_73922 - chi_88376;
                                x_88444 = x_88443 / res_87840;
                                lw_val_88445 = x_88444 * res_87842;
                                *(__global
                                  int16_t *) &mem_97136[(group_id_87823 *
                                                         (num_elems_74001 *
                                                          group_sizze_87816) +
                                                         i_88377 *
                                                         group_sizze_87816 +
                                                         local_tid_87822) * 2] =
                                    x_88374;
                                *(__global
                                  int16_t *) &mem_97139[(group_id_87823 *
                                                         (num_elems_74001 *
                                                          group_sizze_87816) +
                                                         i_88377 *
                                                         group_sizze_87816 +
                                                         local_tid_87822) * 2] =
                                    y_88375;
                                *(__global
                                  double *) &mem_97142[(group_id_87823 *
                                                        (num_elems_74001 *
                                                         group_sizze_87816) +
                                                        i_88377 *
                                                        group_sizze_87816 +
                                                        local_tid_87822) * 8] =
                                    lw_val_88445;
                                x_88449 = x_87849 + chi_88376;
                                x_88450 = x_88449 / res_87840;
                                lw_val_88451 = x_88450 * res_87842;
                                i_88452 = i_88377 + 1;
                                *(__global
                                  int16_t *) &mem_97136[(group_id_87823 *
                                                         (num_elems_74001 *
                                                          group_sizze_87816) +
                                                         i_88452 *
                                                         group_sizze_87816 +
                                                         local_tid_87822) * 2] =
                                    x_88400;
                                *(__global
                                  int16_t *) &mem_97139[(group_id_87823 *
                                                         (num_elems_74001 *
                                                          group_sizze_87816) +
                                                         i_88452 *
                                                         group_sizze_87816 +
                                                         local_tid_87822) * 2] =
                                    y_88375;
                                *(__global
                                  double *) &mem_97142[(group_id_87823 *
                                                        (num_elems_74001 *
                                                         group_sizze_87816) +
                                                        i_88452 *
                                                        group_sizze_87816 +
                                                        local_tid_87822) * 8] =
                                    lw_val_88451;
                                x_88456 = !cond_88401;
                                y_88457 = x_88456 && cond_88418;
                                not_arg_88458 = cond_88401 || y_88457;
                                res_88459 = !not_arg_88458;
                                res_88421 = res_88441;
                                res_88422 = res_88442;
                                res_88426 = res_88459;
                                res_88427 = i_88452;
                            }
                            res_88402 = res_88419;
                            res_88403 = res_88420;
                            res_88404 = res_88421;
                            res_88405 = res_88422;
                            res_88409 = res_88426;
                            res_88410 = res_88427;
                        }
                        res_88384 = res_88402;
                        res_88385 = res_88403;
                        res_88386 = res_88404;
                        res_88387 = res_88405;
                        res_88391 = res_88409;
                        res_88392 = res_88410;
                    }
                    
                    char loop_while_tmp_97889 = res_88391;
                    int16_t x_tmp_97890 = res_88384;
                    int16_t y_tmp_97891 = res_88385;
                    double chi_tmp_97892 = res_88386;
                    int32_t i_tmp_97893 = res_88387;
                    int32_t lastIndex_tmp_97897;
                    
                    lastIndex_tmp_97897 = res_88392;
                    loop_while_88373 = loop_while_tmp_97889;
                    x_88374 = x_tmp_97890;
                    y_88375 = y_tmp_97891;
                    chi_88376 = chi_tmp_97892;
                    i_88377 = i_tmp_97893;
                    lastIndex_88381 = lastIndex_tmp_97897;
                }
                res_88364 = loop_while_88373;
                res_88365 = x_88374;
                res_88366 = y_88375;
                res_88367 = chi_88376;
                res_88368 = i_88377;
                res_88372 = lastIndex_88381;
                res_88460 = res_88372 + 1;
                res_88159 = res_88460;
            }
            res_87853 = res_88159;
        }
    }
    if (thread_active_97840) {
        *(__global int32_t *) &mem_97301[gtid_87814 * 4] = res_87853;
    }
    if (thread_active_97840) {
        for (int32_t i_97898 = 0; i_97898 < num_elems_74001; i_97898++) {
            *(__global int16_t *) &mem_97305[(i_97898 * x_75734 + gtid_87814) *
                                             2] = *(__global
                                                    int16_t *) &mem_97136[(group_id_87823 *
                                                                           (num_elems_74001 *
                                                                            group_sizze_87816) +
                                                                           i_97898 *
                                                                           group_sizze_87816 +
                                                                           local_tid_87822) *
                                                                          2];
        }
    }
    if (thread_active_97840) {
        for (int32_t i_97899 = 0; i_97899 < num_elems_74001; i_97899++) {
            *(__global int16_t *) &mem_97309[(i_97899 * x_75734 + gtid_87814) *
                                             2] = *(__global
                                                    int16_t *) &mem_97139[(group_id_87823 *
                                                                           (num_elems_74001 *
                                                                            group_sizze_87816) +
                                                                           i_97899 *
                                                                           group_sizze_87816 +
                                                                           local_tid_87822) *
                                                                          2];
        }
    }
    if (thread_active_97840) {
        for (int32_t i_97900 = 0; i_97900 < num_elems_74001; i_97900++) {
            *(__global double *) &mem_97313[(i_97900 * x_75734 + gtid_87814) *
                                            8] = *(__global
                                                   double *) &mem_97142[(group_id_87823 *
                                                                         (num_elems_74001 *
                                                                          group_sizze_87816) +
                                                                         i_97900 *
                                                                         group_sizze_87816 +
                                                                         local_tid_87822) *
                                                                        8];
        }
    }
}
__kernel void map_kernel_88509(int16_t res_73988, int32_t x_75734, __global
                               unsigned char *mem_97096, __global
                               unsigned char *mem_97099, __global
                               unsigned char *mem_97102, __global
                               unsigned char *mem_97113, __global
                               unsigned char *mem_97116, __global
                               unsigned char *mem_97118, __global
                               unsigned char *mem_97121, __global
                               unsigned char *mem_97124, __global
                               unsigned char *mem_97127, __global
                               unsigned char *mem_97130, __global
                               unsigned char *mem_97133)
{
    int32_t wave_sizze_97835;
    int32_t group_sizze_97836;
    char thread_active_97837;
    int32_t gtid_88502;
    int32_t global_tid_88509;
    int32_t local_tid_88510;
    int32_t group_id_88511;
    
    global_tid_88509 = get_global_id(0);
    local_tid_88510 = get_local_id(0);
    group_sizze_97836 = get_local_size(0);
    wave_sizze_97835 = LOCKSTEP_WIDTH;
    group_id_88511 = get_group_id(0);
    gtid_88502 = global_tid_88509;
    thread_active_97837 = slt32(gtid_88502, x_75734);
    
    double x_88512;
    int16_t x_88513;
    int16_t x_88514;
    char cond_88515;
    char res_88516;
    char x_88517;
    double res_88518;
    int16_t res_88519;
    int16_t res_88520;
    char res_88521;
    char cond_88569;
    int16_t res_88570;
    int16_t res_88571;
    char cond_88575;
    int16_t res_88576;
    int16_t res_88577;
    char cond_88581;
    char res_88582;
    char x_88583;
    char y_88584;
    char cond_88585;
    char x_88586;
    int16_t res_88587;
    int16_t res_88588;
    double res_88598;
    
    if (thread_active_97837) {
        x_88512 = *(__global double *) &mem_97096[gtid_88502 * 8];
        x_88513 = *(__global int16_t *) &mem_97099[gtid_88502 * 2];
        x_88514 = *(__global int16_t *) &mem_97102[gtid_88502 * 2];
        cond_88515 = 0.0 <= x_88512;
        res_88516 = x_88512 <= 45.0;
        x_88517 = cond_88515 && res_88516;
        if (x_88517) {
            res_88518 = x_88512;
            res_88519 = -1;
            res_88520 = 1;
            res_88521 = 0;
        } else {
            char cond_88522;
            char res_88523;
            char x_88524;
            double res_88525;
            int16_t res_88526;
            int16_t res_88527;
            char res_88528;
            
            cond_88522 = 45.0 < x_88512;
            res_88523 = x_88512 < 90.0;
            x_88524 = cond_88522 && res_88523;
            if (x_88524) {
                double res_88529 = 90.0 - x_88512;
                
                res_88525 = res_88529;
                res_88526 = -1;
                res_88527 = 1;
                res_88528 = 1;
            } else {
                char cond_88530;
                char res_88531;
                char x_88532;
                double res_88533;
                int16_t res_88534;
                int16_t res_88535;
                char res_88536;
                
                cond_88530 = 90.0 <= x_88512;
                res_88531 = x_88512 <= 135.0;
                x_88532 = cond_88530 && res_88531;
                if (x_88532) {
                    double res_88537 = x_88512 - 90.0;
                    
                    res_88533 = res_88537;
                    res_88534 = -1;
                    res_88535 = -1;
                    res_88536 = 1;
                } else {
                    char cond_88538;
                    char res_88539;
                    char x_88540;
                    int16_t res_88541;
                    double res_88542;
                    int16_t res_88543;
                    char res_88544;
                    
                    cond_88538 = 135.0 < x_88512;
                    res_88539 = x_88512 <= 180.0;
                    x_88540 = cond_88538 && res_88539;
                    if (x_88540) {
                        res_88541 = -1;
                    } else {
                        res_88541 = 1;
                    }
                    if (x_88540) {
                        double res_88545 = 180.0 - x_88512;
                        
                        res_88542 = res_88545;
                        res_88543 = -1;
                        res_88544 = 0;
                    } else {
                        char cond_88546;
                        char res_88547;
                        char x_88548;
                        double res_88549;
                        int16_t res_88550;
                        char res_88551;
                        
                        cond_88546 = 180.0 < x_88512;
                        res_88547 = x_88512 <= 225.0;
                        x_88548 = cond_88546 && res_88547;
                        if (x_88548) {
                            double res_88552 = x_88512 - 180.0;
                            
                            res_88549 = res_88552;
                            res_88550 = -1;
                            res_88551 = 0;
                        } else {
                            char cond_88553;
                            char res_88554;
                            char x_88555;
                            int16_t res_88556;
                            double res_88557;
                            char res_88558;
                            
                            cond_88553 = 225.0 < x_88512;
                            res_88554 = x_88512 < 270.0;
                            x_88555 = cond_88553 && res_88554;
                            if (x_88555) {
                                res_88556 = -1;
                            } else {
                                res_88556 = 1;
                            }
                            if (x_88555) {
                                double res_88559 = 270.0 - x_88512;
                                
                                res_88557 = res_88559;
                                res_88558 = 1;
                            } else {
                                char cond_88560;
                                double res_88561;
                                char res_88562;
                                
                                cond_88560 = x_88512 == 270.0;
                                if (cond_88560) {
                                    res_88561 = 0.0;
                                    res_88562 = 1;
                                } else {
                                    char cond_88563;
                                    char res_88564;
                                    char x_88565;
                                    double res_88566;
                                    
                                    cond_88563 = 270.0 < x_88512;
                                    res_88564 = x_88512 <= 315.0;
                                    x_88565 = cond_88563 && res_88564;
                                    if (x_88565) {
                                        double res_88567 = x_88512 - 270.0;
                                        
                                        res_88566 = res_88567;
                                    } else {
                                        double res_88568 = 360.0 - x_88512;
                                        
                                        res_88566 = res_88568;
                                    }
                                    res_88561 = res_88566;
                                    res_88562 = x_88565;
                                }
                                res_88557 = res_88561;
                                res_88558 = res_88562;
                            }
                            res_88549 = res_88557;
                            res_88550 = res_88556;
                            res_88551 = res_88558;
                        }
                        res_88542 = res_88549;
                        res_88543 = res_88550;
                        res_88544 = res_88551;
                    }
                    res_88533 = res_88542;
                    res_88534 = res_88541;
                    res_88535 = res_88543;
                    res_88536 = res_88544;
                }
                res_88525 = res_88533;
                res_88526 = res_88534;
                res_88527 = res_88535;
                res_88528 = res_88536;
            }
            res_88518 = res_88525;
            res_88519 = res_88526;
            res_88520 = res_88527;
            res_88521 = res_88528;
        }
        cond_88569 = slt16(res_88519, 0);
        if (cond_88569) {
            int16_t res_88572;
            int16_t x_88573;
            int16_t res_88574;
            
            res_88572 = x_88513 - 1;
            x_88573 = 0 - res_73988;
            res_88574 = x_88573 - 1;
            res_88570 = res_88572;
            res_88571 = res_88574;
        } else {
            res_88570 = x_88513;
            res_88571 = res_73988;
        }
        cond_88575 = slt16(res_88520, 0);
        if (cond_88575) {
            int16_t res_88578;
            int16_t x_88579;
            int16_t res_88580;
            
            res_88578 = x_88514 - 1;
            x_88579 = 0 - res_73988;
            res_88580 = x_88579 - 1;
            res_88576 = res_88578;
            res_88577 = res_88580;
        } else {
            res_88576 = x_88514;
            res_88577 = res_73988;
        }
        cond_88581 = x_88512 == 0.0;
        res_88582 = x_88512 == 180.0;
        x_88583 = !cond_88581;
        y_88584 = x_88583 && res_88582;
        cond_88585 = cond_88581 || y_88584;
        x_88586 = cond_88585 && cond_88569;
        if (x_88586) {
            int16_t res_88589 = res_88570 + 1;
            
            res_88587 = res_88589;
            res_88588 = res_88576;
        } else {
            char cond_88590;
            char res_88591;
            char x_88592;
            char y_88593;
            char cond_88594;
            char x_88595;
            int16_t res_88596;
            
            cond_88590 = x_88512 == 90.0;
            res_88591 = x_88512 == 270.0;
            x_88592 = !cond_88590;
            y_88593 = x_88592 && res_88591;
            cond_88594 = cond_88590 || y_88593;
            x_88595 = cond_88594 && cond_88575;
            if (x_88595) {
                int16_t res_88597 = res_88576 + 1;
                
                res_88596 = res_88597;
            } else {
                res_88596 = res_88576;
            }
            res_88587 = res_88570;
            res_88588 = res_88596;
        }
        res_88598 = 1.7453292519943295e-2 * res_88518;
    }
    if (thread_active_97837) {
        *(__global int16_t *) &mem_97113[gtid_88502 * 2] = res_88519;
    }
    if (thread_active_97837) {
        *(__global int16_t *) &mem_97116[gtid_88502 * 2] = res_88520;
    }
    if (thread_active_97837) {
        *(__global char *) &mem_97118[gtid_88502] = res_88521;
    }
    if (thread_active_97837) {
        *(__global int16_t *) &mem_97121[gtid_88502 * 2] = res_88571;
    }
    if (thread_active_97837) {
        *(__global int16_t *) &mem_97124[gtid_88502 * 2] = res_88577;
    }
    if (thread_active_97837) {
        *(__global int16_t *) &mem_97127[gtid_88502 * 2] = res_88587;
    }
    if (thread_active_97837) {
        *(__global int16_t *) &mem_97130[gtid_88502 * 2] = res_88588;
    }
    if (thread_active_97837) {
        *(__global double *) &mem_97133[gtid_88502 * 8] = res_88598;
    }
}
__kernel void map_kernel_88606(int32_t num_elems_74003, int32_t x_75734,
                               __global unsigned char *mem_97110, __global
                               unsigned char *mem_97301, __global
                               unsigned char *mem_97316)
{
    int32_t wave_sizze_97906;
    int32_t group_sizze_97907;
    char thread_active_97908;
    int32_t write_i_88599;
    int32_t global_tid_88606;
    int32_t local_tid_88607;
    int32_t group_id_88608;
    
    global_tid_88606 = get_global_id(0);
    local_tid_88607 = get_local_id(0);
    group_sizze_97907 = get_local_size(0);
    wave_sizze_97906 = LOCKSTEP_WIDTH;
    group_id_88608 = get_group_id(0);
    write_i_88599 = global_tid_88606;
    thread_active_97908 = slt32(write_i_88599, x_75734);
    
    int32_t write_index_76463;
    int32_t write_value_76464;
    
    if (thread_active_97908) {
        write_index_76463 = *(__global int32_t *) &mem_97110[write_i_88599 * 4];
        write_value_76464 = *(__global int32_t *) &mem_97301[write_i_88599 * 4];
    }
    if (thread_active_97908 && (sle32(0, write_index_76463) &&
                                slt32(write_index_76463, num_elems_74003))) {
        *(__global int32_t *) &mem_97316[write_index_76463 * 4] =
            write_value_76464;
    }
}
__kernel void map_kernel_88702(int32_t conc_tmp_74004, int32_t y_88649, __global
                               unsigned char *mem_97319, __global
                               unsigned char *mem_97334, __global
                               unsigned char *mem_97337)
{
    int32_t wave_sizze_97932;
    int32_t group_sizze_97933;
    char thread_active_97934;
    int32_t j_88687;
    int32_t global_tid_88702;
    int32_t local_tid_88703;
    int32_t group_id_88704;
    
    global_tid_88702 = get_global_id(0);
    local_tid_88703 = get_local_id(0);
    group_sizze_97933 = get_local_size(0);
    wave_sizze_97932 = LOCKSTEP_WIDTH;
    group_id_88704 = get_group_id(0);
    j_88687 = global_tid_88702;
    thread_active_97934 = slt32(j_88687, conc_tmp_74004);
    
    int32_t x_88685;
    int32_t group_id_88692;
    char cond_88693;
    int32_t final_result_88695;
    
    if (thread_active_97934) {
        x_88685 = *(__global int32_t *) &mem_97319[j_88687 * 4];
        group_id_88692 = squot32(j_88687, y_88649);
        cond_88693 = 0 == group_id_88692;
        if (cond_88693) {
            final_result_88695 = x_88685;
        } else {
            int32_t carry_in_index_88694;
            int32_t x_88684;
            int32_t res_88686;
            
            carry_in_index_88694 = group_id_88692 - 1;
            x_88684 = *(__global int32_t *) &mem_97334[carry_in_index_88694 *
                                                       4];
            res_88686 = x_88684 + x_88685;
            final_result_88695 = res_88686;
        }
    }
    if (thread_active_97934) {
        *(__global int32_t *) &mem_97337[j_88687 * 4] = final_result_88695;
    }
}
__kernel void map_kernel_88714(int32_t num_elems_74001, int32_t res_74005,
                               int32_t y_74006, int32_t x_75734, __global
                               unsigned char *mem_97341, __global
                               unsigned char *mem_97345, __global
                               unsigned char *mem_97349)
{
    int32_t wave_sizze_97935;
    int32_t group_sizze_97936;
    char thread_active_97937;
    int32_t gtid_88705;
    int32_t gtid_88706;
    int32_t global_tid_88714;
    int32_t local_tid_88715;
    int32_t group_id_88716;
    
    global_tid_88714 = get_global_id(0);
    local_tid_88715 = get_local_id(0);
    group_sizze_97936 = get_local_size(0);
    wave_sizze_97935 = LOCKSTEP_WIDTH;
    group_id_88716 = get_group_id(0);
    gtid_88705 = squot32(global_tid_88714, num_elems_74001);
    gtid_88706 = global_tid_88714 - squot32(global_tid_88714, num_elems_74001) *
        num_elems_74001;
    thread_active_97937 = slt32(gtid_88705, x_75734) && slt32(gtid_88706,
                                                              num_elems_74001);
    
    int16_t x_88717;
    int16_t x_88718;
    int32_t x_88719;
    int32_t x_88720;
    int32_t x_88721;
    int32_t x_88722;
    int32_t y_88723;
    int32_t res_88724;
    
    if (thread_active_97937) {
        x_88717 = *(__global int16_t *) &mem_97341[(gtid_88705 *
                                                    num_elems_74001 +
                                                    gtid_88706) * 2];
        x_88718 = *(__global int16_t *) &mem_97345[(gtid_88705 *
                                                    num_elems_74001 +
                                                    gtid_88706) * 2];
        x_88719 = sext_i16_i32(x_88717);
        x_88720 = x_88719 + res_74005;
        x_88721 = sext_i16_i32(x_88718);
        x_88722 = x_88721 + res_74005;
        y_88723 = x_88722 * y_74006;
        res_88724 = x_88720 + y_88723;
    }
    if (thread_active_97937) {
        *(__global int32_t *) &mem_97349[(gtid_88705 * num_elems_74001 +
                                          gtid_88706) * 4] = res_88724;
    }
}
__kernel void map_kernel_88824(int32_t y_88768, int32_t convop_x_97339, __global
                               unsigned char *mem_97352, __global
                               unsigned char *mem_97377, __global
                               unsigned char *mem_97380)
{
    int32_t wave_sizze_97962;
    int32_t group_sizze_97963;
    char thread_active_97964;
    int32_t j_88809;
    int32_t global_tid_88824;
    int32_t local_tid_88825;
    int32_t group_id_88826;
    
    global_tid_88824 = get_global_id(0);
    local_tid_88825 = get_local_id(0);
    group_sizze_97963 = get_local_size(0);
    wave_sizze_97962 = LOCKSTEP_WIDTH;
    group_id_88826 = get_group_id(0);
    j_88809 = global_tid_88824;
    thread_active_97964 = slt32(j_88809, convop_x_97339);
    
    int32_t y_88807;
    int32_t group_id_88814;
    char cond_88815;
    int32_t final_result_88817;
    
    if (thread_active_97964) {
        y_88807 = *(__global int32_t *) &mem_97352[j_88809 * 4];
        group_id_88814 = squot32(j_88809, y_88768);
        cond_88815 = 0 == group_id_88814;
        if (cond_88815) {
            final_result_88817 = y_88807;
        } else {
            int32_t carry_in_index_88816;
            int32_t x_88806;
            int32_t zz_88808;
            
            carry_in_index_88816 = group_id_88814 - 1;
            x_88806 = *(__global int32_t *) &mem_97377[carry_in_index_88816 *
                                                       4];
            zz_88808 = x_88806 + y_88807;
            final_result_88817 = zz_88808;
        }
    }
    if (thread_active_97964) {
        *(__global int32_t *) &mem_97380[j_88809 * 4] = final_result_88817;
    }
}
__kernel void map_kernel_88834(int32_t num_elems_74001,
                               int32_t partition_sizze_76500,
                               int32_t convop_x_97339, __global
                               unsigned char *mem_97349, __global
                               unsigned char *mem_97355, __global
                               unsigned char *mem_97359, __global
                               unsigned char *mem_97380, __global
                               unsigned char *mem_97383, __global
                               unsigned char *mem_97386)
{
    int32_t wave_sizze_97965;
    int32_t group_sizze_97966;
    char thread_active_97967;
    int32_t write_i_88827;
    int32_t global_tid_88834;
    int32_t local_tid_88835;
    int32_t group_id_88836;
    
    global_tid_88834 = get_global_id(0);
    local_tid_88835 = get_local_id(0);
    group_sizze_97966 = get_local_size(0);
    wave_sizze_97965 = LOCKSTEP_WIDTH;
    group_id_88836 = get_group_id(0);
    write_i_88827 = global_tid_88834;
    thread_active_97967 = slt32(write_i_88827, convop_x_97339);
    
    int32_t c_76506;
    int32_t offset_76507;
    int32_t new_index_96952;
    int32_t binop_y_96954;
    int32_t new_index_96955;
    int32_t v_76508;
    double v_76509;
    char is_this_one_76510;
    int32_t this_offset_76511;
    int32_t total_res_76512;
    
    if (thread_active_97967) {
        c_76506 = *(__global int32_t *) &mem_97355[write_i_88827 * 4];
        offset_76507 = *(__global int32_t *) &mem_97380[write_i_88827 * 4];
        new_index_96952 = squot32(write_i_88827, num_elems_74001);
        binop_y_96954 = new_index_96952 * num_elems_74001;
        new_index_96955 = write_i_88827 - binop_y_96954;
        v_76508 = *(__global int32_t *) &mem_97349[(new_index_96952 *
                                                    num_elems_74001 +
                                                    new_index_96955) * 4];
        v_76509 = *(__global double *) &mem_97359[(new_index_96952 *
                                                   num_elems_74001 +
                                                   new_index_96955) * 8];
        is_this_one_76510 = c_76506 == 0;
        this_offset_76511 = offset_76507 + -1;
        if (is_this_one_76510) {
            total_res_76512 = this_offset_76511;
        } else {
            total_res_76512 = -1;
        }
    }
    if (thread_active_97967 && (sle32(0, total_res_76512) &&
                                slt32(total_res_76512,
                                      partition_sizze_76500))) {
        *(__global int32_t *) &mem_97383[total_res_76512 * 4] = v_76508;
    }
    if (thread_active_97967 && (sle32(0, total_res_76512) &&
                                slt32(total_res_76512,
                                      partition_sizze_76500))) {
        *(__global double *) &mem_97386[total_res_76512 * 8] = v_76509;
    }
}
__kernel void map_kernel_89792(int32_t nesting_sizze_86802, int32_t y_89720,
                               __global unsigned char *mem_97397, __global
                               unsigned char *mem_97446, __global
                               unsigned char *mem_97449)
{
    int32_t wave_sizze_97997;
    int32_t group_sizze_97998;
    char thread_active_97999;
    int32_t j_89777;
    int32_t global_tid_89792;
    int32_t local_tid_89793;
    int32_t group_id_89794;
    
    global_tid_89792 = get_global_id(0);
    local_tid_89793 = get_local_id(0);
    group_sizze_97998 = get_local_size(0);
    wave_sizze_97997 = LOCKSTEP_WIDTH;
    group_id_89794 = get_group_id(0);
    j_89777 = global_tid_89792;
    thread_active_97999 = slt32(j_89777, nesting_sizze_86802);
    
    int32_t y_89775;
    int32_t group_id_89782;
    char cond_89783;
    int32_t final_result_89785;
    
    if (thread_active_97999) {
        y_89775 = *(__global int32_t *) &mem_97397[j_89777 * 4];
        group_id_89782 = squot32(j_89777, y_89720);
        cond_89783 = 0 == group_id_89782;
        if (cond_89783) {
            final_result_89785 = y_89775;
        } else {
            int32_t carry_in_index_89784;
            int32_t x_89774;
            int32_t zz_89776;
            
            carry_in_index_89784 = group_id_89782 - 1;
            x_89774 = *(__global int32_t *) &mem_97446[carry_in_index_89784 *
                                                       4];
            zz_89776 = x_89774 + y_89775;
            final_result_89785 = zz_89776;
        }
    }
    if (thread_active_97999) {
        *(__global int32_t *) &mem_97449[j_89777 * 4] = final_result_89785;
    }
}
__kernel void map_kernel_89802(int32_t sizze_73917, int32_t rowOffset_73923,
                               int32_t partition_sizze_78210,
                               int32_t nesting_sizze_86802, __global
                               unsigned char *mem_97038, __global
                               unsigned char *mem_97400, __global
                               unsigned char *mem_97403, __global
                               unsigned char *mem_97406, __global
                               unsigned char *mem_97409, __global
                               unsigned char *mem_97411, __global
                               unsigned char *mem_97449, __global
                               unsigned char *mem_97452, __global
                               unsigned char *mem_97455, __global
                               unsigned char *mem_97458, __global
                               unsigned char *mem_97461, __global
                               unsigned char *mem_97463, __global
                               unsigned char *mem_97466)
{
    int32_t wave_sizze_98000;
    int32_t group_sizze_98001;
    char thread_active_98002;
    int32_t write_i_89795;
    int32_t global_tid_89802;
    int32_t local_tid_89803;
    int32_t group_id_89804;
    
    global_tid_89802 = get_global_id(0);
    local_tid_89803 = get_local_id(0);
    group_sizze_98001 = get_local_size(0);
    wave_sizze_98000 = LOCKSTEP_WIDTH;
    group_id_89804 = get_group_id(0);
    write_i_89795 = global_tid_89802;
    thread_active_98002 = slt32(write_i_89795, nesting_sizze_86802);
    
    int32_t c_78225;
    int32_t offset_78226;
    int32_t new_index_96968;
    int32_t binop_y_96970;
    int32_t new_index_96971;
    double v_78227;
    int16_t v_78228;
    int16_t v_78229;
    double v_78230;
    char v_78231;
    int32_t res_78233;
    char is_this_one_78234;
    int32_t this_offset_78235;
    int32_t total_res_78236;
    
    if (thread_active_98002) {
        c_78225 = *(__global int32_t *) &mem_97400[write_i_89795 * 4];
        offset_78226 = *(__global int32_t *) &mem_97449[write_i_89795 * 4];
        new_index_96968 = squot32(write_i_89795, sizze_73917);
        binop_y_96970 = new_index_96968 * sizze_73917;
        new_index_96971 = write_i_89795 - binop_y_96970;
        v_78227 = *(__global double *) &mem_97038[(new_index_96968 *
                                                   sizze_73917 +
                                                   new_index_96971) * 8];
        v_78228 = *(__global int16_t *) &mem_97403[write_i_89795 * 2];
        v_78229 = *(__global int16_t *) &mem_97406[write_i_89795 * 2];
        v_78230 = *(__global double *) &mem_97409[write_i_89795 * 8];
        v_78231 = *(__global char *) &mem_97411[write_i_89795];
        res_78233 = write_i_89795 + rowOffset_73923;
        is_this_one_78234 = c_78225 == 0;
        this_offset_78235 = offset_78226 + -1;
        if (is_this_one_78234) {
            total_res_78236 = this_offset_78235;
        } else {
            total_res_78236 = -1;
        }
    }
    if (thread_active_98002 && (sle32(0, total_res_78236) &&
                                slt32(total_res_78236,
                                      partition_sizze_78210))) {
        *(__global double *) &mem_97452[total_res_78236 * 8] = v_78227;
    }
    if (thread_active_98002 && (sle32(0, total_res_78236) &&
                                slt32(total_res_78236,
                                      partition_sizze_78210))) {
        *(__global int16_t *) &mem_97455[total_res_78236 * 2] = v_78228;
    }
    if (thread_active_98002 && (sle32(0, total_res_78236) &&
                                slt32(total_res_78236,
                                      partition_sizze_78210))) {
        *(__global int16_t *) &mem_97458[total_res_78236 * 2] = v_78229;
    }
    if (thread_active_98002 && (sle32(0, total_res_78236) &&
                                slt32(total_res_78236,
                                      partition_sizze_78210))) {
        *(__global double *) &mem_97461[total_res_78236 * 8] = v_78230;
    }
    if (thread_active_98002 && (sle32(0, total_res_78236) &&
                                slt32(total_res_78236,
                                      partition_sizze_78210))) {
        *(__global char *) &mem_97463[total_res_78236] = v_78231;
    }
    if (thread_active_98002 && (sle32(0, total_res_78236) &&
                                slt32(total_res_78236,
                                      partition_sizze_78210))) {
        *(__global int32_t *) &mem_97466[total_res_78236 * 4] = res_78233;
    }
}
__kernel void map_kernel_89816(int32_t num_elems_74001, int32_t res_74005,
                               int32_t y_74006, int32_t x_78237, __global
                               unsigned char *mem_97674, __global
                               unsigned char *mem_97678, __global
                               unsigned char *mem_97682)
{
    int32_t wave_sizze_98066;
    int32_t group_sizze_98067;
    char thread_active_98068;
    int32_t gtid_89807;
    int32_t gtid_89808;
    int32_t global_tid_89816;
    int32_t local_tid_89817;
    int32_t group_id_89818;
    
    global_tid_89816 = get_global_id(0);
    local_tid_89817 = get_local_id(0);
    group_sizze_98067 = get_local_size(0);
    wave_sizze_98066 = LOCKSTEP_WIDTH;
    group_id_89818 = get_group_id(0);
    gtid_89807 = squot32(global_tid_89816, num_elems_74001);
    gtid_89808 = global_tid_89816 - squot32(global_tid_89816, num_elems_74001) *
        num_elems_74001;
    thread_active_98068 = slt32(gtid_89807, x_78237) && slt32(gtid_89808,
                                                              num_elems_74001);
    
    int16_t x_89819;
    int16_t x_89820;
    int32_t x_89821;
    int32_t x_89822;
    int32_t x_89823;
    int32_t x_89824;
    int32_t y_89825;
    int32_t res_89826;
    
    if (thread_active_98068) {
        x_89819 = *(__global int16_t *) &mem_97674[(gtid_89807 *
                                                    num_elems_74001 +
                                                    gtid_89808) * 2];
        x_89820 = *(__global int16_t *) &mem_97678[(gtid_89807 *
                                                    num_elems_74001 +
                                                    gtid_89808) * 2];
        x_89821 = sext_i16_i32(x_89819);
        x_89822 = x_89821 + res_74005;
        x_89823 = sext_i16_i32(x_89820);
        x_89824 = x_89823 + res_74005;
        y_89825 = x_89824 * y_74006;
        res_89826 = x_89822 + y_89825;
    }
    if (thread_active_98068) {
        *(__global int32_t *) &mem_97682[(gtid_89807 * num_elems_74001 +
                                          gtid_89808) * 4] = res_89826;
    }
}
__kernel void map_kernel_89837(int32_t num_elems_74001, int32_t x_78237,
                               __global unsigned char *mem_97466, __global
                               unsigned char *mem_97670)
{
    int32_t wave_sizze_98063;
    int32_t group_sizze_98064;
    char thread_active_98065;
    int32_t gtid_89828;
    int32_t gtid_89829;
    int32_t global_tid_89837;
    int32_t local_tid_89838;
    int32_t group_id_89839;
    
    global_tid_89837 = get_global_id(0);
    local_tid_89838 = get_local_id(0);
    group_sizze_98064 = get_local_size(0);
    wave_sizze_98063 = LOCKSTEP_WIDTH;
    group_id_89839 = get_group_id(0);
    gtid_89828 = squot32(global_tid_89837, num_elems_74001);
    gtid_89829 = global_tid_89837 - squot32(global_tid_89837, num_elems_74001) *
        num_elems_74001;
    thread_active_98065 = slt32(gtid_89828, x_78237) && slt32(gtid_89829,
                                                              num_elems_74001);
    
    int32_t x_89840;
    
    if (thread_active_98065) {
        x_89840 = *(__global int32_t *) &mem_97466[gtid_89828 * 4];
    }
    if (thread_active_98065) {
        *(__global int32_t *) &mem_97670[(gtid_89828 * num_elems_74001 +
                                          gtid_89829) * 4] = x_89840;
    }
}
__kernel void map_kernel_89881(double delta_73922, int32_t num_elems_74001,
                               int32_t x_78237, __global
                               unsigned char *mem_97461, __global
                               unsigned char *mem_97463, __global
                               unsigned char *mem_97469, __global
                               unsigned char *mem_97472, __global
                               unsigned char *mem_97474, __global
                               unsigned char *mem_97477, __global
                               unsigned char *mem_97480, __global
                               unsigned char *mem_97483, __global
                               unsigned char *mem_97486, __global
                               unsigned char *mem_97489, __global
                               unsigned char *mem_97492, __global
                               unsigned char *mem_97495, __global
                               unsigned char *mem_97498, __global
                               unsigned char *mem_97658, __global
                               unsigned char *mem_97662, __global
                               unsigned char *mem_97666)
{
    int32_t wave_sizze_98006;
    int32_t group_sizze_98007;
    char thread_active_98008;
    int32_t gtid_89874;
    int32_t global_tid_89881;
    int32_t local_tid_89882;
    int32_t group_id_89883;
    
    global_tid_89881 = get_global_id(0);
    local_tid_89882 = get_local_id(0);
    group_sizze_98007 = get_local_size(0);
    wave_sizze_98006 = LOCKSTEP_WIDTH;
    group_id_89883 = get_group_id(0);
    gtid_89874 = global_tid_89881;
    thread_active_98008 = slt32(gtid_89874, x_78237);
    
    double x_89884;
    char x_89885;
    int16_t res_89886;
    int16_t res_89887;
    char res_89888;
    int16_t res_89889;
    int16_t res_89890;
    int16_t res_89891;
    int16_t res_89892;
    double res_89893;
    double x_89897;
    double y_89898;
    double res_89899;
    double res_89900;
    double y_89901;
    double res_89902;
    char cond_89903;
    double x_89904;
    char cond_89905;
    int16_t arg_89906;
    int16_t arg_89907;
    double arg_89908;
    double x_89909;
    double x_89910;
    double x_89911;
    double lw_val_89912;
    
    if (thread_active_98008) {
        x_89884 = *(__global double *) &mem_97461[gtid_89874 * 8];
        x_89885 = *(__global char *) &mem_97463[gtid_89874];
        res_89886 = *(__global int16_t *) &mem_97469[gtid_89874 * 2];
        res_89887 = *(__global int16_t *) &mem_97472[gtid_89874 * 2];
        res_89888 = *(__global char *) &mem_97474[gtid_89874];
        res_89889 = *(__global int16_t *) &mem_97477[gtid_89874 * 2];
        res_89890 = *(__global int16_t *) &mem_97480[gtid_89874 * 2];
        res_89891 = *(__global int16_t *) &mem_97483[gtid_89874 * 2];
        res_89892 = *(__global int16_t *) &mem_97486[gtid_89874 * 2];
        res_89893 = *(__global double *) &mem_97489[gtid_89874 * 8];
        for (int32_t i_98009 = 0; i_98009 < num_elems_74001; i_98009++) {
            *(__global int16_t *) &mem_97492[(group_id_89883 *
                                              (num_elems_74001 *
                                               group_sizze_89876) + i_98009 *
                                              group_sizze_89876 +
                                              local_tid_89882) * 2] = 0;
        }
        for (int32_t i_98010 = 0; i_98010 < num_elems_74001; i_98010++) {
            *(__global int16_t *) &mem_97495[(group_id_89883 *
                                              (num_elems_74001 *
                                               group_sizze_89876) + i_98010 *
                                              group_sizze_89876 +
                                              local_tid_89882) * 2] = 0;
        }
        for (int32_t i_98011 = 0; i_98011 < num_elems_74001; i_98011++) {
            *(__global double *) &mem_97498[(group_id_89883 * (num_elems_74001 *
                                                               group_sizze_89876) +
                                             i_98011 * group_sizze_89876 +
                                             local_tid_89882) * 8] = -1.0;
        }
        x_89897 = futrts_sin64(res_89893);
        y_89898 = futrts_cos64(res_89893);
        res_89899 = x_89897 / y_89898;
        res_89900 = delta_73922 * res_89899;
        y_89901 = futrts_cos64(res_89893);
        res_89902 = delta_73922 / y_89901;
        cond_89903 = !x_89885;
        x_89904 = x_89884 + res_89900;
        cond_89905 = x_89904 < delta_73922;
        arg_89906 = res_89891 + res_89886;
        arg_89907 = res_89892 + res_89887;
        arg_89908 = x_89904 - delta_73922;
        x_89909 = res_89900 - delta_73922;
        x_89910 = x_89909 + x_89884;
        x_89911 = x_89910 / res_89900;
        lw_val_89912 = x_89911 * res_89902;
        if (res_89888) {
            if (cond_89903) {
                if (cond_89905) {
                    char res_89922;
                    int16_t res_89923;
                    int16_t res_89924;
                    double res_89925;
                    int32_t res_89926;
                    char loop_while_89930;
                    int16_t x_89931;
                    int16_t y_89932;
                    double chi_89933;
                    int32_t i_89934;
                    
                    loop_while_89930 = 1;
                    x_89931 = arg_89906;
                    y_89932 = res_89892;
                    chi_89933 = x_89904;
                    i_89934 = 0;
                    while (loop_while_89930) {
                        double x_89938 = chi_89933 + res_89900;
                        char cond_89939 = x_89938 < delta_73922;
                        int16_t res_89940;
                        int16_t res_89941;
                        double res_89942;
                        int32_t res_89943;
                        char res_89947;
                        
                        if (cond_89939) {
                            int16_t res_89948;
                            int32_t res_89949;
                            char not_arg_89953;
                            char res_89954;
                            
                            res_89948 = x_89931 + res_89886;
                            res_89949 = i_89934 + 1;
                            *(__global int16_t *) &mem_97492[(group_id_89883 *
                                                              (num_elems_74001 *
                                                               group_sizze_89876) +
                                                              i_89934 *
                                                              group_sizze_89876 +
                                                              local_tid_89882) *
                                                             2] = x_89931;
                            *(__global int16_t *) &mem_97495[(group_id_89883 *
                                                              (num_elems_74001 *
                                                               group_sizze_89876) +
                                                              i_89934 *
                                                              group_sizze_89876 +
                                                              local_tid_89882) *
                                                             2] = y_89932;
                            *(__global double *) &mem_97498[(group_id_89883 *
                                                             (num_elems_74001 *
                                                              group_sizze_89876) +
                                                             i_89934 *
                                                             group_sizze_89876 +
                                                             local_tid_89882) *
                                                            8] = res_89902;
                            not_arg_89953 = res_89948 == res_89889;
                            res_89954 = !not_arg_89953;
                            res_89940 = res_89948;
                            res_89941 = y_89932;
                            res_89942 = x_89938;
                            res_89943 = res_89949;
                            res_89947 = res_89954;
                        } else {
                            int16_t x_89955;
                            char cond_89956;
                            int16_t res_89957;
                            int16_t res_89958;
                            double res_89959;
                            int32_t res_89960;
                            char res_89964;
                            
                            x_89955 = y_89932 + res_89887;
                            cond_89956 = x_89955 == res_89890;
                            if (cond_89956) {
                                double x_89965;
                                double x_89966;
                                double lw_val_89967;
                                
                                x_89965 = delta_73922 - chi_89933;
                                x_89966 = x_89965 / res_89900;
                                lw_val_89967 = x_89966 * res_89902;
                                *(__global
                                  int16_t *) &mem_97492[(group_id_89883 *
                                                         (num_elems_74001 *
                                                          group_sizze_89876) +
                                                         i_89934 *
                                                         group_sizze_89876 +
                                                         local_tid_89882) * 2] =
                                    x_89931;
                                *(__global
                                  int16_t *) &mem_97495[(group_id_89883 *
                                                         (num_elems_74001 *
                                                          group_sizze_89876) +
                                                         i_89934 *
                                                         group_sizze_89876 +
                                                         local_tid_89882) * 2] =
                                    y_89932;
                                *(__global
                                  double *) &mem_97498[(group_id_89883 *
                                                        (num_elems_74001 *
                                                         group_sizze_89876) +
                                                        i_89934 *
                                                        group_sizze_89876 +
                                                        local_tid_89882) * 8] =
                                    lw_val_89967;
                                res_89957 = x_89931;
                                res_89958 = y_89932;
                                res_89959 = chi_89933;
                                res_89960 = i_89934;
                                res_89964 = 0;
                            } else {
                                int16_t x_89971;
                                char cond_89972;
                                int16_t res_89973;
                                int16_t res_89974;
                                double res_89975;
                                int32_t res_89976;
                                char res_89980;
                                
                                x_89971 = x_89931 + res_89886;
                                cond_89972 = x_89971 == res_89889;
                                if (cond_89972) {
                                    res_89973 = x_89931;
                                } else {
                                    res_89973 = x_89971;
                                }
                                if (cond_89972) {
                                    res_89974 = y_89932;
                                } else {
                                    res_89974 = x_89955;
                                }
                                if (cond_89972) {
                                    double x_89981;
                                    double x_89982;
                                    double lw_val_89983;
                                    double x_89987;
                                    double x_89988;
                                    double lw_val_89989;
                                    int32_t i_89990;
                                    
                                    x_89981 = delta_73922 - chi_89933;
                                    x_89982 = x_89981 / res_89900;
                                    lw_val_89983 = x_89982 * res_89902;
                                    *(__global
                                      int16_t *) &mem_97492[(group_id_89883 *
                                                             (num_elems_74001 *
                                                              group_sizze_89876) +
                                                             i_89934 *
                                                             group_sizze_89876 +
                                                             local_tid_89882) *
                                                            2] = x_89931;
                                    *(__global
                                      int16_t *) &mem_97495[(group_id_89883 *
                                                             (num_elems_74001 *
                                                              group_sizze_89876) +
                                                             i_89934 *
                                                             group_sizze_89876 +
                                                             local_tid_89882) *
                                                            2] = y_89932;
                                    *(__global
                                      double *) &mem_97498[(group_id_89883 *
                                                            (num_elems_74001 *
                                                             group_sizze_89876) +
                                                            i_89934 *
                                                            group_sizze_89876 +
                                                            local_tid_89882) *
                                                           8] = lw_val_89983;
                                    x_89987 = x_89909 + chi_89933;
                                    x_89988 = x_89987 / res_89900;
                                    lw_val_89989 = x_89988 * res_89902;
                                    i_89990 = i_89934 + 1;
                                    *(__global
                                      int16_t *) &mem_97492[(group_id_89883 *
                                                             (num_elems_74001 *
                                                              group_sizze_89876) +
                                                             i_89990 *
                                                             group_sizze_89876 +
                                                             local_tid_89882) *
                                                            2] = x_89931;
                                    *(__global
                                      int16_t *) &mem_97495[(group_id_89883 *
                                                             (num_elems_74001 *
                                                              group_sizze_89876) +
                                                             i_89990 *
                                                             group_sizze_89876 +
                                                             local_tid_89882) *
                                                            2] = x_89955;
                                    *(__global
                                      double *) &mem_97498[(group_id_89883 *
                                                            (num_elems_74001 *
                                                             group_sizze_89876) +
                                                            i_89990 *
                                                            group_sizze_89876 +
                                                            local_tid_89882) *
                                                           8] = lw_val_89989;
                                    res_89975 = chi_89933;
                                    res_89976 = i_89934;
                                    res_89980 = 0;
                                } else {
                                    double res_89994;
                                    int32_t res_89995;
                                    double x_89996;
                                    double x_89997;
                                    double lw_val_89998;
                                    double x_90002;
                                    double x_90003;
                                    double lw_val_90004;
                                    int32_t i_90005;
                                    char x_90009;
                                    char y_90010;
                                    char not_arg_90011;
                                    char res_90012;
                                    
                                    res_89994 = x_89938 - delta_73922;
                                    res_89995 = i_89934 + 2;
                                    x_89996 = delta_73922 - chi_89933;
                                    x_89997 = x_89996 / res_89900;
                                    lw_val_89998 = x_89997 * res_89902;
                                    *(__global
                                      int16_t *) &mem_97492[(group_id_89883 *
                                                             (num_elems_74001 *
                                                              group_sizze_89876) +
                                                             i_89934 *
                                                             group_sizze_89876 +
                                                             local_tid_89882) *
                                                            2] = x_89931;
                                    *(__global
                                      int16_t *) &mem_97495[(group_id_89883 *
                                                             (num_elems_74001 *
                                                              group_sizze_89876) +
                                                             i_89934 *
                                                             group_sizze_89876 +
                                                             local_tid_89882) *
                                                            2] = y_89932;
                                    *(__global
                                      double *) &mem_97498[(group_id_89883 *
                                                            (num_elems_74001 *
                                                             group_sizze_89876) +
                                                            i_89934 *
                                                            group_sizze_89876 +
                                                            local_tid_89882) *
                                                           8] = lw_val_89998;
                                    x_90002 = x_89909 + chi_89933;
                                    x_90003 = x_90002 / res_89900;
                                    lw_val_90004 = x_90003 * res_89902;
                                    i_90005 = i_89934 + 1;
                                    *(__global
                                      int16_t *) &mem_97492[(group_id_89883 *
                                                             (num_elems_74001 *
                                                              group_sizze_89876) +
                                                             i_90005 *
                                                             group_sizze_89876 +
                                                             local_tid_89882) *
                                                            2] = x_89931;
                                    *(__global
                                      int16_t *) &mem_97495[(group_id_89883 *
                                                             (num_elems_74001 *
                                                              group_sizze_89876) +
                                                             i_90005 *
                                                             group_sizze_89876 +
                                                             local_tid_89882) *
                                                            2] = x_89955;
                                    *(__global
                                      double *) &mem_97498[(group_id_89883 *
                                                            (num_elems_74001 *
                                                             group_sizze_89876) +
                                                            i_90005 *
                                                            group_sizze_89876 +
                                                            local_tid_89882) *
                                                           8] = lw_val_90004;
                                    x_90009 = !cond_89972;
                                    y_90010 = x_90009 && cond_89956;
                                    not_arg_90011 = cond_89972 || y_90010;
                                    res_90012 = !not_arg_90011;
                                    res_89975 = res_89994;
                                    res_89976 = res_89995;
                                    res_89980 = res_90012;
                                }
                                res_89957 = res_89973;
                                res_89958 = res_89974;
                                res_89959 = res_89975;
                                res_89960 = res_89976;
                                res_89964 = res_89980;
                            }
                            res_89940 = res_89957;
                            res_89941 = res_89958;
                            res_89942 = res_89959;
                            res_89943 = res_89960;
                            res_89947 = res_89964;
                        }
                        
                        char loop_while_tmp_98012 = res_89947;
                        int16_t x_tmp_98013 = res_89940;
                        int16_t y_tmp_98014 = res_89941;
                        double chi_tmp_98015 = res_89942;
                        int32_t i_tmp_98016;
                        
                        i_tmp_98016 = res_89943;
                        loop_while_89930 = loop_while_tmp_98012;
                        x_89931 = x_tmp_98013;
                        y_89932 = y_tmp_98014;
                        chi_89933 = chi_tmp_98015;
                        i_89934 = i_tmp_98016;
                    }
                    res_89922 = loop_while_89930;
                    res_89923 = x_89931;
                    res_89924 = y_89932;
                    res_89925 = chi_89933;
                    res_89926 = i_89934;
                } else {
                    char res_90016;
                    int16_t res_90017;
                    int16_t res_90018;
                    double res_90019;
                    int32_t res_90020;
                    
                    *(__global int16_t *) &mem_97492[(group_id_89883 *
                                                      (num_elems_74001 *
                                                       group_sizze_89876) +
                                                      local_tid_89882) * 2] =
                        res_89891;
                    *(__global int16_t *) &mem_97495[(group_id_89883 *
                                                      (num_elems_74001 *
                                                       group_sizze_89876) +
                                                      local_tid_89882) * 2] =
                        arg_89907;
                    *(__global double *) &mem_97498[(group_id_89883 *
                                                     (num_elems_74001 *
                                                      group_sizze_89876) +
                                                     local_tid_89882) * 8] =
                        lw_val_89912;
                    
                    char loop_while_90024;
                    int16_t x_90025;
                    int16_t y_90026;
                    double chi_90027;
                    int32_t i_90028;
                    
                    loop_while_90024 = 1;
                    x_90025 = arg_89906;
                    y_90026 = arg_89907;
                    chi_90027 = arg_89908;
                    i_90028 = 1;
                    while (loop_while_90024) {
                        double x_90032 = chi_90027 + res_89900;
                        char cond_90033 = x_90032 < delta_73922;
                        int16_t res_90034;
                        int16_t res_90035;
                        double res_90036;
                        int32_t res_90037;
                        char res_90041;
                        
                        if (cond_90033) {
                            int16_t res_90042;
                            int32_t res_90043;
                            char not_arg_90047;
                            char res_90048;
                            
                            res_90042 = x_90025 + res_89886;
                            res_90043 = i_90028 + 1;
                            *(__global int16_t *) &mem_97492[(group_id_89883 *
                                                              (num_elems_74001 *
                                                               group_sizze_89876) +
                                                              i_90028 *
                                                              group_sizze_89876 +
                                                              local_tid_89882) *
                                                             2] = x_90025;
                            *(__global int16_t *) &mem_97495[(group_id_89883 *
                                                              (num_elems_74001 *
                                                               group_sizze_89876) +
                                                              i_90028 *
                                                              group_sizze_89876 +
                                                              local_tid_89882) *
                                                             2] = y_90026;
                            *(__global double *) &mem_97498[(group_id_89883 *
                                                             (num_elems_74001 *
                                                              group_sizze_89876) +
                                                             i_90028 *
                                                             group_sizze_89876 +
                                                             local_tid_89882) *
                                                            8] = res_89902;
                            not_arg_90047 = res_90042 == res_89889;
                            res_90048 = !not_arg_90047;
                            res_90034 = res_90042;
                            res_90035 = y_90026;
                            res_90036 = x_90032;
                            res_90037 = res_90043;
                            res_90041 = res_90048;
                        } else {
                            int16_t x_90049;
                            char cond_90050;
                            int16_t res_90051;
                            int16_t res_90052;
                            double res_90053;
                            int32_t res_90054;
                            char res_90058;
                            
                            x_90049 = y_90026 + res_89887;
                            cond_90050 = x_90049 == res_89890;
                            if (cond_90050) {
                                double x_90059;
                                double x_90060;
                                double lw_val_90061;
                                
                                x_90059 = delta_73922 - chi_90027;
                                x_90060 = x_90059 / res_89900;
                                lw_val_90061 = x_90060 * res_89902;
                                *(__global
                                  int16_t *) &mem_97492[(group_id_89883 *
                                                         (num_elems_74001 *
                                                          group_sizze_89876) +
                                                         i_90028 *
                                                         group_sizze_89876 +
                                                         local_tid_89882) * 2] =
                                    x_90025;
                                *(__global
                                  int16_t *) &mem_97495[(group_id_89883 *
                                                         (num_elems_74001 *
                                                          group_sizze_89876) +
                                                         i_90028 *
                                                         group_sizze_89876 +
                                                         local_tid_89882) * 2] =
                                    y_90026;
                                *(__global
                                  double *) &mem_97498[(group_id_89883 *
                                                        (num_elems_74001 *
                                                         group_sizze_89876) +
                                                        i_90028 *
                                                        group_sizze_89876 +
                                                        local_tid_89882) * 8] =
                                    lw_val_90061;
                                res_90051 = x_90025;
                                res_90052 = y_90026;
                                res_90053 = chi_90027;
                                res_90054 = i_90028;
                                res_90058 = 0;
                            } else {
                                int16_t x_90065;
                                char cond_90066;
                                int16_t res_90067;
                                int16_t res_90068;
                                double res_90069;
                                int32_t res_90070;
                                char res_90074;
                                
                                x_90065 = x_90025 + res_89886;
                                cond_90066 = x_90065 == res_89889;
                                if (cond_90066) {
                                    res_90067 = x_90025;
                                } else {
                                    res_90067 = x_90065;
                                }
                                if (cond_90066) {
                                    res_90068 = y_90026;
                                } else {
                                    res_90068 = x_90049;
                                }
                                if (cond_90066) {
                                    double x_90075;
                                    double x_90076;
                                    double lw_val_90077;
                                    double x_90081;
                                    double x_90082;
                                    double lw_val_90083;
                                    int32_t i_90084;
                                    
                                    x_90075 = delta_73922 - chi_90027;
                                    x_90076 = x_90075 / res_89900;
                                    lw_val_90077 = x_90076 * res_89902;
                                    *(__global
                                      int16_t *) &mem_97492[(group_id_89883 *
                                                             (num_elems_74001 *
                                                              group_sizze_89876) +
                                                             i_90028 *
                                                             group_sizze_89876 +
                                                             local_tid_89882) *
                                                            2] = x_90025;
                                    *(__global
                                      int16_t *) &mem_97495[(group_id_89883 *
                                                             (num_elems_74001 *
                                                              group_sizze_89876) +
                                                             i_90028 *
                                                             group_sizze_89876 +
                                                             local_tid_89882) *
                                                            2] = y_90026;
                                    *(__global
                                      double *) &mem_97498[(group_id_89883 *
                                                            (num_elems_74001 *
                                                             group_sizze_89876) +
                                                            i_90028 *
                                                            group_sizze_89876 +
                                                            local_tid_89882) *
                                                           8] = lw_val_90077;
                                    x_90081 = x_89909 + chi_90027;
                                    x_90082 = x_90081 / res_89900;
                                    lw_val_90083 = x_90082 * res_89902;
                                    i_90084 = i_90028 + 1;
                                    *(__global
                                      int16_t *) &mem_97492[(group_id_89883 *
                                                             (num_elems_74001 *
                                                              group_sizze_89876) +
                                                             i_90084 *
                                                             group_sizze_89876 +
                                                             local_tid_89882) *
                                                            2] = x_90025;
                                    *(__global
                                      int16_t *) &mem_97495[(group_id_89883 *
                                                             (num_elems_74001 *
                                                              group_sizze_89876) +
                                                             i_90084 *
                                                             group_sizze_89876 +
                                                             local_tid_89882) *
                                                            2] = x_90049;
                                    *(__global
                                      double *) &mem_97498[(group_id_89883 *
                                                            (num_elems_74001 *
                                                             group_sizze_89876) +
                                                            i_90084 *
                                                            group_sizze_89876 +
                                                            local_tid_89882) *
                                                           8] = lw_val_90083;
                                    res_90069 = chi_90027;
                                    res_90070 = i_90028;
                                    res_90074 = 0;
                                } else {
                                    double res_90088;
                                    int32_t res_90089;
                                    double x_90090;
                                    double x_90091;
                                    double lw_val_90092;
                                    double x_90096;
                                    double x_90097;
                                    double lw_val_90098;
                                    int32_t i_90099;
                                    char x_90103;
                                    char y_90104;
                                    char not_arg_90105;
                                    char res_90106;
                                    
                                    res_90088 = x_90032 - delta_73922;
                                    res_90089 = i_90028 + 2;
                                    x_90090 = delta_73922 - chi_90027;
                                    x_90091 = x_90090 / res_89900;
                                    lw_val_90092 = x_90091 * res_89902;
                                    *(__global
                                      int16_t *) &mem_97492[(group_id_89883 *
                                                             (num_elems_74001 *
                                                              group_sizze_89876) +
                                                             i_90028 *
                                                             group_sizze_89876 +
                                                             local_tid_89882) *
                                                            2] = x_90025;
                                    *(__global
                                      int16_t *) &mem_97495[(group_id_89883 *
                                                             (num_elems_74001 *
                                                              group_sizze_89876) +
                                                             i_90028 *
                                                             group_sizze_89876 +
                                                             local_tid_89882) *
                                                            2] = y_90026;
                                    *(__global
                                      double *) &mem_97498[(group_id_89883 *
                                                            (num_elems_74001 *
                                                             group_sizze_89876) +
                                                            i_90028 *
                                                            group_sizze_89876 +
                                                            local_tid_89882) *
                                                           8] = lw_val_90092;
                                    x_90096 = x_89909 + chi_90027;
                                    x_90097 = x_90096 / res_89900;
                                    lw_val_90098 = x_90097 * res_89902;
                                    i_90099 = i_90028 + 1;
                                    *(__global
                                      int16_t *) &mem_97492[(group_id_89883 *
                                                             (num_elems_74001 *
                                                              group_sizze_89876) +
                                                             i_90099 *
                                                             group_sizze_89876 +
                                                             local_tid_89882) *
                                                            2] = x_90025;
                                    *(__global
                                      int16_t *) &mem_97495[(group_id_89883 *
                                                             (num_elems_74001 *
                                                              group_sizze_89876) +
                                                             i_90099 *
                                                             group_sizze_89876 +
                                                             local_tid_89882) *
                                                            2] = x_90049;
                                    *(__global
                                      double *) &mem_97498[(group_id_89883 *
                                                            (num_elems_74001 *
                                                             group_sizze_89876) +
                                                            i_90099 *
                                                            group_sizze_89876 +
                                                            local_tid_89882) *
                                                           8] = lw_val_90098;
                                    x_90103 = !cond_90066;
                                    y_90104 = x_90103 && cond_90050;
                                    not_arg_90105 = cond_90066 || y_90104;
                                    res_90106 = !not_arg_90105;
                                    res_90069 = res_90088;
                                    res_90070 = res_90089;
                                    res_90074 = res_90106;
                                }
                                res_90051 = res_90067;
                                res_90052 = res_90068;
                                res_90053 = res_90069;
                                res_90054 = res_90070;
                                res_90058 = res_90074;
                            }
                            res_90034 = res_90051;
                            res_90035 = res_90052;
                            res_90036 = res_90053;
                            res_90037 = res_90054;
                            res_90041 = res_90058;
                        }
                        
                        char loop_while_tmp_98020 = res_90041;
                        int16_t x_tmp_98021 = res_90034;
                        int16_t y_tmp_98022 = res_90035;
                        double chi_tmp_98023 = res_90036;
                        int32_t i_tmp_98024;
                        
                        i_tmp_98024 = res_90037;
                        loop_while_90024 = loop_while_tmp_98020;
                        x_90025 = x_tmp_98021;
                        y_90026 = y_tmp_98022;
                        chi_90027 = chi_tmp_98023;
                        i_90028 = i_tmp_98024;
                    }
                    res_90016 = loop_while_90024;
                    res_90017 = x_90025;
                    res_90018 = y_90026;
                    res_90019 = chi_90027;
                    res_90020 = i_90028;
                }
            } else {
                char res_90107;
                int16_t res_90108;
                int16_t res_90109;
                double res_90110;
                int32_t res_90111;
                char loop_while_90115;
                int16_t x_90116;
                int16_t y_90117;
                double chi_90118;
                int32_t i_90119;
                
                loop_while_90115 = 1;
                x_90116 = res_89891;
                y_90117 = res_89892;
                chi_90118 = x_89884;
                i_90119 = 0;
                while (loop_while_90115) {
                    double x_90123 = chi_90118 + res_89900;
                    char cond_90124 = x_90123 < delta_73922;
                    int16_t res_90125;
                    int16_t res_90126;
                    double res_90127;
                    int32_t res_90128;
                    char res_90132;
                    
                    if (cond_90124) {
                        int16_t res_90133;
                        int32_t res_90134;
                        char not_arg_90138;
                        char res_90139;
                        
                        res_90133 = x_90116 + res_89886;
                        res_90134 = i_90119 + 1;
                        *(__global int16_t *) &mem_97492[(group_id_89883 *
                                                          (num_elems_74001 *
                                                           group_sizze_89876) +
                                                          i_90119 *
                                                          group_sizze_89876 +
                                                          local_tid_89882) *
                                                         2] = x_90116;
                        *(__global int16_t *) &mem_97495[(group_id_89883 *
                                                          (num_elems_74001 *
                                                           group_sizze_89876) +
                                                          i_90119 *
                                                          group_sizze_89876 +
                                                          local_tid_89882) *
                                                         2] = y_90117;
                        *(__global double *) &mem_97498[(group_id_89883 *
                                                         (num_elems_74001 *
                                                          group_sizze_89876) +
                                                         i_90119 *
                                                         group_sizze_89876 +
                                                         local_tid_89882) * 8] =
                            res_89902;
                        not_arg_90138 = res_90133 == res_89889;
                        res_90139 = !not_arg_90138;
                        res_90125 = res_90133;
                        res_90126 = y_90117;
                        res_90127 = x_90123;
                        res_90128 = res_90134;
                        res_90132 = res_90139;
                    } else {
                        int16_t x_90140;
                        char cond_90141;
                        int16_t res_90142;
                        int16_t res_90143;
                        double res_90144;
                        int32_t res_90145;
                        char res_90149;
                        
                        x_90140 = y_90117 + res_89887;
                        cond_90141 = x_90140 == res_89890;
                        if (cond_90141) {
                            double x_90150;
                            double x_90151;
                            double lw_val_90152;
                            
                            x_90150 = delta_73922 - chi_90118;
                            x_90151 = x_90150 / res_89900;
                            lw_val_90152 = x_90151 * res_89902;
                            *(__global int16_t *) &mem_97492[(group_id_89883 *
                                                              (num_elems_74001 *
                                                               group_sizze_89876) +
                                                              i_90119 *
                                                              group_sizze_89876 +
                                                              local_tid_89882) *
                                                             2] = x_90116;
                            *(__global int16_t *) &mem_97495[(group_id_89883 *
                                                              (num_elems_74001 *
                                                               group_sizze_89876) +
                                                              i_90119 *
                                                              group_sizze_89876 +
                                                              local_tid_89882) *
                                                             2] = y_90117;
                            *(__global double *) &mem_97498[(group_id_89883 *
                                                             (num_elems_74001 *
                                                              group_sizze_89876) +
                                                             i_90119 *
                                                             group_sizze_89876 +
                                                             local_tid_89882) *
                                                            8] = lw_val_90152;
                            res_90142 = x_90116;
                            res_90143 = y_90117;
                            res_90144 = chi_90118;
                            res_90145 = i_90119;
                            res_90149 = 0;
                        } else {
                            int16_t x_90156;
                            char cond_90157;
                            int16_t res_90158;
                            int16_t res_90159;
                            double res_90160;
                            int32_t res_90161;
                            char res_90165;
                            
                            x_90156 = x_90116 + res_89886;
                            cond_90157 = x_90156 == res_89889;
                            if (cond_90157) {
                                res_90158 = x_90116;
                            } else {
                                res_90158 = x_90156;
                            }
                            if (cond_90157) {
                                res_90159 = y_90117;
                            } else {
                                res_90159 = x_90140;
                            }
                            if (cond_90157) {
                                double x_90166;
                                double x_90167;
                                double lw_val_90168;
                                double x_90172;
                                double x_90173;
                                double lw_val_90174;
                                int32_t i_90175;
                                
                                x_90166 = delta_73922 - chi_90118;
                                x_90167 = x_90166 / res_89900;
                                lw_val_90168 = x_90167 * res_89902;
                                *(__global
                                  int16_t *) &mem_97492[(group_id_89883 *
                                                         (num_elems_74001 *
                                                          group_sizze_89876) +
                                                         i_90119 *
                                                         group_sizze_89876 +
                                                         local_tid_89882) * 2] =
                                    x_90116;
                                *(__global
                                  int16_t *) &mem_97495[(group_id_89883 *
                                                         (num_elems_74001 *
                                                          group_sizze_89876) +
                                                         i_90119 *
                                                         group_sizze_89876 +
                                                         local_tid_89882) * 2] =
                                    y_90117;
                                *(__global
                                  double *) &mem_97498[(group_id_89883 *
                                                        (num_elems_74001 *
                                                         group_sizze_89876) +
                                                        i_90119 *
                                                        group_sizze_89876 +
                                                        local_tid_89882) * 8] =
                                    lw_val_90168;
                                x_90172 = x_89909 + chi_90118;
                                x_90173 = x_90172 / res_89900;
                                lw_val_90174 = x_90173 * res_89902;
                                i_90175 = i_90119 + 1;
                                *(__global
                                  int16_t *) &mem_97492[(group_id_89883 *
                                                         (num_elems_74001 *
                                                          group_sizze_89876) +
                                                         i_90175 *
                                                         group_sizze_89876 +
                                                         local_tid_89882) * 2] =
                                    x_90116;
                                *(__global
                                  int16_t *) &mem_97495[(group_id_89883 *
                                                         (num_elems_74001 *
                                                          group_sizze_89876) +
                                                         i_90175 *
                                                         group_sizze_89876 +
                                                         local_tid_89882) * 2] =
                                    x_90140;
                                *(__global
                                  double *) &mem_97498[(group_id_89883 *
                                                        (num_elems_74001 *
                                                         group_sizze_89876) +
                                                        i_90175 *
                                                        group_sizze_89876 +
                                                        local_tid_89882) * 8] =
                                    lw_val_90174;
                                res_90160 = chi_90118;
                                res_90161 = i_90119;
                                res_90165 = 0;
                            } else {
                                double res_90179;
                                int32_t res_90180;
                                double x_90181;
                                double x_90182;
                                double lw_val_90183;
                                double x_90187;
                                double x_90188;
                                double lw_val_90189;
                                int32_t i_90190;
                                char x_90194;
                                char y_90195;
                                char not_arg_90196;
                                char res_90197;
                                
                                res_90179 = x_90123 - delta_73922;
                                res_90180 = i_90119 + 2;
                                x_90181 = delta_73922 - chi_90118;
                                x_90182 = x_90181 / res_89900;
                                lw_val_90183 = x_90182 * res_89902;
                                *(__global
                                  int16_t *) &mem_97492[(group_id_89883 *
                                                         (num_elems_74001 *
                                                          group_sizze_89876) +
                                                         i_90119 *
                                                         group_sizze_89876 +
                                                         local_tid_89882) * 2] =
                                    x_90116;
                                *(__global
                                  int16_t *) &mem_97495[(group_id_89883 *
                                                         (num_elems_74001 *
                                                          group_sizze_89876) +
                                                         i_90119 *
                                                         group_sizze_89876 +
                                                         local_tid_89882) * 2] =
                                    y_90117;
                                *(__global
                                  double *) &mem_97498[(group_id_89883 *
                                                        (num_elems_74001 *
                                                         group_sizze_89876) +
                                                        i_90119 *
                                                        group_sizze_89876 +
                                                        local_tid_89882) * 8] =
                                    lw_val_90183;
                                x_90187 = x_89909 + chi_90118;
                                x_90188 = x_90187 / res_89900;
                                lw_val_90189 = x_90188 * res_89902;
                                i_90190 = i_90119 + 1;
                                *(__global
                                  int16_t *) &mem_97492[(group_id_89883 *
                                                         (num_elems_74001 *
                                                          group_sizze_89876) +
                                                         i_90190 *
                                                         group_sizze_89876 +
                                                         local_tid_89882) * 2] =
                                    x_90116;
                                *(__global
                                  int16_t *) &mem_97495[(group_id_89883 *
                                                         (num_elems_74001 *
                                                          group_sizze_89876) +
                                                         i_90190 *
                                                         group_sizze_89876 +
                                                         local_tid_89882) * 2] =
                                    x_90140;
                                *(__global
                                  double *) &mem_97498[(group_id_89883 *
                                                        (num_elems_74001 *
                                                         group_sizze_89876) +
                                                        i_90190 *
                                                        group_sizze_89876 +
                                                        local_tid_89882) * 8] =
                                    lw_val_90189;
                                x_90194 = !cond_90157;
                                y_90195 = x_90194 && cond_90141;
                                not_arg_90196 = cond_90157 || y_90195;
                                res_90197 = !not_arg_90196;
                                res_90160 = res_90179;
                                res_90161 = res_90180;
                                res_90165 = res_90197;
                            }
                            res_90142 = res_90158;
                            res_90143 = res_90159;
                            res_90144 = res_90160;
                            res_90145 = res_90161;
                            res_90149 = res_90165;
                        }
                        res_90125 = res_90142;
                        res_90126 = res_90143;
                        res_90127 = res_90144;
                        res_90128 = res_90145;
                        res_90132 = res_90149;
                    }
                    
                    char loop_while_tmp_98028 = res_90132;
                    int16_t x_tmp_98029 = res_90125;
                    int16_t y_tmp_98030 = res_90126;
                    double chi_tmp_98031 = res_90127;
                    int32_t i_tmp_98032;
                    
                    i_tmp_98032 = res_90128;
                    loop_while_90115 = loop_while_tmp_98028;
                    x_90116 = x_tmp_98029;
                    y_90117 = y_tmp_98030;
                    chi_90118 = chi_tmp_98031;
                    i_90119 = i_tmp_98032;
                }
                res_90107 = loop_while_90115;
                res_90108 = x_90116;
                res_90109 = y_90117;
                res_90110 = chi_90118;
                res_90111 = i_90119;
            }
        } else {
            if (cond_89903) {
                if (cond_89905) {
                    char res_90204;
                    int16_t res_90205;
                    int16_t res_90206;
                    double res_90207;
                    int32_t res_90208;
                    char loop_while_90212;
                    int16_t x_90213;
                    int16_t y_90214;
                    double chi_90215;
                    int32_t i_90216;
                    
                    loop_while_90212 = 1;
                    x_90213 = res_89891;
                    y_90214 = arg_89907;
                    chi_90215 = x_89904;
                    i_90216 = 0;
                    while (loop_while_90212) {
                        double x_90220 = chi_90215 + res_89900;
                        char cond_90221 = x_90220 < delta_73922;
                        int16_t res_90222;
                        int16_t res_90223;
                        double res_90224;
                        int32_t res_90225;
                        char res_90229;
                        
                        if (cond_90221) {
                            int16_t res_90230;
                            int32_t res_90231;
                            char not_arg_90235;
                            char res_90236;
                            
                            res_90230 = y_90214 + res_89887;
                            res_90231 = i_90216 + 1;
                            *(__global int16_t *) &mem_97492[(group_id_89883 *
                                                              (num_elems_74001 *
                                                               group_sizze_89876) +
                                                              i_90216 *
                                                              group_sizze_89876 +
                                                              local_tid_89882) *
                                                             2] = x_90213;
                            *(__global int16_t *) &mem_97495[(group_id_89883 *
                                                              (num_elems_74001 *
                                                               group_sizze_89876) +
                                                              i_90216 *
                                                              group_sizze_89876 +
                                                              local_tid_89882) *
                                                             2] = y_90214;
                            *(__global double *) &mem_97498[(group_id_89883 *
                                                             (num_elems_74001 *
                                                              group_sizze_89876) +
                                                             i_90216 *
                                                             group_sizze_89876 +
                                                             local_tid_89882) *
                                                            8] = res_89902;
                            not_arg_90235 = res_90230 == res_89890;
                            res_90236 = !not_arg_90235;
                            res_90222 = x_90213;
                            res_90223 = res_90230;
                            res_90224 = x_90220;
                            res_90225 = res_90231;
                            res_90229 = res_90236;
                        } else {
                            int16_t x_90237;
                            char cond_90238;
                            int16_t res_90239;
                            int16_t res_90240;
                            double res_90241;
                            int32_t res_90242;
                            char res_90246;
                            
                            x_90237 = x_90213 + res_89886;
                            cond_90238 = x_90237 == res_89889;
                            if (cond_90238) {
                                double x_90247;
                                double x_90248;
                                double lw_val_90249;
                                
                                x_90247 = delta_73922 - chi_90215;
                                x_90248 = x_90247 / res_89900;
                                lw_val_90249 = x_90248 * res_89902;
                                *(__global
                                  int16_t *) &mem_97492[(group_id_89883 *
                                                         (num_elems_74001 *
                                                          group_sizze_89876) +
                                                         i_90216 *
                                                         group_sizze_89876 +
                                                         local_tid_89882) * 2] =
                                    x_90213;
                                *(__global
                                  int16_t *) &mem_97495[(group_id_89883 *
                                                         (num_elems_74001 *
                                                          group_sizze_89876) +
                                                         i_90216 *
                                                         group_sizze_89876 +
                                                         local_tid_89882) * 2] =
                                    y_90214;
                                *(__global
                                  double *) &mem_97498[(group_id_89883 *
                                                        (num_elems_74001 *
                                                         group_sizze_89876) +
                                                        i_90216 *
                                                        group_sizze_89876 +
                                                        local_tid_89882) * 8] =
                                    lw_val_90249;
                                res_90239 = x_90213;
                                res_90240 = y_90214;
                                res_90241 = chi_90215;
                                res_90242 = i_90216;
                                res_90246 = 0;
                            } else {
                                int16_t x_90253;
                                char cond_90254;
                                int16_t res_90255;
                                int16_t res_90256;
                                double res_90257;
                                int32_t res_90258;
                                char res_90262;
                                
                                x_90253 = y_90214 + res_89887;
                                cond_90254 = x_90253 == res_89890;
                                if (cond_90254) {
                                    res_90255 = x_90213;
                                } else {
                                    res_90255 = x_90237;
                                }
                                if (cond_90254) {
                                    res_90256 = y_90214;
                                } else {
                                    res_90256 = x_90253;
                                }
                                if (cond_90254) {
                                    double x_90263;
                                    double x_90264;
                                    double lw_val_90265;
                                    double x_90269;
                                    double x_90270;
                                    double lw_val_90271;
                                    int32_t i_90272;
                                    
                                    x_90263 = delta_73922 - chi_90215;
                                    x_90264 = x_90263 / res_89900;
                                    lw_val_90265 = x_90264 * res_89902;
                                    *(__global
                                      int16_t *) &mem_97492[(group_id_89883 *
                                                             (num_elems_74001 *
                                                              group_sizze_89876) +
                                                             i_90216 *
                                                             group_sizze_89876 +
                                                             local_tid_89882) *
                                                            2] = x_90213;
                                    *(__global
                                      int16_t *) &mem_97495[(group_id_89883 *
                                                             (num_elems_74001 *
                                                              group_sizze_89876) +
                                                             i_90216 *
                                                             group_sizze_89876 +
                                                             local_tid_89882) *
                                                            2] = y_90214;
                                    *(__global
                                      double *) &mem_97498[(group_id_89883 *
                                                            (num_elems_74001 *
                                                             group_sizze_89876) +
                                                            i_90216 *
                                                            group_sizze_89876 +
                                                            local_tid_89882) *
                                                           8] = lw_val_90265;
                                    x_90269 = x_89909 + chi_90215;
                                    x_90270 = x_90269 / res_89900;
                                    lw_val_90271 = x_90270 * res_89902;
                                    i_90272 = i_90216 + 1;
                                    *(__global
                                      int16_t *) &mem_97492[(group_id_89883 *
                                                             (num_elems_74001 *
                                                              group_sizze_89876) +
                                                             i_90272 *
                                                             group_sizze_89876 +
                                                             local_tid_89882) *
                                                            2] = x_90237;
                                    *(__global
                                      int16_t *) &mem_97495[(group_id_89883 *
                                                             (num_elems_74001 *
                                                              group_sizze_89876) +
                                                             i_90272 *
                                                             group_sizze_89876 +
                                                             local_tid_89882) *
                                                            2] = y_90214;
                                    *(__global
                                      double *) &mem_97498[(group_id_89883 *
                                                            (num_elems_74001 *
                                                             group_sizze_89876) +
                                                            i_90272 *
                                                            group_sizze_89876 +
                                                            local_tid_89882) *
                                                           8] = lw_val_90271;
                                    res_90257 = chi_90215;
                                    res_90258 = i_90216;
                                    res_90262 = 0;
                                } else {
                                    double res_90276;
                                    int32_t res_90277;
                                    double x_90278;
                                    double x_90279;
                                    double lw_val_90280;
                                    double x_90284;
                                    double x_90285;
                                    double lw_val_90286;
                                    int32_t i_90287;
                                    char x_90291;
                                    char y_90292;
                                    char not_arg_90293;
                                    char res_90294;
                                    
                                    res_90276 = x_90220 - delta_73922;
                                    res_90277 = i_90216 + 2;
                                    x_90278 = delta_73922 - chi_90215;
                                    x_90279 = x_90278 / res_89900;
                                    lw_val_90280 = x_90279 * res_89902;
                                    *(__global
                                      int16_t *) &mem_97492[(group_id_89883 *
                                                             (num_elems_74001 *
                                                              group_sizze_89876) +
                                                             i_90216 *
                                                             group_sizze_89876 +
                                                             local_tid_89882) *
                                                            2] = x_90213;
                                    *(__global
                                      int16_t *) &mem_97495[(group_id_89883 *
                                                             (num_elems_74001 *
                                                              group_sizze_89876) +
                                                             i_90216 *
                                                             group_sizze_89876 +
                                                             local_tid_89882) *
                                                            2] = y_90214;
                                    *(__global
                                      double *) &mem_97498[(group_id_89883 *
                                                            (num_elems_74001 *
                                                             group_sizze_89876) +
                                                            i_90216 *
                                                            group_sizze_89876 +
                                                            local_tid_89882) *
                                                           8] = lw_val_90280;
                                    x_90284 = x_89909 + chi_90215;
                                    x_90285 = x_90284 / res_89900;
                                    lw_val_90286 = x_90285 * res_89902;
                                    i_90287 = i_90216 + 1;
                                    *(__global
                                      int16_t *) &mem_97492[(group_id_89883 *
                                                             (num_elems_74001 *
                                                              group_sizze_89876) +
                                                             i_90287 *
                                                             group_sizze_89876 +
                                                             local_tid_89882) *
                                                            2] = x_90237;
                                    *(__global
                                      int16_t *) &mem_97495[(group_id_89883 *
                                                             (num_elems_74001 *
                                                              group_sizze_89876) +
                                                             i_90287 *
                                                             group_sizze_89876 +
                                                             local_tid_89882) *
                                                            2] = y_90214;
                                    *(__global
                                      double *) &mem_97498[(group_id_89883 *
                                                            (num_elems_74001 *
                                                             group_sizze_89876) +
                                                            i_90287 *
                                                            group_sizze_89876 +
                                                            local_tid_89882) *
                                                           8] = lw_val_90286;
                                    x_90291 = !cond_90238;
                                    y_90292 = x_90291 && cond_90254;
                                    not_arg_90293 = cond_90238 || y_90292;
                                    res_90294 = !not_arg_90293;
                                    res_90257 = res_90276;
                                    res_90258 = res_90277;
                                    res_90262 = res_90294;
                                }
                                res_90239 = res_90255;
                                res_90240 = res_90256;
                                res_90241 = res_90257;
                                res_90242 = res_90258;
                                res_90246 = res_90262;
                            }
                            res_90222 = res_90239;
                            res_90223 = res_90240;
                            res_90224 = res_90241;
                            res_90225 = res_90242;
                            res_90229 = res_90246;
                        }
                        
                        char loop_while_tmp_98036 = res_90229;
                        int16_t x_tmp_98037 = res_90222;
                        int16_t y_tmp_98038 = res_90223;
                        double chi_tmp_98039 = res_90224;
                        int32_t i_tmp_98040;
                        
                        i_tmp_98040 = res_90225;
                        loop_while_90212 = loop_while_tmp_98036;
                        x_90213 = x_tmp_98037;
                        y_90214 = y_tmp_98038;
                        chi_90215 = chi_tmp_98039;
                        i_90216 = i_tmp_98040;
                    }
                    res_90204 = loop_while_90212;
                    res_90205 = x_90213;
                    res_90206 = y_90214;
                    res_90207 = chi_90215;
                    res_90208 = i_90216;
                } else {
                    char res_90298;
                    int16_t res_90299;
                    int16_t res_90300;
                    double res_90301;
                    int32_t res_90302;
                    
                    *(__global int16_t *) &mem_97492[(group_id_89883 *
                                                      (num_elems_74001 *
                                                       group_sizze_89876) +
                                                      local_tid_89882) * 2] =
                        arg_89906;
                    *(__global int16_t *) &mem_97495[(group_id_89883 *
                                                      (num_elems_74001 *
                                                       group_sizze_89876) +
                                                      local_tid_89882) * 2] =
                        res_89892;
                    *(__global double *) &mem_97498[(group_id_89883 *
                                                     (num_elems_74001 *
                                                      group_sizze_89876) +
                                                     local_tid_89882) * 8] =
                        lw_val_89912;
                    
                    char loop_while_90306;
                    int16_t x_90307;
                    int16_t y_90308;
                    double chi_90309;
                    int32_t i_90310;
                    
                    loop_while_90306 = 1;
                    x_90307 = arg_89906;
                    y_90308 = arg_89907;
                    chi_90309 = arg_89908;
                    i_90310 = 1;
                    while (loop_while_90306) {
                        double x_90314 = chi_90309 + res_89900;
                        char cond_90315 = x_90314 < delta_73922;
                        int16_t res_90316;
                        int16_t res_90317;
                        double res_90318;
                        int32_t res_90319;
                        char res_90323;
                        
                        if (cond_90315) {
                            int16_t res_90324;
                            int32_t res_90325;
                            char not_arg_90329;
                            char res_90330;
                            
                            res_90324 = y_90308 + res_89887;
                            res_90325 = i_90310 + 1;
                            *(__global int16_t *) &mem_97492[(group_id_89883 *
                                                              (num_elems_74001 *
                                                               group_sizze_89876) +
                                                              i_90310 *
                                                              group_sizze_89876 +
                                                              local_tid_89882) *
                                                             2] = x_90307;
                            *(__global int16_t *) &mem_97495[(group_id_89883 *
                                                              (num_elems_74001 *
                                                               group_sizze_89876) +
                                                              i_90310 *
                                                              group_sizze_89876 +
                                                              local_tid_89882) *
                                                             2] = y_90308;
                            *(__global double *) &mem_97498[(group_id_89883 *
                                                             (num_elems_74001 *
                                                              group_sizze_89876) +
                                                             i_90310 *
                                                             group_sizze_89876 +
                                                             local_tid_89882) *
                                                            8] = res_89902;
                            not_arg_90329 = res_90324 == res_89890;
                            res_90330 = !not_arg_90329;
                            res_90316 = x_90307;
                            res_90317 = res_90324;
                            res_90318 = x_90314;
                            res_90319 = res_90325;
                            res_90323 = res_90330;
                        } else {
                            int16_t x_90331;
                            char cond_90332;
                            int16_t res_90333;
                            int16_t res_90334;
                            double res_90335;
                            int32_t res_90336;
                            char res_90340;
                            
                            x_90331 = x_90307 + res_89886;
                            cond_90332 = x_90331 == res_89889;
                            if (cond_90332) {
                                double x_90341;
                                double x_90342;
                                double lw_val_90343;
                                
                                x_90341 = delta_73922 - chi_90309;
                                x_90342 = x_90341 / res_89900;
                                lw_val_90343 = x_90342 * res_89902;
                                *(__global
                                  int16_t *) &mem_97492[(group_id_89883 *
                                                         (num_elems_74001 *
                                                          group_sizze_89876) +
                                                         i_90310 *
                                                         group_sizze_89876 +
                                                         local_tid_89882) * 2] =
                                    x_90307;
                                *(__global
                                  int16_t *) &mem_97495[(group_id_89883 *
                                                         (num_elems_74001 *
                                                          group_sizze_89876) +
                                                         i_90310 *
                                                         group_sizze_89876 +
                                                         local_tid_89882) * 2] =
                                    y_90308;
                                *(__global
                                  double *) &mem_97498[(group_id_89883 *
                                                        (num_elems_74001 *
                                                         group_sizze_89876) +
                                                        i_90310 *
                                                        group_sizze_89876 +
                                                        local_tid_89882) * 8] =
                                    lw_val_90343;
                                res_90333 = x_90307;
                                res_90334 = y_90308;
                                res_90335 = chi_90309;
                                res_90336 = i_90310;
                                res_90340 = 0;
                            } else {
                                int16_t x_90347;
                                char cond_90348;
                                int16_t res_90349;
                                int16_t res_90350;
                                double res_90351;
                                int32_t res_90352;
                                char res_90356;
                                
                                x_90347 = y_90308 + res_89887;
                                cond_90348 = x_90347 == res_89890;
                                if (cond_90348) {
                                    res_90349 = x_90307;
                                } else {
                                    res_90349 = x_90331;
                                }
                                if (cond_90348) {
                                    res_90350 = y_90308;
                                } else {
                                    res_90350 = x_90347;
                                }
                                if (cond_90348) {
                                    double x_90357;
                                    double x_90358;
                                    double lw_val_90359;
                                    double x_90363;
                                    double x_90364;
                                    double lw_val_90365;
                                    int32_t i_90366;
                                    
                                    x_90357 = delta_73922 - chi_90309;
                                    x_90358 = x_90357 / res_89900;
                                    lw_val_90359 = x_90358 * res_89902;
                                    *(__global
                                      int16_t *) &mem_97492[(group_id_89883 *
                                                             (num_elems_74001 *
                                                              group_sizze_89876) +
                                                             i_90310 *
                                                             group_sizze_89876 +
                                                             local_tid_89882) *
                                                            2] = x_90307;
                                    *(__global
                                      int16_t *) &mem_97495[(group_id_89883 *
                                                             (num_elems_74001 *
                                                              group_sizze_89876) +
                                                             i_90310 *
                                                             group_sizze_89876 +
                                                             local_tid_89882) *
                                                            2] = y_90308;
                                    *(__global
                                      double *) &mem_97498[(group_id_89883 *
                                                            (num_elems_74001 *
                                                             group_sizze_89876) +
                                                            i_90310 *
                                                            group_sizze_89876 +
                                                            local_tid_89882) *
                                                           8] = lw_val_90359;
                                    x_90363 = x_89909 + chi_90309;
                                    x_90364 = x_90363 / res_89900;
                                    lw_val_90365 = x_90364 * res_89902;
                                    i_90366 = i_90310 + 1;
                                    *(__global
                                      int16_t *) &mem_97492[(group_id_89883 *
                                                             (num_elems_74001 *
                                                              group_sizze_89876) +
                                                             i_90366 *
                                                             group_sizze_89876 +
                                                             local_tid_89882) *
                                                            2] = x_90331;
                                    *(__global
                                      int16_t *) &mem_97495[(group_id_89883 *
                                                             (num_elems_74001 *
                                                              group_sizze_89876) +
                                                             i_90366 *
                                                             group_sizze_89876 +
                                                             local_tid_89882) *
                                                            2] = y_90308;
                                    *(__global
                                      double *) &mem_97498[(group_id_89883 *
                                                            (num_elems_74001 *
                                                             group_sizze_89876) +
                                                            i_90366 *
                                                            group_sizze_89876 +
                                                            local_tid_89882) *
                                                           8] = lw_val_90365;
                                    res_90351 = chi_90309;
                                    res_90352 = i_90310;
                                    res_90356 = 0;
                                } else {
                                    double res_90370;
                                    int32_t res_90371;
                                    double x_90372;
                                    double x_90373;
                                    double lw_val_90374;
                                    double x_90378;
                                    double x_90379;
                                    double lw_val_90380;
                                    int32_t i_90381;
                                    char x_90385;
                                    char y_90386;
                                    char not_arg_90387;
                                    char res_90388;
                                    
                                    res_90370 = x_90314 - delta_73922;
                                    res_90371 = i_90310 + 2;
                                    x_90372 = delta_73922 - chi_90309;
                                    x_90373 = x_90372 / res_89900;
                                    lw_val_90374 = x_90373 * res_89902;
                                    *(__global
                                      int16_t *) &mem_97492[(group_id_89883 *
                                                             (num_elems_74001 *
                                                              group_sizze_89876) +
                                                             i_90310 *
                                                             group_sizze_89876 +
                                                             local_tid_89882) *
                                                            2] = x_90307;
                                    *(__global
                                      int16_t *) &mem_97495[(group_id_89883 *
                                                             (num_elems_74001 *
                                                              group_sizze_89876) +
                                                             i_90310 *
                                                             group_sizze_89876 +
                                                             local_tid_89882) *
                                                            2] = y_90308;
                                    *(__global
                                      double *) &mem_97498[(group_id_89883 *
                                                            (num_elems_74001 *
                                                             group_sizze_89876) +
                                                            i_90310 *
                                                            group_sizze_89876 +
                                                            local_tid_89882) *
                                                           8] = lw_val_90374;
                                    x_90378 = x_89909 + chi_90309;
                                    x_90379 = x_90378 / res_89900;
                                    lw_val_90380 = x_90379 * res_89902;
                                    i_90381 = i_90310 + 1;
                                    *(__global
                                      int16_t *) &mem_97492[(group_id_89883 *
                                                             (num_elems_74001 *
                                                              group_sizze_89876) +
                                                             i_90381 *
                                                             group_sizze_89876 +
                                                             local_tid_89882) *
                                                            2] = x_90331;
                                    *(__global
                                      int16_t *) &mem_97495[(group_id_89883 *
                                                             (num_elems_74001 *
                                                              group_sizze_89876) +
                                                             i_90381 *
                                                             group_sizze_89876 +
                                                             local_tid_89882) *
                                                            2] = y_90308;
                                    *(__global
                                      double *) &mem_97498[(group_id_89883 *
                                                            (num_elems_74001 *
                                                             group_sizze_89876) +
                                                            i_90381 *
                                                            group_sizze_89876 +
                                                            local_tid_89882) *
                                                           8] = lw_val_90380;
                                    x_90385 = !cond_90332;
                                    y_90386 = x_90385 && cond_90348;
                                    not_arg_90387 = cond_90332 || y_90386;
                                    res_90388 = !not_arg_90387;
                                    res_90351 = res_90370;
                                    res_90352 = res_90371;
                                    res_90356 = res_90388;
                                }
                                res_90333 = res_90349;
                                res_90334 = res_90350;
                                res_90335 = res_90351;
                                res_90336 = res_90352;
                                res_90340 = res_90356;
                            }
                            res_90316 = res_90333;
                            res_90317 = res_90334;
                            res_90318 = res_90335;
                            res_90319 = res_90336;
                            res_90323 = res_90340;
                        }
                        
                        char loop_while_tmp_98044 = res_90323;
                        int16_t x_tmp_98045 = res_90316;
                        int16_t y_tmp_98046 = res_90317;
                        double chi_tmp_98047 = res_90318;
                        int32_t i_tmp_98048;
                        
                        i_tmp_98048 = res_90319;
                        loop_while_90306 = loop_while_tmp_98044;
                        x_90307 = x_tmp_98045;
                        y_90308 = y_tmp_98046;
                        chi_90309 = chi_tmp_98047;
                        i_90310 = i_tmp_98048;
                    }
                    res_90298 = loop_while_90306;
                    res_90299 = x_90307;
                    res_90300 = y_90308;
                    res_90301 = chi_90309;
                    res_90302 = i_90310;
                }
            } else {
                char res_90389;
                int16_t res_90390;
                int16_t res_90391;
                double res_90392;
                int32_t res_90393;
                char loop_while_90397;
                int16_t x_90398;
                int16_t y_90399;
                double chi_90400;
                int32_t i_90401;
                
                loop_while_90397 = 1;
                x_90398 = res_89891;
                y_90399 = res_89892;
                chi_90400 = x_89884;
                i_90401 = 0;
                while (loop_while_90397) {
                    double x_90405 = chi_90400 + res_89900;
                    char cond_90406 = x_90405 < delta_73922;
                    int16_t res_90407;
                    int16_t res_90408;
                    double res_90409;
                    int32_t res_90410;
                    char res_90414;
                    
                    if (cond_90406) {
                        int16_t res_90415;
                        int32_t res_90416;
                        char not_arg_90420;
                        char res_90421;
                        
                        res_90415 = y_90399 + res_89887;
                        res_90416 = i_90401 + 1;
                        *(__global int16_t *) &mem_97492[(group_id_89883 *
                                                          (num_elems_74001 *
                                                           group_sizze_89876) +
                                                          i_90401 *
                                                          group_sizze_89876 +
                                                          local_tid_89882) *
                                                         2] = x_90398;
                        *(__global int16_t *) &mem_97495[(group_id_89883 *
                                                          (num_elems_74001 *
                                                           group_sizze_89876) +
                                                          i_90401 *
                                                          group_sizze_89876 +
                                                          local_tid_89882) *
                                                         2] = y_90399;
                        *(__global double *) &mem_97498[(group_id_89883 *
                                                         (num_elems_74001 *
                                                          group_sizze_89876) +
                                                         i_90401 *
                                                         group_sizze_89876 +
                                                         local_tid_89882) * 8] =
                            res_89902;
                        not_arg_90420 = res_90415 == res_89890;
                        res_90421 = !not_arg_90420;
                        res_90407 = x_90398;
                        res_90408 = res_90415;
                        res_90409 = x_90405;
                        res_90410 = res_90416;
                        res_90414 = res_90421;
                    } else {
                        int16_t x_90422;
                        char cond_90423;
                        int16_t res_90424;
                        int16_t res_90425;
                        double res_90426;
                        int32_t res_90427;
                        char res_90431;
                        
                        x_90422 = x_90398 + res_89886;
                        cond_90423 = x_90422 == res_89889;
                        if (cond_90423) {
                            double x_90432;
                            double x_90433;
                            double lw_val_90434;
                            
                            x_90432 = delta_73922 - chi_90400;
                            x_90433 = x_90432 / res_89900;
                            lw_val_90434 = x_90433 * res_89902;
                            *(__global int16_t *) &mem_97492[(group_id_89883 *
                                                              (num_elems_74001 *
                                                               group_sizze_89876) +
                                                              i_90401 *
                                                              group_sizze_89876 +
                                                              local_tid_89882) *
                                                             2] = x_90398;
                            *(__global int16_t *) &mem_97495[(group_id_89883 *
                                                              (num_elems_74001 *
                                                               group_sizze_89876) +
                                                              i_90401 *
                                                              group_sizze_89876 +
                                                              local_tid_89882) *
                                                             2] = y_90399;
                            *(__global double *) &mem_97498[(group_id_89883 *
                                                             (num_elems_74001 *
                                                              group_sizze_89876) +
                                                             i_90401 *
                                                             group_sizze_89876 +
                                                             local_tid_89882) *
                                                            8] = lw_val_90434;
                            res_90424 = x_90398;
                            res_90425 = y_90399;
                            res_90426 = chi_90400;
                            res_90427 = i_90401;
                            res_90431 = 0;
                        } else {
                            int16_t x_90438;
                            char cond_90439;
                            int16_t res_90440;
                            int16_t res_90441;
                            double res_90442;
                            int32_t res_90443;
                            char res_90447;
                            
                            x_90438 = y_90399 + res_89887;
                            cond_90439 = x_90438 == res_89890;
                            if (cond_90439) {
                                res_90440 = x_90398;
                            } else {
                                res_90440 = x_90422;
                            }
                            if (cond_90439) {
                                res_90441 = y_90399;
                            } else {
                                res_90441 = x_90438;
                            }
                            if (cond_90439) {
                                double x_90448;
                                double x_90449;
                                double lw_val_90450;
                                double x_90454;
                                double x_90455;
                                double lw_val_90456;
                                int32_t i_90457;
                                
                                x_90448 = delta_73922 - chi_90400;
                                x_90449 = x_90448 / res_89900;
                                lw_val_90450 = x_90449 * res_89902;
                                *(__global
                                  int16_t *) &mem_97492[(group_id_89883 *
                                                         (num_elems_74001 *
                                                          group_sizze_89876) +
                                                         i_90401 *
                                                         group_sizze_89876 +
                                                         local_tid_89882) * 2] =
                                    x_90398;
                                *(__global
                                  int16_t *) &mem_97495[(group_id_89883 *
                                                         (num_elems_74001 *
                                                          group_sizze_89876) +
                                                         i_90401 *
                                                         group_sizze_89876 +
                                                         local_tid_89882) * 2] =
                                    y_90399;
                                *(__global
                                  double *) &mem_97498[(group_id_89883 *
                                                        (num_elems_74001 *
                                                         group_sizze_89876) +
                                                        i_90401 *
                                                        group_sizze_89876 +
                                                        local_tid_89882) * 8] =
                                    lw_val_90450;
                                x_90454 = x_89909 + chi_90400;
                                x_90455 = x_90454 / res_89900;
                                lw_val_90456 = x_90455 * res_89902;
                                i_90457 = i_90401 + 1;
                                *(__global
                                  int16_t *) &mem_97492[(group_id_89883 *
                                                         (num_elems_74001 *
                                                          group_sizze_89876) +
                                                         i_90457 *
                                                         group_sizze_89876 +
                                                         local_tid_89882) * 2] =
                                    x_90422;
                                *(__global
                                  int16_t *) &mem_97495[(group_id_89883 *
                                                         (num_elems_74001 *
                                                          group_sizze_89876) +
                                                         i_90457 *
                                                         group_sizze_89876 +
                                                         local_tid_89882) * 2] =
                                    y_90399;
                                *(__global
                                  double *) &mem_97498[(group_id_89883 *
                                                        (num_elems_74001 *
                                                         group_sizze_89876) +
                                                        i_90457 *
                                                        group_sizze_89876 +
                                                        local_tid_89882) * 8] =
                                    lw_val_90456;
                                res_90442 = chi_90400;
                                res_90443 = i_90401;
                                res_90447 = 0;
                            } else {
                                double res_90461;
                                int32_t res_90462;
                                double x_90463;
                                double x_90464;
                                double lw_val_90465;
                                double x_90469;
                                double x_90470;
                                double lw_val_90471;
                                int32_t i_90472;
                                char x_90476;
                                char y_90477;
                                char not_arg_90478;
                                char res_90479;
                                
                                res_90461 = x_90405 - delta_73922;
                                res_90462 = i_90401 + 2;
                                x_90463 = delta_73922 - chi_90400;
                                x_90464 = x_90463 / res_89900;
                                lw_val_90465 = x_90464 * res_89902;
                                *(__global
                                  int16_t *) &mem_97492[(group_id_89883 *
                                                         (num_elems_74001 *
                                                          group_sizze_89876) +
                                                         i_90401 *
                                                         group_sizze_89876 +
                                                         local_tid_89882) * 2] =
                                    x_90398;
                                *(__global
                                  int16_t *) &mem_97495[(group_id_89883 *
                                                         (num_elems_74001 *
                                                          group_sizze_89876) +
                                                         i_90401 *
                                                         group_sizze_89876 +
                                                         local_tid_89882) * 2] =
                                    y_90399;
                                *(__global
                                  double *) &mem_97498[(group_id_89883 *
                                                        (num_elems_74001 *
                                                         group_sizze_89876) +
                                                        i_90401 *
                                                        group_sizze_89876 +
                                                        local_tid_89882) * 8] =
                                    lw_val_90465;
                                x_90469 = x_89909 + chi_90400;
                                x_90470 = x_90469 / res_89900;
                                lw_val_90471 = x_90470 * res_89902;
                                i_90472 = i_90401 + 1;
                                *(__global
                                  int16_t *) &mem_97492[(group_id_89883 *
                                                         (num_elems_74001 *
                                                          group_sizze_89876) +
                                                         i_90472 *
                                                         group_sizze_89876 +
                                                         local_tid_89882) * 2] =
                                    x_90422;
                                *(__global
                                  int16_t *) &mem_97495[(group_id_89883 *
                                                         (num_elems_74001 *
                                                          group_sizze_89876) +
                                                         i_90472 *
                                                         group_sizze_89876 +
                                                         local_tid_89882) * 2] =
                                    y_90399;
                                *(__global
                                  double *) &mem_97498[(group_id_89883 *
                                                        (num_elems_74001 *
                                                         group_sizze_89876) +
                                                        i_90472 *
                                                        group_sizze_89876 +
                                                        local_tid_89882) * 8] =
                                    lw_val_90471;
                                x_90476 = !cond_90423;
                                y_90477 = x_90476 && cond_90439;
                                not_arg_90478 = cond_90423 || y_90477;
                                res_90479 = !not_arg_90478;
                                res_90442 = res_90461;
                                res_90443 = res_90462;
                                res_90447 = res_90479;
                            }
                            res_90424 = res_90440;
                            res_90425 = res_90441;
                            res_90426 = res_90442;
                            res_90427 = res_90443;
                            res_90431 = res_90447;
                        }
                        res_90407 = res_90424;
                        res_90408 = res_90425;
                        res_90409 = res_90426;
                        res_90410 = res_90427;
                        res_90414 = res_90431;
                    }
                    
                    char loop_while_tmp_98052 = res_90414;
                    int16_t x_tmp_98053 = res_90407;
                    int16_t y_tmp_98054 = res_90408;
                    double chi_tmp_98055 = res_90409;
                    int32_t i_tmp_98056;
                    
                    i_tmp_98056 = res_90410;
                    loop_while_90397 = loop_while_tmp_98052;
                    x_90398 = x_tmp_98053;
                    y_90399 = y_tmp_98054;
                    chi_90400 = chi_tmp_98055;
                    i_90401 = i_tmp_98056;
                }
                res_90389 = loop_while_90397;
                res_90390 = x_90398;
                res_90391 = y_90399;
                res_90392 = chi_90400;
                res_90393 = i_90401;
            }
        }
    }
    if (thread_active_98008) {
        for (int32_t i_98060 = 0; i_98060 < num_elems_74001; i_98060++) {
            *(__global int16_t *) &mem_97658[(i_98060 * x_78237 + gtid_89874) *
                                             2] = *(__global
                                                    int16_t *) &mem_97492[(group_id_89883 *
                                                                           (num_elems_74001 *
                                                                            group_sizze_89876) +
                                                                           i_98060 *
                                                                           group_sizze_89876 +
                                                                           local_tid_89882) *
                                                                          2];
        }
    }
    if (thread_active_98008) {
        for (int32_t i_98061 = 0; i_98061 < num_elems_74001; i_98061++) {
            *(__global int16_t *) &mem_97662[(i_98061 * x_78237 + gtid_89874) *
                                             2] = *(__global
                                                    int16_t *) &mem_97495[(group_id_89883 *
                                                                           (num_elems_74001 *
                                                                            group_sizze_89876) +
                                                                           i_98061 *
                                                                           group_sizze_89876 +
                                                                           local_tid_89882) *
                                                                          2];
        }
    }
    if (thread_active_98008) {
        for (int32_t i_98062 = 0; i_98062 < num_elems_74001; i_98062++) {
            *(__global double *) &mem_97666[(i_98062 * x_78237 + gtid_89874) *
                                            8] = *(__global
                                                   double *) &mem_97498[(group_id_89883 *
                                                                         (num_elems_74001 *
                                                                          group_sizze_89876) +
                                                                         i_98062 *
                                                                         group_sizze_89876 +
                                                                         local_tid_89882) *
                                                                        8];
        }
    }
}
__kernel void map_kernel_90528(int16_t res_73988, int32_t x_78237, __global
                               unsigned char *mem_97452, __global
                               unsigned char *mem_97455, __global
                               unsigned char *mem_97458, __global
                               unsigned char *mem_97469, __global
                               unsigned char *mem_97472, __global
                               unsigned char *mem_97474, __global
                               unsigned char *mem_97477, __global
                               unsigned char *mem_97480, __global
                               unsigned char *mem_97483, __global
                               unsigned char *mem_97486, __global
                               unsigned char *mem_97489)
{
    int32_t wave_sizze_98003;
    int32_t group_sizze_98004;
    char thread_active_98005;
    int32_t gtid_90521;
    int32_t global_tid_90528;
    int32_t local_tid_90529;
    int32_t group_id_90530;
    
    global_tid_90528 = get_global_id(0);
    local_tid_90529 = get_local_id(0);
    group_sizze_98004 = get_local_size(0);
    wave_sizze_98003 = LOCKSTEP_WIDTH;
    group_id_90530 = get_group_id(0);
    gtid_90521 = global_tid_90528;
    thread_active_98005 = slt32(gtid_90521, x_78237);
    
    double x_90531;
    int16_t x_90532;
    int16_t x_90533;
    char cond_90534;
    char res_90535;
    char x_90536;
    double res_90537;
    int16_t res_90538;
    int16_t res_90539;
    char res_90540;
    char cond_90588;
    int16_t res_90589;
    int16_t res_90590;
    char cond_90594;
    int16_t res_90595;
    int16_t res_90596;
    char cond_90600;
    char res_90601;
    char x_90602;
    char y_90603;
    char cond_90604;
    char x_90605;
    int16_t res_90606;
    int16_t res_90607;
    double res_90617;
    
    if (thread_active_98005) {
        x_90531 = *(__global double *) &mem_97452[gtid_90521 * 8];
        x_90532 = *(__global int16_t *) &mem_97455[gtid_90521 * 2];
        x_90533 = *(__global int16_t *) &mem_97458[gtid_90521 * 2];
        cond_90534 = 0.0 <= x_90531;
        res_90535 = x_90531 <= 45.0;
        x_90536 = cond_90534 && res_90535;
        if (x_90536) {
            res_90537 = x_90531;
            res_90538 = -1;
            res_90539 = 1;
            res_90540 = 0;
        } else {
            char cond_90541;
            char res_90542;
            char x_90543;
            double res_90544;
            int16_t res_90545;
            int16_t res_90546;
            char res_90547;
            
            cond_90541 = 45.0 < x_90531;
            res_90542 = x_90531 < 90.0;
            x_90543 = cond_90541 && res_90542;
            if (x_90543) {
                double res_90548 = 90.0 - x_90531;
                
                res_90544 = res_90548;
                res_90545 = -1;
                res_90546 = 1;
                res_90547 = 1;
            } else {
                char cond_90549;
                char res_90550;
                char x_90551;
                double res_90552;
                int16_t res_90553;
                int16_t res_90554;
                char res_90555;
                
                cond_90549 = 90.0 <= x_90531;
                res_90550 = x_90531 <= 135.0;
                x_90551 = cond_90549 && res_90550;
                if (x_90551) {
                    double res_90556 = x_90531 - 90.0;
                    
                    res_90552 = res_90556;
                    res_90553 = -1;
                    res_90554 = -1;
                    res_90555 = 1;
                } else {
                    char cond_90557;
                    char res_90558;
                    char x_90559;
                    int16_t res_90560;
                    double res_90561;
                    int16_t res_90562;
                    char res_90563;
                    
                    cond_90557 = 135.0 < x_90531;
                    res_90558 = x_90531 <= 180.0;
                    x_90559 = cond_90557 && res_90558;
                    if (x_90559) {
                        res_90560 = -1;
                    } else {
                        res_90560 = 1;
                    }
                    if (x_90559) {
                        double res_90564 = 180.0 - x_90531;
                        
                        res_90561 = res_90564;
                        res_90562 = -1;
                        res_90563 = 0;
                    } else {
                        char cond_90565;
                        char res_90566;
                        char x_90567;
                        double res_90568;
                        int16_t res_90569;
                        char res_90570;
                        
                        cond_90565 = 180.0 < x_90531;
                        res_90566 = x_90531 <= 225.0;
                        x_90567 = cond_90565 && res_90566;
                        if (x_90567) {
                            double res_90571 = x_90531 - 180.0;
                            
                            res_90568 = res_90571;
                            res_90569 = -1;
                            res_90570 = 0;
                        } else {
                            char cond_90572;
                            char res_90573;
                            char x_90574;
                            int16_t res_90575;
                            double res_90576;
                            char res_90577;
                            
                            cond_90572 = 225.0 < x_90531;
                            res_90573 = x_90531 < 270.0;
                            x_90574 = cond_90572 && res_90573;
                            if (x_90574) {
                                res_90575 = -1;
                            } else {
                                res_90575 = 1;
                            }
                            if (x_90574) {
                                double res_90578 = 270.0 - x_90531;
                                
                                res_90576 = res_90578;
                                res_90577 = 1;
                            } else {
                                char cond_90579;
                                double res_90580;
                                char res_90581;
                                
                                cond_90579 = x_90531 == 270.0;
                                if (cond_90579) {
                                    res_90580 = 0.0;
                                    res_90581 = 1;
                                } else {
                                    char cond_90582;
                                    char res_90583;
                                    char x_90584;
                                    double res_90585;
                                    
                                    cond_90582 = 270.0 < x_90531;
                                    res_90583 = x_90531 <= 315.0;
                                    x_90584 = cond_90582 && res_90583;
                                    if (x_90584) {
                                        double res_90586 = x_90531 - 270.0;
                                        
                                        res_90585 = res_90586;
                                    } else {
                                        double res_90587 = 360.0 - x_90531;
                                        
                                        res_90585 = res_90587;
                                    }
                                    res_90580 = res_90585;
                                    res_90581 = x_90584;
                                }
                                res_90576 = res_90580;
                                res_90577 = res_90581;
                            }
                            res_90568 = res_90576;
                            res_90569 = res_90575;
                            res_90570 = res_90577;
                        }
                        res_90561 = res_90568;
                        res_90562 = res_90569;
                        res_90563 = res_90570;
                    }
                    res_90552 = res_90561;
                    res_90553 = res_90560;
                    res_90554 = res_90562;
                    res_90555 = res_90563;
                }
                res_90544 = res_90552;
                res_90545 = res_90553;
                res_90546 = res_90554;
                res_90547 = res_90555;
            }
            res_90537 = res_90544;
            res_90538 = res_90545;
            res_90539 = res_90546;
            res_90540 = res_90547;
        }
        cond_90588 = slt16(res_90538, 0);
        if (cond_90588) {
            int16_t res_90591;
            int16_t x_90592;
            int16_t res_90593;
            
            res_90591 = x_90532 - 1;
            x_90592 = 0 - res_73988;
            res_90593 = x_90592 - 1;
            res_90589 = res_90591;
            res_90590 = res_90593;
        } else {
            res_90589 = x_90532;
            res_90590 = res_73988;
        }
        cond_90594 = slt16(res_90539, 0);
        if (cond_90594) {
            int16_t res_90597;
            int16_t x_90598;
            int16_t res_90599;
            
            res_90597 = x_90533 - 1;
            x_90598 = 0 - res_73988;
            res_90599 = x_90598 - 1;
            res_90595 = res_90597;
            res_90596 = res_90599;
        } else {
            res_90595 = x_90533;
            res_90596 = res_73988;
        }
        cond_90600 = x_90531 == 0.0;
        res_90601 = x_90531 == 180.0;
        x_90602 = !cond_90600;
        y_90603 = x_90602 && res_90601;
        cond_90604 = cond_90600 || y_90603;
        x_90605 = cond_90604 && cond_90588;
        if (x_90605) {
            int16_t res_90608 = res_90589 + 1;
            
            res_90606 = res_90608;
            res_90607 = res_90595;
        } else {
            char cond_90609;
            char res_90610;
            char x_90611;
            char y_90612;
            char cond_90613;
            char x_90614;
            int16_t res_90615;
            
            cond_90609 = x_90531 == 90.0;
            res_90610 = x_90531 == 270.0;
            x_90611 = !cond_90609;
            y_90612 = x_90611 && res_90610;
            cond_90613 = cond_90609 || y_90612;
            x_90614 = cond_90613 && cond_90594;
            if (x_90614) {
                int16_t res_90616 = res_90595 + 1;
                
                res_90615 = res_90616;
            } else {
                res_90615 = res_90595;
            }
            res_90606 = res_90589;
            res_90607 = res_90615;
        }
        res_90617 = 1.7453292519943295e-2 * res_90537;
    }
    if (thread_active_98005) {
        *(__global int16_t *) &mem_97469[gtid_90521 * 2] = res_90538;
    }
    if (thread_active_98005) {
        *(__global int16_t *) &mem_97472[gtid_90521 * 2] = res_90539;
    }
    if (thread_active_98005) {
        *(__global char *) &mem_97474[gtid_90521] = res_90540;
    }
    if (thread_active_98005) {
        *(__global int16_t *) &mem_97477[gtid_90521 * 2] = res_90590;
    }
    if (thread_active_98005) {
        *(__global int16_t *) &mem_97480[gtid_90521 * 2] = res_90596;
    }
    if (thread_active_98005) {
        *(__global int16_t *) &mem_97483[gtid_90521 * 2] = res_90606;
    }
    if (thread_active_98005) {
        *(__global int16_t *) &mem_97486[gtid_90521 * 2] = res_90607;
    }
    if (thread_active_98005) {
        *(__global double *) &mem_97489[gtid_90521 * 8] = res_90617;
    }
}
__kernel void map_kernel_90717(int32_t y_90661, int32_t convop_x_97668, __global
                               unsigned char *mem_97685, __global
                               unsigned char *mem_97710, __global
                               unsigned char *mem_97713)
{
    int32_t wave_sizze_98093;
    int32_t group_sizze_98094;
    char thread_active_98095;
    int32_t j_90702;
    int32_t global_tid_90717;
    int32_t local_tid_90718;
    int32_t group_id_90719;
    
    global_tid_90717 = get_global_id(0);
    local_tid_90718 = get_local_id(0);
    group_sizze_98094 = get_local_size(0);
    wave_sizze_98093 = LOCKSTEP_WIDTH;
    group_id_90719 = get_group_id(0);
    j_90702 = global_tid_90717;
    thread_active_98095 = slt32(j_90702, convop_x_97668);
    
    int32_t y_90700;
    int32_t group_id_90707;
    char cond_90708;
    int32_t final_result_90710;
    
    if (thread_active_98095) {
        y_90700 = *(__global int32_t *) &mem_97685[j_90702 * 4];
        group_id_90707 = squot32(j_90702, y_90661);
        cond_90708 = 0 == group_id_90707;
        if (cond_90708) {
            final_result_90710 = y_90700;
        } else {
            int32_t carry_in_index_90709;
            int32_t x_90699;
            int32_t zz_90701;
            
            carry_in_index_90709 = group_id_90707 - 1;
            x_90699 = *(__global int32_t *) &mem_97710[carry_in_index_90709 *
                                                       4];
            zz_90701 = x_90699 + y_90700;
            final_result_90710 = zz_90701;
        }
    }
    if (thread_active_98095) {
        *(__global int32_t *) &mem_97713[j_90702 * 4] = final_result_90710;
    }
}
__kernel void map_kernel_90727(int32_t num_elems_74001,
                               int32_t partition_sizze_78951,
                               int32_t convop_x_97668, __global
                               unsigned char *mem_97670, __global
                               unsigned char *mem_97682, __global
                               unsigned char *mem_97688, __global
                               unsigned char *mem_97692, __global
                               unsigned char *mem_97713, __global
                               unsigned char *mem_97716, __global
                               unsigned char *mem_97719, __global
                               unsigned char *mem_97722)
{
    int32_t wave_sizze_98096;
    int32_t group_sizze_98097;
    char thread_active_98098;
    int32_t write_i_90720;
    int32_t global_tid_90727;
    int32_t local_tid_90728;
    int32_t group_id_90729;
    
    global_tid_90727 = get_global_id(0);
    local_tid_90728 = get_local_id(0);
    group_sizze_98097 = get_local_size(0);
    wave_sizze_98096 = LOCKSTEP_WIDTH;
    group_id_90729 = get_group_id(0);
    write_i_90720 = global_tid_90727;
    thread_active_98098 = slt32(write_i_90720, convop_x_97668);
    
    int32_t c_78959;
    int32_t offset_78960;
    int32_t new_index_96995;
    int32_t binop_y_96997;
    int32_t new_index_96998;
    int32_t v_78961;
    int32_t v_78962;
    double v_78963;
    char is_this_one_78964;
    int32_t this_offset_78965;
    int32_t total_res_78966;
    
    if (thread_active_98098) {
        c_78959 = *(__global int32_t *) &mem_97688[write_i_90720 * 4];
        offset_78960 = *(__global int32_t *) &mem_97713[write_i_90720 * 4];
        new_index_96995 = squot32(write_i_90720, num_elems_74001);
        binop_y_96997 = new_index_96995 * num_elems_74001;
        new_index_96998 = write_i_90720 - binop_y_96997;
        v_78961 = *(__global int32_t *) &mem_97670[(new_index_96995 *
                                                    num_elems_74001 +
                                                    new_index_96998) * 4];
        v_78962 = *(__global int32_t *) &mem_97682[(new_index_96995 *
                                                    num_elems_74001 +
                                                    new_index_96998) * 4];
        v_78963 = *(__global double *) &mem_97692[(new_index_96995 *
                                                   num_elems_74001 +
                                                   new_index_96998) * 8];
        is_this_one_78964 = c_78959 == 0;
        this_offset_78965 = offset_78960 + -1;
        if (is_this_one_78964) {
            total_res_78966 = this_offset_78965;
        } else {
            total_res_78966 = -1;
        }
    }
    if (thread_active_98098 && (sle32(0, total_res_78966) &&
                                slt32(total_res_78966,
                                      partition_sizze_78951))) {
        *(__global int32_t *) &mem_97716[total_res_78966 * 4] = v_78961;
    }
    if (thread_active_98098 && (sle32(0, total_res_78966) &&
                                slt32(total_res_78966,
                                      partition_sizze_78951))) {
        *(__global int32_t *) &mem_97719[total_res_78966 * 4] = v_78962;
    }
    if (thread_active_98098 && (sle32(0, total_res_78966) &&
                                slt32(total_res_78966,
                                      partition_sizze_78951))) {
        *(__global double *) &mem_97722[total_res_78966 * 8] = v_78963;
    }
}
__kernel void map_kernel_90849(int32_t sizze_78971, int32_t i_79006,
                               int32_t x_79008, __global
                               unsigned char *angles_mem_97022, __global
                               unsigned char *mem_97050)
{
    int32_t wave_sizze_98133;
    int32_t group_sizze_98134;
    char thread_active_98135;
    int32_t gtid_90840;
    int32_t gtid_90841;
    int32_t global_tid_90849;
    int32_t local_tid_90850;
    int32_t group_id_90851;
    
    global_tid_90849 = get_global_id(0);
    local_tid_90850 = get_local_id(0);
    group_sizze_98134 = get_local_size(0);
    wave_sizze_98133 = LOCKSTEP_WIDTH;
    group_id_90851 = get_group_id(0);
    gtid_90840 = squot32(global_tid_90849, sizze_78971);
    gtid_90841 = global_tid_90849 - squot32(global_tid_90849, sizze_78971) *
        sizze_78971;
    thread_active_98135 = slt32(gtid_90840, x_79008) && slt32(gtid_90841,
                                                              sizze_78971);
    
    int32_t j_p_i_t_s_96914;
    double x_90852;
    
    if (thread_active_98135) {
        j_p_i_t_s_96914 = i_79006 + gtid_90840;
        x_90852 = *(__global double *) &angles_mem_97022[j_p_i_t_s_96914 * 8];
    }
    if (thread_active_98135) {
        *(__global double *) &mem_97050[(gtid_90840 * sizze_78971 +
                                         gtid_90841) * 8] = x_90852;
    }
}
__kernel void map_kernel_91809(int32_t nesting_sizze_90842, int32_t y_91737,
                               __global unsigned char *mem_97053, __global
                               unsigned char *mem_97102, __global
                               unsigned char *mem_97105)
{
    int32_t wave_sizze_98165;
    int32_t group_sizze_98166;
    char thread_active_98167;
    int32_t j_91794;
    int32_t global_tid_91809;
    int32_t local_tid_91810;
    int32_t group_id_91811;
    
    global_tid_91809 = get_global_id(0);
    local_tid_91810 = get_local_id(0);
    group_sizze_98166 = get_local_size(0);
    wave_sizze_98165 = LOCKSTEP_WIDTH;
    group_id_91811 = get_group_id(0);
    j_91794 = global_tid_91809;
    thread_active_98167 = slt32(j_91794, nesting_sizze_90842);
    
    int32_t y_91792;
    int32_t group_id_91799;
    char cond_91800;
    int32_t final_result_91802;
    
    if (thread_active_98167) {
        y_91792 = *(__global int32_t *) &mem_97053[j_91794 * 4];
        group_id_91799 = squot32(j_91794, y_91737);
        cond_91800 = 0 == group_id_91799;
        if (cond_91800) {
            final_result_91802 = y_91792;
        } else {
            int32_t carry_in_index_91801;
            int32_t x_91791;
            int32_t zz_91793;
            
            carry_in_index_91801 = group_id_91799 - 1;
            x_91791 = *(__global int32_t *) &mem_97102[carry_in_index_91801 *
                                                       4];
            zz_91793 = x_91791 + y_91792;
            final_result_91802 = zz_91793;
        }
    }
    if (thread_active_98167) {
        *(__global int32_t *) &mem_97105[j_91794 * 4] = final_result_91802;
    }
}
__kernel void map_kernel_91819(int32_t sizze_78971, int32_t rowOffset_79002,
                               int32_t partition_sizze_80788,
                               int32_t nesting_sizze_90842, __global
                               unsigned char *mem_97050, __global
                               unsigned char *mem_97056, __global
                               unsigned char *mem_97059, __global
                               unsigned char *mem_97062, __global
                               unsigned char *mem_97065, __global
                               unsigned char *mem_97067, __global
                               unsigned char *mem_97105, __global
                               unsigned char *mem_97108, __global
                               unsigned char *mem_97111, __global
                               unsigned char *mem_97114, __global
                               unsigned char *mem_97117, __global
                               unsigned char *mem_97119, __global
                               unsigned char *mem_97122)
{
    int32_t wave_sizze_98168;
    int32_t group_sizze_98169;
    char thread_active_98170;
    int32_t write_i_91812;
    int32_t global_tid_91819;
    int32_t local_tid_91820;
    int32_t group_id_91821;
    
    global_tid_91819 = get_global_id(0);
    local_tid_91820 = get_local_id(0);
    group_sizze_98169 = get_local_size(0);
    wave_sizze_98168 = LOCKSTEP_WIDTH;
    group_id_91821 = get_group_id(0);
    write_i_91812 = global_tid_91819;
    thread_active_98170 = slt32(write_i_91812, nesting_sizze_90842);
    
    int32_t c_80803;
    int32_t offset_80804;
    int32_t new_index_96923;
    int32_t binop_y_96925;
    int32_t new_index_96926;
    double v_80805;
    int16_t v_80806;
    int16_t v_80807;
    double v_80808;
    char v_80809;
    int32_t res_80811;
    char is_this_one_80812;
    int32_t this_offset_80813;
    int32_t total_res_80814;
    
    if (thread_active_98170) {
        c_80803 = *(__global int32_t *) &mem_97056[write_i_91812 * 4];
        offset_80804 = *(__global int32_t *) &mem_97105[write_i_91812 * 4];
        new_index_96923 = squot32(write_i_91812, sizze_78971);
        binop_y_96925 = new_index_96923 * sizze_78971;
        new_index_96926 = write_i_91812 - binop_y_96925;
        v_80805 = *(__global double *) &mem_97050[(new_index_96923 *
                                                   sizze_78971 +
                                                   new_index_96926) * 8];
        v_80806 = *(__global int16_t *) &mem_97059[write_i_91812 * 2];
        v_80807 = *(__global int16_t *) &mem_97062[write_i_91812 * 2];
        v_80808 = *(__global double *) &mem_97065[write_i_91812 * 8];
        v_80809 = *(__global char *) &mem_97067[write_i_91812];
        res_80811 = write_i_91812 + rowOffset_79002;
        is_this_one_80812 = c_80803 == 0;
        this_offset_80813 = offset_80804 + -1;
        if (is_this_one_80812) {
            total_res_80814 = this_offset_80813;
        } else {
            total_res_80814 = -1;
        }
    }
    if (thread_active_98170 && (sle32(0, total_res_80814) &&
                                slt32(total_res_80814,
                                      partition_sizze_80788))) {
        *(__global double *) &mem_97108[total_res_80814 * 8] = v_80805;
    }
    if (thread_active_98170 && (sle32(0, total_res_80814) &&
                                slt32(total_res_80814,
                                      partition_sizze_80788))) {
        *(__global int16_t *) &mem_97111[total_res_80814 * 2] = v_80806;
    }
    if (thread_active_98170 && (sle32(0, total_res_80814) &&
                                slt32(total_res_80814,
                                      partition_sizze_80788))) {
        *(__global int16_t *) &mem_97114[total_res_80814 * 2] = v_80807;
    }
    if (thread_active_98170 && (sle32(0, total_res_80814) &&
                                slt32(total_res_80814,
                                      partition_sizze_80788))) {
        *(__global double *) &mem_97117[total_res_80814 * 8] = v_80808;
    }
    if (thread_active_98170 && (sle32(0, total_res_80814) &&
                                slt32(total_res_80814,
                                      partition_sizze_80788))) {
        *(__global char *) &mem_97119[total_res_80814] = v_80809;
    }
    if (thread_active_98170 && (sle32(0, total_res_80814) &&
                                slt32(total_res_80814,
                                      partition_sizze_80788))) {
        *(__global int32_t *) &mem_97122[total_res_80814 * 4] = res_80811;
    }
}
__kernel void map_kernel_91833(int32_t res_78985, int32_t y_78986,
                               int32_t num_elems_79093, int32_t x_80815,
                               __global unsigned char *mem_97330, __global
                               unsigned char *mem_97334, __global
                               unsigned char *mem_97338)
{
    int32_t wave_sizze_98234;
    int32_t group_sizze_98235;
    char thread_active_98236;
    int32_t gtid_91824;
    int32_t gtid_91825;
    int32_t global_tid_91833;
    int32_t local_tid_91834;
    int32_t group_id_91835;
    
    global_tid_91833 = get_global_id(0);
    local_tid_91834 = get_local_id(0);
    group_sizze_98235 = get_local_size(0);
    wave_sizze_98234 = LOCKSTEP_WIDTH;
    group_id_91835 = get_group_id(0);
    gtid_91824 = squot32(global_tid_91833, num_elems_79093);
    gtid_91825 = global_tid_91833 - squot32(global_tid_91833, num_elems_79093) *
        num_elems_79093;
    thread_active_98236 = slt32(gtid_91824, x_80815) && slt32(gtid_91825,
                                                              num_elems_79093);
    
    int16_t x_91836;
    int16_t x_91837;
    int32_t x_91838;
    int32_t x_91839;
    int32_t x_91840;
    int32_t x_91841;
    int32_t y_91842;
    int32_t res_91843;
    
    if (thread_active_98236) {
        x_91836 = *(__global int16_t *) &mem_97330[(gtid_91824 *
                                                    num_elems_79093 +
                                                    gtid_91825) * 2];
        x_91837 = *(__global int16_t *) &mem_97334[(gtid_91824 *
                                                    num_elems_79093 +
                                                    gtid_91825) * 2];
        x_91838 = sext_i16_i32(x_91836);
        x_91839 = x_91838 + res_78985;
        x_91840 = sext_i16_i32(x_91837);
        x_91841 = x_91840 + res_78985;
        y_91842 = x_91841 * y_78986;
        res_91843 = x_91839 + y_91842;
    }
    if (thread_active_98236) {
        *(__global int32_t *) &mem_97338[(gtid_91824 * num_elems_79093 +
                                          gtid_91825) * 4] = res_91843;
    }
}
__kernel void map_kernel_91854(int32_t num_elems_79093, int32_t x_80815,
                               __global unsigned char *mem_97122, __global
                               unsigned char *mem_97326)
{
    int32_t wave_sizze_98231;
    int32_t group_sizze_98232;
    char thread_active_98233;
    int32_t gtid_91845;
    int32_t gtid_91846;
    int32_t global_tid_91854;
    int32_t local_tid_91855;
    int32_t group_id_91856;
    
    global_tid_91854 = get_global_id(0);
    local_tid_91855 = get_local_id(0);
    group_sizze_98232 = get_local_size(0);
    wave_sizze_98231 = LOCKSTEP_WIDTH;
    group_id_91856 = get_group_id(0);
    gtid_91845 = squot32(global_tid_91854, num_elems_79093);
    gtid_91846 = global_tid_91854 - squot32(global_tid_91854, num_elems_79093) *
        num_elems_79093;
    thread_active_98233 = slt32(gtid_91845, x_80815) && slt32(gtid_91846,
                                                              num_elems_79093);
    
    int32_t x_91857;
    
    if (thread_active_98233) {
        x_91857 = *(__global int32_t *) &mem_97122[gtid_91845 * 4];
    }
    if (thread_active_98233) {
        *(__global int32_t *) &mem_97326[(gtid_91845 * num_elems_79093 +
                                          gtid_91846) * 4] = x_91857;
    }
}
__kernel void map_kernel_91898(double delta_78976, int32_t num_elems_79093,
                               int32_t x_80815, __global
                               unsigned char *mem_97117, __global
                               unsigned char *mem_97119, __global
                               unsigned char *mem_97125, __global
                               unsigned char *mem_97128, __global
                               unsigned char *mem_97130, __global
                               unsigned char *mem_97133, __global
                               unsigned char *mem_97136, __global
                               unsigned char *mem_97139, __global
                               unsigned char *mem_97142, __global
                               unsigned char *mem_97145, __global
                               unsigned char *mem_97148, __global
                               unsigned char *mem_97151, __global
                               unsigned char *mem_97154, __global
                               unsigned char *mem_97314, __global
                               unsigned char *mem_97318, __global
                               unsigned char *mem_97322)
{
    int32_t wave_sizze_98174;
    int32_t group_sizze_98175;
    char thread_active_98176;
    int32_t gtid_91891;
    int32_t global_tid_91898;
    int32_t local_tid_91899;
    int32_t group_id_91900;
    
    global_tid_91898 = get_global_id(0);
    local_tid_91899 = get_local_id(0);
    group_sizze_98175 = get_local_size(0);
    wave_sizze_98174 = LOCKSTEP_WIDTH;
    group_id_91900 = get_group_id(0);
    gtid_91891 = global_tid_91898;
    thread_active_98176 = slt32(gtid_91891, x_80815);
    
    double x_91901;
    char x_91902;
    int16_t res_91903;
    int16_t res_91904;
    char res_91905;
    int16_t res_91906;
    int16_t res_91907;
    int16_t res_91908;
    int16_t res_91909;
    double res_91910;
    double x_91914;
    double y_91915;
    double res_91916;
    double res_91917;
    double y_91918;
    double res_91919;
    char cond_91920;
    double x_91921;
    char cond_91922;
    int16_t arg_91923;
    int16_t arg_91924;
    double arg_91925;
    double x_91926;
    double x_91927;
    double x_91928;
    double lw_val_91929;
    
    if (thread_active_98176) {
        x_91901 = *(__global double *) &mem_97117[gtid_91891 * 8];
        x_91902 = *(__global char *) &mem_97119[gtid_91891];
        res_91903 = *(__global int16_t *) &mem_97125[gtid_91891 * 2];
        res_91904 = *(__global int16_t *) &mem_97128[gtid_91891 * 2];
        res_91905 = *(__global char *) &mem_97130[gtid_91891];
        res_91906 = *(__global int16_t *) &mem_97133[gtid_91891 * 2];
        res_91907 = *(__global int16_t *) &mem_97136[gtid_91891 * 2];
        res_91908 = *(__global int16_t *) &mem_97139[gtid_91891 * 2];
        res_91909 = *(__global int16_t *) &mem_97142[gtid_91891 * 2];
        res_91910 = *(__global double *) &mem_97145[gtid_91891 * 8];
        for (int32_t i_98177 = 0; i_98177 < num_elems_79093; i_98177++) {
            *(__global int16_t *) &mem_97148[(group_id_91900 *
                                              (num_elems_79093 *
                                               group_sizze_91893) + i_98177 *
                                              group_sizze_91893 +
                                              local_tid_91899) * 2] = 0;
        }
        for (int32_t i_98178 = 0; i_98178 < num_elems_79093; i_98178++) {
            *(__global int16_t *) &mem_97151[(group_id_91900 *
                                              (num_elems_79093 *
                                               group_sizze_91893) + i_98178 *
                                              group_sizze_91893 +
                                              local_tid_91899) * 2] = 0;
        }
        for (int32_t i_98179 = 0; i_98179 < num_elems_79093; i_98179++) {
            *(__global double *) &mem_97154[(group_id_91900 * (num_elems_79093 *
                                                               group_sizze_91893) +
                                             i_98179 * group_sizze_91893 +
                                             local_tid_91899) * 8] = -1.0;
        }
        x_91914 = futrts_sin64(res_91910);
        y_91915 = futrts_cos64(res_91910);
        res_91916 = x_91914 / y_91915;
        res_91917 = delta_78976 * res_91916;
        y_91918 = futrts_cos64(res_91910);
        res_91919 = delta_78976 / y_91918;
        cond_91920 = !x_91902;
        x_91921 = x_91901 + res_91917;
        cond_91922 = x_91921 < delta_78976;
        arg_91923 = res_91908 + res_91903;
        arg_91924 = res_91909 + res_91904;
        arg_91925 = x_91921 - delta_78976;
        x_91926 = res_91917 - delta_78976;
        x_91927 = x_91926 + x_91901;
        x_91928 = x_91927 / res_91917;
        lw_val_91929 = x_91928 * res_91919;
        if (res_91905) {
            if (cond_91920) {
                if (cond_91922) {
                    char res_91939;
                    int16_t res_91940;
                    int16_t res_91941;
                    double res_91942;
                    int32_t res_91943;
                    char loop_while_91947;
                    int16_t x_91948;
                    int16_t y_91949;
                    double chi_91950;
                    int32_t i_91951;
                    
                    loop_while_91947 = 1;
                    x_91948 = arg_91923;
                    y_91949 = res_91909;
                    chi_91950 = x_91921;
                    i_91951 = 0;
                    while (loop_while_91947) {
                        double x_91955 = chi_91950 + res_91917;
                        char cond_91956 = x_91955 < delta_78976;
                        int16_t res_91957;
                        int16_t res_91958;
                        double res_91959;
                        int32_t res_91960;
                        char res_91964;
                        
                        if (cond_91956) {
                            int16_t res_91965;
                            int32_t res_91966;
                            char not_arg_91970;
                            char res_91971;
                            
                            res_91965 = x_91948 + res_91903;
                            res_91966 = i_91951 + 1;
                            *(__global int16_t *) &mem_97148[(group_id_91900 *
                                                              (num_elems_79093 *
                                                               group_sizze_91893) +
                                                              i_91951 *
                                                              group_sizze_91893 +
                                                              local_tid_91899) *
                                                             2] = x_91948;
                            *(__global int16_t *) &mem_97151[(group_id_91900 *
                                                              (num_elems_79093 *
                                                               group_sizze_91893) +
                                                              i_91951 *
                                                              group_sizze_91893 +
                                                              local_tid_91899) *
                                                             2] = y_91949;
                            *(__global double *) &mem_97154[(group_id_91900 *
                                                             (num_elems_79093 *
                                                              group_sizze_91893) +
                                                             i_91951 *
                                                             group_sizze_91893 +
                                                             local_tid_91899) *
                                                            8] = res_91919;
                            not_arg_91970 = res_91965 == res_91906;
                            res_91971 = !not_arg_91970;
                            res_91957 = res_91965;
                            res_91958 = y_91949;
                            res_91959 = x_91955;
                            res_91960 = res_91966;
                            res_91964 = res_91971;
                        } else {
                            int16_t x_91972;
                            char cond_91973;
                            int16_t res_91974;
                            int16_t res_91975;
                            double res_91976;
                            int32_t res_91977;
                            char res_91981;
                            
                            x_91972 = y_91949 + res_91904;
                            cond_91973 = x_91972 == res_91907;
                            if (cond_91973) {
                                double x_91982;
                                double x_91983;
                                double lw_val_91984;
                                
                                x_91982 = delta_78976 - chi_91950;
                                x_91983 = x_91982 / res_91917;
                                lw_val_91984 = x_91983 * res_91919;
                                *(__global
                                  int16_t *) &mem_97148[(group_id_91900 *
                                                         (num_elems_79093 *
                                                          group_sizze_91893) +
                                                         i_91951 *
                                                         group_sizze_91893 +
                                                         local_tid_91899) * 2] =
                                    x_91948;
                                *(__global
                                  int16_t *) &mem_97151[(group_id_91900 *
                                                         (num_elems_79093 *
                                                          group_sizze_91893) +
                                                         i_91951 *
                                                         group_sizze_91893 +
                                                         local_tid_91899) * 2] =
                                    y_91949;
                                *(__global
                                  double *) &mem_97154[(group_id_91900 *
                                                        (num_elems_79093 *
                                                         group_sizze_91893) +
                                                        i_91951 *
                                                        group_sizze_91893 +
                                                        local_tid_91899) * 8] =
                                    lw_val_91984;
                                res_91974 = x_91948;
                                res_91975 = y_91949;
                                res_91976 = chi_91950;
                                res_91977 = i_91951;
                                res_91981 = 0;
                            } else {
                                int16_t x_91988;
                                char cond_91989;
                                int16_t res_91990;
                                int16_t res_91991;
                                double res_91992;
                                int32_t res_91993;
                                char res_91997;
                                
                                x_91988 = x_91948 + res_91903;
                                cond_91989 = x_91988 == res_91906;
                                if (cond_91989) {
                                    res_91990 = x_91948;
                                } else {
                                    res_91990 = x_91988;
                                }
                                if (cond_91989) {
                                    res_91991 = y_91949;
                                } else {
                                    res_91991 = x_91972;
                                }
                                if (cond_91989) {
                                    double x_91998;
                                    double x_91999;
                                    double lw_val_92000;
                                    double x_92004;
                                    double x_92005;
                                    double lw_val_92006;
                                    int32_t i_92007;
                                    
                                    x_91998 = delta_78976 - chi_91950;
                                    x_91999 = x_91998 / res_91917;
                                    lw_val_92000 = x_91999 * res_91919;
                                    *(__global
                                      int16_t *) &mem_97148[(group_id_91900 *
                                                             (num_elems_79093 *
                                                              group_sizze_91893) +
                                                             i_91951 *
                                                             group_sizze_91893 +
                                                             local_tid_91899) *
                                                            2] = x_91948;
                                    *(__global
                                      int16_t *) &mem_97151[(group_id_91900 *
                                                             (num_elems_79093 *
                                                              group_sizze_91893) +
                                                             i_91951 *
                                                             group_sizze_91893 +
                                                             local_tid_91899) *
                                                            2] = y_91949;
                                    *(__global
                                      double *) &mem_97154[(group_id_91900 *
                                                            (num_elems_79093 *
                                                             group_sizze_91893) +
                                                            i_91951 *
                                                            group_sizze_91893 +
                                                            local_tid_91899) *
                                                           8] = lw_val_92000;
                                    x_92004 = x_91926 + chi_91950;
                                    x_92005 = x_92004 / res_91917;
                                    lw_val_92006 = x_92005 * res_91919;
                                    i_92007 = i_91951 + 1;
                                    *(__global
                                      int16_t *) &mem_97148[(group_id_91900 *
                                                             (num_elems_79093 *
                                                              group_sizze_91893) +
                                                             i_92007 *
                                                             group_sizze_91893 +
                                                             local_tid_91899) *
                                                            2] = x_91948;
                                    *(__global
                                      int16_t *) &mem_97151[(group_id_91900 *
                                                             (num_elems_79093 *
                                                              group_sizze_91893) +
                                                             i_92007 *
                                                             group_sizze_91893 +
                                                             local_tid_91899) *
                                                            2] = x_91972;
                                    *(__global
                                      double *) &mem_97154[(group_id_91900 *
                                                            (num_elems_79093 *
                                                             group_sizze_91893) +
                                                            i_92007 *
                                                            group_sizze_91893 +
                                                            local_tid_91899) *
                                                           8] = lw_val_92006;
                                    res_91992 = chi_91950;
                                    res_91993 = i_91951;
                                    res_91997 = 0;
                                } else {
                                    double res_92011;
                                    int32_t res_92012;
                                    double x_92013;
                                    double x_92014;
                                    double lw_val_92015;
                                    double x_92019;
                                    double x_92020;
                                    double lw_val_92021;
                                    int32_t i_92022;
                                    char x_92026;
                                    char y_92027;
                                    char not_arg_92028;
                                    char res_92029;
                                    
                                    res_92011 = x_91955 - delta_78976;
                                    res_92012 = i_91951 + 2;
                                    x_92013 = delta_78976 - chi_91950;
                                    x_92014 = x_92013 / res_91917;
                                    lw_val_92015 = x_92014 * res_91919;
                                    *(__global
                                      int16_t *) &mem_97148[(group_id_91900 *
                                                             (num_elems_79093 *
                                                              group_sizze_91893) +
                                                             i_91951 *
                                                             group_sizze_91893 +
                                                             local_tid_91899) *
                                                            2] = x_91948;
                                    *(__global
                                      int16_t *) &mem_97151[(group_id_91900 *
                                                             (num_elems_79093 *
                                                              group_sizze_91893) +
                                                             i_91951 *
                                                             group_sizze_91893 +
                                                             local_tid_91899) *
                                                            2] = y_91949;
                                    *(__global
                                      double *) &mem_97154[(group_id_91900 *
                                                            (num_elems_79093 *
                                                             group_sizze_91893) +
                                                            i_91951 *
                                                            group_sizze_91893 +
                                                            local_tid_91899) *
                                                           8] = lw_val_92015;
                                    x_92019 = x_91926 + chi_91950;
                                    x_92020 = x_92019 / res_91917;
                                    lw_val_92021 = x_92020 * res_91919;
                                    i_92022 = i_91951 + 1;
                                    *(__global
                                      int16_t *) &mem_97148[(group_id_91900 *
                                                             (num_elems_79093 *
                                                              group_sizze_91893) +
                                                             i_92022 *
                                                             group_sizze_91893 +
                                                             local_tid_91899) *
                                                            2] = x_91948;
                                    *(__global
                                      int16_t *) &mem_97151[(group_id_91900 *
                                                             (num_elems_79093 *
                                                              group_sizze_91893) +
                                                             i_92022 *
                                                             group_sizze_91893 +
                                                             local_tid_91899) *
                                                            2] = x_91972;
                                    *(__global
                                      double *) &mem_97154[(group_id_91900 *
                                                            (num_elems_79093 *
                                                             group_sizze_91893) +
                                                            i_92022 *
                                                            group_sizze_91893 +
                                                            local_tid_91899) *
                                                           8] = lw_val_92021;
                                    x_92026 = !cond_91989;
                                    y_92027 = x_92026 && cond_91973;
                                    not_arg_92028 = cond_91989 || y_92027;
                                    res_92029 = !not_arg_92028;
                                    res_91992 = res_92011;
                                    res_91993 = res_92012;
                                    res_91997 = res_92029;
                                }
                                res_91974 = res_91990;
                                res_91975 = res_91991;
                                res_91976 = res_91992;
                                res_91977 = res_91993;
                                res_91981 = res_91997;
                            }
                            res_91957 = res_91974;
                            res_91958 = res_91975;
                            res_91959 = res_91976;
                            res_91960 = res_91977;
                            res_91964 = res_91981;
                        }
                        
                        char loop_while_tmp_98180 = res_91964;
                        int16_t x_tmp_98181 = res_91957;
                        int16_t y_tmp_98182 = res_91958;
                        double chi_tmp_98183 = res_91959;
                        int32_t i_tmp_98184;
                        
                        i_tmp_98184 = res_91960;
                        loop_while_91947 = loop_while_tmp_98180;
                        x_91948 = x_tmp_98181;
                        y_91949 = y_tmp_98182;
                        chi_91950 = chi_tmp_98183;
                        i_91951 = i_tmp_98184;
                    }
                    res_91939 = loop_while_91947;
                    res_91940 = x_91948;
                    res_91941 = y_91949;
                    res_91942 = chi_91950;
                    res_91943 = i_91951;
                } else {
                    char res_92033;
                    int16_t res_92034;
                    int16_t res_92035;
                    double res_92036;
                    int32_t res_92037;
                    
                    *(__global int16_t *) &mem_97148[(group_id_91900 *
                                                      (num_elems_79093 *
                                                       group_sizze_91893) +
                                                      local_tid_91899) * 2] =
                        res_91908;
                    *(__global int16_t *) &mem_97151[(group_id_91900 *
                                                      (num_elems_79093 *
                                                       group_sizze_91893) +
                                                      local_tid_91899) * 2] =
                        arg_91924;
                    *(__global double *) &mem_97154[(group_id_91900 *
                                                     (num_elems_79093 *
                                                      group_sizze_91893) +
                                                     local_tid_91899) * 8] =
                        lw_val_91929;
                    
                    char loop_while_92041;
                    int16_t x_92042;
                    int16_t y_92043;
                    double chi_92044;
                    int32_t i_92045;
                    
                    loop_while_92041 = 1;
                    x_92042 = arg_91923;
                    y_92043 = arg_91924;
                    chi_92044 = arg_91925;
                    i_92045 = 1;
                    while (loop_while_92041) {
                        double x_92049 = chi_92044 + res_91917;
                        char cond_92050 = x_92049 < delta_78976;
                        int16_t res_92051;
                        int16_t res_92052;
                        double res_92053;
                        int32_t res_92054;
                        char res_92058;
                        
                        if (cond_92050) {
                            int16_t res_92059;
                            int32_t res_92060;
                            char not_arg_92064;
                            char res_92065;
                            
                            res_92059 = x_92042 + res_91903;
                            res_92060 = i_92045 + 1;
                            *(__global int16_t *) &mem_97148[(group_id_91900 *
                                                              (num_elems_79093 *
                                                               group_sizze_91893) +
                                                              i_92045 *
                                                              group_sizze_91893 +
                                                              local_tid_91899) *
                                                             2] = x_92042;
                            *(__global int16_t *) &mem_97151[(group_id_91900 *
                                                              (num_elems_79093 *
                                                               group_sizze_91893) +
                                                              i_92045 *
                                                              group_sizze_91893 +
                                                              local_tid_91899) *
                                                             2] = y_92043;
                            *(__global double *) &mem_97154[(group_id_91900 *
                                                             (num_elems_79093 *
                                                              group_sizze_91893) +
                                                             i_92045 *
                                                             group_sizze_91893 +
                                                             local_tid_91899) *
                                                            8] = res_91919;
                            not_arg_92064 = res_92059 == res_91906;
                            res_92065 = !not_arg_92064;
                            res_92051 = res_92059;
                            res_92052 = y_92043;
                            res_92053 = x_92049;
                            res_92054 = res_92060;
                            res_92058 = res_92065;
                        } else {
                            int16_t x_92066;
                            char cond_92067;
                            int16_t res_92068;
                            int16_t res_92069;
                            double res_92070;
                            int32_t res_92071;
                            char res_92075;
                            
                            x_92066 = y_92043 + res_91904;
                            cond_92067 = x_92066 == res_91907;
                            if (cond_92067) {
                                double x_92076;
                                double x_92077;
                                double lw_val_92078;
                                
                                x_92076 = delta_78976 - chi_92044;
                                x_92077 = x_92076 / res_91917;
                                lw_val_92078 = x_92077 * res_91919;
                                *(__global
                                  int16_t *) &mem_97148[(group_id_91900 *
                                                         (num_elems_79093 *
                                                          group_sizze_91893) +
                                                         i_92045 *
                                                         group_sizze_91893 +
                                                         local_tid_91899) * 2] =
                                    x_92042;
                                *(__global
                                  int16_t *) &mem_97151[(group_id_91900 *
                                                         (num_elems_79093 *
                                                          group_sizze_91893) +
                                                         i_92045 *
                                                         group_sizze_91893 +
                                                         local_tid_91899) * 2] =
                                    y_92043;
                                *(__global
                                  double *) &mem_97154[(group_id_91900 *
                                                        (num_elems_79093 *
                                                         group_sizze_91893) +
                                                        i_92045 *
                                                        group_sizze_91893 +
                                                        local_tid_91899) * 8] =
                                    lw_val_92078;
                                res_92068 = x_92042;
                                res_92069 = y_92043;
                                res_92070 = chi_92044;
                                res_92071 = i_92045;
                                res_92075 = 0;
                            } else {
                                int16_t x_92082;
                                char cond_92083;
                                int16_t res_92084;
                                int16_t res_92085;
                                double res_92086;
                                int32_t res_92087;
                                char res_92091;
                                
                                x_92082 = x_92042 + res_91903;
                                cond_92083 = x_92082 == res_91906;
                                if (cond_92083) {
                                    res_92084 = x_92042;
                                } else {
                                    res_92084 = x_92082;
                                }
                                if (cond_92083) {
                                    res_92085 = y_92043;
                                } else {
                                    res_92085 = x_92066;
                                }
                                if (cond_92083) {
                                    double x_92092;
                                    double x_92093;
                                    double lw_val_92094;
                                    double x_92098;
                                    double x_92099;
                                    double lw_val_92100;
                                    int32_t i_92101;
                                    
                                    x_92092 = delta_78976 - chi_92044;
                                    x_92093 = x_92092 / res_91917;
                                    lw_val_92094 = x_92093 * res_91919;
                                    *(__global
                                      int16_t *) &mem_97148[(group_id_91900 *
                                                             (num_elems_79093 *
                                                              group_sizze_91893) +
                                                             i_92045 *
                                                             group_sizze_91893 +
                                                             local_tid_91899) *
                                                            2] = x_92042;
                                    *(__global
                                      int16_t *) &mem_97151[(group_id_91900 *
                                                             (num_elems_79093 *
                                                              group_sizze_91893) +
                                                             i_92045 *
                                                             group_sizze_91893 +
                                                             local_tid_91899) *
                                                            2] = y_92043;
                                    *(__global
                                      double *) &mem_97154[(group_id_91900 *
                                                            (num_elems_79093 *
                                                             group_sizze_91893) +
                                                            i_92045 *
                                                            group_sizze_91893 +
                                                            local_tid_91899) *
                                                           8] = lw_val_92094;
                                    x_92098 = x_91926 + chi_92044;
                                    x_92099 = x_92098 / res_91917;
                                    lw_val_92100 = x_92099 * res_91919;
                                    i_92101 = i_92045 + 1;
                                    *(__global
                                      int16_t *) &mem_97148[(group_id_91900 *
                                                             (num_elems_79093 *
                                                              group_sizze_91893) +
                                                             i_92101 *
                                                             group_sizze_91893 +
                                                             local_tid_91899) *
                                                            2] = x_92042;
                                    *(__global
                                      int16_t *) &mem_97151[(group_id_91900 *
                                                             (num_elems_79093 *
                                                              group_sizze_91893) +
                                                             i_92101 *
                                                             group_sizze_91893 +
                                                             local_tid_91899) *
                                                            2] = x_92066;
                                    *(__global
                                      double *) &mem_97154[(group_id_91900 *
                                                            (num_elems_79093 *
                                                             group_sizze_91893) +
                                                            i_92101 *
                                                            group_sizze_91893 +
                                                            local_tid_91899) *
                                                           8] = lw_val_92100;
                                    res_92086 = chi_92044;
                                    res_92087 = i_92045;
                                    res_92091 = 0;
                                } else {
                                    double res_92105;
                                    int32_t res_92106;
                                    double x_92107;
                                    double x_92108;
                                    double lw_val_92109;
                                    double x_92113;
                                    double x_92114;
                                    double lw_val_92115;
                                    int32_t i_92116;
                                    char x_92120;
                                    char y_92121;
                                    char not_arg_92122;
                                    char res_92123;
                                    
                                    res_92105 = x_92049 - delta_78976;
                                    res_92106 = i_92045 + 2;
                                    x_92107 = delta_78976 - chi_92044;
                                    x_92108 = x_92107 / res_91917;
                                    lw_val_92109 = x_92108 * res_91919;
                                    *(__global
                                      int16_t *) &mem_97148[(group_id_91900 *
                                                             (num_elems_79093 *
                                                              group_sizze_91893) +
                                                             i_92045 *
                                                             group_sizze_91893 +
                                                             local_tid_91899) *
                                                            2] = x_92042;
                                    *(__global
                                      int16_t *) &mem_97151[(group_id_91900 *
                                                             (num_elems_79093 *
                                                              group_sizze_91893) +
                                                             i_92045 *
                                                             group_sizze_91893 +
                                                             local_tid_91899) *
                                                            2] = y_92043;
                                    *(__global
                                      double *) &mem_97154[(group_id_91900 *
                                                            (num_elems_79093 *
                                                             group_sizze_91893) +
                                                            i_92045 *
                                                            group_sizze_91893 +
                                                            local_tid_91899) *
                                                           8] = lw_val_92109;
                                    x_92113 = x_91926 + chi_92044;
                                    x_92114 = x_92113 / res_91917;
                                    lw_val_92115 = x_92114 * res_91919;
                                    i_92116 = i_92045 + 1;
                                    *(__global
                                      int16_t *) &mem_97148[(group_id_91900 *
                                                             (num_elems_79093 *
                                                              group_sizze_91893) +
                                                             i_92116 *
                                                             group_sizze_91893 +
                                                             local_tid_91899) *
                                                            2] = x_92042;
                                    *(__global
                                      int16_t *) &mem_97151[(group_id_91900 *
                                                             (num_elems_79093 *
                                                              group_sizze_91893) +
                                                             i_92116 *
                                                             group_sizze_91893 +
                                                             local_tid_91899) *
                                                            2] = x_92066;
                                    *(__global
                                      double *) &mem_97154[(group_id_91900 *
                                                            (num_elems_79093 *
                                                             group_sizze_91893) +
                                                            i_92116 *
                                                            group_sizze_91893 +
                                                            local_tid_91899) *
                                                           8] = lw_val_92115;
                                    x_92120 = !cond_92083;
                                    y_92121 = x_92120 && cond_92067;
                                    not_arg_92122 = cond_92083 || y_92121;
                                    res_92123 = !not_arg_92122;
                                    res_92086 = res_92105;
                                    res_92087 = res_92106;
                                    res_92091 = res_92123;
                                }
                                res_92068 = res_92084;
                                res_92069 = res_92085;
                                res_92070 = res_92086;
                                res_92071 = res_92087;
                                res_92075 = res_92091;
                            }
                            res_92051 = res_92068;
                            res_92052 = res_92069;
                            res_92053 = res_92070;
                            res_92054 = res_92071;
                            res_92058 = res_92075;
                        }
                        
                        char loop_while_tmp_98188 = res_92058;
                        int16_t x_tmp_98189 = res_92051;
                        int16_t y_tmp_98190 = res_92052;
                        double chi_tmp_98191 = res_92053;
                        int32_t i_tmp_98192;
                        
                        i_tmp_98192 = res_92054;
                        loop_while_92041 = loop_while_tmp_98188;
                        x_92042 = x_tmp_98189;
                        y_92043 = y_tmp_98190;
                        chi_92044 = chi_tmp_98191;
                        i_92045 = i_tmp_98192;
                    }
                    res_92033 = loop_while_92041;
                    res_92034 = x_92042;
                    res_92035 = y_92043;
                    res_92036 = chi_92044;
                    res_92037 = i_92045;
                }
            } else {
                char res_92124;
                int16_t res_92125;
                int16_t res_92126;
                double res_92127;
                int32_t res_92128;
                char loop_while_92132;
                int16_t x_92133;
                int16_t y_92134;
                double chi_92135;
                int32_t i_92136;
                
                loop_while_92132 = 1;
                x_92133 = res_91908;
                y_92134 = res_91909;
                chi_92135 = x_91901;
                i_92136 = 0;
                while (loop_while_92132) {
                    double x_92140 = chi_92135 + res_91917;
                    char cond_92141 = x_92140 < delta_78976;
                    int16_t res_92142;
                    int16_t res_92143;
                    double res_92144;
                    int32_t res_92145;
                    char res_92149;
                    
                    if (cond_92141) {
                        int16_t res_92150;
                        int32_t res_92151;
                        char not_arg_92155;
                        char res_92156;
                        
                        res_92150 = x_92133 + res_91903;
                        res_92151 = i_92136 + 1;
                        *(__global int16_t *) &mem_97148[(group_id_91900 *
                                                          (num_elems_79093 *
                                                           group_sizze_91893) +
                                                          i_92136 *
                                                          group_sizze_91893 +
                                                          local_tid_91899) *
                                                         2] = x_92133;
                        *(__global int16_t *) &mem_97151[(group_id_91900 *
                                                          (num_elems_79093 *
                                                           group_sizze_91893) +
                                                          i_92136 *
                                                          group_sizze_91893 +
                                                          local_tid_91899) *
                                                         2] = y_92134;
                        *(__global double *) &mem_97154[(group_id_91900 *
                                                         (num_elems_79093 *
                                                          group_sizze_91893) +
                                                         i_92136 *
                                                         group_sizze_91893 +
                                                         local_tid_91899) * 8] =
                            res_91919;
                        not_arg_92155 = res_92150 == res_91906;
                        res_92156 = !not_arg_92155;
                        res_92142 = res_92150;
                        res_92143 = y_92134;
                        res_92144 = x_92140;
                        res_92145 = res_92151;
                        res_92149 = res_92156;
                    } else {
                        int16_t x_92157;
                        char cond_92158;
                        int16_t res_92159;
                        int16_t res_92160;
                        double res_92161;
                        int32_t res_92162;
                        char res_92166;
                        
                        x_92157 = y_92134 + res_91904;
                        cond_92158 = x_92157 == res_91907;
                        if (cond_92158) {
                            double x_92167;
                            double x_92168;
                            double lw_val_92169;
                            
                            x_92167 = delta_78976 - chi_92135;
                            x_92168 = x_92167 / res_91917;
                            lw_val_92169 = x_92168 * res_91919;
                            *(__global int16_t *) &mem_97148[(group_id_91900 *
                                                              (num_elems_79093 *
                                                               group_sizze_91893) +
                                                              i_92136 *
                                                              group_sizze_91893 +
                                                              local_tid_91899) *
                                                             2] = x_92133;
                            *(__global int16_t *) &mem_97151[(group_id_91900 *
                                                              (num_elems_79093 *
                                                               group_sizze_91893) +
                                                              i_92136 *
                                                              group_sizze_91893 +
                                                              local_tid_91899) *
                                                             2] = y_92134;
                            *(__global double *) &mem_97154[(group_id_91900 *
                                                             (num_elems_79093 *
                                                              group_sizze_91893) +
                                                             i_92136 *
                                                             group_sizze_91893 +
                                                             local_tid_91899) *
                                                            8] = lw_val_92169;
                            res_92159 = x_92133;
                            res_92160 = y_92134;
                            res_92161 = chi_92135;
                            res_92162 = i_92136;
                            res_92166 = 0;
                        } else {
                            int16_t x_92173;
                            char cond_92174;
                            int16_t res_92175;
                            int16_t res_92176;
                            double res_92177;
                            int32_t res_92178;
                            char res_92182;
                            
                            x_92173 = x_92133 + res_91903;
                            cond_92174 = x_92173 == res_91906;
                            if (cond_92174) {
                                res_92175 = x_92133;
                            } else {
                                res_92175 = x_92173;
                            }
                            if (cond_92174) {
                                res_92176 = y_92134;
                            } else {
                                res_92176 = x_92157;
                            }
                            if (cond_92174) {
                                double x_92183;
                                double x_92184;
                                double lw_val_92185;
                                double x_92189;
                                double x_92190;
                                double lw_val_92191;
                                int32_t i_92192;
                                
                                x_92183 = delta_78976 - chi_92135;
                                x_92184 = x_92183 / res_91917;
                                lw_val_92185 = x_92184 * res_91919;
                                *(__global
                                  int16_t *) &mem_97148[(group_id_91900 *
                                                         (num_elems_79093 *
                                                          group_sizze_91893) +
                                                         i_92136 *
                                                         group_sizze_91893 +
                                                         local_tid_91899) * 2] =
                                    x_92133;
                                *(__global
                                  int16_t *) &mem_97151[(group_id_91900 *
                                                         (num_elems_79093 *
                                                          group_sizze_91893) +
                                                         i_92136 *
                                                         group_sizze_91893 +
                                                         local_tid_91899) * 2] =
                                    y_92134;
                                *(__global
                                  double *) &mem_97154[(group_id_91900 *
                                                        (num_elems_79093 *
                                                         group_sizze_91893) +
                                                        i_92136 *
                                                        group_sizze_91893 +
                                                        local_tid_91899) * 8] =
                                    lw_val_92185;
                                x_92189 = x_91926 + chi_92135;
                                x_92190 = x_92189 / res_91917;
                                lw_val_92191 = x_92190 * res_91919;
                                i_92192 = i_92136 + 1;
                                *(__global
                                  int16_t *) &mem_97148[(group_id_91900 *
                                                         (num_elems_79093 *
                                                          group_sizze_91893) +
                                                         i_92192 *
                                                         group_sizze_91893 +
                                                         local_tid_91899) * 2] =
                                    x_92133;
                                *(__global
                                  int16_t *) &mem_97151[(group_id_91900 *
                                                         (num_elems_79093 *
                                                          group_sizze_91893) +
                                                         i_92192 *
                                                         group_sizze_91893 +
                                                         local_tid_91899) * 2] =
                                    x_92157;
                                *(__global
                                  double *) &mem_97154[(group_id_91900 *
                                                        (num_elems_79093 *
                                                         group_sizze_91893) +
                                                        i_92192 *
                                                        group_sizze_91893 +
                                                        local_tid_91899) * 8] =
                                    lw_val_92191;
                                res_92177 = chi_92135;
                                res_92178 = i_92136;
                                res_92182 = 0;
                            } else {
                                double res_92196;
                                int32_t res_92197;
                                double x_92198;
                                double x_92199;
                                double lw_val_92200;
                                double x_92204;
                                double x_92205;
                                double lw_val_92206;
                                int32_t i_92207;
                                char x_92211;
                                char y_92212;
                                char not_arg_92213;
                                char res_92214;
                                
                                res_92196 = x_92140 - delta_78976;
                                res_92197 = i_92136 + 2;
                                x_92198 = delta_78976 - chi_92135;
                                x_92199 = x_92198 / res_91917;
                                lw_val_92200 = x_92199 * res_91919;
                                *(__global
                                  int16_t *) &mem_97148[(group_id_91900 *
                                                         (num_elems_79093 *
                                                          group_sizze_91893) +
                                                         i_92136 *
                                                         group_sizze_91893 +
                                                         local_tid_91899) * 2] =
                                    x_92133;
                                *(__global
                                  int16_t *) &mem_97151[(group_id_91900 *
                                                         (num_elems_79093 *
                                                          group_sizze_91893) +
                                                         i_92136 *
                                                         group_sizze_91893 +
                                                         local_tid_91899) * 2] =
                                    y_92134;
                                *(__global
                                  double *) &mem_97154[(group_id_91900 *
                                                        (num_elems_79093 *
                                                         group_sizze_91893) +
                                                        i_92136 *
                                                        group_sizze_91893 +
                                                        local_tid_91899) * 8] =
                                    lw_val_92200;
                                x_92204 = x_91926 + chi_92135;
                                x_92205 = x_92204 / res_91917;
                                lw_val_92206 = x_92205 * res_91919;
                                i_92207 = i_92136 + 1;
                                *(__global
                                  int16_t *) &mem_97148[(group_id_91900 *
                                                         (num_elems_79093 *
                                                          group_sizze_91893) +
                                                         i_92207 *
                                                         group_sizze_91893 +
                                                         local_tid_91899) * 2] =
                                    x_92133;
                                *(__global
                                  int16_t *) &mem_97151[(group_id_91900 *
                                                         (num_elems_79093 *
                                                          group_sizze_91893) +
                                                         i_92207 *
                                                         group_sizze_91893 +
                                                         local_tid_91899) * 2] =
                                    x_92157;
                                *(__global
                                  double *) &mem_97154[(group_id_91900 *
                                                        (num_elems_79093 *
                                                         group_sizze_91893) +
                                                        i_92207 *
                                                        group_sizze_91893 +
                                                        local_tid_91899) * 8] =
                                    lw_val_92206;
                                x_92211 = !cond_92174;
                                y_92212 = x_92211 && cond_92158;
                                not_arg_92213 = cond_92174 || y_92212;
                                res_92214 = !not_arg_92213;
                                res_92177 = res_92196;
                                res_92178 = res_92197;
                                res_92182 = res_92214;
                            }
                            res_92159 = res_92175;
                            res_92160 = res_92176;
                            res_92161 = res_92177;
                            res_92162 = res_92178;
                            res_92166 = res_92182;
                        }
                        res_92142 = res_92159;
                        res_92143 = res_92160;
                        res_92144 = res_92161;
                        res_92145 = res_92162;
                        res_92149 = res_92166;
                    }
                    
                    char loop_while_tmp_98196 = res_92149;
                    int16_t x_tmp_98197 = res_92142;
                    int16_t y_tmp_98198 = res_92143;
                    double chi_tmp_98199 = res_92144;
                    int32_t i_tmp_98200;
                    
                    i_tmp_98200 = res_92145;
                    loop_while_92132 = loop_while_tmp_98196;
                    x_92133 = x_tmp_98197;
                    y_92134 = y_tmp_98198;
                    chi_92135 = chi_tmp_98199;
                    i_92136 = i_tmp_98200;
                }
                res_92124 = loop_while_92132;
                res_92125 = x_92133;
                res_92126 = y_92134;
                res_92127 = chi_92135;
                res_92128 = i_92136;
            }
        } else {
            if (cond_91920) {
                if (cond_91922) {
                    char res_92221;
                    int16_t res_92222;
                    int16_t res_92223;
                    double res_92224;
                    int32_t res_92225;
                    char loop_while_92229;
                    int16_t x_92230;
                    int16_t y_92231;
                    double chi_92232;
                    int32_t i_92233;
                    
                    loop_while_92229 = 1;
                    x_92230 = res_91908;
                    y_92231 = arg_91924;
                    chi_92232 = x_91921;
                    i_92233 = 0;
                    while (loop_while_92229) {
                        double x_92237 = chi_92232 + res_91917;
                        char cond_92238 = x_92237 < delta_78976;
                        int16_t res_92239;
                        int16_t res_92240;
                        double res_92241;
                        int32_t res_92242;
                        char res_92246;
                        
                        if (cond_92238) {
                            int16_t res_92247;
                            int32_t res_92248;
                            char not_arg_92252;
                            char res_92253;
                            
                            res_92247 = y_92231 + res_91904;
                            res_92248 = i_92233 + 1;
                            *(__global int16_t *) &mem_97148[(group_id_91900 *
                                                              (num_elems_79093 *
                                                               group_sizze_91893) +
                                                              i_92233 *
                                                              group_sizze_91893 +
                                                              local_tid_91899) *
                                                             2] = x_92230;
                            *(__global int16_t *) &mem_97151[(group_id_91900 *
                                                              (num_elems_79093 *
                                                               group_sizze_91893) +
                                                              i_92233 *
                                                              group_sizze_91893 +
                                                              local_tid_91899) *
                                                             2] = y_92231;
                            *(__global double *) &mem_97154[(group_id_91900 *
                                                             (num_elems_79093 *
                                                              group_sizze_91893) +
                                                             i_92233 *
                                                             group_sizze_91893 +
                                                             local_tid_91899) *
                                                            8] = res_91919;
                            not_arg_92252 = res_92247 == res_91907;
                            res_92253 = !not_arg_92252;
                            res_92239 = x_92230;
                            res_92240 = res_92247;
                            res_92241 = x_92237;
                            res_92242 = res_92248;
                            res_92246 = res_92253;
                        } else {
                            int16_t x_92254;
                            char cond_92255;
                            int16_t res_92256;
                            int16_t res_92257;
                            double res_92258;
                            int32_t res_92259;
                            char res_92263;
                            
                            x_92254 = x_92230 + res_91903;
                            cond_92255 = x_92254 == res_91906;
                            if (cond_92255) {
                                double x_92264;
                                double x_92265;
                                double lw_val_92266;
                                
                                x_92264 = delta_78976 - chi_92232;
                                x_92265 = x_92264 / res_91917;
                                lw_val_92266 = x_92265 * res_91919;
                                *(__global
                                  int16_t *) &mem_97148[(group_id_91900 *
                                                         (num_elems_79093 *
                                                          group_sizze_91893) +
                                                         i_92233 *
                                                         group_sizze_91893 +
                                                         local_tid_91899) * 2] =
                                    x_92230;
                                *(__global
                                  int16_t *) &mem_97151[(group_id_91900 *
                                                         (num_elems_79093 *
                                                          group_sizze_91893) +
                                                         i_92233 *
                                                         group_sizze_91893 +
                                                         local_tid_91899) * 2] =
                                    y_92231;
                                *(__global
                                  double *) &mem_97154[(group_id_91900 *
                                                        (num_elems_79093 *
                                                         group_sizze_91893) +
                                                        i_92233 *
                                                        group_sizze_91893 +
                                                        local_tid_91899) * 8] =
                                    lw_val_92266;
                                res_92256 = x_92230;
                                res_92257 = y_92231;
                                res_92258 = chi_92232;
                                res_92259 = i_92233;
                                res_92263 = 0;
                            } else {
                                int16_t x_92270;
                                char cond_92271;
                                int16_t res_92272;
                                int16_t res_92273;
                                double res_92274;
                                int32_t res_92275;
                                char res_92279;
                                
                                x_92270 = y_92231 + res_91904;
                                cond_92271 = x_92270 == res_91907;
                                if (cond_92271) {
                                    res_92272 = x_92230;
                                } else {
                                    res_92272 = x_92254;
                                }
                                if (cond_92271) {
                                    res_92273 = y_92231;
                                } else {
                                    res_92273 = x_92270;
                                }
                                if (cond_92271) {
                                    double x_92280;
                                    double x_92281;
                                    double lw_val_92282;
                                    double x_92286;
                                    double x_92287;
                                    double lw_val_92288;
                                    int32_t i_92289;
                                    
                                    x_92280 = delta_78976 - chi_92232;
                                    x_92281 = x_92280 / res_91917;
                                    lw_val_92282 = x_92281 * res_91919;
                                    *(__global
                                      int16_t *) &mem_97148[(group_id_91900 *
                                                             (num_elems_79093 *
                                                              group_sizze_91893) +
                                                             i_92233 *
                                                             group_sizze_91893 +
                                                             local_tid_91899) *
                                                            2] = x_92230;
                                    *(__global
                                      int16_t *) &mem_97151[(group_id_91900 *
                                                             (num_elems_79093 *
                                                              group_sizze_91893) +
                                                             i_92233 *
                                                             group_sizze_91893 +
                                                             local_tid_91899) *
                                                            2] = y_92231;
                                    *(__global
                                      double *) &mem_97154[(group_id_91900 *
                                                            (num_elems_79093 *
                                                             group_sizze_91893) +
                                                            i_92233 *
                                                            group_sizze_91893 +
                                                            local_tid_91899) *
                                                           8] = lw_val_92282;
                                    x_92286 = x_91926 + chi_92232;
                                    x_92287 = x_92286 / res_91917;
                                    lw_val_92288 = x_92287 * res_91919;
                                    i_92289 = i_92233 + 1;
                                    *(__global
                                      int16_t *) &mem_97148[(group_id_91900 *
                                                             (num_elems_79093 *
                                                              group_sizze_91893) +
                                                             i_92289 *
                                                             group_sizze_91893 +
                                                             local_tid_91899) *
                                                            2] = x_92254;
                                    *(__global
                                      int16_t *) &mem_97151[(group_id_91900 *
                                                             (num_elems_79093 *
                                                              group_sizze_91893) +
                                                             i_92289 *
                                                             group_sizze_91893 +
                                                             local_tid_91899) *
                                                            2] = y_92231;
                                    *(__global
                                      double *) &mem_97154[(group_id_91900 *
                                                            (num_elems_79093 *
                                                             group_sizze_91893) +
                                                            i_92289 *
                                                            group_sizze_91893 +
                                                            local_tid_91899) *
                                                           8] = lw_val_92288;
                                    res_92274 = chi_92232;
                                    res_92275 = i_92233;
                                    res_92279 = 0;
                                } else {
                                    double res_92293;
                                    int32_t res_92294;
                                    double x_92295;
                                    double x_92296;
                                    double lw_val_92297;
                                    double x_92301;
                                    double x_92302;
                                    double lw_val_92303;
                                    int32_t i_92304;
                                    char x_92308;
                                    char y_92309;
                                    char not_arg_92310;
                                    char res_92311;
                                    
                                    res_92293 = x_92237 - delta_78976;
                                    res_92294 = i_92233 + 2;
                                    x_92295 = delta_78976 - chi_92232;
                                    x_92296 = x_92295 / res_91917;
                                    lw_val_92297 = x_92296 * res_91919;
                                    *(__global
                                      int16_t *) &mem_97148[(group_id_91900 *
                                                             (num_elems_79093 *
                                                              group_sizze_91893) +
                                                             i_92233 *
                                                             group_sizze_91893 +
                                                             local_tid_91899) *
                                                            2] = x_92230;
                                    *(__global
                                      int16_t *) &mem_97151[(group_id_91900 *
                                                             (num_elems_79093 *
                                                              group_sizze_91893) +
                                                             i_92233 *
                                                             group_sizze_91893 +
                                                             local_tid_91899) *
                                                            2] = y_92231;
                                    *(__global
                                      double *) &mem_97154[(group_id_91900 *
                                                            (num_elems_79093 *
                                                             group_sizze_91893) +
                                                            i_92233 *
                                                            group_sizze_91893 +
                                                            local_tid_91899) *
                                                           8] = lw_val_92297;
                                    x_92301 = x_91926 + chi_92232;
                                    x_92302 = x_92301 / res_91917;
                                    lw_val_92303 = x_92302 * res_91919;
                                    i_92304 = i_92233 + 1;
                                    *(__global
                                      int16_t *) &mem_97148[(group_id_91900 *
                                                             (num_elems_79093 *
                                                              group_sizze_91893) +
                                                             i_92304 *
                                                             group_sizze_91893 +
                                                             local_tid_91899) *
                                                            2] = x_92254;
                                    *(__global
                                      int16_t *) &mem_97151[(group_id_91900 *
                                                             (num_elems_79093 *
                                                              group_sizze_91893) +
                                                             i_92304 *
                                                             group_sizze_91893 +
                                                             local_tid_91899) *
                                                            2] = y_92231;
                                    *(__global
                                      double *) &mem_97154[(group_id_91900 *
                                                            (num_elems_79093 *
                                                             group_sizze_91893) +
                                                            i_92304 *
                                                            group_sizze_91893 +
                                                            local_tid_91899) *
                                                           8] = lw_val_92303;
                                    x_92308 = !cond_92255;
                                    y_92309 = x_92308 && cond_92271;
                                    not_arg_92310 = cond_92255 || y_92309;
                                    res_92311 = !not_arg_92310;
                                    res_92274 = res_92293;
                                    res_92275 = res_92294;
                                    res_92279 = res_92311;
                                }
                                res_92256 = res_92272;
                                res_92257 = res_92273;
                                res_92258 = res_92274;
                                res_92259 = res_92275;
                                res_92263 = res_92279;
                            }
                            res_92239 = res_92256;
                            res_92240 = res_92257;
                            res_92241 = res_92258;
                            res_92242 = res_92259;
                            res_92246 = res_92263;
                        }
                        
                        char loop_while_tmp_98204 = res_92246;
                        int16_t x_tmp_98205 = res_92239;
                        int16_t y_tmp_98206 = res_92240;
                        double chi_tmp_98207 = res_92241;
                        int32_t i_tmp_98208;
                        
                        i_tmp_98208 = res_92242;
                        loop_while_92229 = loop_while_tmp_98204;
                        x_92230 = x_tmp_98205;
                        y_92231 = y_tmp_98206;
                        chi_92232 = chi_tmp_98207;
                        i_92233 = i_tmp_98208;
                    }
                    res_92221 = loop_while_92229;
                    res_92222 = x_92230;
                    res_92223 = y_92231;
                    res_92224 = chi_92232;
                    res_92225 = i_92233;
                } else {
                    char res_92315;
                    int16_t res_92316;
                    int16_t res_92317;
                    double res_92318;
                    int32_t res_92319;
                    
                    *(__global int16_t *) &mem_97148[(group_id_91900 *
                                                      (num_elems_79093 *
                                                       group_sizze_91893) +
                                                      local_tid_91899) * 2] =
                        arg_91923;
                    *(__global int16_t *) &mem_97151[(group_id_91900 *
                                                      (num_elems_79093 *
                                                       group_sizze_91893) +
                                                      local_tid_91899) * 2] =
                        res_91909;
                    *(__global double *) &mem_97154[(group_id_91900 *
                                                     (num_elems_79093 *
                                                      group_sizze_91893) +
                                                     local_tid_91899) * 8] =
                        lw_val_91929;
                    
                    char loop_while_92323;
                    int16_t x_92324;
                    int16_t y_92325;
                    double chi_92326;
                    int32_t i_92327;
                    
                    loop_while_92323 = 1;
                    x_92324 = arg_91923;
                    y_92325 = arg_91924;
                    chi_92326 = arg_91925;
                    i_92327 = 1;
                    while (loop_while_92323) {
                        double x_92331 = chi_92326 + res_91917;
                        char cond_92332 = x_92331 < delta_78976;
                        int16_t res_92333;
                        int16_t res_92334;
                        double res_92335;
                        int32_t res_92336;
                        char res_92340;
                        
                        if (cond_92332) {
                            int16_t res_92341;
                            int32_t res_92342;
                            char not_arg_92346;
                            char res_92347;
                            
                            res_92341 = y_92325 + res_91904;
                            res_92342 = i_92327 + 1;
                            *(__global int16_t *) &mem_97148[(group_id_91900 *
                                                              (num_elems_79093 *
                                                               group_sizze_91893) +
                                                              i_92327 *
                                                              group_sizze_91893 +
                                                              local_tid_91899) *
                                                             2] = x_92324;
                            *(__global int16_t *) &mem_97151[(group_id_91900 *
                                                              (num_elems_79093 *
                                                               group_sizze_91893) +
                                                              i_92327 *
                                                              group_sizze_91893 +
                                                              local_tid_91899) *
                                                             2] = y_92325;
                            *(__global double *) &mem_97154[(group_id_91900 *
                                                             (num_elems_79093 *
                                                              group_sizze_91893) +
                                                             i_92327 *
                                                             group_sizze_91893 +
                                                             local_tid_91899) *
                                                            8] = res_91919;
                            not_arg_92346 = res_92341 == res_91907;
                            res_92347 = !not_arg_92346;
                            res_92333 = x_92324;
                            res_92334 = res_92341;
                            res_92335 = x_92331;
                            res_92336 = res_92342;
                            res_92340 = res_92347;
                        } else {
                            int16_t x_92348;
                            char cond_92349;
                            int16_t res_92350;
                            int16_t res_92351;
                            double res_92352;
                            int32_t res_92353;
                            char res_92357;
                            
                            x_92348 = x_92324 + res_91903;
                            cond_92349 = x_92348 == res_91906;
                            if (cond_92349) {
                                double x_92358;
                                double x_92359;
                                double lw_val_92360;
                                
                                x_92358 = delta_78976 - chi_92326;
                                x_92359 = x_92358 / res_91917;
                                lw_val_92360 = x_92359 * res_91919;
                                *(__global
                                  int16_t *) &mem_97148[(group_id_91900 *
                                                         (num_elems_79093 *
                                                          group_sizze_91893) +
                                                         i_92327 *
                                                         group_sizze_91893 +
                                                         local_tid_91899) * 2] =
                                    x_92324;
                                *(__global
                                  int16_t *) &mem_97151[(group_id_91900 *
                                                         (num_elems_79093 *
                                                          group_sizze_91893) +
                                                         i_92327 *
                                                         group_sizze_91893 +
                                                         local_tid_91899) * 2] =
                                    y_92325;
                                *(__global
                                  double *) &mem_97154[(group_id_91900 *
                                                        (num_elems_79093 *
                                                         group_sizze_91893) +
                                                        i_92327 *
                                                        group_sizze_91893 +
                                                        local_tid_91899) * 8] =
                                    lw_val_92360;
                                res_92350 = x_92324;
                                res_92351 = y_92325;
                                res_92352 = chi_92326;
                                res_92353 = i_92327;
                                res_92357 = 0;
                            } else {
                                int16_t x_92364;
                                char cond_92365;
                                int16_t res_92366;
                                int16_t res_92367;
                                double res_92368;
                                int32_t res_92369;
                                char res_92373;
                                
                                x_92364 = y_92325 + res_91904;
                                cond_92365 = x_92364 == res_91907;
                                if (cond_92365) {
                                    res_92366 = x_92324;
                                } else {
                                    res_92366 = x_92348;
                                }
                                if (cond_92365) {
                                    res_92367 = y_92325;
                                } else {
                                    res_92367 = x_92364;
                                }
                                if (cond_92365) {
                                    double x_92374;
                                    double x_92375;
                                    double lw_val_92376;
                                    double x_92380;
                                    double x_92381;
                                    double lw_val_92382;
                                    int32_t i_92383;
                                    
                                    x_92374 = delta_78976 - chi_92326;
                                    x_92375 = x_92374 / res_91917;
                                    lw_val_92376 = x_92375 * res_91919;
                                    *(__global
                                      int16_t *) &mem_97148[(group_id_91900 *
                                                             (num_elems_79093 *
                                                              group_sizze_91893) +
                                                             i_92327 *
                                                             group_sizze_91893 +
                                                             local_tid_91899) *
                                                            2] = x_92324;
                                    *(__global
                                      int16_t *) &mem_97151[(group_id_91900 *
                                                             (num_elems_79093 *
                                                              group_sizze_91893) +
                                                             i_92327 *
                                                             group_sizze_91893 +
                                                             local_tid_91899) *
                                                            2] = y_92325;
                                    *(__global
                                      double *) &mem_97154[(group_id_91900 *
                                                            (num_elems_79093 *
                                                             group_sizze_91893) +
                                                            i_92327 *
                                                            group_sizze_91893 +
                                                            local_tid_91899) *
                                                           8] = lw_val_92376;
                                    x_92380 = x_91926 + chi_92326;
                                    x_92381 = x_92380 / res_91917;
                                    lw_val_92382 = x_92381 * res_91919;
                                    i_92383 = i_92327 + 1;
                                    *(__global
                                      int16_t *) &mem_97148[(group_id_91900 *
                                                             (num_elems_79093 *
                                                              group_sizze_91893) +
                                                             i_92383 *
                                                             group_sizze_91893 +
                                                             local_tid_91899) *
                                                            2] = x_92348;
                                    *(__global
                                      int16_t *) &mem_97151[(group_id_91900 *
                                                             (num_elems_79093 *
                                                              group_sizze_91893) +
                                                             i_92383 *
                                                             group_sizze_91893 +
                                                             local_tid_91899) *
                                                            2] = y_92325;
                                    *(__global
                                      double *) &mem_97154[(group_id_91900 *
                                                            (num_elems_79093 *
                                                             group_sizze_91893) +
                                                            i_92383 *
                                                            group_sizze_91893 +
                                                            local_tid_91899) *
                                                           8] = lw_val_92382;
                                    res_92368 = chi_92326;
                                    res_92369 = i_92327;
                                    res_92373 = 0;
                                } else {
                                    double res_92387;
                                    int32_t res_92388;
                                    double x_92389;
                                    double x_92390;
                                    double lw_val_92391;
                                    double x_92395;
                                    double x_92396;
                                    double lw_val_92397;
                                    int32_t i_92398;
                                    char x_92402;
                                    char y_92403;
                                    char not_arg_92404;
                                    char res_92405;
                                    
                                    res_92387 = x_92331 - delta_78976;
                                    res_92388 = i_92327 + 2;
                                    x_92389 = delta_78976 - chi_92326;
                                    x_92390 = x_92389 / res_91917;
                                    lw_val_92391 = x_92390 * res_91919;
                                    *(__global
                                      int16_t *) &mem_97148[(group_id_91900 *
                                                             (num_elems_79093 *
                                                              group_sizze_91893) +
                                                             i_92327 *
                                                             group_sizze_91893 +
                                                             local_tid_91899) *
                                                            2] = x_92324;
                                    *(__global
                                      int16_t *) &mem_97151[(group_id_91900 *
                                                             (num_elems_79093 *
                                                              group_sizze_91893) +
                                                             i_92327 *
                                                             group_sizze_91893 +
                                                             local_tid_91899) *
                                                            2] = y_92325;
                                    *(__global
                                      double *) &mem_97154[(group_id_91900 *
                                                            (num_elems_79093 *
                                                             group_sizze_91893) +
                                                            i_92327 *
                                                            group_sizze_91893 +
                                                            local_tid_91899) *
                                                           8] = lw_val_92391;
                                    x_92395 = x_91926 + chi_92326;
                                    x_92396 = x_92395 / res_91917;
                                    lw_val_92397 = x_92396 * res_91919;
                                    i_92398 = i_92327 + 1;
                                    *(__global
                                      int16_t *) &mem_97148[(group_id_91900 *
                                                             (num_elems_79093 *
                                                              group_sizze_91893) +
                                                             i_92398 *
                                                             group_sizze_91893 +
                                                             local_tid_91899) *
                                                            2] = x_92348;
                                    *(__global
                                      int16_t *) &mem_97151[(group_id_91900 *
                                                             (num_elems_79093 *
                                                              group_sizze_91893) +
                                                             i_92398 *
                                                             group_sizze_91893 +
                                                             local_tid_91899) *
                                                            2] = y_92325;
                                    *(__global
                                      double *) &mem_97154[(group_id_91900 *
                                                            (num_elems_79093 *
                                                             group_sizze_91893) +
                                                            i_92398 *
                                                            group_sizze_91893 +
                                                            local_tid_91899) *
                                                           8] = lw_val_92397;
                                    x_92402 = !cond_92349;
                                    y_92403 = x_92402 && cond_92365;
                                    not_arg_92404 = cond_92349 || y_92403;
                                    res_92405 = !not_arg_92404;
                                    res_92368 = res_92387;
                                    res_92369 = res_92388;
                                    res_92373 = res_92405;
                                }
                                res_92350 = res_92366;
                                res_92351 = res_92367;
                                res_92352 = res_92368;
                                res_92353 = res_92369;
                                res_92357 = res_92373;
                            }
                            res_92333 = res_92350;
                            res_92334 = res_92351;
                            res_92335 = res_92352;
                            res_92336 = res_92353;
                            res_92340 = res_92357;
                        }
                        
                        char loop_while_tmp_98212 = res_92340;
                        int16_t x_tmp_98213 = res_92333;
                        int16_t y_tmp_98214 = res_92334;
                        double chi_tmp_98215 = res_92335;
                        int32_t i_tmp_98216;
                        
                        i_tmp_98216 = res_92336;
                        loop_while_92323 = loop_while_tmp_98212;
                        x_92324 = x_tmp_98213;
                        y_92325 = y_tmp_98214;
                        chi_92326 = chi_tmp_98215;
                        i_92327 = i_tmp_98216;
                    }
                    res_92315 = loop_while_92323;
                    res_92316 = x_92324;
                    res_92317 = y_92325;
                    res_92318 = chi_92326;
                    res_92319 = i_92327;
                }
            } else {
                char res_92406;
                int16_t res_92407;
                int16_t res_92408;
                double res_92409;
                int32_t res_92410;
                char loop_while_92414;
                int16_t x_92415;
                int16_t y_92416;
                double chi_92417;
                int32_t i_92418;
                
                loop_while_92414 = 1;
                x_92415 = res_91908;
                y_92416 = res_91909;
                chi_92417 = x_91901;
                i_92418 = 0;
                while (loop_while_92414) {
                    double x_92422 = chi_92417 + res_91917;
                    char cond_92423 = x_92422 < delta_78976;
                    int16_t res_92424;
                    int16_t res_92425;
                    double res_92426;
                    int32_t res_92427;
                    char res_92431;
                    
                    if (cond_92423) {
                        int16_t res_92432;
                        int32_t res_92433;
                        char not_arg_92437;
                        char res_92438;
                        
                        res_92432 = y_92416 + res_91904;
                        res_92433 = i_92418 + 1;
                        *(__global int16_t *) &mem_97148[(group_id_91900 *
                                                          (num_elems_79093 *
                                                           group_sizze_91893) +
                                                          i_92418 *
                                                          group_sizze_91893 +
                                                          local_tid_91899) *
                                                         2] = x_92415;
                        *(__global int16_t *) &mem_97151[(group_id_91900 *
                                                          (num_elems_79093 *
                                                           group_sizze_91893) +
                                                          i_92418 *
                                                          group_sizze_91893 +
                                                          local_tid_91899) *
                                                         2] = y_92416;
                        *(__global double *) &mem_97154[(group_id_91900 *
                                                         (num_elems_79093 *
                                                          group_sizze_91893) +
                                                         i_92418 *
                                                         group_sizze_91893 +
                                                         local_tid_91899) * 8] =
                            res_91919;
                        not_arg_92437 = res_92432 == res_91907;
                        res_92438 = !not_arg_92437;
                        res_92424 = x_92415;
                        res_92425 = res_92432;
                        res_92426 = x_92422;
                        res_92427 = res_92433;
                        res_92431 = res_92438;
                    } else {
                        int16_t x_92439;
                        char cond_92440;
                        int16_t res_92441;
                        int16_t res_92442;
                        double res_92443;
                        int32_t res_92444;
                        char res_92448;
                        
                        x_92439 = x_92415 + res_91903;
                        cond_92440 = x_92439 == res_91906;
                        if (cond_92440) {
                            double x_92449;
                            double x_92450;
                            double lw_val_92451;
                            
                            x_92449 = delta_78976 - chi_92417;
                            x_92450 = x_92449 / res_91917;
                            lw_val_92451 = x_92450 * res_91919;
                            *(__global int16_t *) &mem_97148[(group_id_91900 *
                                                              (num_elems_79093 *
                                                               group_sizze_91893) +
                                                              i_92418 *
                                                              group_sizze_91893 +
                                                              local_tid_91899) *
                                                             2] = x_92415;
                            *(__global int16_t *) &mem_97151[(group_id_91900 *
                                                              (num_elems_79093 *
                                                               group_sizze_91893) +
                                                              i_92418 *
                                                              group_sizze_91893 +
                                                              local_tid_91899) *
                                                             2] = y_92416;
                            *(__global double *) &mem_97154[(group_id_91900 *
                                                             (num_elems_79093 *
                                                              group_sizze_91893) +
                                                             i_92418 *
                                                             group_sizze_91893 +
                                                             local_tid_91899) *
                                                            8] = lw_val_92451;
                            res_92441 = x_92415;
                            res_92442 = y_92416;
                            res_92443 = chi_92417;
                            res_92444 = i_92418;
                            res_92448 = 0;
                        } else {
                            int16_t x_92455;
                            char cond_92456;
                            int16_t res_92457;
                            int16_t res_92458;
                            double res_92459;
                            int32_t res_92460;
                            char res_92464;
                            
                            x_92455 = y_92416 + res_91904;
                            cond_92456 = x_92455 == res_91907;
                            if (cond_92456) {
                                res_92457 = x_92415;
                            } else {
                                res_92457 = x_92439;
                            }
                            if (cond_92456) {
                                res_92458 = y_92416;
                            } else {
                                res_92458 = x_92455;
                            }
                            if (cond_92456) {
                                double x_92465;
                                double x_92466;
                                double lw_val_92467;
                                double x_92471;
                                double x_92472;
                                double lw_val_92473;
                                int32_t i_92474;
                                
                                x_92465 = delta_78976 - chi_92417;
                                x_92466 = x_92465 / res_91917;
                                lw_val_92467 = x_92466 * res_91919;
                                *(__global
                                  int16_t *) &mem_97148[(group_id_91900 *
                                                         (num_elems_79093 *
                                                          group_sizze_91893) +
                                                         i_92418 *
                                                         group_sizze_91893 +
                                                         local_tid_91899) * 2] =
                                    x_92415;
                                *(__global
                                  int16_t *) &mem_97151[(group_id_91900 *
                                                         (num_elems_79093 *
                                                          group_sizze_91893) +
                                                         i_92418 *
                                                         group_sizze_91893 +
                                                         local_tid_91899) * 2] =
                                    y_92416;
                                *(__global
                                  double *) &mem_97154[(group_id_91900 *
                                                        (num_elems_79093 *
                                                         group_sizze_91893) +
                                                        i_92418 *
                                                        group_sizze_91893 +
                                                        local_tid_91899) * 8] =
                                    lw_val_92467;
                                x_92471 = x_91926 + chi_92417;
                                x_92472 = x_92471 / res_91917;
                                lw_val_92473 = x_92472 * res_91919;
                                i_92474 = i_92418 + 1;
                                *(__global
                                  int16_t *) &mem_97148[(group_id_91900 *
                                                         (num_elems_79093 *
                                                          group_sizze_91893) +
                                                         i_92474 *
                                                         group_sizze_91893 +
                                                         local_tid_91899) * 2] =
                                    x_92439;
                                *(__global
                                  int16_t *) &mem_97151[(group_id_91900 *
                                                         (num_elems_79093 *
                                                          group_sizze_91893) +
                                                         i_92474 *
                                                         group_sizze_91893 +
                                                         local_tid_91899) * 2] =
                                    y_92416;
                                *(__global
                                  double *) &mem_97154[(group_id_91900 *
                                                        (num_elems_79093 *
                                                         group_sizze_91893) +
                                                        i_92474 *
                                                        group_sizze_91893 +
                                                        local_tid_91899) * 8] =
                                    lw_val_92473;
                                res_92459 = chi_92417;
                                res_92460 = i_92418;
                                res_92464 = 0;
                            } else {
                                double res_92478;
                                int32_t res_92479;
                                double x_92480;
                                double x_92481;
                                double lw_val_92482;
                                double x_92486;
                                double x_92487;
                                double lw_val_92488;
                                int32_t i_92489;
                                char x_92493;
                                char y_92494;
                                char not_arg_92495;
                                char res_92496;
                                
                                res_92478 = x_92422 - delta_78976;
                                res_92479 = i_92418 + 2;
                                x_92480 = delta_78976 - chi_92417;
                                x_92481 = x_92480 / res_91917;
                                lw_val_92482 = x_92481 * res_91919;
                                *(__global
                                  int16_t *) &mem_97148[(group_id_91900 *
                                                         (num_elems_79093 *
                                                          group_sizze_91893) +
                                                         i_92418 *
                                                         group_sizze_91893 +
                                                         local_tid_91899) * 2] =
                                    x_92415;
                                *(__global
                                  int16_t *) &mem_97151[(group_id_91900 *
                                                         (num_elems_79093 *
                                                          group_sizze_91893) +
                                                         i_92418 *
                                                         group_sizze_91893 +
                                                         local_tid_91899) * 2] =
                                    y_92416;
                                *(__global
                                  double *) &mem_97154[(group_id_91900 *
                                                        (num_elems_79093 *
                                                         group_sizze_91893) +
                                                        i_92418 *
                                                        group_sizze_91893 +
                                                        local_tid_91899) * 8] =
                                    lw_val_92482;
                                x_92486 = x_91926 + chi_92417;
                                x_92487 = x_92486 / res_91917;
                                lw_val_92488 = x_92487 * res_91919;
                                i_92489 = i_92418 + 1;
                                *(__global
                                  int16_t *) &mem_97148[(group_id_91900 *
                                                         (num_elems_79093 *
                                                          group_sizze_91893) +
                                                         i_92489 *
                                                         group_sizze_91893 +
                                                         local_tid_91899) * 2] =
                                    x_92439;
                                *(__global
                                  int16_t *) &mem_97151[(group_id_91900 *
                                                         (num_elems_79093 *
                                                          group_sizze_91893) +
                                                         i_92489 *
                                                         group_sizze_91893 +
                                                         local_tid_91899) * 2] =
                                    y_92416;
                                *(__global
                                  double *) &mem_97154[(group_id_91900 *
                                                        (num_elems_79093 *
                                                         group_sizze_91893) +
                                                        i_92489 *
                                                        group_sizze_91893 +
                                                        local_tid_91899) * 8] =
                                    lw_val_92488;
                                x_92493 = !cond_92440;
                                y_92494 = x_92493 && cond_92456;
                                not_arg_92495 = cond_92440 || y_92494;
                                res_92496 = !not_arg_92495;
                                res_92459 = res_92478;
                                res_92460 = res_92479;
                                res_92464 = res_92496;
                            }
                            res_92441 = res_92457;
                            res_92442 = res_92458;
                            res_92443 = res_92459;
                            res_92444 = res_92460;
                            res_92448 = res_92464;
                        }
                        res_92424 = res_92441;
                        res_92425 = res_92442;
                        res_92426 = res_92443;
                        res_92427 = res_92444;
                        res_92431 = res_92448;
                    }
                    
                    char loop_while_tmp_98220 = res_92431;
                    int16_t x_tmp_98221 = res_92424;
                    int16_t y_tmp_98222 = res_92425;
                    double chi_tmp_98223 = res_92426;
                    int32_t i_tmp_98224;
                    
                    i_tmp_98224 = res_92427;
                    loop_while_92414 = loop_while_tmp_98220;
                    x_92415 = x_tmp_98221;
                    y_92416 = y_tmp_98222;
                    chi_92417 = chi_tmp_98223;
                    i_92418 = i_tmp_98224;
                }
                res_92406 = loop_while_92414;
                res_92407 = x_92415;
                res_92408 = y_92416;
                res_92409 = chi_92417;
                res_92410 = i_92418;
            }
        }
    }
    if (thread_active_98176) {
        for (int32_t i_98228 = 0; i_98228 < num_elems_79093; i_98228++) {
            *(__global int16_t *) &mem_97314[(i_98228 * x_80815 + gtid_91891) *
                                             2] = *(__global
                                                    int16_t *) &mem_97148[(group_id_91900 *
                                                                           (num_elems_79093 *
                                                                            group_sizze_91893) +
                                                                           i_98228 *
                                                                           group_sizze_91893 +
                                                                           local_tid_91899) *
                                                                          2];
        }
    }
    if (thread_active_98176) {
        for (int32_t i_98229 = 0; i_98229 < num_elems_79093; i_98229++) {
            *(__global int16_t *) &mem_97318[(i_98229 * x_80815 + gtid_91891) *
                                             2] = *(__global
                                                    int16_t *) &mem_97151[(group_id_91900 *
                                                                           (num_elems_79093 *
                                                                            group_sizze_91893) +
                                                                           i_98229 *
                                                                           group_sizze_91893 +
                                                                           local_tid_91899) *
                                                                          2];
        }
    }
    if (thread_active_98176) {
        for (int32_t i_98230 = 0; i_98230 < num_elems_79093; i_98230++) {
            *(__global double *) &mem_97322[(i_98230 * x_80815 + gtid_91891) *
                                            8] = *(__global
                                                   double *) &mem_97154[(group_id_91900 *
                                                                         (num_elems_79093 *
                                                                          group_sizze_91893) +
                                                                         i_98230 *
                                                                         group_sizze_91893 +
                                                                         local_tid_91899) *
                                                                        8];
        }
    }
}
__kernel void map_kernel_92545(int16_t res_78984, int32_t x_80815, __global
                               unsigned char *mem_97108, __global
                               unsigned char *mem_97111, __global
                               unsigned char *mem_97114, __global
                               unsigned char *mem_97125, __global
                               unsigned char *mem_97128, __global
                               unsigned char *mem_97130, __global
                               unsigned char *mem_97133, __global
                               unsigned char *mem_97136, __global
                               unsigned char *mem_97139, __global
                               unsigned char *mem_97142, __global
                               unsigned char *mem_97145)
{
    int32_t wave_sizze_98171;
    int32_t group_sizze_98172;
    char thread_active_98173;
    int32_t gtid_92538;
    int32_t global_tid_92545;
    int32_t local_tid_92546;
    int32_t group_id_92547;
    
    global_tid_92545 = get_global_id(0);
    local_tid_92546 = get_local_id(0);
    group_sizze_98172 = get_local_size(0);
    wave_sizze_98171 = LOCKSTEP_WIDTH;
    group_id_92547 = get_group_id(0);
    gtid_92538 = global_tid_92545;
    thread_active_98173 = slt32(gtid_92538, x_80815);
    
    double x_92548;
    int16_t x_92549;
    int16_t x_92550;
    char cond_92551;
    char res_92552;
    char x_92553;
    double res_92554;
    int16_t res_92555;
    int16_t res_92556;
    char res_92557;
    char cond_92605;
    int16_t res_92606;
    int16_t res_92607;
    char cond_92611;
    int16_t res_92612;
    int16_t res_92613;
    char cond_92617;
    char res_92618;
    char x_92619;
    char y_92620;
    char cond_92621;
    char x_92622;
    int16_t res_92623;
    int16_t res_92624;
    double res_92634;
    
    if (thread_active_98173) {
        x_92548 = *(__global double *) &mem_97108[gtid_92538 * 8];
        x_92549 = *(__global int16_t *) &mem_97111[gtid_92538 * 2];
        x_92550 = *(__global int16_t *) &mem_97114[gtid_92538 * 2];
        cond_92551 = 0.0 <= x_92548;
        res_92552 = x_92548 <= 45.0;
        x_92553 = cond_92551 && res_92552;
        if (x_92553) {
            res_92554 = x_92548;
            res_92555 = -1;
            res_92556 = 1;
            res_92557 = 0;
        } else {
            char cond_92558;
            char res_92559;
            char x_92560;
            double res_92561;
            int16_t res_92562;
            int16_t res_92563;
            char res_92564;
            
            cond_92558 = 45.0 < x_92548;
            res_92559 = x_92548 < 90.0;
            x_92560 = cond_92558 && res_92559;
            if (x_92560) {
                double res_92565 = 90.0 - x_92548;
                
                res_92561 = res_92565;
                res_92562 = -1;
                res_92563 = 1;
                res_92564 = 1;
            } else {
                char cond_92566;
                char res_92567;
                char x_92568;
                double res_92569;
                int16_t res_92570;
                int16_t res_92571;
                char res_92572;
                
                cond_92566 = 90.0 <= x_92548;
                res_92567 = x_92548 <= 135.0;
                x_92568 = cond_92566 && res_92567;
                if (x_92568) {
                    double res_92573 = x_92548 - 90.0;
                    
                    res_92569 = res_92573;
                    res_92570 = -1;
                    res_92571 = -1;
                    res_92572 = 1;
                } else {
                    char cond_92574;
                    char res_92575;
                    char x_92576;
                    int16_t res_92577;
                    double res_92578;
                    int16_t res_92579;
                    char res_92580;
                    
                    cond_92574 = 135.0 < x_92548;
                    res_92575 = x_92548 <= 180.0;
                    x_92576 = cond_92574 && res_92575;
                    if (x_92576) {
                        res_92577 = -1;
                    } else {
                        res_92577 = 1;
                    }
                    if (x_92576) {
                        double res_92581 = 180.0 - x_92548;
                        
                        res_92578 = res_92581;
                        res_92579 = -1;
                        res_92580 = 0;
                    } else {
                        char cond_92582;
                        char res_92583;
                        char x_92584;
                        double res_92585;
                        int16_t res_92586;
                        char res_92587;
                        
                        cond_92582 = 180.0 < x_92548;
                        res_92583 = x_92548 <= 225.0;
                        x_92584 = cond_92582 && res_92583;
                        if (x_92584) {
                            double res_92588 = x_92548 - 180.0;
                            
                            res_92585 = res_92588;
                            res_92586 = -1;
                            res_92587 = 0;
                        } else {
                            char cond_92589;
                            char res_92590;
                            char x_92591;
                            int16_t res_92592;
                            double res_92593;
                            char res_92594;
                            
                            cond_92589 = 225.0 < x_92548;
                            res_92590 = x_92548 < 270.0;
                            x_92591 = cond_92589 && res_92590;
                            if (x_92591) {
                                res_92592 = -1;
                            } else {
                                res_92592 = 1;
                            }
                            if (x_92591) {
                                double res_92595 = 270.0 - x_92548;
                                
                                res_92593 = res_92595;
                                res_92594 = 1;
                            } else {
                                char cond_92596;
                                double res_92597;
                                char res_92598;
                                
                                cond_92596 = x_92548 == 270.0;
                                if (cond_92596) {
                                    res_92597 = 0.0;
                                    res_92598 = 1;
                                } else {
                                    char cond_92599;
                                    char res_92600;
                                    char x_92601;
                                    double res_92602;
                                    
                                    cond_92599 = 270.0 < x_92548;
                                    res_92600 = x_92548 <= 315.0;
                                    x_92601 = cond_92599 && res_92600;
                                    if (x_92601) {
                                        double res_92603 = x_92548 - 270.0;
                                        
                                        res_92602 = res_92603;
                                    } else {
                                        double res_92604 = 360.0 - x_92548;
                                        
                                        res_92602 = res_92604;
                                    }
                                    res_92597 = res_92602;
                                    res_92598 = x_92601;
                                }
                                res_92593 = res_92597;
                                res_92594 = res_92598;
                            }
                            res_92585 = res_92593;
                            res_92586 = res_92592;
                            res_92587 = res_92594;
                        }
                        res_92578 = res_92585;
                        res_92579 = res_92586;
                        res_92580 = res_92587;
                    }
                    res_92569 = res_92578;
                    res_92570 = res_92577;
                    res_92571 = res_92579;
                    res_92572 = res_92580;
                }
                res_92561 = res_92569;
                res_92562 = res_92570;
                res_92563 = res_92571;
                res_92564 = res_92572;
            }
            res_92554 = res_92561;
            res_92555 = res_92562;
            res_92556 = res_92563;
            res_92557 = res_92564;
        }
        cond_92605 = slt16(res_92555, 0);
        if (cond_92605) {
            int16_t res_92608;
            int16_t x_92609;
            int16_t res_92610;
            
            res_92608 = x_92549 - 1;
            x_92609 = 0 - res_78984;
            res_92610 = x_92609 - 1;
            res_92606 = res_92608;
            res_92607 = res_92610;
        } else {
            res_92606 = x_92549;
            res_92607 = res_78984;
        }
        cond_92611 = slt16(res_92556, 0);
        if (cond_92611) {
            int16_t res_92614;
            int16_t x_92615;
            int16_t res_92616;
            
            res_92614 = x_92550 - 1;
            x_92615 = 0 - res_78984;
            res_92616 = x_92615 - 1;
            res_92612 = res_92614;
            res_92613 = res_92616;
        } else {
            res_92612 = x_92550;
            res_92613 = res_78984;
        }
        cond_92617 = x_92548 == 0.0;
        res_92618 = x_92548 == 180.0;
        x_92619 = !cond_92617;
        y_92620 = x_92619 && res_92618;
        cond_92621 = cond_92617 || y_92620;
        x_92622 = cond_92621 && cond_92605;
        if (x_92622) {
            int16_t res_92625 = res_92606 + 1;
            
            res_92623 = res_92625;
            res_92624 = res_92612;
        } else {
            char cond_92626;
            char res_92627;
            char x_92628;
            char y_92629;
            char cond_92630;
            char x_92631;
            int16_t res_92632;
            
            cond_92626 = x_92548 == 90.0;
            res_92627 = x_92548 == 270.0;
            x_92628 = !cond_92626;
            y_92629 = x_92628 && res_92627;
            cond_92630 = cond_92626 || y_92629;
            x_92631 = cond_92630 && cond_92611;
            if (x_92631) {
                int16_t res_92633 = res_92612 + 1;
                
                res_92632 = res_92633;
            } else {
                res_92632 = res_92612;
            }
            res_92623 = res_92606;
            res_92624 = res_92632;
        }
        res_92634 = 1.7453292519943295e-2 * res_92554;
    }
    if (thread_active_98173) {
        *(__global int16_t *) &mem_97125[gtid_92538 * 2] = res_92555;
    }
    if (thread_active_98173) {
        *(__global int16_t *) &mem_97128[gtid_92538 * 2] = res_92556;
    }
    if (thread_active_98173) {
        *(__global char *) &mem_97130[gtid_92538] = res_92557;
    }
    if (thread_active_98173) {
        *(__global int16_t *) &mem_97133[gtid_92538 * 2] = res_92607;
    }
    if (thread_active_98173) {
        *(__global int16_t *) &mem_97136[gtid_92538 * 2] = res_92613;
    }
    if (thread_active_98173) {
        *(__global int16_t *) &mem_97139[gtid_92538 * 2] = res_92623;
    }
    if (thread_active_98173) {
        *(__global int16_t *) &mem_97142[gtid_92538 * 2] = res_92624;
    }
    if (thread_active_98173) {
        *(__global double *) &mem_97145[gtid_92538 * 8] = res_92634;
    }
}
__kernel void map_kernel_92734(int32_t y_92678, int32_t convop_x_97324, __global
                               unsigned char *mem_97341, __global
                               unsigned char *mem_97366, __global
                               unsigned char *mem_97369)
{
    int32_t wave_sizze_98261;
    int32_t group_sizze_98262;
    char thread_active_98263;
    int32_t j_92719;
    int32_t global_tid_92734;
    int32_t local_tid_92735;
    int32_t group_id_92736;
    
    global_tid_92734 = get_global_id(0);
    local_tid_92735 = get_local_id(0);
    group_sizze_98262 = get_local_size(0);
    wave_sizze_98261 = LOCKSTEP_WIDTH;
    group_id_92736 = get_group_id(0);
    j_92719 = global_tid_92734;
    thread_active_98263 = slt32(j_92719, convop_x_97324);
    
    int32_t y_92717;
    int32_t group_id_92724;
    char cond_92725;
    int32_t final_result_92727;
    
    if (thread_active_98263) {
        y_92717 = *(__global int32_t *) &mem_97341[j_92719 * 4];
        group_id_92724 = squot32(j_92719, y_92678);
        cond_92725 = 0 == group_id_92724;
        if (cond_92725) {
            final_result_92727 = y_92717;
        } else {
            int32_t carry_in_index_92726;
            int32_t x_92716;
            int32_t zz_92718;
            
            carry_in_index_92726 = group_id_92724 - 1;
            x_92716 = *(__global int32_t *) &mem_97366[carry_in_index_92726 *
                                                       4];
            zz_92718 = x_92716 + y_92717;
            final_result_92727 = zz_92718;
        }
    }
    if (thread_active_98263) {
        *(__global int32_t *) &mem_97369[j_92719 * 4] = final_result_92727;
    }
}
__kernel void map_kernel_92744(int32_t num_elems_79093,
                               int32_t partition_sizze_81529,
                               int32_t convop_x_97324, __global
                               unsigned char *mem_97326, __global
                               unsigned char *mem_97338, __global
                               unsigned char *mem_97344, __global
                               unsigned char *mem_97348, __global
                               unsigned char *mem_97369, __global
                               unsigned char *mem_97372, __global
                               unsigned char *mem_97375, __global
                               unsigned char *mem_97378)
{
    int32_t wave_sizze_98264;
    int32_t group_sizze_98265;
    char thread_active_98266;
    int32_t write_i_92737;
    int32_t global_tid_92744;
    int32_t local_tid_92745;
    int32_t group_id_92746;
    
    global_tid_92744 = get_global_id(0);
    local_tid_92745 = get_local_id(0);
    group_sizze_98265 = get_local_size(0);
    wave_sizze_98264 = LOCKSTEP_WIDTH;
    group_id_92746 = get_group_id(0);
    write_i_92737 = global_tid_92744;
    thread_active_98266 = slt32(write_i_92737, convop_x_97324);
    
    int32_t c_81537;
    int32_t offset_81538;
    int32_t new_index_96950;
    int32_t binop_y_96952;
    int32_t new_index_96953;
    int32_t v_81539;
    int32_t v_81540;
    double v_81541;
    char is_this_one_81542;
    int32_t this_offset_81543;
    int32_t total_res_81544;
    
    if (thread_active_98266) {
        c_81537 = *(__global int32_t *) &mem_97344[write_i_92737 * 4];
        offset_81538 = *(__global int32_t *) &mem_97369[write_i_92737 * 4];
        new_index_96950 = squot32(write_i_92737, num_elems_79093);
        binop_y_96952 = new_index_96950 * num_elems_79093;
        new_index_96953 = write_i_92737 - binop_y_96952;
        v_81539 = *(__global int32_t *) &mem_97326[(new_index_96950 *
                                                    num_elems_79093 +
                                                    new_index_96953) * 4];
        v_81540 = *(__global int32_t *) &mem_97338[(new_index_96950 *
                                                    num_elems_79093 +
                                                    new_index_96953) * 4];
        v_81541 = *(__global double *) &mem_97348[(new_index_96950 *
                                                   num_elems_79093 +
                                                   new_index_96953) * 8];
        is_this_one_81542 = c_81537 == 0;
        this_offset_81543 = offset_81538 + -1;
        if (is_this_one_81542) {
            total_res_81544 = this_offset_81543;
        } else {
            total_res_81544 = -1;
        }
    }
    if (thread_active_98266 && (sle32(0, total_res_81544) &&
                                slt32(total_res_81544,
                                      partition_sizze_81529))) {
        *(__global int32_t *) &mem_97372[total_res_81544 * 4] = v_81539;
    }
    if (thread_active_98266 && (sle32(0, total_res_81544) &&
                                slt32(total_res_81544,
                                      partition_sizze_81529))) {
        *(__global int32_t *) &mem_97375[total_res_81544 * 4] = v_81540;
    }
    if (thread_active_98266 && (sle32(0, total_res_81544) &&
                                slt32(total_res_81544,
                                      partition_sizze_81529))) {
        *(__global double *) &mem_97378[total_res_81544 * 8] = v_81541;
    }
}
__kernel void map_kernel_92866(int32_t sizze_81560, int32_t sizze_81561,
                               __global unsigned char *angles_mem_97022,
                               __global unsigned char *mem_97038)
{
    int32_t wave_sizze_98290;
    int32_t group_sizze_98291;
    char thread_active_98292;
    int32_t gtid_92857;
    int32_t gtid_92858;
    int32_t global_tid_92866;
    int32_t local_tid_92867;
    int32_t group_id_92868;
    
    global_tid_92866 = get_global_id(0);
    local_tid_92867 = get_local_id(0);
    group_sizze_98291 = get_local_size(0);
    wave_sizze_98290 = LOCKSTEP_WIDTH;
    group_id_92868 = get_group_id(0);
    gtid_92857 = squot32(global_tid_92866, sizze_81560);
    gtid_92858 = global_tid_92866 - squot32(global_tid_92866, sizze_81560) *
        sizze_81560;
    thread_active_98292 = slt32(gtid_92857, sizze_81561) && slt32(gtid_92858,
                                                                  sizze_81560);
    
    double x_92869;
    
    if (thread_active_98292) {
        x_92869 = *(__global double *) &angles_mem_97022[gtid_92857 * 8];
    }
    if (thread_active_98292) {
        *(__global double *) &mem_97038[(gtid_92857 * sizze_81560 +
                                         gtid_92858) * 8] = x_92869;
    }
}
__kernel void map_kernel_93826(int32_t nesting_sizze_92859, int32_t y_93754,
                               __global unsigned char *mem_97041, __global
                               unsigned char *mem_97090, __global
                               unsigned char *mem_97093)
{
    int32_t wave_sizze_98322;
    int32_t group_sizze_98323;
    char thread_active_98324;
    int32_t j_93811;
    int32_t global_tid_93826;
    int32_t local_tid_93827;
    int32_t group_id_93828;
    
    global_tid_93826 = get_global_id(0);
    local_tid_93827 = get_local_id(0);
    group_sizze_98323 = get_local_size(0);
    wave_sizze_98322 = LOCKSTEP_WIDTH;
    group_id_93828 = get_group_id(0);
    j_93811 = global_tid_93826;
    thread_active_98324 = slt32(j_93811, nesting_sizze_92859);
    
    int32_t y_93809;
    int32_t group_id_93816;
    char cond_93817;
    int32_t final_result_93819;
    
    if (thread_active_98324) {
        y_93809 = *(__global int32_t *) &mem_97041[j_93811 * 4];
        group_id_93816 = squot32(j_93811, y_93754);
        cond_93817 = 0 == group_id_93816;
        if (cond_93817) {
            final_result_93819 = y_93809;
        } else {
            int32_t carry_in_index_93818;
            int32_t x_93808;
            int32_t zz_93810;
            
            carry_in_index_93818 = group_id_93816 - 1;
            x_93808 = *(__global int32_t *) &mem_97090[carry_in_index_93818 *
                                                       4];
            zz_93810 = x_93808 + y_93809;
            final_result_93819 = zz_93810;
        }
    }
    if (thread_active_98324) {
        *(__global int32_t *) &mem_97093[j_93811 * 4] = final_result_93819;
    }
}
__kernel void map_kernel_93836(int32_t sizze_81560, int32_t rowOffset_81566,
                               int32_t partition_sizze_83342,
                               int32_t nesting_sizze_92859, __global
                               unsigned char *mem_97038, __global
                               unsigned char *mem_97044, __global
                               unsigned char *mem_97047, __global
                               unsigned char *mem_97050, __global
                               unsigned char *mem_97053, __global
                               unsigned char *mem_97055, __global
                               unsigned char *mem_97093, __global
                               unsigned char *mem_97096, __global
                               unsigned char *mem_97099, __global
                               unsigned char *mem_97102, __global
                               unsigned char *mem_97105, __global
                               unsigned char *mem_97107, __global
                               unsigned char *mem_97110)
{
    int32_t wave_sizze_98325;
    int32_t group_sizze_98326;
    char thread_active_98327;
    int32_t write_i_93829;
    int32_t global_tid_93836;
    int32_t local_tid_93837;
    int32_t group_id_93838;
    
    global_tid_93836 = get_global_id(0);
    local_tid_93837 = get_local_id(0);
    group_sizze_98326 = get_local_size(0);
    wave_sizze_98325 = LOCKSTEP_WIDTH;
    group_id_93838 = get_group_id(0);
    write_i_93829 = global_tid_93836;
    thread_active_98327 = slt32(write_i_93829, nesting_sizze_92859);
    
    int32_t c_83357;
    int32_t offset_83358;
    int32_t new_index_96919;
    int32_t binop_y_96921;
    int32_t new_index_96922;
    double v_83359;
    int16_t v_83360;
    int16_t v_83361;
    double v_83362;
    char v_83363;
    int32_t res_83365;
    char is_this_one_83366;
    int32_t this_offset_83367;
    int32_t total_res_83368;
    
    if (thread_active_98327) {
        c_83357 = *(__global int32_t *) &mem_97044[write_i_93829 * 4];
        offset_83358 = *(__global int32_t *) &mem_97093[write_i_93829 * 4];
        new_index_96919 = squot32(write_i_93829, sizze_81560);
        binop_y_96921 = new_index_96919 * sizze_81560;
        new_index_96922 = write_i_93829 - binop_y_96921;
        v_83359 = *(__global double *) &mem_97038[(new_index_96919 *
                                                   sizze_81560 +
                                                   new_index_96922) * 8];
        v_83360 = *(__global int16_t *) &mem_97047[write_i_93829 * 2];
        v_83361 = *(__global int16_t *) &mem_97050[write_i_93829 * 2];
        v_83362 = *(__global double *) &mem_97053[write_i_93829 * 8];
        v_83363 = *(__global char *) &mem_97055[write_i_93829];
        res_83365 = write_i_93829 + rowOffset_81566;
        is_this_one_83366 = c_83357 == 0;
        this_offset_83367 = offset_83358 + -1;
        if (is_this_one_83366) {
            total_res_83368 = this_offset_83367;
        } else {
            total_res_83368 = -1;
        }
    }
    if (thread_active_98327 && (sle32(0, total_res_83368) &&
                                slt32(total_res_83368,
                                      partition_sizze_83342))) {
        *(__global double *) &mem_97096[total_res_83368 * 8] = v_83359;
    }
    if (thread_active_98327 && (sle32(0, total_res_83368) &&
                                slt32(total_res_83368,
                                      partition_sizze_83342))) {
        *(__global int16_t *) &mem_97099[total_res_83368 * 2] = v_83360;
    }
    if (thread_active_98327 && (sle32(0, total_res_83368) &&
                                slt32(total_res_83368,
                                      partition_sizze_83342))) {
        *(__global int16_t *) &mem_97102[total_res_83368 * 2] = v_83361;
    }
    if (thread_active_98327 && (sle32(0, total_res_83368) &&
                                slt32(total_res_83368,
                                      partition_sizze_83342))) {
        *(__global double *) &mem_97105[total_res_83368 * 8] = v_83362;
    }
    if (thread_active_98327 && (sle32(0, total_res_83368) &&
                                slt32(total_res_83368,
                                      partition_sizze_83342))) {
        *(__global char *) &mem_97107[total_res_83368] = v_83363;
    }
    if (thread_active_98327 && (sle32(0, total_res_83368) &&
                                slt32(total_res_83368,
                                      partition_sizze_83342))) {
        *(__global int32_t *) &mem_97110[total_res_83368 * 4] = res_83365;
    }
}
__kernel void map_kernel_93878(double delta_81565, int32_t num_elems_81642,
                               int32_t x_83369, __global
                               unsigned char *mem_97105, __global
                               unsigned char *mem_97107, __global
                               unsigned char *mem_97113, __global
                               unsigned char *mem_97116, __global
                               unsigned char *mem_97118, __global
                               unsigned char *mem_97121, __global
                               unsigned char *mem_97124, __global
                               unsigned char *mem_97127, __global
                               unsigned char *mem_97130, __global
                               unsigned char *mem_97133, __global
                               unsigned char *mem_97136, __global
                               unsigned char *mem_97139, __global
                               unsigned char *mem_97142, __global
                               unsigned char *mem_97301, __global
                               unsigned char *mem_97305, __global
                               unsigned char *mem_97309, __global
                               unsigned char *mem_97313)
{
    int32_t wave_sizze_98331;
    int32_t group_sizze_98332;
    char thread_active_98333;
    int32_t gtid_93871;
    int32_t global_tid_93878;
    int32_t local_tid_93879;
    int32_t group_id_93880;
    
    global_tid_93878 = get_global_id(0);
    local_tid_93879 = get_local_id(0);
    group_sizze_98332 = get_local_size(0);
    wave_sizze_98331 = LOCKSTEP_WIDTH;
    group_id_93880 = get_group_id(0);
    gtid_93871 = global_tid_93878;
    thread_active_98333 = slt32(gtid_93871, x_83369);
    
    double x_93881;
    char x_93882;
    int16_t res_93883;
    int16_t res_93884;
    char res_93885;
    int16_t res_93886;
    int16_t res_93887;
    int16_t res_93888;
    int16_t res_93889;
    double res_93890;
    double x_93894;
    double y_93895;
    double res_93896;
    double res_93897;
    double y_93898;
    double res_93899;
    char cond_93900;
    double x_93901;
    char cond_93902;
    int16_t arg_93903;
    int16_t arg_93904;
    double arg_93905;
    double x_93906;
    double x_93907;
    double x_93908;
    double lw_val_93909;
    int32_t res_93910;
    
    if (thread_active_98333) {
        x_93881 = *(__global double *) &mem_97105[gtid_93871 * 8];
        x_93882 = *(__global char *) &mem_97107[gtid_93871];
        res_93883 = *(__global int16_t *) &mem_97113[gtid_93871 * 2];
        res_93884 = *(__global int16_t *) &mem_97116[gtid_93871 * 2];
        res_93885 = *(__global char *) &mem_97118[gtid_93871];
        res_93886 = *(__global int16_t *) &mem_97121[gtid_93871 * 2];
        res_93887 = *(__global int16_t *) &mem_97124[gtid_93871 * 2];
        res_93888 = *(__global int16_t *) &mem_97127[gtid_93871 * 2];
        res_93889 = *(__global int16_t *) &mem_97130[gtid_93871 * 2];
        res_93890 = *(__global double *) &mem_97133[gtid_93871 * 8];
        for (int32_t i_98334 = 0; i_98334 < num_elems_81642; i_98334++) {
            *(__global int16_t *) &mem_97136[(group_id_93880 *
                                              (num_elems_81642 *
                                               group_sizze_93873) + i_98334 *
                                              group_sizze_93873 +
                                              local_tid_93879) * 2] = 0;
        }
        for (int32_t i_98335 = 0; i_98335 < num_elems_81642; i_98335++) {
            *(__global int16_t *) &mem_97139[(group_id_93880 *
                                              (num_elems_81642 *
                                               group_sizze_93873) + i_98335 *
                                              group_sizze_93873 +
                                              local_tid_93879) * 2] = 0;
        }
        for (int32_t i_98336 = 0; i_98336 < num_elems_81642; i_98336++) {
            *(__global double *) &mem_97142[(group_id_93880 * (num_elems_81642 *
                                                               group_sizze_93873) +
                                             i_98336 * group_sizze_93873 +
                                             local_tid_93879) * 8] = -1.0;
        }
        x_93894 = futrts_sin64(res_93890);
        y_93895 = futrts_cos64(res_93890);
        res_93896 = x_93894 / y_93895;
        res_93897 = delta_81565 * res_93896;
        y_93898 = futrts_cos64(res_93890);
        res_93899 = delta_81565 / y_93898;
        cond_93900 = !x_93882;
        x_93901 = x_93881 + res_93897;
        cond_93902 = x_93901 < delta_81565;
        arg_93903 = res_93888 + res_93883;
        arg_93904 = res_93889 + res_93884;
        arg_93905 = x_93901 - delta_81565;
        x_93906 = res_93897 - delta_81565;
        x_93907 = x_93906 + x_93881;
        x_93908 = x_93907 / res_93897;
        lw_val_93909 = x_93908 * res_93899;
        if (res_93885) {
            int32_t res_93914;
            
            if (cond_93900) {
                int32_t res_93918;
                
                if (cond_93902) {
                    char res_93922;
                    int16_t res_93923;
                    int16_t res_93924;
                    double res_93925;
                    int32_t res_93926;
                    int32_t res_93930;
                    int32_t res_94018;
                    char loop_while_93931;
                    int16_t x_93932;
                    int16_t y_93933;
                    double chi_93934;
                    int32_t i_93935;
                    int32_t lastIndex_93939;
                    
                    loop_while_93931 = 1;
                    x_93932 = arg_93903;
                    y_93933 = res_93889;
                    chi_93934 = x_93901;
                    i_93935 = 0;
                    lastIndex_93939 = 0;
                    while (loop_while_93931) {
                        double x_93940 = chi_93934 + res_93897;
                        char cond_93941 = x_93940 < delta_81565;
                        int16_t res_93942;
                        int16_t res_93943;
                        double res_93944;
                        int32_t res_93945;
                        char res_93949;
                        int32_t res_93950;
                        
                        if (cond_93941) {
                            int16_t res_93951;
                            int32_t res_93952;
                            char not_arg_93956;
                            char res_93957;
                            
                            res_93951 = x_93932 + res_93883;
                            res_93952 = i_93935 + 1;
                            *(__global int16_t *) &mem_97136[(group_id_93880 *
                                                              (num_elems_81642 *
                                                               group_sizze_93873) +
                                                              i_93935 *
                                                              group_sizze_93873 +
                                                              local_tid_93879) *
                                                             2] = x_93932;
                            *(__global int16_t *) &mem_97139[(group_id_93880 *
                                                              (num_elems_81642 *
                                                               group_sizze_93873) +
                                                              i_93935 *
                                                              group_sizze_93873 +
                                                              local_tid_93879) *
                                                             2] = y_93933;
                            *(__global double *) &mem_97142[(group_id_93880 *
                                                             (num_elems_81642 *
                                                              group_sizze_93873) +
                                                             i_93935 *
                                                             group_sizze_93873 +
                                                             local_tid_93879) *
                                                            8] = res_93899;
                            not_arg_93956 = res_93951 == res_93886;
                            res_93957 = !not_arg_93956;
                            res_93942 = res_93951;
                            res_93943 = y_93933;
                            res_93944 = x_93940;
                            res_93945 = res_93952;
                            res_93949 = res_93957;
                            res_93950 = i_93935;
                        } else {
                            int16_t x_93958;
                            char cond_93959;
                            int16_t res_93960;
                            int16_t res_93961;
                            double res_93962;
                            int32_t res_93963;
                            char res_93967;
                            int32_t res_93968;
                            
                            x_93958 = y_93933 + res_93884;
                            cond_93959 = x_93958 == res_93887;
                            if (cond_93959) {
                                double x_93969;
                                double x_93970;
                                double lw_val_93971;
                                
                                x_93969 = delta_81565 - chi_93934;
                                x_93970 = x_93969 / res_93897;
                                lw_val_93971 = x_93970 * res_93899;
                                *(__global
                                  int16_t *) &mem_97136[(group_id_93880 *
                                                         (num_elems_81642 *
                                                          group_sizze_93873) +
                                                         i_93935 *
                                                         group_sizze_93873 +
                                                         local_tid_93879) * 2] =
                                    x_93932;
                                *(__global
                                  int16_t *) &mem_97139[(group_id_93880 *
                                                         (num_elems_81642 *
                                                          group_sizze_93873) +
                                                         i_93935 *
                                                         group_sizze_93873 +
                                                         local_tid_93879) * 2] =
                                    y_93933;
                                *(__global
                                  double *) &mem_97142[(group_id_93880 *
                                                        (num_elems_81642 *
                                                         group_sizze_93873) +
                                                        i_93935 *
                                                        group_sizze_93873 +
                                                        local_tid_93879) * 8] =
                                    lw_val_93971;
                                res_93960 = x_93932;
                                res_93961 = y_93933;
                                res_93962 = chi_93934;
                                res_93963 = i_93935;
                                res_93967 = 0;
                                res_93968 = i_93935;
                            } else {
                                int16_t x_93975;
                                char cond_93976;
                                int16_t res_93977;
                                int16_t res_93978;
                                double res_93979;
                                int32_t res_93980;
                                char res_93984;
                                int32_t res_93985;
                                
                                x_93975 = x_93932 + res_93883;
                                cond_93976 = x_93975 == res_93886;
                                if (cond_93976) {
                                    res_93977 = x_93932;
                                } else {
                                    res_93977 = x_93975;
                                }
                                if (cond_93976) {
                                    res_93978 = y_93933;
                                } else {
                                    res_93978 = x_93958;
                                }
                                if (cond_93976) {
                                    double x_93986;
                                    double x_93987;
                                    double lw_val_93988;
                                    double x_93992;
                                    double x_93993;
                                    double lw_val_93994;
                                    int32_t i_93995;
                                    
                                    x_93986 = delta_81565 - chi_93934;
                                    x_93987 = x_93986 / res_93897;
                                    lw_val_93988 = x_93987 * res_93899;
                                    *(__global
                                      int16_t *) &mem_97136[(group_id_93880 *
                                                             (num_elems_81642 *
                                                              group_sizze_93873) +
                                                             i_93935 *
                                                             group_sizze_93873 +
                                                             local_tid_93879) *
                                                            2] = x_93932;
                                    *(__global
                                      int16_t *) &mem_97139[(group_id_93880 *
                                                             (num_elems_81642 *
                                                              group_sizze_93873) +
                                                             i_93935 *
                                                             group_sizze_93873 +
                                                             local_tid_93879) *
                                                            2] = y_93933;
                                    *(__global
                                      double *) &mem_97142[(group_id_93880 *
                                                            (num_elems_81642 *
                                                             group_sizze_93873) +
                                                            i_93935 *
                                                            group_sizze_93873 +
                                                            local_tid_93879) *
                                                           8] = lw_val_93988;
                                    x_93992 = x_93906 + chi_93934;
                                    x_93993 = x_93992 / res_93897;
                                    lw_val_93994 = x_93993 * res_93899;
                                    i_93995 = i_93935 + 1;
                                    *(__global
                                      int16_t *) &mem_97136[(group_id_93880 *
                                                             (num_elems_81642 *
                                                              group_sizze_93873) +
                                                             i_93995 *
                                                             group_sizze_93873 +
                                                             local_tid_93879) *
                                                            2] = x_93932;
                                    *(__global
                                      int16_t *) &mem_97139[(group_id_93880 *
                                                             (num_elems_81642 *
                                                              group_sizze_93873) +
                                                             i_93995 *
                                                             group_sizze_93873 +
                                                             local_tid_93879) *
                                                            2] = x_93958;
                                    *(__global
                                      double *) &mem_97142[(group_id_93880 *
                                                            (num_elems_81642 *
                                                             group_sizze_93873) +
                                                            i_93995 *
                                                            group_sizze_93873 +
                                                            local_tid_93879) *
                                                           8] = lw_val_93994;
                                    res_93979 = chi_93934;
                                    res_93980 = i_93935;
                                    res_93984 = 0;
                                    res_93985 = i_93995;
                                } else {
                                    double res_93999;
                                    int32_t res_94000;
                                    double x_94001;
                                    double x_94002;
                                    double lw_val_94003;
                                    double x_94007;
                                    double x_94008;
                                    double lw_val_94009;
                                    int32_t i_94010;
                                    char x_94014;
                                    char y_94015;
                                    char not_arg_94016;
                                    char res_94017;
                                    
                                    res_93999 = x_93940 - delta_81565;
                                    res_94000 = i_93935 + 2;
                                    x_94001 = delta_81565 - chi_93934;
                                    x_94002 = x_94001 / res_93897;
                                    lw_val_94003 = x_94002 * res_93899;
                                    *(__global
                                      int16_t *) &mem_97136[(group_id_93880 *
                                                             (num_elems_81642 *
                                                              group_sizze_93873) +
                                                             i_93935 *
                                                             group_sizze_93873 +
                                                             local_tid_93879) *
                                                            2] = x_93932;
                                    *(__global
                                      int16_t *) &mem_97139[(group_id_93880 *
                                                             (num_elems_81642 *
                                                              group_sizze_93873) +
                                                             i_93935 *
                                                             group_sizze_93873 +
                                                             local_tid_93879) *
                                                            2] = y_93933;
                                    *(__global
                                      double *) &mem_97142[(group_id_93880 *
                                                            (num_elems_81642 *
                                                             group_sizze_93873) +
                                                            i_93935 *
                                                            group_sizze_93873 +
                                                            local_tid_93879) *
                                                           8] = lw_val_94003;
                                    x_94007 = x_93906 + chi_93934;
                                    x_94008 = x_94007 / res_93897;
                                    lw_val_94009 = x_94008 * res_93899;
                                    i_94010 = i_93935 + 1;
                                    *(__global
                                      int16_t *) &mem_97136[(group_id_93880 *
                                                             (num_elems_81642 *
                                                              group_sizze_93873) +
                                                             i_94010 *
                                                             group_sizze_93873 +
                                                             local_tid_93879) *
                                                            2] = x_93932;
                                    *(__global
                                      int16_t *) &mem_97139[(group_id_93880 *
                                                             (num_elems_81642 *
                                                              group_sizze_93873) +
                                                             i_94010 *
                                                             group_sizze_93873 +
                                                             local_tid_93879) *
                                                            2] = x_93958;
                                    *(__global
                                      double *) &mem_97142[(group_id_93880 *
                                                            (num_elems_81642 *
                                                             group_sizze_93873) +
                                                            i_94010 *
                                                            group_sizze_93873 +
                                                            local_tid_93879) *
                                                           8] = lw_val_94009;
                                    x_94014 = !cond_93976;
                                    y_94015 = x_94014 && cond_93959;
                                    not_arg_94016 = cond_93976 || y_94015;
                                    res_94017 = !not_arg_94016;
                                    res_93979 = res_93999;
                                    res_93980 = res_94000;
                                    res_93984 = res_94017;
                                    res_93985 = i_94010;
                                }
                                res_93960 = res_93977;
                                res_93961 = res_93978;
                                res_93962 = res_93979;
                                res_93963 = res_93980;
                                res_93967 = res_93984;
                                res_93968 = res_93985;
                            }
                            res_93942 = res_93960;
                            res_93943 = res_93961;
                            res_93944 = res_93962;
                            res_93945 = res_93963;
                            res_93949 = res_93967;
                            res_93950 = res_93968;
                        }
                        
                        char loop_while_tmp_98337 = res_93949;
                        int16_t x_tmp_98338 = res_93942;
                        int16_t y_tmp_98339 = res_93943;
                        double chi_tmp_98340 = res_93944;
                        int32_t i_tmp_98341 = res_93945;
                        int32_t lastIndex_tmp_98345;
                        
                        lastIndex_tmp_98345 = res_93950;
                        loop_while_93931 = loop_while_tmp_98337;
                        x_93932 = x_tmp_98338;
                        y_93933 = y_tmp_98339;
                        chi_93934 = chi_tmp_98340;
                        i_93935 = i_tmp_98341;
                        lastIndex_93939 = lastIndex_tmp_98345;
                    }
                    res_93922 = loop_while_93931;
                    res_93923 = x_93932;
                    res_93924 = y_93933;
                    res_93925 = chi_93934;
                    res_93926 = i_93935;
                    res_93930 = lastIndex_93939;
                    res_94018 = res_93930 + 1;
                    res_93918 = res_94018;
                } else {
                    char res_94022;
                    int16_t res_94023;
                    int16_t res_94024;
                    double res_94025;
                    int32_t res_94026;
                    int32_t res_94030;
                    int32_t res_94118;
                    
                    *(__global int16_t *) &mem_97136[(group_id_93880 *
                                                      (num_elems_81642 *
                                                       group_sizze_93873) +
                                                      local_tid_93879) * 2] =
                        res_93888;
                    *(__global int16_t *) &mem_97139[(group_id_93880 *
                                                      (num_elems_81642 *
                                                       group_sizze_93873) +
                                                      local_tid_93879) * 2] =
                        arg_93904;
                    *(__global double *) &mem_97142[(group_id_93880 *
                                                     (num_elems_81642 *
                                                      group_sizze_93873) +
                                                     local_tid_93879) * 8] =
                        lw_val_93909;
                    
                    char loop_while_94031;
                    int16_t x_94032;
                    int16_t y_94033;
                    double chi_94034;
                    int32_t i_94035;
                    int32_t lastIndex_94039;
                    
                    loop_while_94031 = 1;
                    x_94032 = arg_93903;
                    y_94033 = arg_93904;
                    chi_94034 = arg_93905;
                    i_94035 = 1;
                    lastIndex_94039 = 0;
                    while (loop_while_94031) {
                        double x_94040 = chi_94034 + res_93897;
                        char cond_94041 = x_94040 < delta_81565;
                        int16_t res_94042;
                        int16_t res_94043;
                        double res_94044;
                        int32_t res_94045;
                        char res_94049;
                        int32_t res_94050;
                        
                        if (cond_94041) {
                            int16_t res_94051;
                            int32_t res_94052;
                            char not_arg_94056;
                            char res_94057;
                            
                            res_94051 = x_94032 + res_93883;
                            res_94052 = i_94035 + 1;
                            *(__global int16_t *) &mem_97136[(group_id_93880 *
                                                              (num_elems_81642 *
                                                               group_sizze_93873) +
                                                              i_94035 *
                                                              group_sizze_93873 +
                                                              local_tid_93879) *
                                                             2] = x_94032;
                            *(__global int16_t *) &mem_97139[(group_id_93880 *
                                                              (num_elems_81642 *
                                                               group_sizze_93873) +
                                                              i_94035 *
                                                              group_sizze_93873 +
                                                              local_tid_93879) *
                                                             2] = y_94033;
                            *(__global double *) &mem_97142[(group_id_93880 *
                                                             (num_elems_81642 *
                                                              group_sizze_93873) +
                                                             i_94035 *
                                                             group_sizze_93873 +
                                                             local_tid_93879) *
                                                            8] = res_93899;
                            not_arg_94056 = res_94051 == res_93886;
                            res_94057 = !not_arg_94056;
                            res_94042 = res_94051;
                            res_94043 = y_94033;
                            res_94044 = x_94040;
                            res_94045 = res_94052;
                            res_94049 = res_94057;
                            res_94050 = i_94035;
                        } else {
                            int16_t x_94058;
                            char cond_94059;
                            int16_t res_94060;
                            int16_t res_94061;
                            double res_94062;
                            int32_t res_94063;
                            char res_94067;
                            int32_t res_94068;
                            
                            x_94058 = y_94033 + res_93884;
                            cond_94059 = x_94058 == res_93887;
                            if (cond_94059) {
                                double x_94069;
                                double x_94070;
                                double lw_val_94071;
                                
                                x_94069 = delta_81565 - chi_94034;
                                x_94070 = x_94069 / res_93897;
                                lw_val_94071 = x_94070 * res_93899;
                                *(__global
                                  int16_t *) &mem_97136[(group_id_93880 *
                                                         (num_elems_81642 *
                                                          group_sizze_93873) +
                                                         i_94035 *
                                                         group_sizze_93873 +
                                                         local_tid_93879) * 2] =
                                    x_94032;
                                *(__global
                                  int16_t *) &mem_97139[(group_id_93880 *
                                                         (num_elems_81642 *
                                                          group_sizze_93873) +
                                                         i_94035 *
                                                         group_sizze_93873 +
                                                         local_tid_93879) * 2] =
                                    y_94033;
                                *(__global
                                  double *) &mem_97142[(group_id_93880 *
                                                        (num_elems_81642 *
                                                         group_sizze_93873) +
                                                        i_94035 *
                                                        group_sizze_93873 +
                                                        local_tid_93879) * 8] =
                                    lw_val_94071;
                                res_94060 = x_94032;
                                res_94061 = y_94033;
                                res_94062 = chi_94034;
                                res_94063 = i_94035;
                                res_94067 = 0;
                                res_94068 = i_94035;
                            } else {
                                int16_t x_94075;
                                char cond_94076;
                                int16_t res_94077;
                                int16_t res_94078;
                                double res_94079;
                                int32_t res_94080;
                                char res_94084;
                                int32_t res_94085;
                                
                                x_94075 = x_94032 + res_93883;
                                cond_94076 = x_94075 == res_93886;
                                if (cond_94076) {
                                    res_94077 = x_94032;
                                } else {
                                    res_94077 = x_94075;
                                }
                                if (cond_94076) {
                                    res_94078 = y_94033;
                                } else {
                                    res_94078 = x_94058;
                                }
                                if (cond_94076) {
                                    double x_94086;
                                    double x_94087;
                                    double lw_val_94088;
                                    double x_94092;
                                    double x_94093;
                                    double lw_val_94094;
                                    int32_t i_94095;
                                    
                                    x_94086 = delta_81565 - chi_94034;
                                    x_94087 = x_94086 / res_93897;
                                    lw_val_94088 = x_94087 * res_93899;
                                    *(__global
                                      int16_t *) &mem_97136[(group_id_93880 *
                                                             (num_elems_81642 *
                                                              group_sizze_93873) +
                                                             i_94035 *
                                                             group_sizze_93873 +
                                                             local_tid_93879) *
                                                            2] = x_94032;
                                    *(__global
                                      int16_t *) &mem_97139[(group_id_93880 *
                                                             (num_elems_81642 *
                                                              group_sizze_93873) +
                                                             i_94035 *
                                                             group_sizze_93873 +
                                                             local_tid_93879) *
                                                            2] = y_94033;
                                    *(__global
                                      double *) &mem_97142[(group_id_93880 *
                                                            (num_elems_81642 *
                                                             group_sizze_93873) +
                                                            i_94035 *
                                                            group_sizze_93873 +
                                                            local_tid_93879) *
                                                           8] = lw_val_94088;
                                    x_94092 = x_93906 + chi_94034;
                                    x_94093 = x_94092 / res_93897;
                                    lw_val_94094 = x_94093 * res_93899;
                                    i_94095 = i_94035 + 1;
                                    *(__global
                                      int16_t *) &mem_97136[(group_id_93880 *
                                                             (num_elems_81642 *
                                                              group_sizze_93873) +
                                                             i_94095 *
                                                             group_sizze_93873 +
                                                             local_tid_93879) *
                                                            2] = x_94032;
                                    *(__global
                                      int16_t *) &mem_97139[(group_id_93880 *
                                                             (num_elems_81642 *
                                                              group_sizze_93873) +
                                                             i_94095 *
                                                             group_sizze_93873 +
                                                             local_tid_93879) *
                                                            2] = x_94058;
                                    *(__global
                                      double *) &mem_97142[(group_id_93880 *
                                                            (num_elems_81642 *
                                                             group_sizze_93873) +
                                                            i_94095 *
                                                            group_sizze_93873 +
                                                            local_tid_93879) *
                                                           8] = lw_val_94094;
                                    res_94079 = chi_94034;
                                    res_94080 = i_94035;
                                    res_94084 = 0;
                                    res_94085 = i_94095;
                                } else {
                                    double res_94099;
                                    int32_t res_94100;
                                    double x_94101;
                                    double x_94102;
                                    double lw_val_94103;
                                    double x_94107;
                                    double x_94108;
                                    double lw_val_94109;
                                    int32_t i_94110;
                                    char x_94114;
                                    char y_94115;
                                    char not_arg_94116;
                                    char res_94117;
                                    
                                    res_94099 = x_94040 - delta_81565;
                                    res_94100 = i_94035 + 2;
                                    x_94101 = delta_81565 - chi_94034;
                                    x_94102 = x_94101 / res_93897;
                                    lw_val_94103 = x_94102 * res_93899;
                                    *(__global
                                      int16_t *) &mem_97136[(group_id_93880 *
                                                             (num_elems_81642 *
                                                              group_sizze_93873) +
                                                             i_94035 *
                                                             group_sizze_93873 +
                                                             local_tid_93879) *
                                                            2] = x_94032;
                                    *(__global
                                      int16_t *) &mem_97139[(group_id_93880 *
                                                             (num_elems_81642 *
                                                              group_sizze_93873) +
                                                             i_94035 *
                                                             group_sizze_93873 +
                                                             local_tid_93879) *
                                                            2] = y_94033;
                                    *(__global
                                      double *) &mem_97142[(group_id_93880 *
                                                            (num_elems_81642 *
                                                             group_sizze_93873) +
                                                            i_94035 *
                                                            group_sizze_93873 +
                                                            local_tid_93879) *
                                                           8] = lw_val_94103;
                                    x_94107 = x_93906 + chi_94034;
                                    x_94108 = x_94107 / res_93897;
                                    lw_val_94109 = x_94108 * res_93899;
                                    i_94110 = i_94035 + 1;
                                    *(__global
                                      int16_t *) &mem_97136[(group_id_93880 *
                                                             (num_elems_81642 *
                                                              group_sizze_93873) +
                                                             i_94110 *
                                                             group_sizze_93873 +
                                                             local_tid_93879) *
                                                            2] = x_94032;
                                    *(__global
                                      int16_t *) &mem_97139[(group_id_93880 *
                                                             (num_elems_81642 *
                                                              group_sizze_93873) +
                                                             i_94110 *
                                                             group_sizze_93873 +
                                                             local_tid_93879) *
                                                            2] = x_94058;
                                    *(__global
                                      double *) &mem_97142[(group_id_93880 *
                                                            (num_elems_81642 *
                                                             group_sizze_93873) +
                                                            i_94110 *
                                                            group_sizze_93873 +
                                                            local_tid_93879) *
                                                           8] = lw_val_94109;
                                    x_94114 = !cond_94076;
                                    y_94115 = x_94114 && cond_94059;
                                    not_arg_94116 = cond_94076 || y_94115;
                                    res_94117 = !not_arg_94116;
                                    res_94079 = res_94099;
                                    res_94080 = res_94100;
                                    res_94084 = res_94117;
                                    res_94085 = i_94110;
                                }
                                res_94060 = res_94077;
                                res_94061 = res_94078;
                                res_94062 = res_94079;
                                res_94063 = res_94080;
                                res_94067 = res_94084;
                                res_94068 = res_94085;
                            }
                            res_94042 = res_94060;
                            res_94043 = res_94061;
                            res_94044 = res_94062;
                            res_94045 = res_94063;
                            res_94049 = res_94067;
                            res_94050 = res_94068;
                        }
                        
                        char loop_while_tmp_98346 = res_94049;
                        int16_t x_tmp_98347 = res_94042;
                        int16_t y_tmp_98348 = res_94043;
                        double chi_tmp_98349 = res_94044;
                        int32_t i_tmp_98350 = res_94045;
                        int32_t lastIndex_tmp_98354;
                        
                        lastIndex_tmp_98354 = res_94050;
                        loop_while_94031 = loop_while_tmp_98346;
                        x_94032 = x_tmp_98347;
                        y_94033 = y_tmp_98348;
                        chi_94034 = chi_tmp_98349;
                        i_94035 = i_tmp_98350;
                        lastIndex_94039 = lastIndex_tmp_98354;
                    }
                    res_94022 = loop_while_94031;
                    res_94023 = x_94032;
                    res_94024 = y_94033;
                    res_94025 = chi_94034;
                    res_94026 = i_94035;
                    res_94030 = lastIndex_94039;
                    res_94118 = res_94030 + 1;
                    res_93918 = res_94118;
                }
                res_93914 = res_93918;
            } else {
                char res_94119;
                int16_t res_94120;
                int16_t res_94121;
                double res_94122;
                int32_t res_94123;
                int32_t res_94127;
                int32_t res_94215;
                char loop_while_94128;
                int16_t x_94129;
                int16_t y_94130;
                double chi_94131;
                int32_t i_94132;
                int32_t lastIndex_94136;
                
                loop_while_94128 = 1;
                x_94129 = res_93888;
                y_94130 = res_93889;
                chi_94131 = x_93881;
                i_94132 = 0;
                lastIndex_94136 = 0;
                while (loop_while_94128) {
                    double x_94137 = chi_94131 + res_93897;
                    char cond_94138 = x_94137 < delta_81565;
                    int16_t res_94139;
                    int16_t res_94140;
                    double res_94141;
                    int32_t res_94142;
                    char res_94146;
                    int32_t res_94147;
                    
                    if (cond_94138) {
                        int16_t res_94148;
                        int32_t res_94149;
                        char not_arg_94153;
                        char res_94154;
                        
                        res_94148 = x_94129 + res_93883;
                        res_94149 = i_94132 + 1;
                        *(__global int16_t *) &mem_97136[(group_id_93880 *
                                                          (num_elems_81642 *
                                                           group_sizze_93873) +
                                                          i_94132 *
                                                          group_sizze_93873 +
                                                          local_tid_93879) *
                                                         2] = x_94129;
                        *(__global int16_t *) &mem_97139[(group_id_93880 *
                                                          (num_elems_81642 *
                                                           group_sizze_93873) +
                                                          i_94132 *
                                                          group_sizze_93873 +
                                                          local_tid_93879) *
                                                         2] = y_94130;
                        *(__global double *) &mem_97142[(group_id_93880 *
                                                         (num_elems_81642 *
                                                          group_sizze_93873) +
                                                         i_94132 *
                                                         group_sizze_93873 +
                                                         local_tid_93879) * 8] =
                            res_93899;
                        not_arg_94153 = res_94148 == res_93886;
                        res_94154 = !not_arg_94153;
                        res_94139 = res_94148;
                        res_94140 = y_94130;
                        res_94141 = x_94137;
                        res_94142 = res_94149;
                        res_94146 = res_94154;
                        res_94147 = i_94132;
                    } else {
                        int16_t x_94155;
                        char cond_94156;
                        int16_t res_94157;
                        int16_t res_94158;
                        double res_94159;
                        int32_t res_94160;
                        char res_94164;
                        int32_t res_94165;
                        
                        x_94155 = y_94130 + res_93884;
                        cond_94156 = x_94155 == res_93887;
                        if (cond_94156) {
                            double x_94166;
                            double x_94167;
                            double lw_val_94168;
                            
                            x_94166 = delta_81565 - chi_94131;
                            x_94167 = x_94166 / res_93897;
                            lw_val_94168 = x_94167 * res_93899;
                            *(__global int16_t *) &mem_97136[(group_id_93880 *
                                                              (num_elems_81642 *
                                                               group_sizze_93873) +
                                                              i_94132 *
                                                              group_sizze_93873 +
                                                              local_tid_93879) *
                                                             2] = x_94129;
                            *(__global int16_t *) &mem_97139[(group_id_93880 *
                                                              (num_elems_81642 *
                                                               group_sizze_93873) +
                                                              i_94132 *
                                                              group_sizze_93873 +
                                                              local_tid_93879) *
                                                             2] = y_94130;
                            *(__global double *) &mem_97142[(group_id_93880 *
                                                             (num_elems_81642 *
                                                              group_sizze_93873) +
                                                             i_94132 *
                                                             group_sizze_93873 +
                                                             local_tid_93879) *
                                                            8] = lw_val_94168;
                            res_94157 = x_94129;
                            res_94158 = y_94130;
                            res_94159 = chi_94131;
                            res_94160 = i_94132;
                            res_94164 = 0;
                            res_94165 = i_94132;
                        } else {
                            int16_t x_94172;
                            char cond_94173;
                            int16_t res_94174;
                            int16_t res_94175;
                            double res_94176;
                            int32_t res_94177;
                            char res_94181;
                            int32_t res_94182;
                            
                            x_94172 = x_94129 + res_93883;
                            cond_94173 = x_94172 == res_93886;
                            if (cond_94173) {
                                res_94174 = x_94129;
                            } else {
                                res_94174 = x_94172;
                            }
                            if (cond_94173) {
                                res_94175 = y_94130;
                            } else {
                                res_94175 = x_94155;
                            }
                            if (cond_94173) {
                                double x_94183;
                                double x_94184;
                                double lw_val_94185;
                                double x_94189;
                                double x_94190;
                                double lw_val_94191;
                                int32_t i_94192;
                                
                                x_94183 = delta_81565 - chi_94131;
                                x_94184 = x_94183 / res_93897;
                                lw_val_94185 = x_94184 * res_93899;
                                *(__global
                                  int16_t *) &mem_97136[(group_id_93880 *
                                                         (num_elems_81642 *
                                                          group_sizze_93873) +
                                                         i_94132 *
                                                         group_sizze_93873 +
                                                         local_tid_93879) * 2] =
                                    x_94129;
                                *(__global
                                  int16_t *) &mem_97139[(group_id_93880 *
                                                         (num_elems_81642 *
                                                          group_sizze_93873) +
                                                         i_94132 *
                                                         group_sizze_93873 +
                                                         local_tid_93879) * 2] =
                                    y_94130;
                                *(__global
                                  double *) &mem_97142[(group_id_93880 *
                                                        (num_elems_81642 *
                                                         group_sizze_93873) +
                                                        i_94132 *
                                                        group_sizze_93873 +
                                                        local_tid_93879) * 8] =
                                    lw_val_94185;
                                x_94189 = x_93906 + chi_94131;
                                x_94190 = x_94189 / res_93897;
                                lw_val_94191 = x_94190 * res_93899;
                                i_94192 = i_94132 + 1;
                                *(__global
                                  int16_t *) &mem_97136[(group_id_93880 *
                                                         (num_elems_81642 *
                                                          group_sizze_93873) +
                                                         i_94192 *
                                                         group_sizze_93873 +
                                                         local_tid_93879) * 2] =
                                    x_94129;
                                *(__global
                                  int16_t *) &mem_97139[(group_id_93880 *
                                                         (num_elems_81642 *
                                                          group_sizze_93873) +
                                                         i_94192 *
                                                         group_sizze_93873 +
                                                         local_tid_93879) * 2] =
                                    x_94155;
                                *(__global
                                  double *) &mem_97142[(group_id_93880 *
                                                        (num_elems_81642 *
                                                         group_sizze_93873) +
                                                        i_94192 *
                                                        group_sizze_93873 +
                                                        local_tid_93879) * 8] =
                                    lw_val_94191;
                                res_94176 = chi_94131;
                                res_94177 = i_94132;
                                res_94181 = 0;
                                res_94182 = i_94192;
                            } else {
                                double res_94196;
                                int32_t res_94197;
                                double x_94198;
                                double x_94199;
                                double lw_val_94200;
                                double x_94204;
                                double x_94205;
                                double lw_val_94206;
                                int32_t i_94207;
                                char x_94211;
                                char y_94212;
                                char not_arg_94213;
                                char res_94214;
                                
                                res_94196 = x_94137 - delta_81565;
                                res_94197 = i_94132 + 2;
                                x_94198 = delta_81565 - chi_94131;
                                x_94199 = x_94198 / res_93897;
                                lw_val_94200 = x_94199 * res_93899;
                                *(__global
                                  int16_t *) &mem_97136[(group_id_93880 *
                                                         (num_elems_81642 *
                                                          group_sizze_93873) +
                                                         i_94132 *
                                                         group_sizze_93873 +
                                                         local_tid_93879) * 2] =
                                    x_94129;
                                *(__global
                                  int16_t *) &mem_97139[(group_id_93880 *
                                                         (num_elems_81642 *
                                                          group_sizze_93873) +
                                                         i_94132 *
                                                         group_sizze_93873 +
                                                         local_tid_93879) * 2] =
                                    y_94130;
                                *(__global
                                  double *) &mem_97142[(group_id_93880 *
                                                        (num_elems_81642 *
                                                         group_sizze_93873) +
                                                        i_94132 *
                                                        group_sizze_93873 +
                                                        local_tid_93879) * 8] =
                                    lw_val_94200;
                                x_94204 = x_93906 + chi_94131;
                                x_94205 = x_94204 / res_93897;
                                lw_val_94206 = x_94205 * res_93899;
                                i_94207 = i_94132 + 1;
                                *(__global
                                  int16_t *) &mem_97136[(group_id_93880 *
                                                         (num_elems_81642 *
                                                          group_sizze_93873) +
                                                         i_94207 *
                                                         group_sizze_93873 +
                                                         local_tid_93879) * 2] =
                                    x_94129;
                                *(__global
                                  int16_t *) &mem_97139[(group_id_93880 *
                                                         (num_elems_81642 *
                                                          group_sizze_93873) +
                                                         i_94207 *
                                                         group_sizze_93873 +
                                                         local_tid_93879) * 2] =
                                    x_94155;
                                *(__global
                                  double *) &mem_97142[(group_id_93880 *
                                                        (num_elems_81642 *
                                                         group_sizze_93873) +
                                                        i_94207 *
                                                        group_sizze_93873 +
                                                        local_tid_93879) * 8] =
                                    lw_val_94206;
                                x_94211 = !cond_94173;
                                y_94212 = x_94211 && cond_94156;
                                not_arg_94213 = cond_94173 || y_94212;
                                res_94214 = !not_arg_94213;
                                res_94176 = res_94196;
                                res_94177 = res_94197;
                                res_94181 = res_94214;
                                res_94182 = i_94207;
                            }
                            res_94157 = res_94174;
                            res_94158 = res_94175;
                            res_94159 = res_94176;
                            res_94160 = res_94177;
                            res_94164 = res_94181;
                            res_94165 = res_94182;
                        }
                        res_94139 = res_94157;
                        res_94140 = res_94158;
                        res_94141 = res_94159;
                        res_94142 = res_94160;
                        res_94146 = res_94164;
                        res_94147 = res_94165;
                    }
                    
                    char loop_while_tmp_98355 = res_94146;
                    int16_t x_tmp_98356 = res_94139;
                    int16_t y_tmp_98357 = res_94140;
                    double chi_tmp_98358 = res_94141;
                    int32_t i_tmp_98359 = res_94142;
                    int32_t lastIndex_tmp_98363;
                    
                    lastIndex_tmp_98363 = res_94147;
                    loop_while_94128 = loop_while_tmp_98355;
                    x_94129 = x_tmp_98356;
                    y_94130 = y_tmp_98357;
                    chi_94131 = chi_tmp_98358;
                    i_94132 = i_tmp_98359;
                    lastIndex_94136 = lastIndex_tmp_98363;
                }
                res_94119 = loop_while_94128;
                res_94120 = x_94129;
                res_94121 = y_94130;
                res_94122 = chi_94131;
                res_94123 = i_94132;
                res_94127 = lastIndex_94136;
                res_94215 = res_94127 + 1;
                res_93914 = res_94215;
            }
            res_93910 = res_93914;
        } else {
            int32_t res_94216;
            
            if (cond_93900) {
                int32_t res_94220;
                
                if (cond_93902) {
                    char res_94224;
                    int16_t res_94225;
                    int16_t res_94226;
                    double res_94227;
                    int32_t res_94228;
                    int32_t res_94232;
                    int32_t res_94320;
                    char loop_while_94233;
                    int16_t x_94234;
                    int16_t y_94235;
                    double chi_94236;
                    int32_t i_94237;
                    int32_t lastIndex_94241;
                    
                    loop_while_94233 = 1;
                    x_94234 = res_93888;
                    y_94235 = arg_93904;
                    chi_94236 = x_93901;
                    i_94237 = 0;
                    lastIndex_94241 = 0;
                    while (loop_while_94233) {
                        double x_94242 = chi_94236 + res_93897;
                        char cond_94243 = x_94242 < delta_81565;
                        int16_t res_94244;
                        int16_t res_94245;
                        double res_94246;
                        int32_t res_94247;
                        char res_94251;
                        int32_t res_94252;
                        
                        if (cond_94243) {
                            int16_t res_94253;
                            int32_t res_94254;
                            char not_arg_94258;
                            char res_94259;
                            
                            res_94253 = y_94235 + res_93884;
                            res_94254 = i_94237 + 1;
                            *(__global int16_t *) &mem_97136[(group_id_93880 *
                                                              (num_elems_81642 *
                                                               group_sizze_93873) +
                                                              i_94237 *
                                                              group_sizze_93873 +
                                                              local_tid_93879) *
                                                             2] = x_94234;
                            *(__global int16_t *) &mem_97139[(group_id_93880 *
                                                              (num_elems_81642 *
                                                               group_sizze_93873) +
                                                              i_94237 *
                                                              group_sizze_93873 +
                                                              local_tid_93879) *
                                                             2] = y_94235;
                            *(__global double *) &mem_97142[(group_id_93880 *
                                                             (num_elems_81642 *
                                                              group_sizze_93873) +
                                                             i_94237 *
                                                             group_sizze_93873 +
                                                             local_tid_93879) *
                                                            8] = res_93899;
                            not_arg_94258 = res_94253 == res_93887;
                            res_94259 = !not_arg_94258;
                            res_94244 = x_94234;
                            res_94245 = res_94253;
                            res_94246 = x_94242;
                            res_94247 = res_94254;
                            res_94251 = res_94259;
                            res_94252 = i_94237;
                        } else {
                            int16_t x_94260;
                            char cond_94261;
                            int16_t res_94262;
                            int16_t res_94263;
                            double res_94264;
                            int32_t res_94265;
                            char res_94269;
                            int32_t res_94270;
                            
                            x_94260 = x_94234 + res_93883;
                            cond_94261 = x_94260 == res_93886;
                            if (cond_94261) {
                                double x_94271;
                                double x_94272;
                                double lw_val_94273;
                                
                                x_94271 = delta_81565 - chi_94236;
                                x_94272 = x_94271 / res_93897;
                                lw_val_94273 = x_94272 * res_93899;
                                *(__global
                                  int16_t *) &mem_97136[(group_id_93880 *
                                                         (num_elems_81642 *
                                                          group_sizze_93873) +
                                                         i_94237 *
                                                         group_sizze_93873 +
                                                         local_tid_93879) * 2] =
                                    x_94234;
                                *(__global
                                  int16_t *) &mem_97139[(group_id_93880 *
                                                         (num_elems_81642 *
                                                          group_sizze_93873) +
                                                         i_94237 *
                                                         group_sizze_93873 +
                                                         local_tid_93879) * 2] =
                                    y_94235;
                                *(__global
                                  double *) &mem_97142[(group_id_93880 *
                                                        (num_elems_81642 *
                                                         group_sizze_93873) +
                                                        i_94237 *
                                                        group_sizze_93873 +
                                                        local_tid_93879) * 8] =
                                    lw_val_94273;
                                res_94262 = x_94234;
                                res_94263 = y_94235;
                                res_94264 = chi_94236;
                                res_94265 = i_94237;
                                res_94269 = 0;
                                res_94270 = i_94237;
                            } else {
                                int16_t x_94277;
                                char cond_94278;
                                int16_t res_94279;
                                int16_t res_94280;
                                double res_94281;
                                int32_t res_94282;
                                char res_94286;
                                int32_t res_94287;
                                
                                x_94277 = y_94235 + res_93884;
                                cond_94278 = x_94277 == res_93887;
                                if (cond_94278) {
                                    res_94279 = x_94234;
                                } else {
                                    res_94279 = x_94260;
                                }
                                if (cond_94278) {
                                    res_94280 = y_94235;
                                } else {
                                    res_94280 = x_94277;
                                }
                                if (cond_94278) {
                                    double x_94288;
                                    double x_94289;
                                    double lw_val_94290;
                                    double x_94294;
                                    double x_94295;
                                    double lw_val_94296;
                                    int32_t i_94297;
                                    
                                    x_94288 = delta_81565 - chi_94236;
                                    x_94289 = x_94288 / res_93897;
                                    lw_val_94290 = x_94289 * res_93899;
                                    *(__global
                                      int16_t *) &mem_97136[(group_id_93880 *
                                                             (num_elems_81642 *
                                                              group_sizze_93873) +
                                                             i_94237 *
                                                             group_sizze_93873 +
                                                             local_tid_93879) *
                                                            2] = x_94234;
                                    *(__global
                                      int16_t *) &mem_97139[(group_id_93880 *
                                                             (num_elems_81642 *
                                                              group_sizze_93873) +
                                                             i_94237 *
                                                             group_sizze_93873 +
                                                             local_tid_93879) *
                                                            2] = y_94235;
                                    *(__global
                                      double *) &mem_97142[(group_id_93880 *
                                                            (num_elems_81642 *
                                                             group_sizze_93873) +
                                                            i_94237 *
                                                            group_sizze_93873 +
                                                            local_tid_93879) *
                                                           8] = lw_val_94290;
                                    x_94294 = x_93906 + chi_94236;
                                    x_94295 = x_94294 / res_93897;
                                    lw_val_94296 = x_94295 * res_93899;
                                    i_94297 = i_94237 + 1;
                                    *(__global
                                      int16_t *) &mem_97136[(group_id_93880 *
                                                             (num_elems_81642 *
                                                              group_sizze_93873) +
                                                             i_94297 *
                                                             group_sizze_93873 +
                                                             local_tid_93879) *
                                                            2] = x_94260;
                                    *(__global
                                      int16_t *) &mem_97139[(group_id_93880 *
                                                             (num_elems_81642 *
                                                              group_sizze_93873) +
                                                             i_94297 *
                                                             group_sizze_93873 +
                                                             local_tid_93879) *
                                                            2] = y_94235;
                                    *(__global
                                      double *) &mem_97142[(group_id_93880 *
                                                            (num_elems_81642 *
                                                             group_sizze_93873) +
                                                            i_94297 *
                                                            group_sizze_93873 +
                                                            local_tid_93879) *
                                                           8] = lw_val_94296;
                                    res_94281 = chi_94236;
                                    res_94282 = i_94237;
                                    res_94286 = 0;
                                    res_94287 = i_94297;
                                } else {
                                    double res_94301;
                                    int32_t res_94302;
                                    double x_94303;
                                    double x_94304;
                                    double lw_val_94305;
                                    double x_94309;
                                    double x_94310;
                                    double lw_val_94311;
                                    int32_t i_94312;
                                    char x_94316;
                                    char y_94317;
                                    char not_arg_94318;
                                    char res_94319;
                                    
                                    res_94301 = x_94242 - delta_81565;
                                    res_94302 = i_94237 + 2;
                                    x_94303 = delta_81565 - chi_94236;
                                    x_94304 = x_94303 / res_93897;
                                    lw_val_94305 = x_94304 * res_93899;
                                    *(__global
                                      int16_t *) &mem_97136[(group_id_93880 *
                                                             (num_elems_81642 *
                                                              group_sizze_93873) +
                                                             i_94237 *
                                                             group_sizze_93873 +
                                                             local_tid_93879) *
                                                            2] = x_94234;
                                    *(__global
                                      int16_t *) &mem_97139[(group_id_93880 *
                                                             (num_elems_81642 *
                                                              group_sizze_93873) +
                                                             i_94237 *
                                                             group_sizze_93873 +
                                                             local_tid_93879) *
                                                            2] = y_94235;
                                    *(__global
                                      double *) &mem_97142[(group_id_93880 *
                                                            (num_elems_81642 *
                                                             group_sizze_93873) +
                                                            i_94237 *
                                                            group_sizze_93873 +
                                                            local_tid_93879) *
                                                           8] = lw_val_94305;
                                    x_94309 = x_93906 + chi_94236;
                                    x_94310 = x_94309 / res_93897;
                                    lw_val_94311 = x_94310 * res_93899;
                                    i_94312 = i_94237 + 1;
                                    *(__global
                                      int16_t *) &mem_97136[(group_id_93880 *
                                                             (num_elems_81642 *
                                                              group_sizze_93873) +
                                                             i_94312 *
                                                             group_sizze_93873 +
                                                             local_tid_93879) *
                                                            2] = x_94260;
                                    *(__global
                                      int16_t *) &mem_97139[(group_id_93880 *
                                                             (num_elems_81642 *
                                                              group_sizze_93873) +
                                                             i_94312 *
                                                             group_sizze_93873 +
                                                             local_tid_93879) *
                                                            2] = y_94235;
                                    *(__global
                                      double *) &mem_97142[(group_id_93880 *
                                                            (num_elems_81642 *
                                                             group_sizze_93873) +
                                                            i_94312 *
                                                            group_sizze_93873 +
                                                            local_tid_93879) *
                                                           8] = lw_val_94311;
                                    x_94316 = !cond_94261;
                                    y_94317 = x_94316 && cond_94278;
                                    not_arg_94318 = cond_94261 || y_94317;
                                    res_94319 = !not_arg_94318;
                                    res_94281 = res_94301;
                                    res_94282 = res_94302;
                                    res_94286 = res_94319;
                                    res_94287 = i_94312;
                                }
                                res_94262 = res_94279;
                                res_94263 = res_94280;
                                res_94264 = res_94281;
                                res_94265 = res_94282;
                                res_94269 = res_94286;
                                res_94270 = res_94287;
                            }
                            res_94244 = res_94262;
                            res_94245 = res_94263;
                            res_94246 = res_94264;
                            res_94247 = res_94265;
                            res_94251 = res_94269;
                            res_94252 = res_94270;
                        }
                        
                        char loop_while_tmp_98364 = res_94251;
                        int16_t x_tmp_98365 = res_94244;
                        int16_t y_tmp_98366 = res_94245;
                        double chi_tmp_98367 = res_94246;
                        int32_t i_tmp_98368 = res_94247;
                        int32_t lastIndex_tmp_98372;
                        
                        lastIndex_tmp_98372 = res_94252;
                        loop_while_94233 = loop_while_tmp_98364;
                        x_94234 = x_tmp_98365;
                        y_94235 = y_tmp_98366;
                        chi_94236 = chi_tmp_98367;
                        i_94237 = i_tmp_98368;
                        lastIndex_94241 = lastIndex_tmp_98372;
                    }
                    res_94224 = loop_while_94233;
                    res_94225 = x_94234;
                    res_94226 = y_94235;
                    res_94227 = chi_94236;
                    res_94228 = i_94237;
                    res_94232 = lastIndex_94241;
                    res_94320 = res_94232 + 1;
                    res_94220 = res_94320;
                } else {
                    char res_94324;
                    int16_t res_94325;
                    int16_t res_94326;
                    double res_94327;
                    int32_t res_94328;
                    int32_t res_94332;
                    int32_t res_94420;
                    
                    *(__global int16_t *) &mem_97136[(group_id_93880 *
                                                      (num_elems_81642 *
                                                       group_sizze_93873) +
                                                      local_tid_93879) * 2] =
                        arg_93903;
                    *(__global int16_t *) &mem_97139[(group_id_93880 *
                                                      (num_elems_81642 *
                                                       group_sizze_93873) +
                                                      local_tid_93879) * 2] =
                        res_93889;
                    *(__global double *) &mem_97142[(group_id_93880 *
                                                     (num_elems_81642 *
                                                      group_sizze_93873) +
                                                     local_tid_93879) * 8] =
                        lw_val_93909;
                    
                    char loop_while_94333;
                    int16_t x_94334;
                    int16_t y_94335;
                    double chi_94336;
                    int32_t i_94337;
                    int32_t lastIndex_94341;
                    
                    loop_while_94333 = 1;
                    x_94334 = arg_93903;
                    y_94335 = arg_93904;
                    chi_94336 = arg_93905;
                    i_94337 = 1;
                    lastIndex_94341 = 0;
                    while (loop_while_94333) {
                        double x_94342 = chi_94336 + res_93897;
                        char cond_94343 = x_94342 < delta_81565;
                        int16_t res_94344;
                        int16_t res_94345;
                        double res_94346;
                        int32_t res_94347;
                        char res_94351;
                        int32_t res_94352;
                        
                        if (cond_94343) {
                            int16_t res_94353;
                            int32_t res_94354;
                            char not_arg_94358;
                            char res_94359;
                            
                            res_94353 = y_94335 + res_93884;
                            res_94354 = i_94337 + 1;
                            *(__global int16_t *) &mem_97136[(group_id_93880 *
                                                              (num_elems_81642 *
                                                               group_sizze_93873) +
                                                              i_94337 *
                                                              group_sizze_93873 +
                                                              local_tid_93879) *
                                                             2] = x_94334;
                            *(__global int16_t *) &mem_97139[(group_id_93880 *
                                                              (num_elems_81642 *
                                                               group_sizze_93873) +
                                                              i_94337 *
                                                              group_sizze_93873 +
                                                              local_tid_93879) *
                                                             2] = y_94335;
                            *(__global double *) &mem_97142[(group_id_93880 *
                                                             (num_elems_81642 *
                                                              group_sizze_93873) +
                                                             i_94337 *
                                                             group_sizze_93873 +
                                                             local_tid_93879) *
                                                            8] = res_93899;
                            not_arg_94358 = res_94353 == res_93887;
                            res_94359 = !not_arg_94358;
                            res_94344 = x_94334;
                            res_94345 = res_94353;
                            res_94346 = x_94342;
                            res_94347 = res_94354;
                            res_94351 = res_94359;
                            res_94352 = i_94337;
                        } else {
                            int16_t x_94360;
                            char cond_94361;
                            int16_t res_94362;
                            int16_t res_94363;
                            double res_94364;
                            int32_t res_94365;
                            char res_94369;
                            int32_t res_94370;
                            
                            x_94360 = x_94334 + res_93883;
                            cond_94361 = x_94360 == res_93886;
                            if (cond_94361) {
                                double x_94371;
                                double x_94372;
                                double lw_val_94373;
                                
                                x_94371 = delta_81565 - chi_94336;
                                x_94372 = x_94371 / res_93897;
                                lw_val_94373 = x_94372 * res_93899;
                                *(__global
                                  int16_t *) &mem_97136[(group_id_93880 *
                                                         (num_elems_81642 *
                                                          group_sizze_93873) +
                                                         i_94337 *
                                                         group_sizze_93873 +
                                                         local_tid_93879) * 2] =
                                    x_94334;
                                *(__global
                                  int16_t *) &mem_97139[(group_id_93880 *
                                                         (num_elems_81642 *
                                                          group_sizze_93873) +
                                                         i_94337 *
                                                         group_sizze_93873 +
                                                         local_tid_93879) * 2] =
                                    y_94335;
                                *(__global
                                  double *) &mem_97142[(group_id_93880 *
                                                        (num_elems_81642 *
                                                         group_sizze_93873) +
                                                        i_94337 *
                                                        group_sizze_93873 +
                                                        local_tid_93879) * 8] =
                                    lw_val_94373;
                                res_94362 = x_94334;
                                res_94363 = y_94335;
                                res_94364 = chi_94336;
                                res_94365 = i_94337;
                                res_94369 = 0;
                                res_94370 = i_94337;
                            } else {
                                int16_t x_94377;
                                char cond_94378;
                                int16_t res_94379;
                                int16_t res_94380;
                                double res_94381;
                                int32_t res_94382;
                                char res_94386;
                                int32_t res_94387;
                                
                                x_94377 = y_94335 + res_93884;
                                cond_94378 = x_94377 == res_93887;
                                if (cond_94378) {
                                    res_94379 = x_94334;
                                } else {
                                    res_94379 = x_94360;
                                }
                                if (cond_94378) {
                                    res_94380 = y_94335;
                                } else {
                                    res_94380 = x_94377;
                                }
                                if (cond_94378) {
                                    double x_94388;
                                    double x_94389;
                                    double lw_val_94390;
                                    double x_94394;
                                    double x_94395;
                                    double lw_val_94396;
                                    int32_t i_94397;
                                    
                                    x_94388 = delta_81565 - chi_94336;
                                    x_94389 = x_94388 / res_93897;
                                    lw_val_94390 = x_94389 * res_93899;
                                    *(__global
                                      int16_t *) &mem_97136[(group_id_93880 *
                                                             (num_elems_81642 *
                                                              group_sizze_93873) +
                                                             i_94337 *
                                                             group_sizze_93873 +
                                                             local_tid_93879) *
                                                            2] = x_94334;
                                    *(__global
                                      int16_t *) &mem_97139[(group_id_93880 *
                                                             (num_elems_81642 *
                                                              group_sizze_93873) +
                                                             i_94337 *
                                                             group_sizze_93873 +
                                                             local_tid_93879) *
                                                            2] = y_94335;
                                    *(__global
                                      double *) &mem_97142[(group_id_93880 *
                                                            (num_elems_81642 *
                                                             group_sizze_93873) +
                                                            i_94337 *
                                                            group_sizze_93873 +
                                                            local_tid_93879) *
                                                           8] = lw_val_94390;
                                    x_94394 = x_93906 + chi_94336;
                                    x_94395 = x_94394 / res_93897;
                                    lw_val_94396 = x_94395 * res_93899;
                                    i_94397 = i_94337 + 1;
                                    *(__global
                                      int16_t *) &mem_97136[(group_id_93880 *
                                                             (num_elems_81642 *
                                                              group_sizze_93873) +
                                                             i_94397 *
                                                             group_sizze_93873 +
                                                             local_tid_93879) *
                                                            2] = x_94360;
                                    *(__global
                                      int16_t *) &mem_97139[(group_id_93880 *
                                                             (num_elems_81642 *
                                                              group_sizze_93873) +
                                                             i_94397 *
                                                             group_sizze_93873 +
                                                             local_tid_93879) *
                                                            2] = y_94335;
                                    *(__global
                                      double *) &mem_97142[(group_id_93880 *
                                                            (num_elems_81642 *
                                                             group_sizze_93873) +
                                                            i_94397 *
                                                            group_sizze_93873 +
                                                            local_tid_93879) *
                                                           8] = lw_val_94396;
                                    res_94381 = chi_94336;
                                    res_94382 = i_94337;
                                    res_94386 = 0;
                                    res_94387 = i_94397;
                                } else {
                                    double res_94401;
                                    int32_t res_94402;
                                    double x_94403;
                                    double x_94404;
                                    double lw_val_94405;
                                    double x_94409;
                                    double x_94410;
                                    double lw_val_94411;
                                    int32_t i_94412;
                                    char x_94416;
                                    char y_94417;
                                    char not_arg_94418;
                                    char res_94419;
                                    
                                    res_94401 = x_94342 - delta_81565;
                                    res_94402 = i_94337 + 2;
                                    x_94403 = delta_81565 - chi_94336;
                                    x_94404 = x_94403 / res_93897;
                                    lw_val_94405 = x_94404 * res_93899;
                                    *(__global
                                      int16_t *) &mem_97136[(group_id_93880 *
                                                             (num_elems_81642 *
                                                              group_sizze_93873) +
                                                             i_94337 *
                                                             group_sizze_93873 +
                                                             local_tid_93879) *
                                                            2] = x_94334;
                                    *(__global
                                      int16_t *) &mem_97139[(group_id_93880 *
                                                             (num_elems_81642 *
                                                              group_sizze_93873) +
                                                             i_94337 *
                                                             group_sizze_93873 +
                                                             local_tid_93879) *
                                                            2] = y_94335;
                                    *(__global
                                      double *) &mem_97142[(group_id_93880 *
                                                            (num_elems_81642 *
                                                             group_sizze_93873) +
                                                            i_94337 *
                                                            group_sizze_93873 +
                                                            local_tid_93879) *
                                                           8] = lw_val_94405;
                                    x_94409 = x_93906 + chi_94336;
                                    x_94410 = x_94409 / res_93897;
                                    lw_val_94411 = x_94410 * res_93899;
                                    i_94412 = i_94337 + 1;
                                    *(__global
                                      int16_t *) &mem_97136[(group_id_93880 *
                                                             (num_elems_81642 *
                                                              group_sizze_93873) +
                                                             i_94412 *
                                                             group_sizze_93873 +
                                                             local_tid_93879) *
                                                            2] = x_94360;
                                    *(__global
                                      int16_t *) &mem_97139[(group_id_93880 *
                                                             (num_elems_81642 *
                                                              group_sizze_93873) +
                                                             i_94412 *
                                                             group_sizze_93873 +
                                                             local_tid_93879) *
                                                            2] = y_94335;
                                    *(__global
                                      double *) &mem_97142[(group_id_93880 *
                                                            (num_elems_81642 *
                                                             group_sizze_93873) +
                                                            i_94412 *
                                                            group_sizze_93873 +
                                                            local_tid_93879) *
                                                           8] = lw_val_94411;
                                    x_94416 = !cond_94361;
                                    y_94417 = x_94416 && cond_94378;
                                    not_arg_94418 = cond_94361 || y_94417;
                                    res_94419 = !not_arg_94418;
                                    res_94381 = res_94401;
                                    res_94382 = res_94402;
                                    res_94386 = res_94419;
                                    res_94387 = i_94412;
                                }
                                res_94362 = res_94379;
                                res_94363 = res_94380;
                                res_94364 = res_94381;
                                res_94365 = res_94382;
                                res_94369 = res_94386;
                                res_94370 = res_94387;
                            }
                            res_94344 = res_94362;
                            res_94345 = res_94363;
                            res_94346 = res_94364;
                            res_94347 = res_94365;
                            res_94351 = res_94369;
                            res_94352 = res_94370;
                        }
                        
                        char loop_while_tmp_98373 = res_94351;
                        int16_t x_tmp_98374 = res_94344;
                        int16_t y_tmp_98375 = res_94345;
                        double chi_tmp_98376 = res_94346;
                        int32_t i_tmp_98377 = res_94347;
                        int32_t lastIndex_tmp_98381;
                        
                        lastIndex_tmp_98381 = res_94352;
                        loop_while_94333 = loop_while_tmp_98373;
                        x_94334 = x_tmp_98374;
                        y_94335 = y_tmp_98375;
                        chi_94336 = chi_tmp_98376;
                        i_94337 = i_tmp_98377;
                        lastIndex_94341 = lastIndex_tmp_98381;
                    }
                    res_94324 = loop_while_94333;
                    res_94325 = x_94334;
                    res_94326 = y_94335;
                    res_94327 = chi_94336;
                    res_94328 = i_94337;
                    res_94332 = lastIndex_94341;
                    res_94420 = res_94332 + 1;
                    res_94220 = res_94420;
                }
                res_94216 = res_94220;
            } else {
                char res_94421;
                int16_t res_94422;
                int16_t res_94423;
                double res_94424;
                int32_t res_94425;
                int32_t res_94429;
                int32_t res_94517;
                char loop_while_94430;
                int16_t x_94431;
                int16_t y_94432;
                double chi_94433;
                int32_t i_94434;
                int32_t lastIndex_94438;
                
                loop_while_94430 = 1;
                x_94431 = res_93888;
                y_94432 = res_93889;
                chi_94433 = x_93881;
                i_94434 = 0;
                lastIndex_94438 = 0;
                while (loop_while_94430) {
                    double x_94439 = chi_94433 + res_93897;
                    char cond_94440 = x_94439 < delta_81565;
                    int16_t res_94441;
                    int16_t res_94442;
                    double res_94443;
                    int32_t res_94444;
                    char res_94448;
                    int32_t res_94449;
                    
                    if (cond_94440) {
                        int16_t res_94450;
                        int32_t res_94451;
                        char not_arg_94455;
                        char res_94456;
                        
                        res_94450 = y_94432 + res_93884;
                        res_94451 = i_94434 + 1;
                        *(__global int16_t *) &mem_97136[(group_id_93880 *
                                                          (num_elems_81642 *
                                                           group_sizze_93873) +
                                                          i_94434 *
                                                          group_sizze_93873 +
                                                          local_tid_93879) *
                                                         2] = x_94431;
                        *(__global int16_t *) &mem_97139[(group_id_93880 *
                                                          (num_elems_81642 *
                                                           group_sizze_93873) +
                                                          i_94434 *
                                                          group_sizze_93873 +
                                                          local_tid_93879) *
                                                         2] = y_94432;
                        *(__global double *) &mem_97142[(group_id_93880 *
                                                         (num_elems_81642 *
                                                          group_sizze_93873) +
                                                         i_94434 *
                                                         group_sizze_93873 +
                                                         local_tid_93879) * 8] =
                            res_93899;
                        not_arg_94455 = res_94450 == res_93887;
                        res_94456 = !not_arg_94455;
                        res_94441 = x_94431;
                        res_94442 = res_94450;
                        res_94443 = x_94439;
                        res_94444 = res_94451;
                        res_94448 = res_94456;
                        res_94449 = i_94434;
                    } else {
                        int16_t x_94457;
                        char cond_94458;
                        int16_t res_94459;
                        int16_t res_94460;
                        double res_94461;
                        int32_t res_94462;
                        char res_94466;
                        int32_t res_94467;
                        
                        x_94457 = x_94431 + res_93883;
                        cond_94458 = x_94457 == res_93886;
                        if (cond_94458) {
                            double x_94468;
                            double x_94469;
                            double lw_val_94470;
                            
                            x_94468 = delta_81565 - chi_94433;
                            x_94469 = x_94468 / res_93897;
                            lw_val_94470 = x_94469 * res_93899;
                            *(__global int16_t *) &mem_97136[(group_id_93880 *
                                                              (num_elems_81642 *
                                                               group_sizze_93873) +
                                                              i_94434 *
                                                              group_sizze_93873 +
                                                              local_tid_93879) *
                                                             2] = x_94431;
                            *(__global int16_t *) &mem_97139[(group_id_93880 *
                                                              (num_elems_81642 *
                                                               group_sizze_93873) +
                                                              i_94434 *
                                                              group_sizze_93873 +
                                                              local_tid_93879) *
                                                             2] = y_94432;
                            *(__global double *) &mem_97142[(group_id_93880 *
                                                             (num_elems_81642 *
                                                              group_sizze_93873) +
                                                             i_94434 *
                                                             group_sizze_93873 +
                                                             local_tid_93879) *
                                                            8] = lw_val_94470;
                            res_94459 = x_94431;
                            res_94460 = y_94432;
                            res_94461 = chi_94433;
                            res_94462 = i_94434;
                            res_94466 = 0;
                            res_94467 = i_94434;
                        } else {
                            int16_t x_94474;
                            char cond_94475;
                            int16_t res_94476;
                            int16_t res_94477;
                            double res_94478;
                            int32_t res_94479;
                            char res_94483;
                            int32_t res_94484;
                            
                            x_94474 = y_94432 + res_93884;
                            cond_94475 = x_94474 == res_93887;
                            if (cond_94475) {
                                res_94476 = x_94431;
                            } else {
                                res_94476 = x_94457;
                            }
                            if (cond_94475) {
                                res_94477 = y_94432;
                            } else {
                                res_94477 = x_94474;
                            }
                            if (cond_94475) {
                                double x_94485;
                                double x_94486;
                                double lw_val_94487;
                                double x_94491;
                                double x_94492;
                                double lw_val_94493;
                                int32_t i_94494;
                                
                                x_94485 = delta_81565 - chi_94433;
                                x_94486 = x_94485 / res_93897;
                                lw_val_94487 = x_94486 * res_93899;
                                *(__global
                                  int16_t *) &mem_97136[(group_id_93880 *
                                                         (num_elems_81642 *
                                                          group_sizze_93873) +
                                                         i_94434 *
                                                         group_sizze_93873 +
                                                         local_tid_93879) * 2] =
                                    x_94431;
                                *(__global
                                  int16_t *) &mem_97139[(group_id_93880 *
                                                         (num_elems_81642 *
                                                          group_sizze_93873) +
                                                         i_94434 *
                                                         group_sizze_93873 +
                                                         local_tid_93879) * 2] =
                                    y_94432;
                                *(__global
                                  double *) &mem_97142[(group_id_93880 *
                                                        (num_elems_81642 *
                                                         group_sizze_93873) +
                                                        i_94434 *
                                                        group_sizze_93873 +
                                                        local_tid_93879) * 8] =
                                    lw_val_94487;
                                x_94491 = x_93906 + chi_94433;
                                x_94492 = x_94491 / res_93897;
                                lw_val_94493 = x_94492 * res_93899;
                                i_94494 = i_94434 + 1;
                                *(__global
                                  int16_t *) &mem_97136[(group_id_93880 *
                                                         (num_elems_81642 *
                                                          group_sizze_93873) +
                                                         i_94494 *
                                                         group_sizze_93873 +
                                                         local_tid_93879) * 2] =
                                    x_94457;
                                *(__global
                                  int16_t *) &mem_97139[(group_id_93880 *
                                                         (num_elems_81642 *
                                                          group_sizze_93873) +
                                                         i_94494 *
                                                         group_sizze_93873 +
                                                         local_tid_93879) * 2] =
                                    y_94432;
                                *(__global
                                  double *) &mem_97142[(group_id_93880 *
                                                        (num_elems_81642 *
                                                         group_sizze_93873) +
                                                        i_94494 *
                                                        group_sizze_93873 +
                                                        local_tid_93879) * 8] =
                                    lw_val_94493;
                                res_94478 = chi_94433;
                                res_94479 = i_94434;
                                res_94483 = 0;
                                res_94484 = i_94494;
                            } else {
                                double res_94498;
                                int32_t res_94499;
                                double x_94500;
                                double x_94501;
                                double lw_val_94502;
                                double x_94506;
                                double x_94507;
                                double lw_val_94508;
                                int32_t i_94509;
                                char x_94513;
                                char y_94514;
                                char not_arg_94515;
                                char res_94516;
                                
                                res_94498 = x_94439 - delta_81565;
                                res_94499 = i_94434 + 2;
                                x_94500 = delta_81565 - chi_94433;
                                x_94501 = x_94500 / res_93897;
                                lw_val_94502 = x_94501 * res_93899;
                                *(__global
                                  int16_t *) &mem_97136[(group_id_93880 *
                                                         (num_elems_81642 *
                                                          group_sizze_93873) +
                                                         i_94434 *
                                                         group_sizze_93873 +
                                                         local_tid_93879) * 2] =
                                    x_94431;
                                *(__global
                                  int16_t *) &mem_97139[(group_id_93880 *
                                                         (num_elems_81642 *
                                                          group_sizze_93873) +
                                                         i_94434 *
                                                         group_sizze_93873 +
                                                         local_tid_93879) * 2] =
                                    y_94432;
                                *(__global
                                  double *) &mem_97142[(group_id_93880 *
                                                        (num_elems_81642 *
                                                         group_sizze_93873) +
                                                        i_94434 *
                                                        group_sizze_93873 +
                                                        local_tid_93879) * 8] =
                                    lw_val_94502;
                                x_94506 = x_93906 + chi_94433;
                                x_94507 = x_94506 / res_93897;
                                lw_val_94508 = x_94507 * res_93899;
                                i_94509 = i_94434 + 1;
                                *(__global
                                  int16_t *) &mem_97136[(group_id_93880 *
                                                         (num_elems_81642 *
                                                          group_sizze_93873) +
                                                         i_94509 *
                                                         group_sizze_93873 +
                                                         local_tid_93879) * 2] =
                                    x_94457;
                                *(__global
                                  int16_t *) &mem_97139[(group_id_93880 *
                                                         (num_elems_81642 *
                                                          group_sizze_93873) +
                                                         i_94509 *
                                                         group_sizze_93873 +
                                                         local_tid_93879) * 2] =
                                    y_94432;
                                *(__global
                                  double *) &mem_97142[(group_id_93880 *
                                                        (num_elems_81642 *
                                                         group_sizze_93873) +
                                                        i_94509 *
                                                        group_sizze_93873 +
                                                        local_tid_93879) * 8] =
                                    lw_val_94508;
                                x_94513 = !cond_94458;
                                y_94514 = x_94513 && cond_94475;
                                not_arg_94515 = cond_94458 || y_94514;
                                res_94516 = !not_arg_94515;
                                res_94478 = res_94498;
                                res_94479 = res_94499;
                                res_94483 = res_94516;
                                res_94484 = i_94509;
                            }
                            res_94459 = res_94476;
                            res_94460 = res_94477;
                            res_94461 = res_94478;
                            res_94462 = res_94479;
                            res_94466 = res_94483;
                            res_94467 = res_94484;
                        }
                        res_94441 = res_94459;
                        res_94442 = res_94460;
                        res_94443 = res_94461;
                        res_94444 = res_94462;
                        res_94448 = res_94466;
                        res_94449 = res_94467;
                    }
                    
                    char loop_while_tmp_98382 = res_94448;
                    int16_t x_tmp_98383 = res_94441;
                    int16_t y_tmp_98384 = res_94442;
                    double chi_tmp_98385 = res_94443;
                    int32_t i_tmp_98386 = res_94444;
                    int32_t lastIndex_tmp_98390;
                    
                    lastIndex_tmp_98390 = res_94449;
                    loop_while_94430 = loop_while_tmp_98382;
                    x_94431 = x_tmp_98383;
                    y_94432 = y_tmp_98384;
                    chi_94433 = chi_tmp_98385;
                    i_94434 = i_tmp_98386;
                    lastIndex_94438 = lastIndex_tmp_98390;
                }
                res_94421 = loop_while_94430;
                res_94422 = x_94431;
                res_94423 = y_94432;
                res_94424 = chi_94433;
                res_94425 = i_94434;
                res_94429 = lastIndex_94438;
                res_94517 = res_94429 + 1;
                res_94216 = res_94517;
            }
            res_93910 = res_94216;
        }
    }
    if (thread_active_98333) {
        *(__global int32_t *) &mem_97301[gtid_93871 * 4] = res_93910;
    }
    if (thread_active_98333) {
        for (int32_t i_98391 = 0; i_98391 < num_elems_81642; i_98391++) {
            *(__global int16_t *) &mem_97305[(i_98391 * x_83369 + gtid_93871) *
                                             2] = *(__global
                                                    int16_t *) &mem_97136[(group_id_93880 *
                                                                           (num_elems_81642 *
                                                                            group_sizze_93873) +
                                                                           i_98391 *
                                                                           group_sizze_93873 +
                                                                           local_tid_93879) *
                                                                          2];
        }
    }
    if (thread_active_98333) {
        for (int32_t i_98392 = 0; i_98392 < num_elems_81642; i_98392++) {
            *(__global int16_t *) &mem_97309[(i_98392 * x_83369 + gtid_93871) *
                                             2] = *(__global
                                                    int16_t *) &mem_97139[(group_id_93880 *
                                                                           (num_elems_81642 *
                                                                            group_sizze_93873) +
                                                                           i_98392 *
                                                                           group_sizze_93873 +
                                                                           local_tid_93879) *
                                                                          2];
        }
    }
    if (thread_active_98333) {
        for (int32_t i_98393 = 0; i_98393 < num_elems_81642; i_98393++) {
            *(__global double *) &mem_97313[(i_98393 * x_83369 + gtid_93871) *
                                            8] = *(__global
                                                   double *) &mem_97142[(group_id_93880 *
                                                                         (num_elems_81642 *
                                                                          group_sizze_93873) +
                                                                         i_98393 *
                                                                         group_sizze_93873 +
                                                                         local_tid_93879) *
                                                                        8];
        }
    }
}
__kernel void map_kernel_94566(int16_t res_81630, int32_t x_83369, __global
                               unsigned char *mem_97096, __global
                               unsigned char *mem_97099, __global
                               unsigned char *mem_97102, __global
                               unsigned char *mem_97113, __global
                               unsigned char *mem_97116, __global
                               unsigned char *mem_97118, __global
                               unsigned char *mem_97121, __global
                               unsigned char *mem_97124, __global
                               unsigned char *mem_97127, __global
                               unsigned char *mem_97130, __global
                               unsigned char *mem_97133)
{
    int32_t wave_sizze_98328;
    int32_t group_sizze_98329;
    char thread_active_98330;
    int32_t gtid_94559;
    int32_t global_tid_94566;
    int32_t local_tid_94567;
    int32_t group_id_94568;
    
    global_tid_94566 = get_global_id(0);
    local_tid_94567 = get_local_id(0);
    group_sizze_98329 = get_local_size(0);
    wave_sizze_98328 = LOCKSTEP_WIDTH;
    group_id_94568 = get_group_id(0);
    gtid_94559 = global_tid_94566;
    thread_active_98330 = slt32(gtid_94559, x_83369);
    
    double x_94569;
    int16_t x_94570;
    int16_t x_94571;
    char cond_94572;
    char res_94573;
    char x_94574;
    double res_94575;
    int16_t res_94576;
    int16_t res_94577;
    char res_94578;
    char cond_94626;
    int16_t res_94627;
    int16_t res_94628;
    char cond_94632;
    int16_t res_94633;
    int16_t res_94634;
    char cond_94638;
    char res_94639;
    char x_94640;
    char y_94641;
    char cond_94642;
    char x_94643;
    int16_t res_94644;
    int16_t res_94645;
    double res_94655;
    
    if (thread_active_98330) {
        x_94569 = *(__global double *) &mem_97096[gtid_94559 * 8];
        x_94570 = *(__global int16_t *) &mem_97099[gtid_94559 * 2];
        x_94571 = *(__global int16_t *) &mem_97102[gtid_94559 * 2];
        cond_94572 = 0.0 <= x_94569;
        res_94573 = x_94569 <= 45.0;
        x_94574 = cond_94572 && res_94573;
        if (x_94574) {
            res_94575 = x_94569;
            res_94576 = -1;
            res_94577 = 1;
            res_94578 = 0;
        } else {
            char cond_94579;
            char res_94580;
            char x_94581;
            double res_94582;
            int16_t res_94583;
            int16_t res_94584;
            char res_94585;
            
            cond_94579 = 45.0 < x_94569;
            res_94580 = x_94569 < 90.0;
            x_94581 = cond_94579 && res_94580;
            if (x_94581) {
                double res_94586 = 90.0 - x_94569;
                
                res_94582 = res_94586;
                res_94583 = -1;
                res_94584 = 1;
                res_94585 = 1;
            } else {
                char cond_94587;
                char res_94588;
                char x_94589;
                double res_94590;
                int16_t res_94591;
                int16_t res_94592;
                char res_94593;
                
                cond_94587 = 90.0 <= x_94569;
                res_94588 = x_94569 <= 135.0;
                x_94589 = cond_94587 && res_94588;
                if (x_94589) {
                    double res_94594 = x_94569 - 90.0;
                    
                    res_94590 = res_94594;
                    res_94591 = -1;
                    res_94592 = -1;
                    res_94593 = 1;
                } else {
                    char cond_94595;
                    char res_94596;
                    char x_94597;
                    int16_t res_94598;
                    double res_94599;
                    int16_t res_94600;
                    char res_94601;
                    
                    cond_94595 = 135.0 < x_94569;
                    res_94596 = x_94569 <= 180.0;
                    x_94597 = cond_94595 && res_94596;
                    if (x_94597) {
                        res_94598 = -1;
                    } else {
                        res_94598 = 1;
                    }
                    if (x_94597) {
                        double res_94602 = 180.0 - x_94569;
                        
                        res_94599 = res_94602;
                        res_94600 = -1;
                        res_94601 = 0;
                    } else {
                        char cond_94603;
                        char res_94604;
                        char x_94605;
                        double res_94606;
                        int16_t res_94607;
                        char res_94608;
                        
                        cond_94603 = 180.0 < x_94569;
                        res_94604 = x_94569 <= 225.0;
                        x_94605 = cond_94603 && res_94604;
                        if (x_94605) {
                            double res_94609 = x_94569 - 180.0;
                            
                            res_94606 = res_94609;
                            res_94607 = -1;
                            res_94608 = 0;
                        } else {
                            char cond_94610;
                            char res_94611;
                            char x_94612;
                            int16_t res_94613;
                            double res_94614;
                            char res_94615;
                            
                            cond_94610 = 225.0 < x_94569;
                            res_94611 = x_94569 < 270.0;
                            x_94612 = cond_94610 && res_94611;
                            if (x_94612) {
                                res_94613 = -1;
                            } else {
                                res_94613 = 1;
                            }
                            if (x_94612) {
                                double res_94616 = 270.0 - x_94569;
                                
                                res_94614 = res_94616;
                                res_94615 = 1;
                            } else {
                                char cond_94617;
                                double res_94618;
                                char res_94619;
                                
                                cond_94617 = x_94569 == 270.0;
                                if (cond_94617) {
                                    res_94618 = 0.0;
                                    res_94619 = 1;
                                } else {
                                    char cond_94620;
                                    char res_94621;
                                    char x_94622;
                                    double res_94623;
                                    
                                    cond_94620 = 270.0 < x_94569;
                                    res_94621 = x_94569 <= 315.0;
                                    x_94622 = cond_94620 && res_94621;
                                    if (x_94622) {
                                        double res_94624 = x_94569 - 270.0;
                                        
                                        res_94623 = res_94624;
                                    } else {
                                        double res_94625 = 360.0 - x_94569;
                                        
                                        res_94623 = res_94625;
                                    }
                                    res_94618 = res_94623;
                                    res_94619 = x_94622;
                                }
                                res_94614 = res_94618;
                                res_94615 = res_94619;
                            }
                            res_94606 = res_94614;
                            res_94607 = res_94613;
                            res_94608 = res_94615;
                        }
                        res_94599 = res_94606;
                        res_94600 = res_94607;
                        res_94601 = res_94608;
                    }
                    res_94590 = res_94599;
                    res_94591 = res_94598;
                    res_94592 = res_94600;
                    res_94593 = res_94601;
                }
                res_94582 = res_94590;
                res_94583 = res_94591;
                res_94584 = res_94592;
                res_94585 = res_94593;
            }
            res_94575 = res_94582;
            res_94576 = res_94583;
            res_94577 = res_94584;
            res_94578 = res_94585;
        }
        cond_94626 = slt16(res_94576, 0);
        if (cond_94626) {
            int16_t res_94629;
            int16_t x_94630;
            int16_t res_94631;
            
            res_94629 = x_94570 - 1;
            x_94630 = 0 - res_81630;
            res_94631 = x_94630 - 1;
            res_94627 = res_94629;
            res_94628 = res_94631;
        } else {
            res_94627 = x_94570;
            res_94628 = res_81630;
        }
        cond_94632 = slt16(res_94577, 0);
        if (cond_94632) {
            int16_t res_94635;
            int16_t x_94636;
            int16_t res_94637;
            
            res_94635 = x_94571 - 1;
            x_94636 = 0 - res_81630;
            res_94637 = x_94636 - 1;
            res_94633 = res_94635;
            res_94634 = res_94637;
        } else {
            res_94633 = x_94571;
            res_94634 = res_81630;
        }
        cond_94638 = x_94569 == 0.0;
        res_94639 = x_94569 == 180.0;
        x_94640 = !cond_94638;
        y_94641 = x_94640 && res_94639;
        cond_94642 = cond_94638 || y_94641;
        x_94643 = cond_94642 && cond_94626;
        if (x_94643) {
            int16_t res_94646 = res_94627 + 1;
            
            res_94644 = res_94646;
            res_94645 = res_94633;
        } else {
            char cond_94647;
            char res_94648;
            char x_94649;
            char y_94650;
            char cond_94651;
            char x_94652;
            int16_t res_94653;
            
            cond_94647 = x_94569 == 90.0;
            res_94648 = x_94569 == 270.0;
            x_94649 = !cond_94647;
            y_94650 = x_94649 && res_94648;
            cond_94651 = cond_94647 || y_94650;
            x_94652 = cond_94651 && cond_94632;
            if (x_94652) {
                int16_t res_94654 = res_94633 + 1;
                
                res_94653 = res_94654;
            } else {
                res_94653 = res_94633;
            }
            res_94644 = res_94627;
            res_94645 = res_94653;
        }
        res_94655 = 1.7453292519943295e-2 * res_94575;
    }
    if (thread_active_98330) {
        *(__global int16_t *) &mem_97113[gtid_94559 * 2] = res_94576;
    }
    if (thread_active_98330) {
        *(__global int16_t *) &mem_97116[gtid_94559 * 2] = res_94577;
    }
    if (thread_active_98330) {
        *(__global char *) &mem_97118[gtid_94559] = res_94578;
    }
    if (thread_active_98330) {
        *(__global int16_t *) &mem_97121[gtid_94559 * 2] = res_94628;
    }
    if (thread_active_98330) {
        *(__global int16_t *) &mem_97124[gtid_94559 * 2] = res_94634;
    }
    if (thread_active_98330) {
        *(__global int16_t *) &mem_97127[gtid_94559 * 2] = res_94644;
    }
    if (thread_active_98330) {
        *(__global int16_t *) &mem_97130[gtid_94559 * 2] = res_94645;
    }
    if (thread_active_98330) {
        *(__global double *) &mem_97133[gtid_94559 * 8] = res_94655;
    }
}
__kernel void map_kernel_94663(int32_t num_elems_81644, int32_t x_83369,
                               __global unsigned char *mem_97110, __global
                               unsigned char *mem_97301, __global
                               unsigned char *mem_97316)
{
    int32_t wave_sizze_98399;
    int32_t group_sizze_98400;
    char thread_active_98401;
    int32_t write_i_94656;
    int32_t global_tid_94663;
    int32_t local_tid_94664;
    int32_t group_id_94665;
    
    global_tid_94663 = get_global_id(0);
    local_tid_94664 = get_local_id(0);
    group_sizze_98400 = get_local_size(0);
    wave_sizze_98399 = LOCKSTEP_WIDTH;
    group_id_94665 = get_group_id(0);
    write_i_94656 = global_tid_94663;
    thread_active_98401 = slt32(write_i_94656, x_83369);
    
    int32_t write_index_84098;
    int32_t write_value_84099;
    
    if (thread_active_98401) {
        write_index_84098 = *(__global int32_t *) &mem_97110[write_i_94656 * 4];
        write_value_84099 = *(__global int32_t *) &mem_97301[write_i_94656 * 4];
    }
    if (thread_active_98401 && (sle32(0, write_index_84098) &&
                                slt32(write_index_84098, num_elems_81644))) {
        *(__global int32_t *) &mem_97316[write_index_84098 * 4] =
            write_value_84099;
    }
}
__kernel void map_kernel_94759(int32_t conc_tmp_81645, int32_t y_94706, __global
                               unsigned char *mem_97319, __global
                               unsigned char *mem_97334, __global
                               unsigned char *mem_97337)
{
    int32_t wave_sizze_98425;
    int32_t group_sizze_98426;
    char thread_active_98427;
    int32_t j_94744;
    int32_t global_tid_94759;
    int32_t local_tid_94760;
    int32_t group_id_94761;
    
    global_tid_94759 = get_global_id(0);
    local_tid_94760 = get_local_id(0);
    group_sizze_98426 = get_local_size(0);
    wave_sizze_98425 = LOCKSTEP_WIDTH;
    group_id_94761 = get_group_id(0);
    j_94744 = global_tid_94759;
    thread_active_98427 = slt32(j_94744, conc_tmp_81645);
    
    int32_t x_94742;
    int32_t group_id_94749;
    char cond_94750;
    int32_t final_result_94752;
    
    if (thread_active_98427) {
        x_94742 = *(__global int32_t *) &mem_97319[j_94744 * 4];
        group_id_94749 = squot32(j_94744, y_94706);
        cond_94750 = 0 == group_id_94749;
        if (cond_94750) {
            final_result_94752 = x_94742;
        } else {
            int32_t carry_in_index_94751;
            int32_t x_94741;
            int32_t res_94743;
            
            carry_in_index_94751 = group_id_94749 - 1;
            x_94741 = *(__global int32_t *) &mem_97334[carry_in_index_94751 *
                                                       4];
            res_94743 = x_94741 + x_94742;
            final_result_94752 = res_94743;
        }
    }
    if (thread_active_98427) {
        *(__global int32_t *) &mem_97337[j_94744 * 4] = final_result_94752;
    }
}
__kernel void map_kernel_94771(int32_t num_elems_81642, int32_t res_81646,
                               int32_t y_81647, int32_t x_83369, __global
                               unsigned char *mem_97341, __global
                               unsigned char *mem_97345, __global
                               unsigned char *mem_97349)
{
    int32_t wave_sizze_98428;
    int32_t group_sizze_98429;
    char thread_active_98430;
    int32_t gtid_94762;
    int32_t gtid_94763;
    int32_t global_tid_94771;
    int32_t local_tid_94772;
    int32_t group_id_94773;
    
    global_tid_94771 = get_global_id(0);
    local_tid_94772 = get_local_id(0);
    group_sizze_98429 = get_local_size(0);
    wave_sizze_98428 = LOCKSTEP_WIDTH;
    group_id_94773 = get_group_id(0);
    gtid_94762 = squot32(global_tid_94771, num_elems_81642);
    gtid_94763 = global_tid_94771 - squot32(global_tid_94771, num_elems_81642) *
        num_elems_81642;
    thread_active_98430 = slt32(gtid_94762, x_83369) && slt32(gtid_94763,
                                                              num_elems_81642);
    
    int16_t x_94774;
    int16_t x_94775;
    int32_t x_94776;
    int32_t x_94777;
    int32_t x_94778;
    int32_t x_94779;
    int32_t y_94780;
    int32_t res_94781;
    
    if (thread_active_98430) {
        x_94774 = *(__global int16_t *) &mem_97341[(gtid_94762 *
                                                    num_elems_81642 +
                                                    gtid_94763) * 2];
        x_94775 = *(__global int16_t *) &mem_97345[(gtid_94762 *
                                                    num_elems_81642 +
                                                    gtid_94763) * 2];
        x_94776 = sext_i16_i32(x_94774);
        x_94777 = x_94776 + res_81646;
        x_94778 = sext_i16_i32(x_94775);
        x_94779 = x_94778 + res_81646;
        y_94780 = x_94779 * y_81647;
        res_94781 = x_94777 + y_94780;
    }
    if (thread_active_98430) {
        *(__global int32_t *) &mem_97349[(gtid_94762 * num_elems_81642 +
                                          gtid_94763) * 4] = res_94781;
    }
}
__kernel void map_kernel_94881(int32_t y_94825, int32_t convop_x_97339, __global
                               unsigned char *mem_97352, __global
                               unsigned char *mem_97377, __global
                               unsigned char *mem_97380)
{
    int32_t wave_sizze_98455;
    int32_t group_sizze_98456;
    char thread_active_98457;
    int32_t j_94866;
    int32_t global_tid_94881;
    int32_t local_tid_94882;
    int32_t group_id_94883;
    
    global_tid_94881 = get_global_id(0);
    local_tid_94882 = get_local_id(0);
    group_sizze_98456 = get_local_size(0);
    wave_sizze_98455 = LOCKSTEP_WIDTH;
    group_id_94883 = get_group_id(0);
    j_94866 = global_tid_94881;
    thread_active_98457 = slt32(j_94866, convop_x_97339);
    
    int32_t y_94864;
    int32_t group_id_94871;
    char cond_94872;
    int32_t final_result_94874;
    
    if (thread_active_98457) {
        y_94864 = *(__global int32_t *) &mem_97352[j_94866 * 4];
        group_id_94871 = squot32(j_94866, y_94825);
        cond_94872 = 0 == group_id_94871;
        if (cond_94872) {
            final_result_94874 = y_94864;
        } else {
            int32_t carry_in_index_94873;
            int32_t x_94863;
            int32_t zz_94865;
            
            carry_in_index_94873 = group_id_94871 - 1;
            x_94863 = *(__global int32_t *) &mem_97377[carry_in_index_94873 *
                                                       4];
            zz_94865 = x_94863 + y_94864;
            final_result_94874 = zz_94865;
        }
    }
    if (thread_active_98457) {
        *(__global int32_t *) &mem_97380[j_94866 * 4] = final_result_94874;
    }
}
__kernel void map_kernel_94891(int32_t num_elems_81642,
                               int32_t partition_sizze_84135,
                               int32_t convop_x_97339, __global
                               unsigned char *mem_97349, __global
                               unsigned char *mem_97355, __global
                               unsigned char *mem_97359, __global
                               unsigned char *mem_97380, __global
                               unsigned char *mem_97383, __global
                               unsigned char *mem_97386)
{
    int32_t wave_sizze_98458;
    int32_t group_sizze_98459;
    char thread_active_98460;
    int32_t write_i_94884;
    int32_t global_tid_94891;
    int32_t local_tid_94892;
    int32_t group_id_94893;
    
    global_tid_94891 = get_global_id(0);
    local_tid_94892 = get_local_id(0);
    group_sizze_98459 = get_local_size(0);
    wave_sizze_98458 = LOCKSTEP_WIDTH;
    group_id_94893 = get_group_id(0);
    write_i_94884 = global_tid_94891;
    thread_active_98460 = slt32(write_i_94884, convop_x_97339);
    
    int32_t c_84141;
    int32_t offset_84142;
    int32_t new_index_96952;
    int32_t binop_y_96954;
    int32_t new_index_96955;
    int32_t v_84143;
    double v_84144;
    char is_this_one_84145;
    int32_t this_offset_84146;
    int32_t total_res_84147;
    
    if (thread_active_98460) {
        c_84141 = *(__global int32_t *) &mem_97355[write_i_94884 * 4];
        offset_84142 = *(__global int32_t *) &mem_97380[write_i_94884 * 4];
        new_index_96952 = squot32(write_i_94884, num_elems_81642);
        binop_y_96954 = new_index_96952 * num_elems_81642;
        new_index_96955 = write_i_94884 - binop_y_96954;
        v_84143 = *(__global int32_t *) &mem_97349[(new_index_96952 *
                                                    num_elems_81642 +
                                                    new_index_96955) * 4];
        v_84144 = *(__global double *) &mem_97359[(new_index_96952 *
                                                   num_elems_81642 +
                                                   new_index_96955) * 8];
        is_this_one_84145 = c_84141 == 0;
        this_offset_84146 = offset_84142 + -1;
        if (is_this_one_84145) {
            total_res_84147 = this_offset_84146;
        } else {
            total_res_84147 = -1;
        }
    }
    if (thread_active_98460 && (sle32(0, total_res_84147) &&
                                slt32(total_res_84147,
                                      partition_sizze_84135))) {
        *(__global int32_t *) &mem_97383[total_res_84147 * 4] = v_84143;
    }
    if (thread_active_98460 && (sle32(0, total_res_84147) &&
                                slt32(total_res_84147,
                                      partition_sizze_84135))) {
        *(__global double *) &mem_97386[total_res_84147 * 8] = v_84144;
    }
}
__kernel void map_kernel_95013(int32_t sizze_84151, int32_t sizze_84152,
                               __global unsigned char *angles_mem_97022,
                               __global unsigned char *mem_97038)
{
    int32_t wave_sizze_98481;
    int32_t group_sizze_98482;
    char thread_active_98483;
    int32_t gtid_95004;
    int32_t gtid_95005;
    int32_t global_tid_95013;
    int32_t local_tid_95014;
    int32_t group_id_95015;
    
    global_tid_95013 = get_global_id(0);
    local_tid_95014 = get_local_id(0);
    group_sizze_98482 = get_local_size(0);
    wave_sizze_98481 = LOCKSTEP_WIDTH;
    group_id_95015 = get_group_id(0);
    gtid_95004 = squot32(global_tid_95013, sizze_84151);
    gtid_95005 = global_tid_95013 - squot32(global_tid_95013, sizze_84151) *
        sizze_84151;
    thread_active_98483 = slt32(gtid_95004, sizze_84152) && slt32(gtid_95005,
                                                                  sizze_84151);
    
    double x_95016;
    
    if (thread_active_98483) {
        x_95016 = *(__global double *) &angles_mem_97022[gtid_95004 * 8];
    }
    if (thread_active_98483) {
        *(__global double *) &mem_97038[(gtid_95004 * sizze_84151 +
                                         gtid_95005) * 8] = x_95016;
    }
}
__kernel void map_kernel_95973(int32_t nesting_sizze_95006, int32_t y_95901,
                               __global unsigned char *mem_97041, __global
                               unsigned char *mem_97090, __global
                               unsigned char *mem_97093)
{
    int32_t wave_sizze_98513;
    int32_t group_sizze_98514;
    char thread_active_98515;
    int32_t j_95958;
    int32_t global_tid_95973;
    int32_t local_tid_95974;
    int32_t group_id_95975;
    
    global_tid_95973 = get_global_id(0);
    local_tid_95974 = get_local_id(0);
    group_sizze_98514 = get_local_size(0);
    wave_sizze_98513 = LOCKSTEP_WIDTH;
    group_id_95975 = get_group_id(0);
    j_95958 = global_tid_95973;
    thread_active_98515 = slt32(j_95958, nesting_sizze_95006);
    
    int32_t y_95956;
    int32_t group_id_95963;
    char cond_95964;
    int32_t final_result_95966;
    
    if (thread_active_98515) {
        y_95956 = *(__global int32_t *) &mem_97041[j_95958 * 4];
        group_id_95963 = squot32(j_95958, y_95901);
        cond_95964 = 0 == group_id_95963;
        if (cond_95964) {
            final_result_95966 = y_95956;
        } else {
            int32_t carry_in_index_95965;
            int32_t x_95955;
            int32_t zz_95957;
            
            carry_in_index_95965 = group_id_95963 - 1;
            x_95955 = *(__global int32_t *) &mem_97090[carry_in_index_95965 *
                                                       4];
            zz_95957 = x_95955 + y_95956;
            final_result_95966 = zz_95957;
        }
    }
    if (thread_active_98515) {
        *(__global int32_t *) &mem_97093[j_95958 * 4] = final_result_95966;
    }
}
__kernel void map_kernel_95983(int32_t sizze_84151, int32_t rowOffset_84157,
                               int32_t partition_sizze_85929,
                               int32_t nesting_sizze_95006, __global
                               unsigned char *mem_97038, __global
                               unsigned char *mem_97044, __global
                               unsigned char *mem_97047, __global
                               unsigned char *mem_97050, __global
                               unsigned char *mem_97053, __global
                               unsigned char *mem_97055, __global
                               unsigned char *mem_97093, __global
                               unsigned char *mem_97096, __global
                               unsigned char *mem_97099, __global
                               unsigned char *mem_97102, __global
                               unsigned char *mem_97105, __global
                               unsigned char *mem_97107, __global
                               unsigned char *mem_97110)
{
    int32_t wave_sizze_98516;
    int32_t group_sizze_98517;
    char thread_active_98518;
    int32_t write_i_95976;
    int32_t global_tid_95983;
    int32_t local_tid_95984;
    int32_t group_id_95985;
    
    global_tid_95983 = get_global_id(0);
    local_tid_95984 = get_local_id(0);
    group_sizze_98517 = get_local_size(0);
    wave_sizze_98516 = LOCKSTEP_WIDTH;
    group_id_95985 = get_group_id(0);
    write_i_95976 = global_tid_95983;
    thread_active_98518 = slt32(write_i_95976, nesting_sizze_95006);
    
    int32_t c_85944;
    int32_t offset_85945;
    int32_t new_index_96919;
    int32_t binop_y_96921;
    int32_t new_index_96922;
    double v_85946;
    int16_t v_85947;
    int16_t v_85948;
    double v_85949;
    char v_85950;
    int32_t res_85952;
    char is_this_one_85953;
    int32_t this_offset_85954;
    int32_t total_res_85955;
    
    if (thread_active_98518) {
        c_85944 = *(__global int32_t *) &mem_97044[write_i_95976 * 4];
        offset_85945 = *(__global int32_t *) &mem_97093[write_i_95976 * 4];
        new_index_96919 = squot32(write_i_95976, sizze_84151);
        binop_y_96921 = new_index_96919 * sizze_84151;
        new_index_96922 = write_i_95976 - binop_y_96921;
        v_85946 = *(__global double *) &mem_97038[(new_index_96919 *
                                                   sizze_84151 +
                                                   new_index_96922) * 8];
        v_85947 = *(__global int16_t *) &mem_97047[write_i_95976 * 2];
        v_85948 = *(__global int16_t *) &mem_97050[write_i_95976 * 2];
        v_85949 = *(__global double *) &mem_97053[write_i_95976 * 8];
        v_85950 = *(__global char *) &mem_97055[write_i_95976];
        res_85952 = write_i_95976 + rowOffset_84157;
        is_this_one_85953 = c_85944 == 0;
        this_offset_85954 = offset_85945 + -1;
        if (is_this_one_85953) {
            total_res_85955 = this_offset_85954;
        } else {
            total_res_85955 = -1;
        }
    }
    if (thread_active_98518 && (sle32(0, total_res_85955) &&
                                slt32(total_res_85955,
                                      partition_sizze_85929))) {
        *(__global double *) &mem_97096[total_res_85955 * 8] = v_85946;
    }
    if (thread_active_98518 && (sle32(0, total_res_85955) &&
                                slt32(total_res_85955,
                                      partition_sizze_85929))) {
        *(__global int16_t *) &mem_97099[total_res_85955 * 2] = v_85947;
    }
    if (thread_active_98518 && (sle32(0, total_res_85955) &&
                                slt32(total_res_85955,
                                      partition_sizze_85929))) {
        *(__global int16_t *) &mem_97102[total_res_85955 * 2] = v_85948;
    }
    if (thread_active_98518 && (sle32(0, total_res_85955) &&
                                slt32(total_res_85955,
                                      partition_sizze_85929))) {
        *(__global double *) &mem_97105[total_res_85955 * 8] = v_85949;
    }
    if (thread_active_98518 && (sle32(0, total_res_85955) &&
                                slt32(total_res_85955,
                                      partition_sizze_85929))) {
        *(__global char *) &mem_97107[total_res_85955] = v_85950;
    }
    if (thread_active_98518 && (sle32(0, total_res_85955) &&
                                slt32(total_res_85955,
                                      partition_sizze_85929))) {
        *(__global int32_t *) &mem_97110[total_res_85955 * 4] = res_85952;
    }
}
__kernel void map_kernel_95997(int32_t num_elems_84232, int32_t res_84233,
                               int32_t y_84234, int32_t x_85956, __global
                               unsigned char *mem_97318, __global
                               unsigned char *mem_97322, __global
                               unsigned char *mem_97326)
{
    int32_t wave_sizze_98582;
    int32_t group_sizze_98583;
    char thread_active_98584;
    int32_t gtid_95988;
    int32_t gtid_95989;
    int32_t global_tid_95997;
    int32_t local_tid_95998;
    int32_t group_id_95999;
    
    global_tid_95997 = get_global_id(0);
    local_tid_95998 = get_local_id(0);
    group_sizze_98583 = get_local_size(0);
    wave_sizze_98582 = LOCKSTEP_WIDTH;
    group_id_95999 = get_group_id(0);
    gtid_95988 = squot32(global_tid_95997, num_elems_84232);
    gtid_95989 = global_tid_95997 - squot32(global_tid_95997, num_elems_84232) *
        num_elems_84232;
    thread_active_98584 = slt32(gtid_95988, x_85956) && slt32(gtid_95989,
                                                              num_elems_84232);
    
    int16_t x_96000;
    int16_t x_96001;
    int32_t x_96002;
    int32_t x_96003;
    int32_t x_96004;
    int32_t x_96005;
    int32_t y_96006;
    int32_t res_96007;
    
    if (thread_active_98584) {
        x_96000 = *(__global int16_t *) &mem_97318[(gtid_95988 *
                                                    num_elems_84232 +
                                                    gtid_95989) * 2];
        x_96001 = *(__global int16_t *) &mem_97322[(gtid_95988 *
                                                    num_elems_84232 +
                                                    gtid_95989) * 2];
        x_96002 = sext_i16_i32(x_96000);
        x_96003 = x_96002 + res_84233;
        x_96004 = sext_i16_i32(x_96001);
        x_96005 = x_96004 + res_84233;
        y_96006 = x_96005 * y_84234;
        res_96007 = x_96003 + y_96006;
    }
    if (thread_active_98584) {
        *(__global int32_t *) &mem_97326[(gtid_95988 * num_elems_84232 +
                                          gtid_95989) * 4] = res_96007;
    }
}
__kernel void map_kernel_96018(int32_t num_elems_84232, int32_t x_85956,
                               __global unsigned char *mem_97110, __global
                               unsigned char *mem_97314)
{
    int32_t wave_sizze_98579;
    int32_t group_sizze_98580;
    char thread_active_98581;
    int32_t gtid_96009;
    int32_t gtid_96010;
    int32_t global_tid_96018;
    int32_t local_tid_96019;
    int32_t group_id_96020;
    
    global_tid_96018 = get_global_id(0);
    local_tid_96019 = get_local_id(0);
    group_sizze_98580 = get_local_size(0);
    wave_sizze_98579 = LOCKSTEP_WIDTH;
    group_id_96020 = get_group_id(0);
    gtid_96009 = squot32(global_tid_96018, num_elems_84232);
    gtid_96010 = global_tid_96018 - squot32(global_tid_96018, num_elems_84232) *
        num_elems_84232;
    thread_active_98581 = slt32(gtid_96009, x_85956) && slt32(gtid_96010,
                                                              num_elems_84232);
    
    int32_t x_96021;
    
    if (thread_active_98581) {
        x_96021 = *(__global int32_t *) &mem_97110[gtid_96009 * 4];
    }
    if (thread_active_98581) {
        *(__global int32_t *) &mem_97314[(gtid_96009 * num_elems_84232 +
                                          gtid_96010) * 4] = x_96021;
    }
}
__kernel void map_kernel_96062(double delta_84156, int32_t num_elems_84232,
                               int32_t x_85956, __global
                               unsigned char *mem_97105, __global
                               unsigned char *mem_97107, __global
                               unsigned char *mem_97113, __global
                               unsigned char *mem_97116, __global
                               unsigned char *mem_97118, __global
                               unsigned char *mem_97121, __global
                               unsigned char *mem_97124, __global
                               unsigned char *mem_97127, __global
                               unsigned char *mem_97130, __global
                               unsigned char *mem_97133, __global
                               unsigned char *mem_97136, __global
                               unsigned char *mem_97139, __global
                               unsigned char *mem_97142, __global
                               unsigned char *mem_97302, __global
                               unsigned char *mem_97306, __global
                               unsigned char *mem_97310)
{
    int32_t wave_sizze_98522;
    int32_t group_sizze_98523;
    char thread_active_98524;
    int32_t gtid_96055;
    int32_t global_tid_96062;
    int32_t local_tid_96063;
    int32_t group_id_96064;
    
    global_tid_96062 = get_global_id(0);
    local_tid_96063 = get_local_id(0);
    group_sizze_98523 = get_local_size(0);
    wave_sizze_98522 = LOCKSTEP_WIDTH;
    group_id_96064 = get_group_id(0);
    gtid_96055 = global_tid_96062;
    thread_active_98524 = slt32(gtid_96055, x_85956);
    
    double x_96065;
    char x_96066;
    int16_t res_96067;
    int16_t res_96068;
    char res_96069;
    int16_t res_96070;
    int16_t res_96071;
    int16_t res_96072;
    int16_t res_96073;
    double res_96074;
    double x_96078;
    double y_96079;
    double res_96080;
    double res_96081;
    double y_96082;
    double res_96083;
    char cond_96084;
    double x_96085;
    char cond_96086;
    int16_t arg_96087;
    int16_t arg_96088;
    double arg_96089;
    double x_96090;
    double x_96091;
    double x_96092;
    double lw_val_96093;
    
    if (thread_active_98524) {
        x_96065 = *(__global double *) &mem_97105[gtid_96055 * 8];
        x_96066 = *(__global char *) &mem_97107[gtid_96055];
        res_96067 = *(__global int16_t *) &mem_97113[gtid_96055 * 2];
        res_96068 = *(__global int16_t *) &mem_97116[gtid_96055 * 2];
        res_96069 = *(__global char *) &mem_97118[gtid_96055];
        res_96070 = *(__global int16_t *) &mem_97121[gtid_96055 * 2];
        res_96071 = *(__global int16_t *) &mem_97124[gtid_96055 * 2];
        res_96072 = *(__global int16_t *) &mem_97127[gtid_96055 * 2];
        res_96073 = *(__global int16_t *) &mem_97130[gtid_96055 * 2];
        res_96074 = *(__global double *) &mem_97133[gtid_96055 * 8];
        for (int32_t i_98525 = 0; i_98525 < num_elems_84232; i_98525++) {
            *(__global int16_t *) &mem_97136[(group_id_96064 *
                                              (num_elems_84232 *
                                               group_sizze_96057) + i_98525 *
                                              group_sizze_96057 +
                                              local_tid_96063) * 2] = 0;
        }
        for (int32_t i_98526 = 0; i_98526 < num_elems_84232; i_98526++) {
            *(__global int16_t *) &mem_97139[(group_id_96064 *
                                              (num_elems_84232 *
                                               group_sizze_96057) + i_98526 *
                                              group_sizze_96057 +
                                              local_tid_96063) * 2] = 0;
        }
        for (int32_t i_98527 = 0; i_98527 < num_elems_84232; i_98527++) {
            *(__global double *) &mem_97142[(group_id_96064 * (num_elems_84232 *
                                                               group_sizze_96057) +
                                             i_98527 * group_sizze_96057 +
                                             local_tid_96063) * 8] = -1.0;
        }
        x_96078 = futrts_sin64(res_96074);
        y_96079 = futrts_cos64(res_96074);
        res_96080 = x_96078 / y_96079;
        res_96081 = delta_84156 * res_96080;
        y_96082 = futrts_cos64(res_96074);
        res_96083 = delta_84156 / y_96082;
        cond_96084 = !x_96066;
        x_96085 = x_96065 + res_96081;
        cond_96086 = x_96085 < delta_84156;
        arg_96087 = res_96072 + res_96067;
        arg_96088 = res_96073 + res_96068;
        arg_96089 = x_96085 - delta_84156;
        x_96090 = res_96081 - delta_84156;
        x_96091 = x_96090 + x_96065;
        x_96092 = x_96091 / res_96081;
        lw_val_96093 = x_96092 * res_96083;
        if (res_96069) {
            if (cond_96084) {
                if (cond_96086) {
                    char res_96103;
                    int16_t res_96104;
                    int16_t res_96105;
                    double res_96106;
                    int32_t res_96107;
                    char loop_while_96111;
                    int16_t x_96112;
                    int16_t y_96113;
                    double chi_96114;
                    int32_t i_96115;
                    
                    loop_while_96111 = 1;
                    x_96112 = arg_96087;
                    y_96113 = res_96073;
                    chi_96114 = x_96085;
                    i_96115 = 0;
                    while (loop_while_96111) {
                        double x_96119 = chi_96114 + res_96081;
                        char cond_96120 = x_96119 < delta_84156;
                        int16_t res_96121;
                        int16_t res_96122;
                        double res_96123;
                        int32_t res_96124;
                        char res_96128;
                        
                        if (cond_96120) {
                            int16_t res_96129;
                            int32_t res_96130;
                            char not_arg_96134;
                            char res_96135;
                            
                            res_96129 = x_96112 + res_96067;
                            res_96130 = i_96115 + 1;
                            *(__global int16_t *) &mem_97136[(group_id_96064 *
                                                              (num_elems_84232 *
                                                               group_sizze_96057) +
                                                              i_96115 *
                                                              group_sizze_96057 +
                                                              local_tid_96063) *
                                                             2] = x_96112;
                            *(__global int16_t *) &mem_97139[(group_id_96064 *
                                                              (num_elems_84232 *
                                                               group_sizze_96057) +
                                                              i_96115 *
                                                              group_sizze_96057 +
                                                              local_tid_96063) *
                                                             2] = y_96113;
                            *(__global double *) &mem_97142[(group_id_96064 *
                                                             (num_elems_84232 *
                                                              group_sizze_96057) +
                                                             i_96115 *
                                                             group_sizze_96057 +
                                                             local_tid_96063) *
                                                            8] = res_96083;
                            not_arg_96134 = res_96129 == res_96070;
                            res_96135 = !not_arg_96134;
                            res_96121 = res_96129;
                            res_96122 = y_96113;
                            res_96123 = x_96119;
                            res_96124 = res_96130;
                            res_96128 = res_96135;
                        } else {
                            int16_t x_96136;
                            char cond_96137;
                            int16_t res_96138;
                            int16_t res_96139;
                            double res_96140;
                            int32_t res_96141;
                            char res_96145;
                            
                            x_96136 = y_96113 + res_96068;
                            cond_96137 = x_96136 == res_96071;
                            if (cond_96137) {
                                double x_96146;
                                double x_96147;
                                double lw_val_96148;
                                
                                x_96146 = delta_84156 - chi_96114;
                                x_96147 = x_96146 / res_96081;
                                lw_val_96148 = x_96147 * res_96083;
                                *(__global
                                  int16_t *) &mem_97136[(group_id_96064 *
                                                         (num_elems_84232 *
                                                          group_sizze_96057) +
                                                         i_96115 *
                                                         group_sizze_96057 +
                                                         local_tid_96063) * 2] =
                                    x_96112;
                                *(__global
                                  int16_t *) &mem_97139[(group_id_96064 *
                                                         (num_elems_84232 *
                                                          group_sizze_96057) +
                                                         i_96115 *
                                                         group_sizze_96057 +
                                                         local_tid_96063) * 2] =
                                    y_96113;
                                *(__global
                                  double *) &mem_97142[(group_id_96064 *
                                                        (num_elems_84232 *
                                                         group_sizze_96057) +
                                                        i_96115 *
                                                        group_sizze_96057 +
                                                        local_tid_96063) * 8] =
                                    lw_val_96148;
                                res_96138 = x_96112;
                                res_96139 = y_96113;
                                res_96140 = chi_96114;
                                res_96141 = i_96115;
                                res_96145 = 0;
                            } else {
                                int16_t x_96152;
                                char cond_96153;
                                int16_t res_96154;
                                int16_t res_96155;
                                double res_96156;
                                int32_t res_96157;
                                char res_96161;
                                
                                x_96152 = x_96112 + res_96067;
                                cond_96153 = x_96152 == res_96070;
                                if (cond_96153) {
                                    res_96154 = x_96112;
                                } else {
                                    res_96154 = x_96152;
                                }
                                if (cond_96153) {
                                    res_96155 = y_96113;
                                } else {
                                    res_96155 = x_96136;
                                }
                                if (cond_96153) {
                                    double x_96162;
                                    double x_96163;
                                    double lw_val_96164;
                                    double x_96168;
                                    double x_96169;
                                    double lw_val_96170;
                                    int32_t i_96171;
                                    
                                    x_96162 = delta_84156 - chi_96114;
                                    x_96163 = x_96162 / res_96081;
                                    lw_val_96164 = x_96163 * res_96083;
                                    *(__global
                                      int16_t *) &mem_97136[(group_id_96064 *
                                                             (num_elems_84232 *
                                                              group_sizze_96057) +
                                                             i_96115 *
                                                             group_sizze_96057 +
                                                             local_tid_96063) *
                                                            2] = x_96112;
                                    *(__global
                                      int16_t *) &mem_97139[(group_id_96064 *
                                                             (num_elems_84232 *
                                                              group_sizze_96057) +
                                                             i_96115 *
                                                             group_sizze_96057 +
                                                             local_tid_96063) *
                                                            2] = y_96113;
                                    *(__global
                                      double *) &mem_97142[(group_id_96064 *
                                                            (num_elems_84232 *
                                                             group_sizze_96057) +
                                                            i_96115 *
                                                            group_sizze_96057 +
                                                            local_tid_96063) *
                                                           8] = lw_val_96164;
                                    x_96168 = x_96090 + chi_96114;
                                    x_96169 = x_96168 / res_96081;
                                    lw_val_96170 = x_96169 * res_96083;
                                    i_96171 = i_96115 + 1;
                                    *(__global
                                      int16_t *) &mem_97136[(group_id_96064 *
                                                             (num_elems_84232 *
                                                              group_sizze_96057) +
                                                             i_96171 *
                                                             group_sizze_96057 +
                                                             local_tid_96063) *
                                                            2] = x_96112;
                                    *(__global
                                      int16_t *) &mem_97139[(group_id_96064 *
                                                             (num_elems_84232 *
                                                              group_sizze_96057) +
                                                             i_96171 *
                                                             group_sizze_96057 +
                                                             local_tid_96063) *
                                                            2] = x_96136;
                                    *(__global
                                      double *) &mem_97142[(group_id_96064 *
                                                            (num_elems_84232 *
                                                             group_sizze_96057) +
                                                            i_96171 *
                                                            group_sizze_96057 +
                                                            local_tid_96063) *
                                                           8] = lw_val_96170;
                                    res_96156 = chi_96114;
                                    res_96157 = i_96115;
                                    res_96161 = 0;
                                } else {
                                    double res_96175;
                                    int32_t res_96176;
                                    double x_96177;
                                    double x_96178;
                                    double lw_val_96179;
                                    double x_96183;
                                    double x_96184;
                                    double lw_val_96185;
                                    int32_t i_96186;
                                    char x_96190;
                                    char y_96191;
                                    char not_arg_96192;
                                    char res_96193;
                                    
                                    res_96175 = x_96119 - delta_84156;
                                    res_96176 = i_96115 + 2;
                                    x_96177 = delta_84156 - chi_96114;
                                    x_96178 = x_96177 / res_96081;
                                    lw_val_96179 = x_96178 * res_96083;
                                    *(__global
                                      int16_t *) &mem_97136[(group_id_96064 *
                                                             (num_elems_84232 *
                                                              group_sizze_96057) +
                                                             i_96115 *
                                                             group_sizze_96057 +
                                                             local_tid_96063) *
                                                            2] = x_96112;
                                    *(__global
                                      int16_t *) &mem_97139[(group_id_96064 *
                                                             (num_elems_84232 *
                                                              group_sizze_96057) +
                                                             i_96115 *
                                                             group_sizze_96057 +
                                                             local_tid_96063) *
                                                            2] = y_96113;
                                    *(__global
                                      double *) &mem_97142[(group_id_96064 *
                                                            (num_elems_84232 *
                                                             group_sizze_96057) +
                                                            i_96115 *
                                                            group_sizze_96057 +
                                                            local_tid_96063) *
                                                           8] = lw_val_96179;
                                    x_96183 = x_96090 + chi_96114;
                                    x_96184 = x_96183 / res_96081;
                                    lw_val_96185 = x_96184 * res_96083;
                                    i_96186 = i_96115 + 1;
                                    *(__global
                                      int16_t *) &mem_97136[(group_id_96064 *
                                                             (num_elems_84232 *
                                                              group_sizze_96057) +
                                                             i_96186 *
                                                             group_sizze_96057 +
                                                             local_tid_96063) *
                                                            2] = x_96112;
                                    *(__global
                                      int16_t *) &mem_97139[(group_id_96064 *
                                                             (num_elems_84232 *
                                                              group_sizze_96057) +
                                                             i_96186 *
                                                             group_sizze_96057 +
                                                             local_tid_96063) *
                                                            2] = x_96136;
                                    *(__global
                                      double *) &mem_97142[(group_id_96064 *
                                                            (num_elems_84232 *
                                                             group_sizze_96057) +
                                                            i_96186 *
                                                            group_sizze_96057 +
                                                            local_tid_96063) *
                                                           8] = lw_val_96185;
                                    x_96190 = !cond_96153;
                                    y_96191 = x_96190 && cond_96137;
                                    not_arg_96192 = cond_96153 || y_96191;
                                    res_96193 = !not_arg_96192;
                                    res_96156 = res_96175;
                                    res_96157 = res_96176;
                                    res_96161 = res_96193;
                                }
                                res_96138 = res_96154;
                                res_96139 = res_96155;
                                res_96140 = res_96156;
                                res_96141 = res_96157;
                                res_96145 = res_96161;
                            }
                            res_96121 = res_96138;
                            res_96122 = res_96139;
                            res_96123 = res_96140;
                            res_96124 = res_96141;
                            res_96128 = res_96145;
                        }
                        
                        char loop_while_tmp_98528 = res_96128;
                        int16_t x_tmp_98529 = res_96121;
                        int16_t y_tmp_98530 = res_96122;
                        double chi_tmp_98531 = res_96123;
                        int32_t i_tmp_98532;
                        
                        i_tmp_98532 = res_96124;
                        loop_while_96111 = loop_while_tmp_98528;
                        x_96112 = x_tmp_98529;
                        y_96113 = y_tmp_98530;
                        chi_96114 = chi_tmp_98531;
                        i_96115 = i_tmp_98532;
                    }
                    res_96103 = loop_while_96111;
                    res_96104 = x_96112;
                    res_96105 = y_96113;
                    res_96106 = chi_96114;
                    res_96107 = i_96115;
                } else {
                    char res_96197;
                    int16_t res_96198;
                    int16_t res_96199;
                    double res_96200;
                    int32_t res_96201;
                    
                    *(__global int16_t *) &mem_97136[(group_id_96064 *
                                                      (num_elems_84232 *
                                                       group_sizze_96057) +
                                                      local_tid_96063) * 2] =
                        res_96072;
                    *(__global int16_t *) &mem_97139[(group_id_96064 *
                                                      (num_elems_84232 *
                                                       group_sizze_96057) +
                                                      local_tid_96063) * 2] =
                        arg_96088;
                    *(__global double *) &mem_97142[(group_id_96064 *
                                                     (num_elems_84232 *
                                                      group_sizze_96057) +
                                                     local_tid_96063) * 8] =
                        lw_val_96093;
                    
                    char loop_while_96205;
                    int16_t x_96206;
                    int16_t y_96207;
                    double chi_96208;
                    int32_t i_96209;
                    
                    loop_while_96205 = 1;
                    x_96206 = arg_96087;
                    y_96207 = arg_96088;
                    chi_96208 = arg_96089;
                    i_96209 = 1;
                    while (loop_while_96205) {
                        double x_96213 = chi_96208 + res_96081;
                        char cond_96214 = x_96213 < delta_84156;
                        int16_t res_96215;
                        int16_t res_96216;
                        double res_96217;
                        int32_t res_96218;
                        char res_96222;
                        
                        if (cond_96214) {
                            int16_t res_96223;
                            int32_t res_96224;
                            char not_arg_96228;
                            char res_96229;
                            
                            res_96223 = x_96206 + res_96067;
                            res_96224 = i_96209 + 1;
                            *(__global int16_t *) &mem_97136[(group_id_96064 *
                                                              (num_elems_84232 *
                                                               group_sizze_96057) +
                                                              i_96209 *
                                                              group_sizze_96057 +
                                                              local_tid_96063) *
                                                             2] = x_96206;
                            *(__global int16_t *) &mem_97139[(group_id_96064 *
                                                              (num_elems_84232 *
                                                               group_sizze_96057) +
                                                              i_96209 *
                                                              group_sizze_96057 +
                                                              local_tid_96063) *
                                                             2] = y_96207;
                            *(__global double *) &mem_97142[(group_id_96064 *
                                                             (num_elems_84232 *
                                                              group_sizze_96057) +
                                                             i_96209 *
                                                             group_sizze_96057 +
                                                             local_tid_96063) *
                                                            8] = res_96083;
                            not_arg_96228 = res_96223 == res_96070;
                            res_96229 = !not_arg_96228;
                            res_96215 = res_96223;
                            res_96216 = y_96207;
                            res_96217 = x_96213;
                            res_96218 = res_96224;
                            res_96222 = res_96229;
                        } else {
                            int16_t x_96230;
                            char cond_96231;
                            int16_t res_96232;
                            int16_t res_96233;
                            double res_96234;
                            int32_t res_96235;
                            char res_96239;
                            
                            x_96230 = y_96207 + res_96068;
                            cond_96231 = x_96230 == res_96071;
                            if (cond_96231) {
                                double x_96240;
                                double x_96241;
                                double lw_val_96242;
                                
                                x_96240 = delta_84156 - chi_96208;
                                x_96241 = x_96240 / res_96081;
                                lw_val_96242 = x_96241 * res_96083;
                                *(__global
                                  int16_t *) &mem_97136[(group_id_96064 *
                                                         (num_elems_84232 *
                                                          group_sizze_96057) +
                                                         i_96209 *
                                                         group_sizze_96057 +
                                                         local_tid_96063) * 2] =
                                    x_96206;
                                *(__global
                                  int16_t *) &mem_97139[(group_id_96064 *
                                                         (num_elems_84232 *
                                                          group_sizze_96057) +
                                                         i_96209 *
                                                         group_sizze_96057 +
                                                         local_tid_96063) * 2] =
                                    y_96207;
                                *(__global
                                  double *) &mem_97142[(group_id_96064 *
                                                        (num_elems_84232 *
                                                         group_sizze_96057) +
                                                        i_96209 *
                                                        group_sizze_96057 +
                                                        local_tid_96063) * 8] =
                                    lw_val_96242;
                                res_96232 = x_96206;
                                res_96233 = y_96207;
                                res_96234 = chi_96208;
                                res_96235 = i_96209;
                                res_96239 = 0;
                            } else {
                                int16_t x_96246;
                                char cond_96247;
                                int16_t res_96248;
                                int16_t res_96249;
                                double res_96250;
                                int32_t res_96251;
                                char res_96255;
                                
                                x_96246 = x_96206 + res_96067;
                                cond_96247 = x_96246 == res_96070;
                                if (cond_96247) {
                                    res_96248 = x_96206;
                                } else {
                                    res_96248 = x_96246;
                                }
                                if (cond_96247) {
                                    res_96249 = y_96207;
                                } else {
                                    res_96249 = x_96230;
                                }
                                if (cond_96247) {
                                    double x_96256;
                                    double x_96257;
                                    double lw_val_96258;
                                    double x_96262;
                                    double x_96263;
                                    double lw_val_96264;
                                    int32_t i_96265;
                                    
                                    x_96256 = delta_84156 - chi_96208;
                                    x_96257 = x_96256 / res_96081;
                                    lw_val_96258 = x_96257 * res_96083;
                                    *(__global
                                      int16_t *) &mem_97136[(group_id_96064 *
                                                             (num_elems_84232 *
                                                              group_sizze_96057) +
                                                             i_96209 *
                                                             group_sizze_96057 +
                                                             local_tid_96063) *
                                                            2] = x_96206;
                                    *(__global
                                      int16_t *) &mem_97139[(group_id_96064 *
                                                             (num_elems_84232 *
                                                              group_sizze_96057) +
                                                             i_96209 *
                                                             group_sizze_96057 +
                                                             local_tid_96063) *
                                                            2] = y_96207;
                                    *(__global
                                      double *) &mem_97142[(group_id_96064 *
                                                            (num_elems_84232 *
                                                             group_sizze_96057) +
                                                            i_96209 *
                                                            group_sizze_96057 +
                                                            local_tid_96063) *
                                                           8] = lw_val_96258;
                                    x_96262 = x_96090 + chi_96208;
                                    x_96263 = x_96262 / res_96081;
                                    lw_val_96264 = x_96263 * res_96083;
                                    i_96265 = i_96209 + 1;
                                    *(__global
                                      int16_t *) &mem_97136[(group_id_96064 *
                                                             (num_elems_84232 *
                                                              group_sizze_96057) +
                                                             i_96265 *
                                                             group_sizze_96057 +
                                                             local_tid_96063) *
                                                            2] = x_96206;
                                    *(__global
                                      int16_t *) &mem_97139[(group_id_96064 *
                                                             (num_elems_84232 *
                                                              group_sizze_96057) +
                                                             i_96265 *
                                                             group_sizze_96057 +
                                                             local_tid_96063) *
                                                            2] = x_96230;
                                    *(__global
                                      double *) &mem_97142[(group_id_96064 *
                                                            (num_elems_84232 *
                                                             group_sizze_96057) +
                                                            i_96265 *
                                                            group_sizze_96057 +
                                                            local_tid_96063) *
                                                           8] = lw_val_96264;
                                    res_96250 = chi_96208;
                                    res_96251 = i_96209;
                                    res_96255 = 0;
                                } else {
                                    double res_96269;
                                    int32_t res_96270;
                                    double x_96271;
                                    double x_96272;
                                    double lw_val_96273;
                                    double x_96277;
                                    double x_96278;
                                    double lw_val_96279;
                                    int32_t i_96280;
                                    char x_96284;
                                    char y_96285;
                                    char not_arg_96286;
                                    char res_96287;
                                    
                                    res_96269 = x_96213 - delta_84156;
                                    res_96270 = i_96209 + 2;
                                    x_96271 = delta_84156 - chi_96208;
                                    x_96272 = x_96271 / res_96081;
                                    lw_val_96273 = x_96272 * res_96083;
                                    *(__global
                                      int16_t *) &mem_97136[(group_id_96064 *
                                                             (num_elems_84232 *
                                                              group_sizze_96057) +
                                                             i_96209 *
                                                             group_sizze_96057 +
                                                             local_tid_96063) *
                                                            2] = x_96206;
                                    *(__global
                                      int16_t *) &mem_97139[(group_id_96064 *
                                                             (num_elems_84232 *
                                                              group_sizze_96057) +
                                                             i_96209 *
                                                             group_sizze_96057 +
                                                             local_tid_96063) *
                                                            2] = y_96207;
                                    *(__global
                                      double *) &mem_97142[(group_id_96064 *
                                                            (num_elems_84232 *
                                                             group_sizze_96057) +
                                                            i_96209 *
                                                            group_sizze_96057 +
                                                            local_tid_96063) *
                                                           8] = lw_val_96273;
                                    x_96277 = x_96090 + chi_96208;
                                    x_96278 = x_96277 / res_96081;
                                    lw_val_96279 = x_96278 * res_96083;
                                    i_96280 = i_96209 + 1;
                                    *(__global
                                      int16_t *) &mem_97136[(group_id_96064 *
                                                             (num_elems_84232 *
                                                              group_sizze_96057) +
                                                             i_96280 *
                                                             group_sizze_96057 +
                                                             local_tid_96063) *
                                                            2] = x_96206;
                                    *(__global
                                      int16_t *) &mem_97139[(group_id_96064 *
                                                             (num_elems_84232 *
                                                              group_sizze_96057) +
                                                             i_96280 *
                                                             group_sizze_96057 +
                                                             local_tid_96063) *
                                                            2] = x_96230;
                                    *(__global
                                      double *) &mem_97142[(group_id_96064 *
                                                            (num_elems_84232 *
                                                             group_sizze_96057) +
                                                            i_96280 *
                                                            group_sizze_96057 +
                                                            local_tid_96063) *
                                                           8] = lw_val_96279;
                                    x_96284 = !cond_96247;
                                    y_96285 = x_96284 && cond_96231;
                                    not_arg_96286 = cond_96247 || y_96285;
                                    res_96287 = !not_arg_96286;
                                    res_96250 = res_96269;
                                    res_96251 = res_96270;
                                    res_96255 = res_96287;
                                }
                                res_96232 = res_96248;
                                res_96233 = res_96249;
                                res_96234 = res_96250;
                                res_96235 = res_96251;
                                res_96239 = res_96255;
                            }
                            res_96215 = res_96232;
                            res_96216 = res_96233;
                            res_96217 = res_96234;
                            res_96218 = res_96235;
                            res_96222 = res_96239;
                        }
                        
                        char loop_while_tmp_98536 = res_96222;
                        int16_t x_tmp_98537 = res_96215;
                        int16_t y_tmp_98538 = res_96216;
                        double chi_tmp_98539 = res_96217;
                        int32_t i_tmp_98540;
                        
                        i_tmp_98540 = res_96218;
                        loop_while_96205 = loop_while_tmp_98536;
                        x_96206 = x_tmp_98537;
                        y_96207 = y_tmp_98538;
                        chi_96208 = chi_tmp_98539;
                        i_96209 = i_tmp_98540;
                    }
                    res_96197 = loop_while_96205;
                    res_96198 = x_96206;
                    res_96199 = y_96207;
                    res_96200 = chi_96208;
                    res_96201 = i_96209;
                }
            } else {
                char res_96288;
                int16_t res_96289;
                int16_t res_96290;
                double res_96291;
                int32_t res_96292;
                char loop_while_96296;
                int16_t x_96297;
                int16_t y_96298;
                double chi_96299;
                int32_t i_96300;
                
                loop_while_96296 = 1;
                x_96297 = res_96072;
                y_96298 = res_96073;
                chi_96299 = x_96065;
                i_96300 = 0;
                while (loop_while_96296) {
                    double x_96304 = chi_96299 + res_96081;
                    char cond_96305 = x_96304 < delta_84156;
                    int16_t res_96306;
                    int16_t res_96307;
                    double res_96308;
                    int32_t res_96309;
                    char res_96313;
                    
                    if (cond_96305) {
                        int16_t res_96314;
                        int32_t res_96315;
                        char not_arg_96319;
                        char res_96320;
                        
                        res_96314 = x_96297 + res_96067;
                        res_96315 = i_96300 + 1;
                        *(__global int16_t *) &mem_97136[(group_id_96064 *
                                                          (num_elems_84232 *
                                                           group_sizze_96057) +
                                                          i_96300 *
                                                          group_sizze_96057 +
                                                          local_tid_96063) *
                                                         2] = x_96297;
                        *(__global int16_t *) &mem_97139[(group_id_96064 *
                                                          (num_elems_84232 *
                                                           group_sizze_96057) +
                                                          i_96300 *
                                                          group_sizze_96057 +
                                                          local_tid_96063) *
                                                         2] = y_96298;
                        *(__global double *) &mem_97142[(group_id_96064 *
                                                         (num_elems_84232 *
                                                          group_sizze_96057) +
                                                         i_96300 *
                                                         group_sizze_96057 +
                                                         local_tid_96063) * 8] =
                            res_96083;
                        not_arg_96319 = res_96314 == res_96070;
                        res_96320 = !not_arg_96319;
                        res_96306 = res_96314;
                        res_96307 = y_96298;
                        res_96308 = x_96304;
                        res_96309 = res_96315;
                        res_96313 = res_96320;
                    } else {
                        int16_t x_96321;
                        char cond_96322;
                        int16_t res_96323;
                        int16_t res_96324;
                        double res_96325;
                        int32_t res_96326;
                        char res_96330;
                        
                        x_96321 = y_96298 + res_96068;
                        cond_96322 = x_96321 == res_96071;
                        if (cond_96322) {
                            double x_96331;
                            double x_96332;
                            double lw_val_96333;
                            
                            x_96331 = delta_84156 - chi_96299;
                            x_96332 = x_96331 / res_96081;
                            lw_val_96333 = x_96332 * res_96083;
                            *(__global int16_t *) &mem_97136[(group_id_96064 *
                                                              (num_elems_84232 *
                                                               group_sizze_96057) +
                                                              i_96300 *
                                                              group_sizze_96057 +
                                                              local_tid_96063) *
                                                             2] = x_96297;
                            *(__global int16_t *) &mem_97139[(group_id_96064 *
                                                              (num_elems_84232 *
                                                               group_sizze_96057) +
                                                              i_96300 *
                                                              group_sizze_96057 +
                                                              local_tid_96063) *
                                                             2] = y_96298;
                            *(__global double *) &mem_97142[(group_id_96064 *
                                                             (num_elems_84232 *
                                                              group_sizze_96057) +
                                                             i_96300 *
                                                             group_sizze_96057 +
                                                             local_tid_96063) *
                                                            8] = lw_val_96333;
                            res_96323 = x_96297;
                            res_96324 = y_96298;
                            res_96325 = chi_96299;
                            res_96326 = i_96300;
                            res_96330 = 0;
                        } else {
                            int16_t x_96337;
                            char cond_96338;
                            int16_t res_96339;
                            int16_t res_96340;
                            double res_96341;
                            int32_t res_96342;
                            char res_96346;
                            
                            x_96337 = x_96297 + res_96067;
                            cond_96338 = x_96337 == res_96070;
                            if (cond_96338) {
                                res_96339 = x_96297;
                            } else {
                                res_96339 = x_96337;
                            }
                            if (cond_96338) {
                                res_96340 = y_96298;
                            } else {
                                res_96340 = x_96321;
                            }
                            if (cond_96338) {
                                double x_96347;
                                double x_96348;
                                double lw_val_96349;
                                double x_96353;
                                double x_96354;
                                double lw_val_96355;
                                int32_t i_96356;
                                
                                x_96347 = delta_84156 - chi_96299;
                                x_96348 = x_96347 / res_96081;
                                lw_val_96349 = x_96348 * res_96083;
                                *(__global
                                  int16_t *) &mem_97136[(group_id_96064 *
                                                         (num_elems_84232 *
                                                          group_sizze_96057) +
                                                         i_96300 *
                                                         group_sizze_96057 +
                                                         local_tid_96063) * 2] =
                                    x_96297;
                                *(__global
                                  int16_t *) &mem_97139[(group_id_96064 *
                                                         (num_elems_84232 *
                                                          group_sizze_96057) +
                                                         i_96300 *
                                                         group_sizze_96057 +
                                                         local_tid_96063) * 2] =
                                    y_96298;
                                *(__global
                                  double *) &mem_97142[(group_id_96064 *
                                                        (num_elems_84232 *
                                                         group_sizze_96057) +
                                                        i_96300 *
                                                        group_sizze_96057 +
                                                        local_tid_96063) * 8] =
                                    lw_val_96349;
                                x_96353 = x_96090 + chi_96299;
                                x_96354 = x_96353 / res_96081;
                                lw_val_96355 = x_96354 * res_96083;
                                i_96356 = i_96300 + 1;
                                *(__global
                                  int16_t *) &mem_97136[(group_id_96064 *
                                                         (num_elems_84232 *
                                                          group_sizze_96057) +
                                                         i_96356 *
                                                         group_sizze_96057 +
                                                         local_tid_96063) * 2] =
                                    x_96297;
                                *(__global
                                  int16_t *) &mem_97139[(group_id_96064 *
                                                         (num_elems_84232 *
                                                          group_sizze_96057) +
                                                         i_96356 *
                                                         group_sizze_96057 +
                                                         local_tid_96063) * 2] =
                                    x_96321;
                                *(__global
                                  double *) &mem_97142[(group_id_96064 *
                                                        (num_elems_84232 *
                                                         group_sizze_96057) +
                                                        i_96356 *
                                                        group_sizze_96057 +
                                                        local_tid_96063) * 8] =
                                    lw_val_96355;
                                res_96341 = chi_96299;
                                res_96342 = i_96300;
                                res_96346 = 0;
                            } else {
                                double res_96360;
                                int32_t res_96361;
                                double x_96362;
                                double x_96363;
                                double lw_val_96364;
                                double x_96368;
                                double x_96369;
                                double lw_val_96370;
                                int32_t i_96371;
                                char x_96375;
                                char y_96376;
                                char not_arg_96377;
                                char res_96378;
                                
                                res_96360 = x_96304 - delta_84156;
                                res_96361 = i_96300 + 2;
                                x_96362 = delta_84156 - chi_96299;
                                x_96363 = x_96362 / res_96081;
                                lw_val_96364 = x_96363 * res_96083;
                                *(__global
                                  int16_t *) &mem_97136[(group_id_96064 *
                                                         (num_elems_84232 *
                                                          group_sizze_96057) +
                                                         i_96300 *
                                                         group_sizze_96057 +
                                                         local_tid_96063) * 2] =
                                    x_96297;
                                *(__global
                                  int16_t *) &mem_97139[(group_id_96064 *
                                                         (num_elems_84232 *
                                                          group_sizze_96057) +
                                                         i_96300 *
                                                         group_sizze_96057 +
                                                         local_tid_96063) * 2] =
                                    y_96298;
                                *(__global
                                  double *) &mem_97142[(group_id_96064 *
                                                        (num_elems_84232 *
                                                         group_sizze_96057) +
                                                        i_96300 *
                                                        group_sizze_96057 +
                                                        local_tid_96063) * 8] =
                                    lw_val_96364;
                                x_96368 = x_96090 + chi_96299;
                                x_96369 = x_96368 / res_96081;
                                lw_val_96370 = x_96369 * res_96083;
                                i_96371 = i_96300 + 1;
                                *(__global
                                  int16_t *) &mem_97136[(group_id_96064 *
                                                         (num_elems_84232 *
                                                          group_sizze_96057) +
                                                         i_96371 *
                                                         group_sizze_96057 +
                                                         local_tid_96063) * 2] =
                                    x_96297;
                                *(__global
                                  int16_t *) &mem_97139[(group_id_96064 *
                                                         (num_elems_84232 *
                                                          group_sizze_96057) +
                                                         i_96371 *
                                                         group_sizze_96057 +
                                                         local_tid_96063) * 2] =
                                    x_96321;
                                *(__global
                                  double *) &mem_97142[(group_id_96064 *
                                                        (num_elems_84232 *
                                                         group_sizze_96057) +
                                                        i_96371 *
                                                        group_sizze_96057 +
                                                        local_tid_96063) * 8] =
                                    lw_val_96370;
                                x_96375 = !cond_96338;
                                y_96376 = x_96375 && cond_96322;
                                not_arg_96377 = cond_96338 || y_96376;
                                res_96378 = !not_arg_96377;
                                res_96341 = res_96360;
                                res_96342 = res_96361;
                                res_96346 = res_96378;
                            }
                            res_96323 = res_96339;
                            res_96324 = res_96340;
                            res_96325 = res_96341;
                            res_96326 = res_96342;
                            res_96330 = res_96346;
                        }
                        res_96306 = res_96323;
                        res_96307 = res_96324;
                        res_96308 = res_96325;
                        res_96309 = res_96326;
                        res_96313 = res_96330;
                    }
                    
                    char loop_while_tmp_98544 = res_96313;
                    int16_t x_tmp_98545 = res_96306;
                    int16_t y_tmp_98546 = res_96307;
                    double chi_tmp_98547 = res_96308;
                    int32_t i_tmp_98548;
                    
                    i_tmp_98548 = res_96309;
                    loop_while_96296 = loop_while_tmp_98544;
                    x_96297 = x_tmp_98545;
                    y_96298 = y_tmp_98546;
                    chi_96299 = chi_tmp_98547;
                    i_96300 = i_tmp_98548;
                }
                res_96288 = loop_while_96296;
                res_96289 = x_96297;
                res_96290 = y_96298;
                res_96291 = chi_96299;
                res_96292 = i_96300;
            }
        } else {
            if (cond_96084) {
                if (cond_96086) {
                    char res_96385;
                    int16_t res_96386;
                    int16_t res_96387;
                    double res_96388;
                    int32_t res_96389;
                    char loop_while_96393;
                    int16_t x_96394;
                    int16_t y_96395;
                    double chi_96396;
                    int32_t i_96397;
                    
                    loop_while_96393 = 1;
                    x_96394 = res_96072;
                    y_96395 = arg_96088;
                    chi_96396 = x_96085;
                    i_96397 = 0;
                    while (loop_while_96393) {
                        double x_96401 = chi_96396 + res_96081;
                        char cond_96402 = x_96401 < delta_84156;
                        int16_t res_96403;
                        int16_t res_96404;
                        double res_96405;
                        int32_t res_96406;
                        char res_96410;
                        
                        if (cond_96402) {
                            int16_t res_96411;
                            int32_t res_96412;
                            char not_arg_96416;
                            char res_96417;
                            
                            res_96411 = y_96395 + res_96068;
                            res_96412 = i_96397 + 1;
                            *(__global int16_t *) &mem_97136[(group_id_96064 *
                                                              (num_elems_84232 *
                                                               group_sizze_96057) +
                                                              i_96397 *
                                                              group_sizze_96057 +
                                                              local_tid_96063) *
                                                             2] = x_96394;
                            *(__global int16_t *) &mem_97139[(group_id_96064 *
                                                              (num_elems_84232 *
                                                               group_sizze_96057) +
                                                              i_96397 *
                                                              group_sizze_96057 +
                                                              local_tid_96063) *
                                                             2] = y_96395;
                            *(__global double *) &mem_97142[(group_id_96064 *
                                                             (num_elems_84232 *
                                                              group_sizze_96057) +
                                                             i_96397 *
                                                             group_sizze_96057 +
                                                             local_tid_96063) *
                                                            8] = res_96083;
                            not_arg_96416 = res_96411 == res_96071;
                            res_96417 = !not_arg_96416;
                            res_96403 = x_96394;
                            res_96404 = res_96411;
                            res_96405 = x_96401;
                            res_96406 = res_96412;
                            res_96410 = res_96417;
                        } else {
                            int16_t x_96418;
                            char cond_96419;
                            int16_t res_96420;
                            int16_t res_96421;
                            double res_96422;
                            int32_t res_96423;
                            char res_96427;
                            
                            x_96418 = x_96394 + res_96067;
                            cond_96419 = x_96418 == res_96070;
                            if (cond_96419) {
                                double x_96428;
                                double x_96429;
                                double lw_val_96430;
                                
                                x_96428 = delta_84156 - chi_96396;
                                x_96429 = x_96428 / res_96081;
                                lw_val_96430 = x_96429 * res_96083;
                                *(__global
                                  int16_t *) &mem_97136[(group_id_96064 *
                                                         (num_elems_84232 *
                                                          group_sizze_96057) +
                                                         i_96397 *
                                                         group_sizze_96057 +
                                                         local_tid_96063) * 2] =
                                    x_96394;
                                *(__global
                                  int16_t *) &mem_97139[(group_id_96064 *
                                                         (num_elems_84232 *
                                                          group_sizze_96057) +
                                                         i_96397 *
                                                         group_sizze_96057 +
                                                         local_tid_96063) * 2] =
                                    y_96395;
                                *(__global
                                  double *) &mem_97142[(group_id_96064 *
                                                        (num_elems_84232 *
                                                         group_sizze_96057) +
                                                        i_96397 *
                                                        group_sizze_96057 +
                                                        local_tid_96063) * 8] =
                                    lw_val_96430;
                                res_96420 = x_96394;
                                res_96421 = y_96395;
                                res_96422 = chi_96396;
                                res_96423 = i_96397;
                                res_96427 = 0;
                            } else {
                                int16_t x_96434;
                                char cond_96435;
                                int16_t res_96436;
                                int16_t res_96437;
                                double res_96438;
                                int32_t res_96439;
                                char res_96443;
                                
                                x_96434 = y_96395 + res_96068;
                                cond_96435 = x_96434 == res_96071;
                                if (cond_96435) {
                                    res_96436 = x_96394;
                                } else {
                                    res_96436 = x_96418;
                                }
                                if (cond_96435) {
                                    res_96437 = y_96395;
                                } else {
                                    res_96437 = x_96434;
                                }
                                if (cond_96435) {
                                    double x_96444;
                                    double x_96445;
                                    double lw_val_96446;
                                    double x_96450;
                                    double x_96451;
                                    double lw_val_96452;
                                    int32_t i_96453;
                                    
                                    x_96444 = delta_84156 - chi_96396;
                                    x_96445 = x_96444 / res_96081;
                                    lw_val_96446 = x_96445 * res_96083;
                                    *(__global
                                      int16_t *) &mem_97136[(group_id_96064 *
                                                             (num_elems_84232 *
                                                              group_sizze_96057) +
                                                             i_96397 *
                                                             group_sizze_96057 +
                                                             local_tid_96063) *
                                                            2] = x_96394;
                                    *(__global
                                      int16_t *) &mem_97139[(group_id_96064 *
                                                             (num_elems_84232 *
                                                              group_sizze_96057) +
                                                             i_96397 *
                                                             group_sizze_96057 +
                                                             local_tid_96063) *
                                                            2] = y_96395;
                                    *(__global
                                      double *) &mem_97142[(group_id_96064 *
                                                            (num_elems_84232 *
                                                             group_sizze_96057) +
                                                            i_96397 *
                                                            group_sizze_96057 +
                                                            local_tid_96063) *
                                                           8] = lw_val_96446;
                                    x_96450 = x_96090 + chi_96396;
                                    x_96451 = x_96450 / res_96081;
                                    lw_val_96452 = x_96451 * res_96083;
                                    i_96453 = i_96397 + 1;
                                    *(__global
                                      int16_t *) &mem_97136[(group_id_96064 *
                                                             (num_elems_84232 *
                                                              group_sizze_96057) +
                                                             i_96453 *
                                                             group_sizze_96057 +
                                                             local_tid_96063) *
                                                            2] = x_96418;
                                    *(__global
                                      int16_t *) &mem_97139[(group_id_96064 *
                                                             (num_elems_84232 *
                                                              group_sizze_96057) +
                                                             i_96453 *
                                                             group_sizze_96057 +
                                                             local_tid_96063) *
                                                            2] = y_96395;
                                    *(__global
                                      double *) &mem_97142[(group_id_96064 *
                                                            (num_elems_84232 *
                                                             group_sizze_96057) +
                                                            i_96453 *
                                                            group_sizze_96057 +
                                                            local_tid_96063) *
                                                           8] = lw_val_96452;
                                    res_96438 = chi_96396;
                                    res_96439 = i_96397;
                                    res_96443 = 0;
                                } else {
                                    double res_96457;
                                    int32_t res_96458;
                                    double x_96459;
                                    double x_96460;
                                    double lw_val_96461;
                                    double x_96465;
                                    double x_96466;
                                    double lw_val_96467;
                                    int32_t i_96468;
                                    char x_96472;
                                    char y_96473;
                                    char not_arg_96474;
                                    char res_96475;
                                    
                                    res_96457 = x_96401 - delta_84156;
                                    res_96458 = i_96397 + 2;
                                    x_96459 = delta_84156 - chi_96396;
                                    x_96460 = x_96459 / res_96081;
                                    lw_val_96461 = x_96460 * res_96083;
                                    *(__global
                                      int16_t *) &mem_97136[(group_id_96064 *
                                                             (num_elems_84232 *
                                                              group_sizze_96057) +
                                                             i_96397 *
                                                             group_sizze_96057 +
                                                             local_tid_96063) *
                                                            2] = x_96394;
                                    *(__global
                                      int16_t *) &mem_97139[(group_id_96064 *
                                                             (num_elems_84232 *
                                                              group_sizze_96057) +
                                                             i_96397 *
                                                             group_sizze_96057 +
                                                             local_tid_96063) *
                                                            2] = y_96395;
                                    *(__global
                                      double *) &mem_97142[(group_id_96064 *
                                                            (num_elems_84232 *
                                                             group_sizze_96057) +
                                                            i_96397 *
                                                            group_sizze_96057 +
                                                            local_tid_96063) *
                                                           8] = lw_val_96461;
                                    x_96465 = x_96090 + chi_96396;
                                    x_96466 = x_96465 / res_96081;
                                    lw_val_96467 = x_96466 * res_96083;
                                    i_96468 = i_96397 + 1;
                                    *(__global
                                      int16_t *) &mem_97136[(group_id_96064 *
                                                             (num_elems_84232 *
                                                              group_sizze_96057) +
                                                             i_96468 *
                                                             group_sizze_96057 +
                                                             local_tid_96063) *
                                                            2] = x_96418;
                                    *(__global
                                      int16_t *) &mem_97139[(group_id_96064 *
                                                             (num_elems_84232 *
                                                              group_sizze_96057) +
                                                             i_96468 *
                                                             group_sizze_96057 +
                                                             local_tid_96063) *
                                                            2] = y_96395;
                                    *(__global
                                      double *) &mem_97142[(group_id_96064 *
                                                            (num_elems_84232 *
                                                             group_sizze_96057) +
                                                            i_96468 *
                                                            group_sizze_96057 +
                                                            local_tid_96063) *
                                                           8] = lw_val_96467;
                                    x_96472 = !cond_96419;
                                    y_96473 = x_96472 && cond_96435;
                                    not_arg_96474 = cond_96419 || y_96473;
                                    res_96475 = !not_arg_96474;
                                    res_96438 = res_96457;
                                    res_96439 = res_96458;
                                    res_96443 = res_96475;
                                }
                                res_96420 = res_96436;
                                res_96421 = res_96437;
                                res_96422 = res_96438;
                                res_96423 = res_96439;
                                res_96427 = res_96443;
                            }
                            res_96403 = res_96420;
                            res_96404 = res_96421;
                            res_96405 = res_96422;
                            res_96406 = res_96423;
                            res_96410 = res_96427;
                        }
                        
                        char loop_while_tmp_98552 = res_96410;
                        int16_t x_tmp_98553 = res_96403;
                        int16_t y_tmp_98554 = res_96404;
                        double chi_tmp_98555 = res_96405;
                        int32_t i_tmp_98556;
                        
                        i_tmp_98556 = res_96406;
                        loop_while_96393 = loop_while_tmp_98552;
                        x_96394 = x_tmp_98553;
                        y_96395 = y_tmp_98554;
                        chi_96396 = chi_tmp_98555;
                        i_96397 = i_tmp_98556;
                    }
                    res_96385 = loop_while_96393;
                    res_96386 = x_96394;
                    res_96387 = y_96395;
                    res_96388 = chi_96396;
                    res_96389 = i_96397;
                } else {
                    char res_96479;
                    int16_t res_96480;
                    int16_t res_96481;
                    double res_96482;
                    int32_t res_96483;
                    
                    *(__global int16_t *) &mem_97136[(group_id_96064 *
                                                      (num_elems_84232 *
                                                       group_sizze_96057) +
                                                      local_tid_96063) * 2] =
                        arg_96087;
                    *(__global int16_t *) &mem_97139[(group_id_96064 *
                                                      (num_elems_84232 *
                                                       group_sizze_96057) +
                                                      local_tid_96063) * 2] =
                        res_96073;
                    *(__global double *) &mem_97142[(group_id_96064 *
                                                     (num_elems_84232 *
                                                      group_sizze_96057) +
                                                     local_tid_96063) * 8] =
                        lw_val_96093;
                    
                    char loop_while_96487;
                    int16_t x_96488;
                    int16_t y_96489;
                    double chi_96490;
                    int32_t i_96491;
                    
                    loop_while_96487 = 1;
                    x_96488 = arg_96087;
                    y_96489 = arg_96088;
                    chi_96490 = arg_96089;
                    i_96491 = 1;
                    while (loop_while_96487) {
                        double x_96495 = chi_96490 + res_96081;
                        char cond_96496 = x_96495 < delta_84156;
                        int16_t res_96497;
                        int16_t res_96498;
                        double res_96499;
                        int32_t res_96500;
                        char res_96504;
                        
                        if (cond_96496) {
                            int16_t res_96505;
                            int32_t res_96506;
                            char not_arg_96510;
                            char res_96511;
                            
                            res_96505 = y_96489 + res_96068;
                            res_96506 = i_96491 + 1;
                            *(__global int16_t *) &mem_97136[(group_id_96064 *
                                                              (num_elems_84232 *
                                                               group_sizze_96057) +
                                                              i_96491 *
                                                              group_sizze_96057 +
                                                              local_tid_96063) *
                                                             2] = x_96488;
                            *(__global int16_t *) &mem_97139[(group_id_96064 *
                                                              (num_elems_84232 *
                                                               group_sizze_96057) +
                                                              i_96491 *
                                                              group_sizze_96057 +
                                                              local_tid_96063) *
                                                             2] = y_96489;
                            *(__global double *) &mem_97142[(group_id_96064 *
                                                             (num_elems_84232 *
                                                              group_sizze_96057) +
                                                             i_96491 *
                                                             group_sizze_96057 +
                                                             local_tid_96063) *
                                                            8] = res_96083;
                            not_arg_96510 = res_96505 == res_96071;
                            res_96511 = !not_arg_96510;
                            res_96497 = x_96488;
                            res_96498 = res_96505;
                            res_96499 = x_96495;
                            res_96500 = res_96506;
                            res_96504 = res_96511;
                        } else {
                            int16_t x_96512;
                            char cond_96513;
                            int16_t res_96514;
                            int16_t res_96515;
                            double res_96516;
                            int32_t res_96517;
                            char res_96521;
                            
                            x_96512 = x_96488 + res_96067;
                            cond_96513 = x_96512 == res_96070;
                            if (cond_96513) {
                                double x_96522;
                                double x_96523;
                                double lw_val_96524;
                                
                                x_96522 = delta_84156 - chi_96490;
                                x_96523 = x_96522 / res_96081;
                                lw_val_96524 = x_96523 * res_96083;
                                *(__global
                                  int16_t *) &mem_97136[(group_id_96064 *
                                                         (num_elems_84232 *
                                                          group_sizze_96057) +
                                                         i_96491 *
                                                         group_sizze_96057 +
                                                         local_tid_96063) * 2] =
                                    x_96488;
                                *(__global
                                  int16_t *) &mem_97139[(group_id_96064 *
                                                         (num_elems_84232 *
                                                          group_sizze_96057) +
                                                         i_96491 *
                                                         group_sizze_96057 +
                                                         local_tid_96063) * 2] =
                                    y_96489;
                                *(__global
                                  double *) &mem_97142[(group_id_96064 *
                                                        (num_elems_84232 *
                                                         group_sizze_96057) +
                                                        i_96491 *
                                                        group_sizze_96057 +
                                                        local_tid_96063) * 8] =
                                    lw_val_96524;
                                res_96514 = x_96488;
                                res_96515 = y_96489;
                                res_96516 = chi_96490;
                                res_96517 = i_96491;
                                res_96521 = 0;
                            } else {
                                int16_t x_96528;
                                char cond_96529;
                                int16_t res_96530;
                                int16_t res_96531;
                                double res_96532;
                                int32_t res_96533;
                                char res_96537;
                                
                                x_96528 = y_96489 + res_96068;
                                cond_96529 = x_96528 == res_96071;
                                if (cond_96529) {
                                    res_96530 = x_96488;
                                } else {
                                    res_96530 = x_96512;
                                }
                                if (cond_96529) {
                                    res_96531 = y_96489;
                                } else {
                                    res_96531 = x_96528;
                                }
                                if (cond_96529) {
                                    double x_96538;
                                    double x_96539;
                                    double lw_val_96540;
                                    double x_96544;
                                    double x_96545;
                                    double lw_val_96546;
                                    int32_t i_96547;
                                    
                                    x_96538 = delta_84156 - chi_96490;
                                    x_96539 = x_96538 / res_96081;
                                    lw_val_96540 = x_96539 * res_96083;
                                    *(__global
                                      int16_t *) &mem_97136[(group_id_96064 *
                                                             (num_elems_84232 *
                                                              group_sizze_96057) +
                                                             i_96491 *
                                                             group_sizze_96057 +
                                                             local_tid_96063) *
                                                            2] = x_96488;
                                    *(__global
                                      int16_t *) &mem_97139[(group_id_96064 *
                                                             (num_elems_84232 *
                                                              group_sizze_96057) +
                                                             i_96491 *
                                                             group_sizze_96057 +
                                                             local_tid_96063) *
                                                            2] = y_96489;
                                    *(__global
                                      double *) &mem_97142[(group_id_96064 *
                                                            (num_elems_84232 *
                                                             group_sizze_96057) +
                                                            i_96491 *
                                                            group_sizze_96057 +
                                                            local_tid_96063) *
                                                           8] = lw_val_96540;
                                    x_96544 = x_96090 + chi_96490;
                                    x_96545 = x_96544 / res_96081;
                                    lw_val_96546 = x_96545 * res_96083;
                                    i_96547 = i_96491 + 1;
                                    *(__global
                                      int16_t *) &mem_97136[(group_id_96064 *
                                                             (num_elems_84232 *
                                                              group_sizze_96057) +
                                                             i_96547 *
                                                             group_sizze_96057 +
                                                             local_tid_96063) *
                                                            2] = x_96512;
                                    *(__global
                                      int16_t *) &mem_97139[(group_id_96064 *
                                                             (num_elems_84232 *
                                                              group_sizze_96057) +
                                                             i_96547 *
                                                             group_sizze_96057 +
                                                             local_tid_96063) *
                                                            2] = y_96489;
                                    *(__global
                                      double *) &mem_97142[(group_id_96064 *
                                                            (num_elems_84232 *
                                                             group_sizze_96057) +
                                                            i_96547 *
                                                            group_sizze_96057 +
                                                            local_tid_96063) *
                                                           8] = lw_val_96546;
                                    res_96532 = chi_96490;
                                    res_96533 = i_96491;
                                    res_96537 = 0;
                                } else {
                                    double res_96551;
                                    int32_t res_96552;
                                    double x_96553;
                                    double x_96554;
                                    double lw_val_96555;
                                    double x_96559;
                                    double x_96560;
                                    double lw_val_96561;
                                    int32_t i_96562;
                                    char x_96566;
                                    char y_96567;
                                    char not_arg_96568;
                                    char res_96569;
                                    
                                    res_96551 = x_96495 - delta_84156;
                                    res_96552 = i_96491 + 2;
                                    x_96553 = delta_84156 - chi_96490;
                                    x_96554 = x_96553 / res_96081;
                                    lw_val_96555 = x_96554 * res_96083;
                                    *(__global
                                      int16_t *) &mem_97136[(group_id_96064 *
                                                             (num_elems_84232 *
                                                              group_sizze_96057) +
                                                             i_96491 *
                                                             group_sizze_96057 +
                                                             local_tid_96063) *
                                                            2] = x_96488;
                                    *(__global
                                      int16_t *) &mem_97139[(group_id_96064 *
                                                             (num_elems_84232 *
                                                              group_sizze_96057) +
                                                             i_96491 *
                                                             group_sizze_96057 +
                                                             local_tid_96063) *
                                                            2] = y_96489;
                                    *(__global
                                      double *) &mem_97142[(group_id_96064 *
                                                            (num_elems_84232 *
                                                             group_sizze_96057) +
                                                            i_96491 *
                                                            group_sizze_96057 +
                                                            local_tid_96063) *
                                                           8] = lw_val_96555;
                                    x_96559 = x_96090 + chi_96490;
                                    x_96560 = x_96559 / res_96081;
                                    lw_val_96561 = x_96560 * res_96083;
                                    i_96562 = i_96491 + 1;
                                    *(__global
                                      int16_t *) &mem_97136[(group_id_96064 *
                                                             (num_elems_84232 *
                                                              group_sizze_96057) +
                                                             i_96562 *
                                                             group_sizze_96057 +
                                                             local_tid_96063) *
                                                            2] = x_96512;
                                    *(__global
                                      int16_t *) &mem_97139[(group_id_96064 *
                                                             (num_elems_84232 *
                                                              group_sizze_96057) +
                                                             i_96562 *
                                                             group_sizze_96057 +
                                                             local_tid_96063) *
                                                            2] = y_96489;
                                    *(__global
                                      double *) &mem_97142[(group_id_96064 *
                                                            (num_elems_84232 *
                                                             group_sizze_96057) +
                                                            i_96562 *
                                                            group_sizze_96057 +
                                                            local_tid_96063) *
                                                           8] = lw_val_96561;
                                    x_96566 = !cond_96513;
                                    y_96567 = x_96566 && cond_96529;
                                    not_arg_96568 = cond_96513 || y_96567;
                                    res_96569 = !not_arg_96568;
                                    res_96532 = res_96551;
                                    res_96533 = res_96552;
                                    res_96537 = res_96569;
                                }
                                res_96514 = res_96530;
                                res_96515 = res_96531;
                                res_96516 = res_96532;
                                res_96517 = res_96533;
                                res_96521 = res_96537;
                            }
                            res_96497 = res_96514;
                            res_96498 = res_96515;
                            res_96499 = res_96516;
                            res_96500 = res_96517;
                            res_96504 = res_96521;
                        }
                        
                        char loop_while_tmp_98560 = res_96504;
                        int16_t x_tmp_98561 = res_96497;
                        int16_t y_tmp_98562 = res_96498;
                        double chi_tmp_98563 = res_96499;
                        int32_t i_tmp_98564;
                        
                        i_tmp_98564 = res_96500;
                        loop_while_96487 = loop_while_tmp_98560;
                        x_96488 = x_tmp_98561;
                        y_96489 = y_tmp_98562;
                        chi_96490 = chi_tmp_98563;
                        i_96491 = i_tmp_98564;
                    }
                    res_96479 = loop_while_96487;
                    res_96480 = x_96488;
                    res_96481 = y_96489;
                    res_96482 = chi_96490;
                    res_96483 = i_96491;
                }
            } else {
                char res_96570;
                int16_t res_96571;
                int16_t res_96572;
                double res_96573;
                int32_t res_96574;
                char loop_while_96578;
                int16_t x_96579;
                int16_t y_96580;
                double chi_96581;
                int32_t i_96582;
                
                loop_while_96578 = 1;
                x_96579 = res_96072;
                y_96580 = res_96073;
                chi_96581 = x_96065;
                i_96582 = 0;
                while (loop_while_96578) {
                    double x_96586 = chi_96581 + res_96081;
                    char cond_96587 = x_96586 < delta_84156;
                    int16_t res_96588;
                    int16_t res_96589;
                    double res_96590;
                    int32_t res_96591;
                    char res_96595;
                    
                    if (cond_96587) {
                        int16_t res_96596;
                        int32_t res_96597;
                        char not_arg_96601;
                        char res_96602;
                        
                        res_96596 = y_96580 + res_96068;
                        res_96597 = i_96582 + 1;
                        *(__global int16_t *) &mem_97136[(group_id_96064 *
                                                          (num_elems_84232 *
                                                           group_sizze_96057) +
                                                          i_96582 *
                                                          group_sizze_96057 +
                                                          local_tid_96063) *
                                                         2] = x_96579;
                        *(__global int16_t *) &mem_97139[(group_id_96064 *
                                                          (num_elems_84232 *
                                                           group_sizze_96057) +
                                                          i_96582 *
                                                          group_sizze_96057 +
                                                          local_tid_96063) *
                                                         2] = y_96580;
                        *(__global double *) &mem_97142[(group_id_96064 *
                                                         (num_elems_84232 *
                                                          group_sizze_96057) +
                                                         i_96582 *
                                                         group_sizze_96057 +
                                                         local_tid_96063) * 8] =
                            res_96083;
                        not_arg_96601 = res_96596 == res_96071;
                        res_96602 = !not_arg_96601;
                        res_96588 = x_96579;
                        res_96589 = res_96596;
                        res_96590 = x_96586;
                        res_96591 = res_96597;
                        res_96595 = res_96602;
                    } else {
                        int16_t x_96603;
                        char cond_96604;
                        int16_t res_96605;
                        int16_t res_96606;
                        double res_96607;
                        int32_t res_96608;
                        char res_96612;
                        
                        x_96603 = x_96579 + res_96067;
                        cond_96604 = x_96603 == res_96070;
                        if (cond_96604) {
                            double x_96613;
                            double x_96614;
                            double lw_val_96615;
                            
                            x_96613 = delta_84156 - chi_96581;
                            x_96614 = x_96613 / res_96081;
                            lw_val_96615 = x_96614 * res_96083;
                            *(__global int16_t *) &mem_97136[(group_id_96064 *
                                                              (num_elems_84232 *
                                                               group_sizze_96057) +
                                                              i_96582 *
                                                              group_sizze_96057 +
                                                              local_tid_96063) *
                                                             2] = x_96579;
                            *(__global int16_t *) &mem_97139[(group_id_96064 *
                                                              (num_elems_84232 *
                                                               group_sizze_96057) +
                                                              i_96582 *
                                                              group_sizze_96057 +
                                                              local_tid_96063) *
                                                             2] = y_96580;
                            *(__global double *) &mem_97142[(group_id_96064 *
                                                             (num_elems_84232 *
                                                              group_sizze_96057) +
                                                             i_96582 *
                                                             group_sizze_96057 +
                                                             local_tid_96063) *
                                                            8] = lw_val_96615;
                            res_96605 = x_96579;
                            res_96606 = y_96580;
                            res_96607 = chi_96581;
                            res_96608 = i_96582;
                            res_96612 = 0;
                        } else {
                            int16_t x_96619;
                            char cond_96620;
                            int16_t res_96621;
                            int16_t res_96622;
                            double res_96623;
                            int32_t res_96624;
                            char res_96628;
                            
                            x_96619 = y_96580 + res_96068;
                            cond_96620 = x_96619 == res_96071;
                            if (cond_96620) {
                                res_96621 = x_96579;
                            } else {
                                res_96621 = x_96603;
                            }
                            if (cond_96620) {
                                res_96622 = y_96580;
                            } else {
                                res_96622 = x_96619;
                            }
                            if (cond_96620) {
                                double x_96629;
                                double x_96630;
                                double lw_val_96631;
                                double x_96635;
                                double x_96636;
                                double lw_val_96637;
                                int32_t i_96638;
                                
                                x_96629 = delta_84156 - chi_96581;
                                x_96630 = x_96629 / res_96081;
                                lw_val_96631 = x_96630 * res_96083;
                                *(__global
                                  int16_t *) &mem_97136[(group_id_96064 *
                                                         (num_elems_84232 *
                                                          group_sizze_96057) +
                                                         i_96582 *
                                                         group_sizze_96057 +
                                                         local_tid_96063) * 2] =
                                    x_96579;
                                *(__global
                                  int16_t *) &mem_97139[(group_id_96064 *
                                                         (num_elems_84232 *
                                                          group_sizze_96057) +
                                                         i_96582 *
                                                         group_sizze_96057 +
                                                         local_tid_96063) * 2] =
                                    y_96580;
                                *(__global
                                  double *) &mem_97142[(group_id_96064 *
                                                        (num_elems_84232 *
                                                         group_sizze_96057) +
                                                        i_96582 *
                                                        group_sizze_96057 +
                                                        local_tid_96063) * 8] =
                                    lw_val_96631;
                                x_96635 = x_96090 + chi_96581;
                                x_96636 = x_96635 / res_96081;
                                lw_val_96637 = x_96636 * res_96083;
                                i_96638 = i_96582 + 1;
                                *(__global
                                  int16_t *) &mem_97136[(group_id_96064 *
                                                         (num_elems_84232 *
                                                          group_sizze_96057) +
                                                         i_96638 *
                                                         group_sizze_96057 +
                                                         local_tid_96063) * 2] =
                                    x_96603;
                                *(__global
                                  int16_t *) &mem_97139[(group_id_96064 *
                                                         (num_elems_84232 *
                                                          group_sizze_96057) +
                                                         i_96638 *
                                                         group_sizze_96057 +
                                                         local_tid_96063) * 2] =
                                    y_96580;
                                *(__global
                                  double *) &mem_97142[(group_id_96064 *
                                                        (num_elems_84232 *
                                                         group_sizze_96057) +
                                                        i_96638 *
                                                        group_sizze_96057 +
                                                        local_tid_96063) * 8] =
                                    lw_val_96637;
                                res_96623 = chi_96581;
                                res_96624 = i_96582;
                                res_96628 = 0;
                            } else {
                                double res_96642;
                                int32_t res_96643;
                                double x_96644;
                                double x_96645;
                                double lw_val_96646;
                                double x_96650;
                                double x_96651;
                                double lw_val_96652;
                                int32_t i_96653;
                                char x_96657;
                                char y_96658;
                                char not_arg_96659;
                                char res_96660;
                                
                                res_96642 = x_96586 - delta_84156;
                                res_96643 = i_96582 + 2;
                                x_96644 = delta_84156 - chi_96581;
                                x_96645 = x_96644 / res_96081;
                                lw_val_96646 = x_96645 * res_96083;
                                *(__global
                                  int16_t *) &mem_97136[(group_id_96064 *
                                                         (num_elems_84232 *
                                                          group_sizze_96057) +
                                                         i_96582 *
                                                         group_sizze_96057 +
                                                         local_tid_96063) * 2] =
                                    x_96579;
                                *(__global
                                  int16_t *) &mem_97139[(group_id_96064 *
                                                         (num_elems_84232 *
                                                          group_sizze_96057) +
                                                         i_96582 *
                                                         group_sizze_96057 +
                                                         local_tid_96063) * 2] =
                                    y_96580;
                                *(__global
                                  double *) &mem_97142[(group_id_96064 *
                                                        (num_elems_84232 *
                                                         group_sizze_96057) +
                                                        i_96582 *
                                                        group_sizze_96057 +
                                                        local_tid_96063) * 8] =
                                    lw_val_96646;
                                x_96650 = x_96090 + chi_96581;
                                x_96651 = x_96650 / res_96081;
                                lw_val_96652 = x_96651 * res_96083;
                                i_96653 = i_96582 + 1;
                                *(__global
                                  int16_t *) &mem_97136[(group_id_96064 *
                                                         (num_elems_84232 *
                                                          group_sizze_96057) +
                                                         i_96653 *
                                                         group_sizze_96057 +
                                                         local_tid_96063) * 2] =
                                    x_96603;
                                *(__global
                                  int16_t *) &mem_97139[(group_id_96064 *
                                                         (num_elems_84232 *
                                                          group_sizze_96057) +
                                                         i_96653 *
                                                         group_sizze_96057 +
                                                         local_tid_96063) * 2] =
                                    y_96580;
                                *(__global
                                  double *) &mem_97142[(group_id_96064 *
                                                        (num_elems_84232 *
                                                         group_sizze_96057) +
                                                        i_96653 *
                                                        group_sizze_96057 +
                                                        local_tid_96063) * 8] =
                                    lw_val_96652;
                                x_96657 = !cond_96604;
                                y_96658 = x_96657 && cond_96620;
                                not_arg_96659 = cond_96604 || y_96658;
                                res_96660 = !not_arg_96659;
                                res_96623 = res_96642;
                                res_96624 = res_96643;
                                res_96628 = res_96660;
                            }
                            res_96605 = res_96621;
                            res_96606 = res_96622;
                            res_96607 = res_96623;
                            res_96608 = res_96624;
                            res_96612 = res_96628;
                        }
                        res_96588 = res_96605;
                        res_96589 = res_96606;
                        res_96590 = res_96607;
                        res_96591 = res_96608;
                        res_96595 = res_96612;
                    }
                    
                    char loop_while_tmp_98568 = res_96595;
                    int16_t x_tmp_98569 = res_96588;
                    int16_t y_tmp_98570 = res_96589;
                    double chi_tmp_98571 = res_96590;
                    int32_t i_tmp_98572;
                    
                    i_tmp_98572 = res_96591;
                    loop_while_96578 = loop_while_tmp_98568;
                    x_96579 = x_tmp_98569;
                    y_96580 = y_tmp_98570;
                    chi_96581 = chi_tmp_98571;
                    i_96582 = i_tmp_98572;
                }
                res_96570 = loop_while_96578;
                res_96571 = x_96579;
                res_96572 = y_96580;
                res_96573 = chi_96581;
                res_96574 = i_96582;
            }
        }
    }
    if (thread_active_98524) {
        for (int32_t i_98576 = 0; i_98576 < num_elems_84232; i_98576++) {
            *(__global int16_t *) &mem_97302[(i_98576 * x_85956 + gtid_96055) *
                                             2] = *(__global
                                                    int16_t *) &mem_97136[(group_id_96064 *
                                                                           (num_elems_84232 *
                                                                            group_sizze_96057) +
                                                                           i_98576 *
                                                                           group_sizze_96057 +
                                                                           local_tid_96063) *
                                                                          2];
        }
    }
    if (thread_active_98524) {
        for (int32_t i_98577 = 0; i_98577 < num_elems_84232; i_98577++) {
            *(__global int16_t *) &mem_97306[(i_98577 * x_85956 + gtid_96055) *
                                             2] = *(__global
                                                    int16_t *) &mem_97139[(group_id_96064 *
                                                                           (num_elems_84232 *
                                                                            group_sizze_96057) +
                                                                           i_98577 *
                                                                           group_sizze_96057 +
                                                                           local_tid_96063) *
                                                                          2];
        }
    }
    if (thread_active_98524) {
        for (int32_t i_98578 = 0; i_98578 < num_elems_84232; i_98578++) {
            *(__global double *) &mem_97310[(i_98578 * x_85956 + gtid_96055) *
                                            8] = *(__global
                                                   double *) &mem_97142[(group_id_96064 *
                                                                         (num_elems_84232 *
                                                                          group_sizze_96057) +
                                                                         i_98578 *
                                                                         group_sizze_96057 +
                                                                         local_tid_96063) *
                                                                        8];
        }
    }
}
__kernel void map_kernel_96709(int16_t res_84220, int32_t x_85956, __global
                               unsigned char *mem_97096, __global
                               unsigned char *mem_97099, __global
                               unsigned char *mem_97102, __global
                               unsigned char *mem_97113, __global
                               unsigned char *mem_97116, __global
                               unsigned char *mem_97118, __global
                               unsigned char *mem_97121, __global
                               unsigned char *mem_97124, __global
                               unsigned char *mem_97127, __global
                               unsigned char *mem_97130, __global
                               unsigned char *mem_97133)
{
    int32_t wave_sizze_98519;
    int32_t group_sizze_98520;
    char thread_active_98521;
    int32_t gtid_96702;
    int32_t global_tid_96709;
    int32_t local_tid_96710;
    int32_t group_id_96711;
    
    global_tid_96709 = get_global_id(0);
    local_tid_96710 = get_local_id(0);
    group_sizze_98520 = get_local_size(0);
    wave_sizze_98519 = LOCKSTEP_WIDTH;
    group_id_96711 = get_group_id(0);
    gtid_96702 = global_tid_96709;
    thread_active_98521 = slt32(gtid_96702, x_85956);
    
    double x_96712;
    int16_t x_96713;
    int16_t x_96714;
    char cond_96715;
    char res_96716;
    char x_96717;
    double res_96718;
    int16_t res_96719;
    int16_t res_96720;
    char res_96721;
    char cond_96769;
    int16_t res_96770;
    int16_t res_96771;
    char cond_96775;
    int16_t res_96776;
    int16_t res_96777;
    char cond_96781;
    char res_96782;
    char x_96783;
    char y_96784;
    char cond_96785;
    char x_96786;
    int16_t res_96787;
    int16_t res_96788;
    double res_96798;
    
    if (thread_active_98521) {
        x_96712 = *(__global double *) &mem_97096[gtid_96702 * 8];
        x_96713 = *(__global int16_t *) &mem_97099[gtid_96702 * 2];
        x_96714 = *(__global int16_t *) &mem_97102[gtid_96702 * 2];
        cond_96715 = 0.0 <= x_96712;
        res_96716 = x_96712 <= 45.0;
        x_96717 = cond_96715 && res_96716;
        if (x_96717) {
            res_96718 = x_96712;
            res_96719 = -1;
            res_96720 = 1;
            res_96721 = 0;
        } else {
            char cond_96722;
            char res_96723;
            char x_96724;
            double res_96725;
            int16_t res_96726;
            int16_t res_96727;
            char res_96728;
            
            cond_96722 = 45.0 < x_96712;
            res_96723 = x_96712 < 90.0;
            x_96724 = cond_96722 && res_96723;
            if (x_96724) {
                double res_96729 = 90.0 - x_96712;
                
                res_96725 = res_96729;
                res_96726 = -1;
                res_96727 = 1;
                res_96728 = 1;
            } else {
                char cond_96730;
                char res_96731;
                char x_96732;
                double res_96733;
                int16_t res_96734;
                int16_t res_96735;
                char res_96736;
                
                cond_96730 = 90.0 <= x_96712;
                res_96731 = x_96712 <= 135.0;
                x_96732 = cond_96730 && res_96731;
                if (x_96732) {
                    double res_96737 = x_96712 - 90.0;
                    
                    res_96733 = res_96737;
                    res_96734 = -1;
                    res_96735 = -1;
                    res_96736 = 1;
                } else {
                    char cond_96738;
                    char res_96739;
                    char x_96740;
                    int16_t res_96741;
                    double res_96742;
                    int16_t res_96743;
                    char res_96744;
                    
                    cond_96738 = 135.0 < x_96712;
                    res_96739 = x_96712 <= 180.0;
                    x_96740 = cond_96738 && res_96739;
                    if (x_96740) {
                        res_96741 = -1;
                    } else {
                        res_96741 = 1;
                    }
                    if (x_96740) {
                        double res_96745 = 180.0 - x_96712;
                        
                        res_96742 = res_96745;
                        res_96743 = -1;
                        res_96744 = 0;
                    } else {
                        char cond_96746;
                        char res_96747;
                        char x_96748;
                        double res_96749;
                        int16_t res_96750;
                        char res_96751;
                        
                        cond_96746 = 180.0 < x_96712;
                        res_96747 = x_96712 <= 225.0;
                        x_96748 = cond_96746 && res_96747;
                        if (x_96748) {
                            double res_96752 = x_96712 - 180.0;
                            
                            res_96749 = res_96752;
                            res_96750 = -1;
                            res_96751 = 0;
                        } else {
                            char cond_96753;
                            char res_96754;
                            char x_96755;
                            int16_t res_96756;
                            double res_96757;
                            char res_96758;
                            
                            cond_96753 = 225.0 < x_96712;
                            res_96754 = x_96712 < 270.0;
                            x_96755 = cond_96753 && res_96754;
                            if (x_96755) {
                                res_96756 = -1;
                            } else {
                                res_96756 = 1;
                            }
                            if (x_96755) {
                                double res_96759 = 270.0 - x_96712;
                                
                                res_96757 = res_96759;
                                res_96758 = 1;
                            } else {
                                char cond_96760;
                                double res_96761;
                                char res_96762;
                                
                                cond_96760 = x_96712 == 270.0;
                                if (cond_96760) {
                                    res_96761 = 0.0;
                                    res_96762 = 1;
                                } else {
                                    char cond_96763;
                                    char res_96764;
                                    char x_96765;
                                    double res_96766;
                                    
                                    cond_96763 = 270.0 < x_96712;
                                    res_96764 = x_96712 <= 315.0;
                                    x_96765 = cond_96763 && res_96764;
                                    if (x_96765) {
                                        double res_96767 = x_96712 - 270.0;
                                        
                                        res_96766 = res_96767;
                                    } else {
                                        double res_96768 = 360.0 - x_96712;
                                        
                                        res_96766 = res_96768;
                                    }
                                    res_96761 = res_96766;
                                    res_96762 = x_96765;
                                }
                                res_96757 = res_96761;
                                res_96758 = res_96762;
                            }
                            res_96749 = res_96757;
                            res_96750 = res_96756;
                            res_96751 = res_96758;
                        }
                        res_96742 = res_96749;
                        res_96743 = res_96750;
                        res_96744 = res_96751;
                    }
                    res_96733 = res_96742;
                    res_96734 = res_96741;
                    res_96735 = res_96743;
                    res_96736 = res_96744;
                }
                res_96725 = res_96733;
                res_96726 = res_96734;
                res_96727 = res_96735;
                res_96728 = res_96736;
            }
            res_96718 = res_96725;
            res_96719 = res_96726;
            res_96720 = res_96727;
            res_96721 = res_96728;
        }
        cond_96769 = slt16(res_96719, 0);
        if (cond_96769) {
            int16_t res_96772;
            int16_t x_96773;
            int16_t res_96774;
            
            res_96772 = x_96713 - 1;
            x_96773 = 0 - res_84220;
            res_96774 = x_96773 - 1;
            res_96770 = res_96772;
            res_96771 = res_96774;
        } else {
            res_96770 = x_96713;
            res_96771 = res_84220;
        }
        cond_96775 = slt16(res_96720, 0);
        if (cond_96775) {
            int16_t res_96778;
            int16_t x_96779;
            int16_t res_96780;
            
            res_96778 = x_96714 - 1;
            x_96779 = 0 - res_84220;
            res_96780 = x_96779 - 1;
            res_96776 = res_96778;
            res_96777 = res_96780;
        } else {
            res_96776 = x_96714;
            res_96777 = res_84220;
        }
        cond_96781 = x_96712 == 0.0;
        res_96782 = x_96712 == 180.0;
        x_96783 = !cond_96781;
        y_96784 = x_96783 && res_96782;
        cond_96785 = cond_96781 || y_96784;
        x_96786 = cond_96785 && cond_96769;
        if (x_96786) {
            int16_t res_96789 = res_96770 + 1;
            
            res_96787 = res_96789;
            res_96788 = res_96776;
        } else {
            char cond_96790;
            char res_96791;
            char x_96792;
            char y_96793;
            char cond_96794;
            char x_96795;
            int16_t res_96796;
            
            cond_96790 = x_96712 == 90.0;
            res_96791 = x_96712 == 270.0;
            x_96792 = !cond_96790;
            y_96793 = x_96792 && res_96791;
            cond_96794 = cond_96790 || y_96793;
            x_96795 = cond_96794 && cond_96775;
            if (x_96795) {
                int16_t res_96797 = res_96776 + 1;
                
                res_96796 = res_96797;
            } else {
                res_96796 = res_96776;
            }
            res_96787 = res_96770;
            res_96788 = res_96796;
        }
        res_96798 = 1.7453292519943295e-2 * res_96718;
    }
    if (thread_active_98521) {
        *(__global int16_t *) &mem_97113[gtid_96702 * 2] = res_96719;
    }
    if (thread_active_98521) {
        *(__global int16_t *) &mem_97116[gtid_96702 * 2] = res_96720;
    }
    if (thread_active_98521) {
        *(__global char *) &mem_97118[gtid_96702] = res_96721;
    }
    if (thread_active_98521) {
        *(__global int16_t *) &mem_97121[gtid_96702 * 2] = res_96771;
    }
    if (thread_active_98521) {
        *(__global int16_t *) &mem_97124[gtid_96702 * 2] = res_96777;
    }
    if (thread_active_98521) {
        *(__global int16_t *) &mem_97127[gtid_96702 * 2] = res_96787;
    }
    if (thread_active_98521) {
        *(__global int16_t *) &mem_97130[gtid_96702 * 2] = res_96788;
    }
    if (thread_active_98521) {
        *(__global double *) &mem_97133[gtid_96702 * 8] = res_96798;
    }
}
__kernel void map_kernel_96898(int32_t y_96842, int32_t convop_x_97312, __global
                               unsigned char *mem_97329, __global
                               unsigned char *mem_97354, __global
                               unsigned char *mem_97357)
{
    int32_t wave_sizze_98609;
    int32_t group_sizze_98610;
    char thread_active_98611;
    int32_t j_96883;
    int32_t global_tid_96898;
    int32_t local_tid_96899;
    int32_t group_id_96900;
    
    global_tid_96898 = get_global_id(0);
    local_tid_96899 = get_local_id(0);
    group_sizze_98610 = get_local_size(0);
    wave_sizze_98609 = LOCKSTEP_WIDTH;
    group_id_96900 = get_group_id(0);
    j_96883 = global_tid_96898;
    thread_active_98611 = slt32(j_96883, convop_x_97312);
    
    int32_t y_96881;
    int32_t group_id_96888;
    char cond_96889;
    int32_t final_result_96891;
    
    if (thread_active_98611) {
        y_96881 = *(__global int32_t *) &mem_97329[j_96883 * 4];
        group_id_96888 = squot32(j_96883, y_96842);
        cond_96889 = 0 == group_id_96888;
        if (cond_96889) {
            final_result_96891 = y_96881;
        } else {
            int32_t carry_in_index_96890;
            int32_t x_96880;
            int32_t zz_96882;
            
            carry_in_index_96890 = group_id_96888 - 1;
            x_96880 = *(__global int32_t *) &mem_97354[carry_in_index_96890 *
                                                       4];
            zz_96882 = x_96880 + y_96881;
            final_result_96891 = zz_96882;
        }
    }
    if (thread_active_98611) {
        *(__global int32_t *) &mem_97357[j_96883 * 4] = final_result_96891;
    }
}
__kernel void map_kernel_96908(int32_t num_elems_84232,
                               int32_t partition_sizze_86670,
                               int32_t convop_x_97312, __global
                               unsigned char *mem_97314, __global
                               unsigned char *mem_97326, __global
                               unsigned char *mem_97332, __global
                               unsigned char *mem_97336, __global
                               unsigned char *mem_97357, __global
                               unsigned char *mem_97360, __global
                               unsigned char *mem_97363, __global
                               unsigned char *mem_97366)
{
    int32_t wave_sizze_98612;
    int32_t group_sizze_98613;
    char thread_active_98614;
    int32_t write_i_96901;
    int32_t global_tid_96908;
    int32_t local_tid_96909;
    int32_t group_id_96910;
    
    global_tid_96908 = get_global_id(0);
    local_tid_96909 = get_local_id(0);
    group_sizze_98613 = get_local_size(0);
    wave_sizze_98612 = LOCKSTEP_WIDTH;
    group_id_96910 = get_group_id(0);
    write_i_96901 = global_tid_96908;
    thread_active_98614 = slt32(write_i_96901, convop_x_97312);
    
    int32_t c_86678;
    int32_t offset_86679;
    int32_t new_index_96946;
    int32_t binop_y_96948;
    int32_t new_index_96949;
    int32_t v_86680;
    int32_t v_86681;
    double v_86682;
    char is_this_one_86683;
    int32_t this_offset_86684;
    int32_t total_res_86685;
    
    if (thread_active_98614) {
        c_86678 = *(__global int32_t *) &mem_97332[write_i_96901 * 4];
        offset_86679 = *(__global int32_t *) &mem_97357[write_i_96901 * 4];
        new_index_96946 = squot32(write_i_96901, num_elems_84232);
        binop_y_96948 = new_index_96946 * num_elems_84232;
        new_index_96949 = write_i_96901 - binop_y_96948;
        v_86680 = *(__global int32_t *) &mem_97314[(new_index_96946 *
                                                    num_elems_84232 +
                                                    new_index_96949) * 4];
        v_86681 = *(__global int32_t *) &mem_97326[(new_index_96946 *
                                                    num_elems_84232 +
                                                    new_index_96949) * 4];
        v_86682 = *(__global double *) &mem_97336[(new_index_96946 *
                                                   num_elems_84232 +
                                                   new_index_96949) * 8];
        is_this_one_86683 = c_86678 == 0;
        this_offset_86684 = offset_86679 + -1;
        if (is_this_one_86683) {
            total_res_86685 = this_offset_86684;
        } else {
            total_res_86685 = -1;
        }
    }
    if (thread_active_98614 && (sle32(0, total_res_86685) &&
                                slt32(total_res_86685,
                                      partition_sizze_86670))) {
        *(__global int32_t *) &mem_97360[total_res_86685 * 4] = v_86680;
    }
    if (thread_active_98614 && (sle32(0, total_res_86685) &&
                                slt32(total_res_86685,
                                      partition_sizze_86670))) {
        *(__global int32_t *) &mem_97363[total_res_86685 * 4] = v_86681;
    }
    if (thread_active_98614 && (sle32(0, total_res_86685) &&
                                slt32(total_res_86685,
                                      partition_sizze_86670))) {
        *(__global double *) &mem_97366[total_res_86685 * 8] = v_86682;
    }
}
__kernel void reduce_kernel_86791(__local volatile int64_t *mem_aligned_0,
                                  int32_t num_groups_86705, __global
                                  unsigned char *mem_97028, __global
                                  unsigned char *mem_97034)
{
    __local volatile char *restrict mem_97031 = mem_aligned_0;
    int32_t wave_sizze_97792;
    int32_t group_sizze_97793;
    char thread_active_97794;
    int32_t global_tid_86791;
    int32_t local_tid_86792;
    int32_t group_id_86793;
    
    global_tid_86791 = get_global_id(0);
    local_tid_86792 = get_local_id(0);
    group_sizze_97793 = get_local_size(0);
    wave_sizze_97792 = LOCKSTEP_WIDTH;
    group_id_86793 = get_group_id(0);
    thread_active_97794 = 1;
    
    char in_bounds_86794;
    
    if (thread_active_97794) {
        in_bounds_86794 = slt32(local_tid_86792, num_groups_86705);
    }
    
    double final_result_86798;
    
    if (slt32(local_tid_86792, max_num_groups_86700) && 1) {
        double elem_86796;
        
        if (in_bounds_86794) {
            double x_86795 = *(__global double *) &mem_97028[global_tid_86791 *
                                                             8];
            
            elem_86796 = x_86795;
        } else {
            elem_86796 = -INFINITY;
        }
        *(__local double *) &mem_97031[local_tid_86792 * 8] = elem_86796;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t skip_waves_97795;
    double x_73929;
    double x_73930;
    int32_t my_index_86712;
    int32_t other_offset_86713;
    
    my_index_86712 = local_tid_86792;
    other_offset_86713 = 0;
    if (slt32(local_tid_86792, max_num_groups_86700)) {
        x_73929 = *(__local double *) &mem_97031[(local_tid_86792 +
                                                  other_offset_86713) * 8];
    }
    other_offset_86713 = 1;
    while (slt32(other_offset_86713, wave_sizze_97792)) {
        if (slt32(local_tid_86792 + other_offset_86713, max_num_groups_86700) &&
            ((local_tid_86792 - squot32(local_tid_86792, wave_sizze_97792) *
              wave_sizze_97792) & (2 * other_offset_86713 - 1)) == 0) {
            // read array element
            {
                x_73930 = *(volatile __local
                            double *) &mem_97031[(local_tid_86792 +
                                                  other_offset_86713) * 8];
            }
            
            double res_73931;
            
            if (thread_active_97794) {
                res_73931 = fmax64(x_73929, x_73930);
            }
            x_73929 = res_73931;
            *(volatile __local double *) &mem_97031[local_tid_86792 * 8] =
                x_73929;
        }
        other_offset_86713 *= 2;
    }
    skip_waves_97795 = 1;
    while (slt32(skip_waves_97795, squot32(group_sizze_97793 +
                                           wave_sizze_97792 - 1,
                                           wave_sizze_97792))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        other_offset_86713 = skip_waves_97795 * wave_sizze_97792;
        if (slt32(local_tid_86792 + other_offset_86713, max_num_groups_86700) &&
            ((local_tid_86792 - squot32(local_tid_86792, wave_sizze_97792) *
              wave_sizze_97792) == 0 && (squot32(local_tid_86792,
                                                 wave_sizze_97792) & (2 *
                                                                      skip_waves_97795 -
                                                                      1)) ==
             0)) {
            // read array element
            {
                x_73930 = *(__local double *) &mem_97031[(local_tid_86792 +
                                                          other_offset_86713) *
                                                         8];
            }
            
            double res_73931;
            
            if (thread_active_97794) {
                res_73931 = fmax64(x_73929, x_73930);
            }
            x_73929 = res_73931;
            *(__local double *) &mem_97031[local_tid_86792 * 8] = x_73929;
        }
        skip_waves_97795 *= 2;
    }
    final_result_86798 = x_73929;
    if (local_tid_86792 == 0) {
        *(__global double *) &mem_97034[group_id_86793 * 8] =
            final_result_86798;
    }
}
__kernel void reduce_kernel_90831(__local volatile int64_t *mem_aligned_0,
                                  int32_t num_groups_90745, __global
                                  unsigned char *mem_97040, __global
                                  unsigned char *mem_97046)
{
    __local volatile char *restrict mem_97043 = mem_aligned_0;
    int32_t wave_sizze_98128;
    int32_t group_sizze_98129;
    char thread_active_98130;
    int32_t global_tid_90831;
    int32_t local_tid_90832;
    int32_t group_id_90833;
    
    global_tid_90831 = get_global_id(0);
    local_tid_90832 = get_local_id(0);
    group_sizze_98129 = get_local_size(0);
    wave_sizze_98128 = LOCKSTEP_WIDTH;
    group_id_90833 = get_group_id(0);
    thread_active_98130 = 1;
    
    char in_bounds_90834;
    
    if (thread_active_98130) {
        in_bounds_90834 = slt32(local_tid_90832, num_groups_90745);
    }
    
    double final_result_90838;
    
    if (slt32(local_tid_90832, max_num_groups_90740) && 1) {
        double elem_90836;
        
        if (in_bounds_90834) {
            double x_90835 = *(__global double *) &mem_97040[global_tid_90831 *
                                                             8];
            
            elem_90836 = x_90835;
        } else {
            elem_90836 = -INFINITY;
        }
        *(__local double *) &mem_97043[local_tid_90832 * 8] = elem_90836;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t skip_waves_98131;
    double x_79024;
    double x_79025;
    int32_t my_index_90752;
    int32_t other_offset_90753;
    
    my_index_90752 = local_tid_90832;
    other_offset_90753 = 0;
    if (slt32(local_tid_90832, max_num_groups_90740)) {
        x_79024 = *(__local double *) &mem_97043[(local_tid_90832 +
                                                  other_offset_90753) * 8];
    }
    other_offset_90753 = 1;
    while (slt32(other_offset_90753, wave_sizze_98128)) {
        if (slt32(local_tid_90832 + other_offset_90753, max_num_groups_90740) &&
            ((local_tid_90832 - squot32(local_tid_90832, wave_sizze_98128) *
              wave_sizze_98128) & (2 * other_offset_90753 - 1)) == 0) {
            // read array element
            {
                x_79025 = *(volatile __local
                            double *) &mem_97043[(local_tid_90832 +
                                                  other_offset_90753) * 8];
            }
            
            double res_79026;
            
            if (thread_active_98130) {
                res_79026 = fmax64(x_79024, x_79025);
            }
            x_79024 = res_79026;
            *(volatile __local double *) &mem_97043[local_tid_90832 * 8] =
                x_79024;
        }
        other_offset_90753 *= 2;
    }
    skip_waves_98131 = 1;
    while (slt32(skip_waves_98131, squot32(group_sizze_98129 +
                                           wave_sizze_98128 - 1,
                                           wave_sizze_98128))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        other_offset_90753 = skip_waves_98131 * wave_sizze_98128;
        if (slt32(local_tid_90832 + other_offset_90753, max_num_groups_90740) &&
            ((local_tid_90832 - squot32(local_tid_90832, wave_sizze_98128) *
              wave_sizze_98128) == 0 && (squot32(local_tid_90832,
                                                 wave_sizze_98128) & (2 *
                                                                      skip_waves_98131 -
                                                                      1)) ==
             0)) {
            // read array element
            {
                x_79025 = *(__local double *) &mem_97043[(local_tid_90832 +
                                                          other_offset_90753) *
                                                         8];
            }
            
            double res_79026;
            
            if (thread_active_98130) {
                res_79026 = fmax64(x_79024, x_79025);
            }
            x_79024 = res_79026;
            *(__local double *) &mem_97043[local_tid_90832 * 8] = x_79024;
        }
        skip_waves_98131 *= 2;
    }
    final_result_90838 = x_79024;
    if (local_tid_90832 == 0) {
        *(__global double *) &mem_97046[group_id_90833 * 8] =
            final_result_90838;
    }
}
__kernel void reduce_kernel_92848(__local volatile int64_t *mem_aligned_0,
                                  int32_t num_groups_92762, __global
                                  unsigned char *mem_97028, __global
                                  unsigned char *mem_97034)
{
    __local volatile char *restrict mem_97031 = mem_aligned_0;
    int32_t wave_sizze_98285;
    int32_t group_sizze_98286;
    char thread_active_98287;
    int32_t global_tid_92848;
    int32_t local_tid_92849;
    int32_t group_id_92850;
    
    global_tid_92848 = get_global_id(0);
    local_tid_92849 = get_local_id(0);
    group_sizze_98286 = get_local_size(0);
    wave_sizze_98285 = LOCKSTEP_WIDTH;
    group_id_92850 = get_group_id(0);
    thread_active_98287 = 1;
    
    char in_bounds_92851;
    
    if (thread_active_98287) {
        in_bounds_92851 = slt32(local_tid_92849, num_groups_92762);
    }
    
    double final_result_92855;
    
    if (slt32(local_tid_92849, max_num_groups_92757) && 1) {
        double elem_92853;
        
        if (in_bounds_92851) {
            double x_92852 = *(__global double *) &mem_97028[global_tid_92848 *
                                                             8];
            
            elem_92853 = x_92852;
        } else {
            elem_92853 = -INFINITY;
        }
        *(__local double *) &mem_97031[local_tid_92849 * 8] = elem_92853;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t skip_waves_98288;
    double x_81571;
    double x_81572;
    int32_t my_index_92769;
    int32_t other_offset_92770;
    
    my_index_92769 = local_tid_92849;
    other_offset_92770 = 0;
    if (slt32(local_tid_92849, max_num_groups_92757)) {
        x_81571 = *(__local double *) &mem_97031[(local_tid_92849 +
                                                  other_offset_92770) * 8];
    }
    other_offset_92770 = 1;
    while (slt32(other_offset_92770, wave_sizze_98285)) {
        if (slt32(local_tid_92849 + other_offset_92770, max_num_groups_92757) &&
            ((local_tid_92849 - squot32(local_tid_92849, wave_sizze_98285) *
              wave_sizze_98285) & (2 * other_offset_92770 - 1)) == 0) {
            // read array element
            {
                x_81572 = *(volatile __local
                            double *) &mem_97031[(local_tid_92849 +
                                                  other_offset_92770) * 8];
            }
            
            double res_81573;
            
            if (thread_active_98287) {
                res_81573 = fmax64(x_81571, x_81572);
            }
            x_81571 = res_81573;
            *(volatile __local double *) &mem_97031[local_tid_92849 * 8] =
                x_81571;
        }
        other_offset_92770 *= 2;
    }
    skip_waves_98288 = 1;
    while (slt32(skip_waves_98288, squot32(group_sizze_98286 +
                                           wave_sizze_98285 - 1,
                                           wave_sizze_98285))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        other_offset_92770 = skip_waves_98288 * wave_sizze_98285;
        if (slt32(local_tid_92849 + other_offset_92770, max_num_groups_92757) &&
            ((local_tid_92849 - squot32(local_tid_92849, wave_sizze_98285) *
              wave_sizze_98285) == 0 && (squot32(local_tid_92849,
                                                 wave_sizze_98285) & (2 *
                                                                      skip_waves_98288 -
                                                                      1)) ==
             0)) {
            // read array element
            {
                x_81572 = *(__local double *) &mem_97031[(local_tid_92849 +
                                                          other_offset_92770) *
                                                         8];
            }
            
            double res_81573;
            
            if (thread_active_98287) {
                res_81573 = fmax64(x_81571, x_81572);
            }
            x_81571 = res_81573;
            *(__local double *) &mem_97031[local_tid_92849 * 8] = x_81571;
        }
        skip_waves_98288 *= 2;
    }
    final_result_92855 = x_81571;
    if (local_tid_92849 == 0) {
        *(__global double *) &mem_97034[group_id_92850 * 8] =
            final_result_92855;
    }
}
__kernel void reduce_kernel_94995(__local volatile int64_t *mem_aligned_0,
                                  int32_t num_groups_94909, __global
                                  unsigned char *mem_97028, __global
                                  unsigned char *mem_97034)
{
    __local volatile char *restrict mem_97031 = mem_aligned_0;
    int32_t wave_sizze_98476;
    int32_t group_sizze_98477;
    char thread_active_98478;
    int32_t global_tid_94995;
    int32_t local_tid_94996;
    int32_t group_id_94997;
    
    global_tid_94995 = get_global_id(0);
    local_tid_94996 = get_local_id(0);
    group_sizze_98477 = get_local_size(0);
    wave_sizze_98476 = LOCKSTEP_WIDTH;
    group_id_94997 = get_group_id(0);
    thread_active_98478 = 1;
    
    char in_bounds_94998;
    
    if (thread_active_98478) {
        in_bounds_94998 = slt32(local_tid_94996, num_groups_94909);
    }
    
    double final_result_95002;
    
    if (slt32(local_tid_94996, max_num_groups_94904) && 1) {
        double elem_95000;
        
        if (in_bounds_94998) {
            double x_94999 = *(__global double *) &mem_97028[global_tid_94995 *
                                                             8];
            
            elem_95000 = x_94999;
        } else {
            elem_95000 = -INFINITY;
        }
        *(__local double *) &mem_97031[local_tid_94996 * 8] = elem_95000;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t skip_waves_98479;
    double x_84161;
    double x_84162;
    int32_t my_index_94916;
    int32_t other_offset_94917;
    
    my_index_94916 = local_tid_94996;
    other_offset_94917 = 0;
    if (slt32(local_tid_94996, max_num_groups_94904)) {
        x_84161 = *(__local double *) &mem_97031[(local_tid_94996 +
                                                  other_offset_94917) * 8];
    }
    other_offset_94917 = 1;
    while (slt32(other_offset_94917, wave_sizze_98476)) {
        if (slt32(local_tid_94996 + other_offset_94917, max_num_groups_94904) &&
            ((local_tid_94996 - squot32(local_tid_94996, wave_sizze_98476) *
              wave_sizze_98476) & (2 * other_offset_94917 - 1)) == 0) {
            // read array element
            {
                x_84162 = *(volatile __local
                            double *) &mem_97031[(local_tid_94996 +
                                                  other_offset_94917) * 8];
            }
            
            double res_84163;
            
            if (thread_active_98478) {
                res_84163 = fmax64(x_84161, x_84162);
            }
            x_84161 = res_84163;
            *(volatile __local double *) &mem_97031[local_tid_94996 * 8] =
                x_84161;
        }
        other_offset_94917 *= 2;
    }
    skip_waves_98479 = 1;
    while (slt32(skip_waves_98479, squot32(group_sizze_98477 +
                                           wave_sizze_98476 - 1,
                                           wave_sizze_98476))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        other_offset_94917 = skip_waves_98479 * wave_sizze_98476;
        if (slt32(local_tid_94996 + other_offset_94917, max_num_groups_94904) &&
            ((local_tid_94996 - squot32(local_tid_94996, wave_sizze_98476) *
              wave_sizze_98476) == 0 && (squot32(local_tid_94996,
                                                 wave_sizze_98476) & (2 *
                                                                      skip_waves_98479 -
                                                                      1)) ==
             0)) {
            // read array element
            {
                x_84162 = *(__local double *) &mem_97031[(local_tid_94996 +
                                                          other_offset_94917) *
                                                         8];
            }
            
            double res_84163;
            
            if (thread_active_98478) {
                res_84163 = fmax64(x_84161, x_84162);
            }
            x_84161 = res_84163;
            *(__local double *) &mem_97031[local_tid_94996 * 8] = x_84161;
        }
        skip_waves_98479 *= 2;
    }
    final_result_95002 = x_84161;
    if (local_tid_94996 == 0) {
        *(__global double *) &mem_97034[group_id_94997 * 8] =
            final_result_95002;
    }
}
__kernel void scan1_kernel_87689(__local volatile int64_t *mem_aligned_0,
                                 int32_t sizze_73917,
                                 double gridHalfWidth_73921, double delta_73922,
                                 int32_t nesting_sizze_86802,
                                 int32_t num_iterations_87694, int32_t y_87697,
                                 __global
                                 unsigned char *detectorPositions_mem_97020,
                                 __global unsigned char *mem_97038, __global
                                 unsigned char *mem_97041, __global
                                 unsigned char *mem_97044, __global
                                 unsigned char *mem_97047, __global
                                 unsigned char *mem_97050, __global
                                 unsigned char *mem_97053, __global
                                 unsigned char *mem_97055, __global
                                 unsigned char *mem_97057, __global
                                 unsigned char *mem_97084)
{
    __local volatile char *restrict mem_97072 = mem_aligned_0;
    int32_t wave_sizze_97800;
    int32_t group_sizze_97801;
    char thread_active_97802;
    int32_t global_tid_87689;
    int32_t local_tid_87690;
    int32_t group_id_87691;
    
    global_tid_87689 = get_global_id(0);
    local_tid_87690 = get_local_id(0);
    group_sizze_97801 = get_local_size(0);
    wave_sizze_97800 = LOCKSTEP_WIDTH;
    group_id_87691 = get_group_id(0);
    thread_active_97802 = 1;
    
    int32_t x_87698;
    char is_first_thread_87724;
    int32_t result_87735;
    
    if (thread_active_97802) {
        x_87698 = group_id_87691 * y_87697;
        is_first_thread_87724 = local_tid_87690 == 0;
        
        int32_t x_merge_87695 = 0;
        
        for (int32_t i_87696 = 0; i_87696 < num_iterations_87694; i_87696++) {
            int32_t y_87699 = i_87696 * group_sizze_86815;
            int32_t offset_87700 = x_87698 + y_87699;
            int32_t j_87701 = offset_87700 + local_tid_87690;
            char cond_87702 = slt32(j_87701, nesting_sizze_86802);
            int32_t foldres_87711;
            
            if (cond_87702) {
                int32_t new_index_96911;
                int32_t binop_y_96913;
                int32_t new_index_96914;
                double eAngles_zzip_res_elem_87703;
                double reshape_elem_87704;
                double res_86833;
                double res_86834;
                double res_86835;
                double res_86836;
                double res_86837;
                char cond_86838;
                char res_86839;
                char x_86840;
                char y_86841;
                char res_86842;
                char cond_86843;
                char res_86844;
                char x_86845;
                char y_86846;
                char res_86847;
                double res_86848;
                double res_86849;
                double res_86850;
                char res_86851;
                char res_86852;
                int16_t res_87661;
                int16_t res_87662;
                char cond_87663;
                int32_t part_res_87664;
                int32_t part_res_87665;
                int32_t zz_87666;
                
                new_index_96911 = squot32(j_87701, sizze_73917);
                binop_y_96913 = new_index_96911 * sizze_73917;
                new_index_96914 = j_87701 - binop_y_96913;
                eAngles_zzip_res_elem_87703 = *(__global
                                                double *) &mem_97038[(new_index_96911 *
                                                                      sizze_73917 +
                                                                      new_index_96914) *
                                                                     8];
                reshape_elem_87704 = *(__global
                                       double *) &detectorPositions_mem_97020[new_index_96914 *
                                                                              8];
                res_86833 = 1.7453292519943295e-2 * eAngles_zzip_res_elem_87703;
                res_86834 = futrts_cos64(res_86833);
                res_86835 = futrts_sin64(res_86833);
                res_86836 = res_86834 * reshape_elem_87704;
                res_86837 = res_86835 * reshape_elem_87704;
                cond_86838 = eAngles_zzip_res_elem_87703 == 0.0;
                res_86839 = eAngles_zzip_res_elem_87703 == 180.0;
                x_86840 = !cond_86838;
                y_86841 = x_86840 && res_86839;
                res_86842 = cond_86838 || y_86841;
                cond_86843 = eAngles_zzip_res_elem_87703 == 90.0;
                res_86844 = eAngles_zzip_res_elem_87703 == 270.0;
                x_86845 = !cond_86843;
                y_86846 = x_86845 && res_86844;
                res_86847 = cond_86843 || y_86846;
                if (res_86842) {
                    double y_86853;
                    char cond_86854;
                    char res_86855;
                    char x_86856;
                    char cond_86857;
                    double res_86858;
                    double res_86859;
                    
                    y_86853 = 0.0 - gridHalfWidth_73921;
                    cond_86854 = y_86853 <= res_86836;
                    res_86855 = res_86836 < gridHalfWidth_73921;
                    x_86856 = cond_86854 && res_86855;
                    cond_86857 = !x_86856;
                    if (cond_86857) {
                        res_86858 = 0.0;
                        res_86859 = 0.0;
                    } else {
                        double res_86860;
                        double res_86861;
                        
                        if (cond_86838) {
                            double arg_86862;
                            int64_t res_86863;
                            double res_86864;
                            char cond_86865;
                            double res_86866;
                            double negate_arg_86873;
                            double arg_86874;
                            int64_t res_86875;
                            double res_86876;
                            char cond_86877;
                            double res_86878;
                            
                            arg_86862 = res_86836 / delta_73922;
                            res_86863 = fptosi_f64_i64(arg_86862);
                            res_86864 = sitofp_i64_f64(res_86863);
                            cond_86865 = 0.0 <= arg_86862;
                            if (cond_86865) {
                                char cond_86867;
                                double res_86868;
                                
                                cond_86867 = res_86864 < arg_86862;
                                if (cond_86867) {
                                    res_86868 = res_86864;
                                } else {
                                    res_86868 = arg_86862;
                                }
                                res_86866 = res_86868;
                            } else {
                                char cond_86869;
                                double res_86870;
                                
                                cond_86869 = arg_86862 < res_86864;
                                if (cond_86869) {
                                    int64_t res_86871;
                                    double res_86872;
                                    
                                    res_86871 = res_86863 - 1;
                                    res_86872 = sitofp_i64_f64(res_86871);
                                    res_86870 = res_86872;
                                } else {
                                    res_86870 = arg_86862;
                                }
                                res_86866 = res_86870;
                            }
                            negate_arg_86873 = gridHalfWidth_73921 /
                                delta_73922;
                            arg_86874 = 0.0 - negate_arg_86873;
                            res_86875 = fptosi_f64_i64(arg_86874);
                            res_86876 = sitofp_i64_f64(res_86875);
                            cond_86877 = 0.0 <= arg_86874;
                            if (cond_86877) {
                                char cond_86879;
                                double res_86880;
                                
                                cond_86879 = res_86876 < arg_86874;
                                if (cond_86879) {
                                    res_86880 = res_86876;
                                } else {
                                    res_86880 = arg_86874;
                                }
                                res_86878 = res_86880;
                            } else {
                                char cond_86881;
                                double res_86882;
                                
                                cond_86881 = arg_86874 < res_86876;
                                if (cond_86881) {
                                    int64_t res_86883;
                                    double res_86884;
                                    
                                    res_86883 = res_86875 - 1;
                                    res_86884 = sitofp_i64_f64(res_86883);
                                    res_86882 = res_86884;
                                } else {
                                    res_86882 = arg_86874;
                                }
                                res_86878 = res_86882;
                            }
                            res_86860 = res_86866;
                            res_86861 = res_86878;
                        } else {
                            double arg_86885;
                            int64_t res_86886;
                            double res_86887;
                            char cond_86888;
                            double res_86889;
                            double arg_86896;
                            int64_t res_86897;
                            double res_86898;
                            char cond_86899;
                            double res_86900;
                            
                            arg_86885 = res_86836 / delta_73922;
                            res_86886 = fptosi_f64_i64(arg_86885);
                            res_86887 = sitofp_i64_f64(res_86886);
                            cond_86888 = 0.0 <= arg_86885;
                            if (cond_86888) {
                                char cond_86890;
                                double res_86891;
                                
                                cond_86890 = res_86887 < arg_86885;
                                if (cond_86890) {
                                    res_86891 = res_86887;
                                } else {
                                    res_86891 = arg_86885;
                                }
                                res_86889 = res_86891;
                            } else {
                                char cond_86892;
                                double res_86893;
                                
                                cond_86892 = arg_86885 < res_86887;
                                if (cond_86892) {
                                    int64_t res_86894;
                                    double res_86895;
                                    
                                    res_86894 = res_86886 - 1;
                                    res_86895 = sitofp_i64_f64(res_86894);
                                    res_86893 = res_86895;
                                } else {
                                    res_86893 = arg_86885;
                                }
                                res_86889 = res_86893;
                            }
                            arg_86896 = gridHalfWidth_73921 / delta_73922;
                            res_86897 = fptosi_f64_i64(arg_86896);
                            res_86898 = sitofp_i64_f64(res_86897);
                            cond_86899 = 0.0 <= arg_86896;
                            if (cond_86899) {
                                char cond_86901;
                                double res_86902;
                                
                                cond_86901 = res_86898 < arg_86896;
                                if (cond_86901) {
                                    res_86902 = res_86898;
                                } else {
                                    res_86902 = arg_86896;
                                }
                                res_86900 = res_86902;
                            } else {
                                char cond_86903;
                                double res_86904;
                                
                                cond_86903 = arg_86896 < res_86898;
                                if (cond_86903) {
                                    int64_t res_86905;
                                    double res_86906;
                                    
                                    res_86905 = res_86897 - 1;
                                    res_86906 = sitofp_i64_f64(res_86905);
                                    res_86904 = res_86906;
                                } else {
                                    res_86904 = arg_86896;
                                }
                                res_86900 = res_86904;
                            }
                            res_86860 = res_86889;
                            res_86861 = res_86900;
                        }
                        res_86858 = res_86860;
                        res_86859 = res_86861;
                    }
                    res_86848 = res_86858;
                    res_86849 = res_86859;
                    res_86850 = 0.0;
                    res_86851 = x_86856;
                    res_86852 = cond_86857;
                } else {
                    double res_86907;
                    double res_86908;
                    double res_86909;
                    char res_86910;
                    char res_86911;
                    
                    if (res_86847) {
                        double y_86912;
                        char cond_86913;
                        char res_86914;
                        char x_86915;
                        char cond_86916;
                        double res_86917;
                        double res_86918;
                        
                        y_86912 = 0.0 - gridHalfWidth_73921;
                        cond_86913 = y_86912 <= res_86837;
                        res_86914 = res_86837 < gridHalfWidth_73921;
                        x_86915 = cond_86913 && res_86914;
                        cond_86916 = !x_86915;
                        if (cond_86916) {
                            res_86917 = 0.0;
                            res_86918 = 0.0;
                        } else {
                            double res_86919;
                            double res_86920;
                            
                            if (cond_86843) {
                                double arg_86921;
                                int64_t res_86922;
                                double res_86923;
                                char cond_86924;
                                double res_86925;
                                double arg_86932;
                                int64_t res_86933;
                                double res_86934;
                                char cond_86935;
                                double res_86936;
                                
                                arg_86921 = gridHalfWidth_73921 / delta_73922;
                                res_86922 = fptosi_f64_i64(arg_86921);
                                res_86923 = sitofp_i64_f64(res_86922);
                                cond_86924 = 0.0 <= arg_86921;
                                if (cond_86924) {
                                    char cond_86926;
                                    double res_86927;
                                    
                                    cond_86926 = res_86923 < arg_86921;
                                    if (cond_86926) {
                                        res_86927 = res_86923;
                                    } else {
                                        res_86927 = arg_86921;
                                    }
                                    res_86925 = res_86927;
                                } else {
                                    char cond_86928;
                                    double res_86929;
                                    
                                    cond_86928 = arg_86921 < res_86923;
                                    if (cond_86928) {
                                        int64_t res_86930;
                                        double res_86931;
                                        
                                        res_86930 = res_86922 - 1;
                                        res_86931 = sitofp_i64_f64(res_86930);
                                        res_86929 = res_86931;
                                    } else {
                                        res_86929 = arg_86921;
                                    }
                                    res_86925 = res_86929;
                                }
                                arg_86932 = res_86837 / delta_73922;
                                res_86933 = fptosi_f64_i64(arg_86932);
                                res_86934 = sitofp_i64_f64(res_86933);
                                cond_86935 = 0.0 <= arg_86932;
                                if (cond_86935) {
                                    char cond_86937;
                                    double res_86938;
                                    
                                    cond_86937 = res_86934 < arg_86932;
                                    if (cond_86937) {
                                        res_86938 = res_86934;
                                    } else {
                                        res_86938 = arg_86932;
                                    }
                                    res_86936 = res_86938;
                                } else {
                                    char cond_86939;
                                    double res_86940;
                                    
                                    cond_86939 = arg_86932 < res_86934;
                                    if (cond_86939) {
                                        int64_t res_86941;
                                        double res_86942;
                                        
                                        res_86941 = res_86933 - 1;
                                        res_86942 = sitofp_i64_f64(res_86941);
                                        res_86940 = res_86942;
                                    } else {
                                        res_86940 = arg_86932;
                                    }
                                    res_86936 = res_86940;
                                }
                                res_86919 = res_86925;
                                res_86920 = res_86936;
                            } else {
                                double negate_arg_86943;
                                double arg_86944;
                                int64_t res_86945;
                                double res_86946;
                                char cond_86947;
                                double res_86948;
                                double arg_86955;
                                int64_t res_86956;
                                double res_86957;
                                char cond_86958;
                                double res_86959;
                                
                                negate_arg_86943 = gridHalfWidth_73921 /
                                    delta_73922;
                                arg_86944 = 0.0 - negate_arg_86943;
                                res_86945 = fptosi_f64_i64(arg_86944);
                                res_86946 = sitofp_i64_f64(res_86945);
                                cond_86947 = 0.0 <= arg_86944;
                                if (cond_86947) {
                                    char cond_86949;
                                    double res_86950;
                                    
                                    cond_86949 = res_86946 < arg_86944;
                                    if (cond_86949) {
                                        res_86950 = res_86946;
                                    } else {
                                        res_86950 = arg_86944;
                                    }
                                    res_86948 = res_86950;
                                } else {
                                    char cond_86951;
                                    double res_86952;
                                    
                                    cond_86951 = arg_86944 < res_86946;
                                    if (cond_86951) {
                                        int64_t res_86953;
                                        double res_86954;
                                        
                                        res_86953 = res_86945 - 1;
                                        res_86954 = sitofp_i64_f64(res_86953);
                                        res_86952 = res_86954;
                                    } else {
                                        res_86952 = arg_86944;
                                    }
                                    res_86948 = res_86952;
                                }
                                arg_86955 = res_86837 / delta_73922;
                                res_86956 = fptosi_f64_i64(arg_86955);
                                res_86957 = sitofp_i64_f64(res_86956);
                                cond_86958 = 0.0 <= arg_86955;
                                if (cond_86958) {
                                    char cond_86960;
                                    double res_86961;
                                    
                                    cond_86960 = res_86957 < arg_86955;
                                    if (cond_86960) {
                                        res_86961 = res_86957;
                                    } else {
                                        res_86961 = arg_86955;
                                    }
                                    res_86959 = res_86961;
                                } else {
                                    char cond_86962;
                                    double res_86963;
                                    
                                    cond_86962 = arg_86955 < res_86957;
                                    if (cond_86962) {
                                        int64_t res_86964;
                                        double res_86965;
                                        
                                        res_86964 = res_86956 - 1;
                                        res_86965 = sitofp_i64_f64(res_86964);
                                        res_86963 = res_86965;
                                    } else {
                                        res_86963 = arg_86955;
                                    }
                                    res_86959 = res_86963;
                                }
                                res_86919 = res_86948;
                                res_86920 = res_86959;
                            }
                            res_86917 = res_86919;
                            res_86918 = res_86920;
                        }
                        res_86907 = res_86917;
                        res_86908 = res_86918;
                        res_86909 = 0.0;
                        res_86910 = x_86915;
                        res_86911 = cond_86916;
                    } else {
                        double arg_86966;
                        double arg_86967;
                        double x_86968;
                        double y_86969;
                        double res_86970;
                        double y_86971;
                        double res_86972;
                        double x_86973;
                        double res_86974;
                        double x_86975;
                        double x_86976;
                        double res_86977;
                        double x_86978;
                        double res_86979;
                        double x_86980;
                        double res_86981;
                        char cond_86982;
                        char res_86983;
                        char x_86984;
                        char cond_86985;
                        char res_86986;
                        char x_86987;
                        char x_86988;
                        char y_86989;
                        char res_86990;
                        char cond_86991;
                        char res_86992;
                        char x_86993;
                        double res_86994;
                        double res_86995;
                        double res_86996;
                        double res_86997;
                        char res_86998;
                        char res_86999;
                        double x_87654;
                        double x_87655;
                        double x_87656;
                        double y_87657;
                        double x_87658;
                        double x_87659;
                        double res_87660;
                        
                        arg_86966 = eAngles_zzip_res_elem_87703 + 270.0;
                        arg_86967 = 1.7453292519943295e-2 * arg_86966;
                        x_86968 = futrts_sin64(arg_86967);
                        y_86969 = futrts_cos64(arg_86967);
                        res_86970 = x_86968 / y_86969;
                        y_86971 = res_86836 * res_86970;
                        res_86972 = res_86837 - y_86971;
                        x_86973 = gridHalfWidth_73921 - res_86972;
                        res_86974 = x_86973 / res_86970;
                        x_86975 = 0.0 - gridHalfWidth_73921;
                        x_86976 = x_86975 - res_86972;
                        res_86977 = x_86976 / res_86970;
                        x_86978 = res_86970 * gridHalfWidth_73921;
                        res_86979 = x_86978 + res_86972;
                        x_86980 = res_86970 * x_86975;
                        res_86981 = x_86980 + res_86972;
                        cond_86982 = 45.0 < eAngles_zzip_res_elem_87703;
                        res_86983 = eAngles_zzip_res_elem_87703 <= 135.0;
                        x_86984 = cond_86982 && res_86983;
                        cond_86985 = 225.0 <= eAngles_zzip_res_elem_87703;
                        res_86986 = eAngles_zzip_res_elem_87703 <= 315.0;
                        x_86987 = cond_86985 && res_86986;
                        x_86988 = !x_86984;
                        y_86989 = x_86988 && x_86987;
                        res_86990 = x_86984 || y_86989;
                        cond_86991 = 0.0 < eAngles_zzip_res_elem_87703;
                        res_86992 = eAngles_zzip_res_elem_87703 < 90.0;
                        x_86993 = cond_86991 && res_86992;
                        if (x_86993) {
                            char cond_87000;
                            char res_87001;
                            char x_87002;
                            char y_87003;
                            char cond_87004;
                            double res_87005;
                            double res_87006;
                            char cond_87014;
                            char cond_87015;
                            char eq_87016;
                            double res_87017;
                            double res_87018;
                            double res_87019;
                            double res_87020;
                            char res_87021;
                            
                            cond_87000 = gridHalfWidth_73921 < res_86977;
                            res_87001 = res_86977 < x_86975;
                            x_87002 = !cond_87000;
                            y_87003 = x_87002 && res_87001;
                            cond_87004 = cond_87000 || y_87003;
                            if (cond_87004) {
                                char cond_87007;
                                char res_87008;
                                char x_87009;
                                char y_87010;
                                char cond_87011;
                                double res_87012;
                                double res_87013;
                                
                                cond_87007 = gridHalfWidth_73921 < res_86979;
                                res_87008 = res_86979 < x_86975;
                                x_87009 = !cond_87007;
                                y_87010 = x_87009 && res_87008;
                                cond_87011 = cond_87007 || y_87010;
                                if (cond_87011) {
                                    res_87012 = 0.0;
                                } else {
                                    res_87012 = gridHalfWidth_73921;
                                }
                                if (cond_87011) {
                                    res_87013 = 0.0;
                                } else {
                                    res_87013 = res_86979;
                                }
                                res_87005 = res_87012;
                                res_87006 = res_87013;
                            } else {
                                res_87005 = res_86977;
                                res_87006 = x_86975;
                            }
                            cond_87014 = res_87005 == 0.0;
                            cond_87015 = res_87006 == 0.0;
                            eq_87016 = cond_87014 && cond_87015;
                            if (eq_87016) {
                                res_87017 = 0.0;
                                res_87018 = 0.0;
                                res_87019 = 0.0;
                                res_87020 = 0.0;
                                res_87021 = 1;
                            } else {
                                double res_87022;
                                double res_87023;
                                double res_87024;
                                double res_87025;
                                char res_87026;
                                
                                if (res_86990) {
                                    char cond_87027;
                                    char cond_87028;
                                    char eq_87029;
                                    char x_87030;
                                    double res_87031;
                                    double res_87032;
                                    double res_87056;
                                    int64_t res_87057;
                                    double res_87058;
                                    char cond_87059;
                                    double res_87060;
                                    char cond_87067;
                                    double res_87068;
                                    int64_t res_87083;
                                    double res_87084;
                                    char cond_87085;
                                    double res_87086;
                                    
                                    cond_87027 = res_87005 == res_86977;
                                    cond_87028 = res_87006 == x_86975;
                                    eq_87029 = cond_87027 && cond_87028;
                                    x_87030 = !eq_87029;
                                    if (eq_87029) {
                                        double arg_87033;
                                        int64_t res_87034;
                                        double res_87035;
                                        char cond_87036;
                                        double res_87037;
                                        double res_87044;
                                        double x_87051;
                                        double y_87052;
                                        double res_87053;
                                        
                                        arg_87033 = res_87005 / delta_73922;
                                        res_87034 = fptosi_f64_i64(arg_87033);
                                        res_87035 = sitofp_i64_f64(res_87034);
                                        cond_87036 = 0.0 <= arg_87033;
                                        if (cond_87036) {
                                            char cond_87038;
                                            double res_87039;
                                            
                                            cond_87038 = res_87035 < arg_87033;
                                            if (cond_87038) {
                                                int64_t res_87040;
                                                double res_87041;
                                                
                                                res_87040 = res_87034 + 1;
                                                res_87041 =
                                                    sitofp_i64_f64(res_87040);
                                                res_87039 = res_87041;
                                            } else {
                                                res_87039 = arg_87033;
                                            }
                                            res_87037 = res_87039;
                                        } else {
                                            char cond_87042;
                                            double res_87043;
                                            
                                            cond_87042 = arg_87033 < res_87035;
                                            if (cond_87042) {
                                                res_87043 = res_87035;
                                            } else {
                                                res_87043 = arg_87033;
                                            }
                                            res_87037 = res_87043;
                                        }
                                        if (cond_87036) {
                                            char cond_87045;
                                            double res_87046;
                                            
                                            cond_87045 = res_87035 < arg_87033;
                                            if (cond_87045) {
                                                int64_t res_87047;
                                                double res_87048;
                                                
                                                res_87047 = res_87034 + 1;
                                                res_87048 =
                                                    sitofp_i64_f64(res_87047);
                                                res_87046 = res_87048;
                                            } else {
                                                res_87046 = arg_87033;
                                            }
                                            res_87044 = res_87046;
                                        } else {
                                            char cond_87049;
                                            double res_87050;
                                            
                                            cond_87049 = arg_87033 < res_87035;
                                            if (cond_87049) {
                                                res_87050 = res_87035;
                                            } else {
                                                res_87050 = arg_87033;
                                            }
                                            res_87044 = res_87050;
                                        }
                                        x_87051 = res_86970 * res_87044;
                                        y_87052 = res_86972 / delta_73922;
                                        res_87053 = x_87051 + y_87052;
                                        res_87031 = res_87037;
                                        res_87032 = res_87053;
                                    } else {
                                        double res_87054;
                                        double res_87055;
                                        
                                        res_87054 = res_87005 / delta_73922;
                                        res_87055 = res_87006 / delta_73922;
                                        res_87031 = res_87054;
                                        res_87032 = res_87055;
                                    }
                                    res_87056 = res_87031 + 0.5;
                                    res_87057 = fptosi_f64_i64(res_87056);
                                    res_87058 = sitofp_i64_f64(res_87057);
                                    cond_87059 = 0.0 <= res_87056;
                                    if (cond_87059) {
                                        char cond_87061;
                                        double res_87062;
                                        
                                        cond_87061 = res_87058 < res_87056;
                                        if (cond_87061) {
                                            res_87062 = res_87058;
                                        } else {
                                            res_87062 = res_87056;
                                        }
                                        res_87060 = res_87062;
                                    } else {
                                        char cond_87063;
                                        double res_87064;
                                        
                                        cond_87063 = res_87056 < res_87058;
                                        if (cond_87063) {
                                            int64_t res_87065;
                                            double res_87066;
                                            
                                            res_87065 = res_87057 - 1;
                                            res_87066 =
                                                sitofp_i64_f64(res_87065);
                                            res_87064 = res_87066;
                                        } else {
                                            res_87064 = res_87056;
                                        }
                                        res_87060 = res_87064;
                                    }
                                    cond_87067 = res_87060 == res_87056;
                                    if (cond_87067) {
                                        int64_t res_87069;
                                        double res_87070;
                                        char cond_87071;
                                        double res_87072;
                                        int64_t x_87079;
                                        int64_t cond_87080;
                                        char cond_87081;
                                        double res_87082;
                                        
                                        res_87069 = fptosi_f64_i64(res_87031);
                                        res_87070 = sitofp_i64_f64(res_87069);
                                        cond_87071 = 0.0 <= res_87031;
                                        if (cond_87071) {
                                            char cond_87073;
                                            double res_87074;
                                            
                                            cond_87073 = res_87070 < res_87031;
                                            if (cond_87073) {
                                                res_87074 = res_87070;
                                            } else {
                                                res_87074 = res_87031;
                                            }
                                            res_87072 = res_87074;
                                        } else {
                                            char cond_87075;
                                            double res_87076;
                                            
                                            cond_87075 = res_87031 < res_87070;
                                            if (cond_87075) {
                                                int64_t res_87077;
                                                double res_87078;
                                                
                                                res_87077 = res_87069 - 1;
                                                res_87078 =
                                                    sitofp_i64_f64(res_87077);
                                                res_87076 = res_87078;
                                            } else {
                                                res_87076 = res_87031;
                                            }
                                            res_87072 = res_87076;
                                        }
                                        x_87079 = fptosi_f64_i64(res_87072);
                                        cond_87080 = smod64(x_87079, 2);
                                        cond_87081 = cond_87080 == 0;
                                        if (cond_87081) {
                                            res_87082 = res_87072;
                                        } else {
                                            res_87082 = res_87060;
                                        }
                                        res_87068 = res_87082;
                                    } else {
                                        res_87068 = res_87060;
                                    }
                                    res_87083 = fptosi_f64_i64(res_87032);
                                    res_87084 = sitofp_i64_f64(res_87083);
                                    cond_87085 = 0.0 <= res_87032;
                                    if (cond_87085) {
                                        char cond_87087;
                                        double res_87088;
                                        
                                        cond_87087 = res_87084 < res_87032;
                                        if (cond_87087) {
                                            res_87088 = res_87084;
                                        } else {
                                            res_87088 = res_87032;
                                        }
                                        res_87086 = res_87088;
                                    } else {
                                        char cond_87089;
                                        double res_87090;
                                        
                                        cond_87089 = res_87032 < res_87084;
                                        if (cond_87089) {
                                            int64_t res_87091;
                                            double res_87092;
                                            
                                            res_87091 = res_87083 - 1;
                                            res_87092 =
                                                sitofp_i64_f64(res_87091);
                                            res_87090 = res_87092;
                                        } else {
                                            res_87090 = res_87032;
                                        }
                                        res_87086 = res_87090;
                                    }
                                    res_87022 = res_87031;
                                    res_87023 = res_87032;
                                    res_87024 = res_87068;
                                    res_87025 = res_87086;
                                    res_87026 = x_87030;
                                } else {
                                    char cond_87093;
                                    char cond_87094;
                                    char eq_87095;
                                    char x_87096;
                                    double res_87097;
                                    double res_87098;
                                    int64_t res_87122;
                                    double res_87123;
                                    char cond_87124;
                                    double res_87125;
                                    double res_87132;
                                    int64_t res_87133;
                                    double res_87134;
                                    char cond_87135;
                                    double res_87136;
                                    char cond_87143;
                                    double res_87144;
                                    
                                    cond_87093 = res_87005 ==
                                        gridHalfWidth_73921;
                                    cond_87094 = res_87006 == res_86979;
                                    eq_87095 = cond_87093 && cond_87094;
                                    x_87096 = !eq_87095;
                                    if (eq_87095) {
                                        double arg_87099;
                                        int64_t res_87100;
                                        double res_87101;
                                        char cond_87102;
                                        double res_87103;
                                        double y_87110;
                                        double x_87111;
                                        double res_87112;
                                        double res_87113;
                                        
                                        arg_87099 = res_87006 / delta_73922;
                                        res_87100 = fptosi_f64_i64(arg_87099);
                                        res_87101 = sitofp_i64_f64(res_87100);
                                        cond_87102 = 0.0 <= arg_87099;
                                        if (cond_87102) {
                                            char cond_87104;
                                            double res_87105;
                                            
                                            cond_87104 = res_87101 < arg_87099;
                                            if (cond_87104) {
                                                res_87105 = res_87101;
                                            } else {
                                                res_87105 = arg_87099;
                                            }
                                            res_87103 = res_87105;
                                        } else {
                                            char cond_87106;
                                            double res_87107;
                                            
                                            cond_87106 = arg_87099 < res_87101;
                                            if (cond_87106) {
                                                int64_t res_87108;
                                                double res_87109;
                                                
                                                res_87108 = res_87100 - 1;
                                                res_87109 =
                                                    sitofp_i64_f64(res_87108);
                                                res_87107 = res_87109;
                                            } else {
                                                res_87107 = arg_87099;
                                            }
                                            res_87103 = res_87107;
                                        }
                                        y_87110 = res_86972 / delta_73922;
                                        x_87111 = res_87103 - y_87110;
                                        res_87112 = x_87111 / res_86970;
                                        if (cond_87102) {
                                            char cond_87114;
                                            double res_87115;
                                            
                                            cond_87114 = res_87101 < arg_87099;
                                            if (cond_87114) {
                                                res_87115 = res_87101;
                                            } else {
                                                res_87115 = arg_87099;
                                            }
                                            res_87113 = res_87115;
                                        } else {
                                            char cond_87116;
                                            double res_87117;
                                            
                                            cond_87116 = arg_87099 < res_87101;
                                            if (cond_87116) {
                                                int64_t res_87118;
                                                double res_87119;
                                                
                                                res_87118 = res_87100 - 1;
                                                res_87119 =
                                                    sitofp_i64_f64(res_87118);
                                                res_87117 = res_87119;
                                            } else {
                                                res_87117 = arg_87099;
                                            }
                                            res_87113 = res_87117;
                                        }
                                        res_87097 = res_87112;
                                        res_87098 = res_87113;
                                    } else {
                                        double res_87120;
                                        double res_87121;
                                        
                                        res_87120 = res_87005 / delta_73922;
                                        res_87121 = res_87006 / delta_73922;
                                        res_87097 = res_87120;
                                        res_87098 = res_87121;
                                    }
                                    res_87122 = fptosi_f64_i64(res_87097);
                                    res_87123 = sitofp_i64_f64(res_87122);
                                    cond_87124 = 0.0 <= res_87097;
                                    if (cond_87124) {
                                        char cond_87126;
                                        double res_87127;
                                        
                                        cond_87126 = res_87123 < res_87097;
                                        if (cond_87126) {
                                            int64_t res_87128;
                                            double res_87129;
                                            
                                            res_87128 = res_87122 + 1;
                                            res_87129 =
                                                sitofp_i64_f64(res_87128);
                                            res_87127 = res_87129;
                                        } else {
                                            res_87127 = res_87097;
                                        }
                                        res_87125 = res_87127;
                                    } else {
                                        char cond_87130;
                                        double res_87131;
                                        
                                        cond_87130 = res_87097 < res_87123;
                                        if (cond_87130) {
                                            res_87131 = res_87123;
                                        } else {
                                            res_87131 = res_87097;
                                        }
                                        res_87125 = res_87131;
                                    }
                                    res_87132 = res_87098 + 0.5;
                                    res_87133 = fptosi_f64_i64(res_87132);
                                    res_87134 = sitofp_i64_f64(res_87133);
                                    cond_87135 = 0.0 <= res_87132;
                                    if (cond_87135) {
                                        char cond_87137;
                                        double res_87138;
                                        
                                        cond_87137 = res_87134 < res_87132;
                                        if (cond_87137) {
                                            res_87138 = res_87134;
                                        } else {
                                            res_87138 = res_87132;
                                        }
                                        res_87136 = res_87138;
                                    } else {
                                        char cond_87139;
                                        double res_87140;
                                        
                                        cond_87139 = res_87132 < res_87134;
                                        if (cond_87139) {
                                            int64_t res_87141;
                                            double res_87142;
                                            
                                            res_87141 = res_87133 - 1;
                                            res_87142 =
                                                sitofp_i64_f64(res_87141);
                                            res_87140 = res_87142;
                                        } else {
                                            res_87140 = res_87132;
                                        }
                                        res_87136 = res_87140;
                                    }
                                    cond_87143 = res_87136 == res_87132;
                                    if (cond_87143) {
                                        int64_t res_87145;
                                        double res_87146;
                                        char cond_87147;
                                        double res_87148;
                                        int64_t x_87155;
                                        int64_t cond_87156;
                                        char cond_87157;
                                        double res_87158;
                                        
                                        res_87145 = fptosi_f64_i64(res_87098);
                                        res_87146 = sitofp_i64_f64(res_87145);
                                        cond_87147 = 0.0 <= res_87098;
                                        if (cond_87147) {
                                            char cond_87149;
                                            double res_87150;
                                            
                                            cond_87149 = res_87146 < res_87098;
                                            if (cond_87149) {
                                                res_87150 = res_87146;
                                            } else {
                                                res_87150 = res_87098;
                                            }
                                            res_87148 = res_87150;
                                        } else {
                                            char cond_87151;
                                            double res_87152;
                                            
                                            cond_87151 = res_87098 < res_87146;
                                            if (cond_87151) {
                                                int64_t res_87153;
                                                double res_87154;
                                                
                                                res_87153 = res_87145 - 1;
                                                res_87154 =
                                                    sitofp_i64_f64(res_87153);
                                                res_87152 = res_87154;
                                            } else {
                                                res_87152 = res_87098;
                                            }
                                            res_87148 = res_87152;
                                        }
                                        x_87155 = fptosi_f64_i64(res_87148);
                                        cond_87156 = smod64(x_87155, 2);
                                        cond_87157 = cond_87156 == 0;
                                        if (cond_87157) {
                                            res_87158 = res_87148;
                                        } else {
                                            res_87158 = res_87136;
                                        }
                                        res_87144 = res_87158;
                                    } else {
                                        res_87144 = res_87136;
                                    }
                                    res_87022 = res_87097;
                                    res_87023 = res_87098;
                                    res_87024 = res_87125;
                                    res_87025 = res_87144;
                                    res_87026 = x_87096;
                                }
                                res_87017 = res_87022;
                                res_87018 = res_87023;
                                res_87019 = res_87024;
                                res_87020 = res_87025;
                                res_87021 = res_87026;
                            }
                            res_86994 = res_87017;
                            res_86995 = res_87018;
                            res_86996 = res_87019;
                            res_86997 = res_87020;
                            res_86998 = res_87021;
                            res_86999 = eq_87016;
                        } else {
                            char cond_87159;
                            char res_87160;
                            char x_87161;
                            double res_87162;
                            double res_87163;
                            double res_87164;
                            double res_87165;
                            char res_87166;
                            char res_87167;
                            
                            cond_87159 = 90.0 < eAngles_zzip_res_elem_87703;
                            res_87160 = eAngles_zzip_res_elem_87703 < 180.0;
                            x_87161 = cond_87159 && res_87160;
                            if (x_87161) {
                                char cond_87168;
                                char res_87169;
                                char x_87170;
                                char y_87171;
                                char cond_87172;
                                double res_87173;
                                double res_87174;
                                char cond_87182;
                                char cond_87183;
                                char eq_87184;
                                double res_87185;
                                double res_87186;
                                double res_87187;
                                double res_87188;
                                char res_87189;
                                
                                cond_87168 = gridHalfWidth_73921 < res_86974;
                                res_87169 = res_86974 < x_86975;
                                x_87170 = !cond_87168;
                                y_87171 = x_87170 && res_87169;
                                cond_87172 = cond_87168 || y_87171;
                                if (cond_87172) {
                                    char cond_87175;
                                    char res_87176;
                                    char x_87177;
                                    char y_87178;
                                    char cond_87179;
                                    double res_87180;
                                    double res_87181;
                                    
                                    cond_87175 = gridHalfWidth_73921 <
                                        res_86979;
                                    res_87176 = res_86979 < x_86975;
                                    x_87177 = !cond_87175;
                                    y_87178 = x_87177 && res_87176;
                                    cond_87179 = cond_87175 || y_87178;
                                    if (cond_87179) {
                                        res_87180 = 0.0;
                                    } else {
                                        res_87180 = gridHalfWidth_73921;
                                    }
                                    if (cond_87179) {
                                        res_87181 = 0.0;
                                    } else {
                                        res_87181 = res_86979;
                                    }
                                    res_87173 = res_87180;
                                    res_87174 = res_87181;
                                } else {
                                    res_87173 = res_86974;
                                    res_87174 = gridHalfWidth_73921;
                                }
                                cond_87182 = res_87173 == 0.0;
                                cond_87183 = res_87174 == 0.0;
                                eq_87184 = cond_87182 && cond_87183;
                                if (eq_87184) {
                                    res_87185 = 0.0;
                                    res_87186 = 0.0;
                                    res_87187 = 0.0;
                                    res_87188 = 0.0;
                                    res_87189 = 1;
                                } else {
                                    double res_87190;
                                    double res_87191;
                                    double res_87192;
                                    double res_87193;
                                    char res_87194;
                                    
                                    if (res_86990) {
                                        char cond_87195;
                                        char cond_87196;
                                        char eq_87197;
                                        char x_87198;
                                        double res_87199;
                                        double res_87200;
                                        double res_87224;
                                        int64_t res_87225;
                                        double res_87226;
                                        char cond_87227;
                                        double res_87228;
                                        char cond_87235;
                                        double res_87236;
                                        int64_t res_87251;
                                        double res_87252;
                                        char cond_87253;
                                        double res_87254;
                                        
                                        cond_87195 = res_87173 == res_86974;
                                        cond_87196 = res_87174 ==
                                            gridHalfWidth_73921;
                                        eq_87197 = cond_87195 && cond_87196;
                                        x_87198 = !eq_87197;
                                        if (eq_87197) {
                                            double arg_87201;
                                            int64_t res_87202;
                                            double res_87203;
                                            char cond_87204;
                                            double res_87205;
                                            double res_87212;
                                            double x_87219;
                                            double y_87220;
                                            double res_87221;
                                            
                                            arg_87201 = res_87173 / delta_73922;
                                            res_87202 =
                                                fptosi_f64_i64(arg_87201);
                                            res_87203 =
                                                sitofp_i64_f64(res_87202);
                                            cond_87204 = 0.0 <= arg_87201;
                                            if (cond_87204) {
                                                char cond_87206;
                                                double res_87207;
                                                
                                                cond_87206 = res_87203 <
                                                    arg_87201;
                                                if (cond_87206) {
                                                    int64_t res_87208;
                                                    double res_87209;
                                                    
                                                    res_87208 = res_87202 + 1;
                                                    res_87209 =
                                                        sitofp_i64_f64(res_87208);
                                                    res_87207 = res_87209;
                                                } else {
                                                    res_87207 = arg_87201;
                                                }
                                                res_87205 = res_87207;
                                            } else {
                                                char cond_87210;
                                                double res_87211;
                                                
                                                cond_87210 = arg_87201 <
                                                    res_87203;
                                                if (cond_87210) {
                                                    res_87211 = res_87203;
                                                } else {
                                                    res_87211 = arg_87201;
                                                }
                                                res_87205 = res_87211;
                                            }
                                            if (cond_87204) {
                                                char cond_87213;
                                                double res_87214;
                                                
                                                cond_87213 = res_87203 <
                                                    arg_87201;
                                                if (cond_87213) {
                                                    int64_t res_87215;
                                                    double res_87216;
                                                    
                                                    res_87215 = res_87202 + 1;
                                                    res_87216 =
                                                        sitofp_i64_f64(res_87215);
                                                    res_87214 = res_87216;
                                                } else {
                                                    res_87214 = arg_87201;
                                                }
                                                res_87212 = res_87214;
                                            } else {
                                                char cond_87217;
                                                double res_87218;
                                                
                                                cond_87217 = arg_87201 <
                                                    res_87203;
                                                if (cond_87217) {
                                                    res_87218 = res_87203;
                                                } else {
                                                    res_87218 = arg_87201;
                                                }
                                                res_87212 = res_87218;
                                            }
                                            x_87219 = res_86970 * res_87212;
                                            y_87220 = res_86972 / delta_73922;
                                            res_87221 = x_87219 + y_87220;
                                            res_87199 = res_87205;
                                            res_87200 = res_87221;
                                        } else {
                                            double res_87222;
                                            double res_87223;
                                            
                                            res_87222 = res_87173 / delta_73922;
                                            res_87223 = res_87174 / delta_73922;
                                            res_87199 = res_87222;
                                            res_87200 = res_87223;
                                        }
                                        res_87224 = res_87199 + 0.5;
                                        res_87225 = fptosi_f64_i64(res_87224);
                                        res_87226 = sitofp_i64_f64(res_87225);
                                        cond_87227 = 0.0 <= res_87224;
                                        if (cond_87227) {
                                            char cond_87229;
                                            double res_87230;
                                            
                                            cond_87229 = res_87226 < res_87224;
                                            if (cond_87229) {
                                                res_87230 = res_87226;
                                            } else {
                                                res_87230 = res_87224;
                                            }
                                            res_87228 = res_87230;
                                        } else {
                                            char cond_87231;
                                            double res_87232;
                                            
                                            cond_87231 = res_87224 < res_87226;
                                            if (cond_87231) {
                                                int64_t res_87233;
                                                double res_87234;
                                                
                                                res_87233 = res_87225 - 1;
                                                res_87234 =
                                                    sitofp_i64_f64(res_87233);
                                                res_87232 = res_87234;
                                            } else {
                                                res_87232 = res_87224;
                                            }
                                            res_87228 = res_87232;
                                        }
                                        cond_87235 = res_87228 == res_87224;
                                        if (cond_87235) {
                                            int64_t res_87237;
                                            double res_87238;
                                            char cond_87239;
                                            double res_87240;
                                            int64_t x_87247;
                                            int64_t cond_87248;
                                            char cond_87249;
                                            double res_87250;
                                            
                                            res_87237 =
                                                fptosi_f64_i64(res_87199);
                                            res_87238 =
                                                sitofp_i64_f64(res_87237);
                                            cond_87239 = 0.0 <= res_87199;
                                            if (cond_87239) {
                                                char cond_87241;
                                                double res_87242;
                                                
                                                cond_87241 = res_87238 <
                                                    res_87199;
                                                if (cond_87241) {
                                                    res_87242 = res_87238;
                                                } else {
                                                    res_87242 = res_87199;
                                                }
                                                res_87240 = res_87242;
                                            } else {
                                                char cond_87243;
                                                double res_87244;
                                                
                                                cond_87243 = res_87199 <
                                                    res_87238;
                                                if (cond_87243) {
                                                    int64_t res_87245;
                                                    double res_87246;
                                                    
                                                    res_87245 = res_87237 - 1;
                                                    res_87246 =
                                                        sitofp_i64_f64(res_87245);
                                                    res_87244 = res_87246;
                                                } else {
                                                    res_87244 = res_87199;
                                                }
                                                res_87240 = res_87244;
                                            }
                                            x_87247 = fptosi_f64_i64(res_87240);
                                            cond_87248 = smod64(x_87247, 2);
                                            cond_87249 = cond_87248 == 0;
                                            if (cond_87249) {
                                                res_87250 = res_87240;
                                            } else {
                                                res_87250 = res_87228;
                                            }
                                            res_87236 = res_87250;
                                        } else {
                                            res_87236 = res_87228;
                                        }
                                        res_87251 = fptosi_f64_i64(res_87200);
                                        res_87252 = sitofp_i64_f64(res_87251);
                                        cond_87253 = 0.0 <= res_87200;
                                        if (cond_87253) {
                                            char cond_87255;
                                            double res_87256;
                                            
                                            cond_87255 = res_87252 < res_87200;
                                            if (cond_87255) {
                                                int64_t res_87257;
                                                double res_87258;
                                                
                                                res_87257 = res_87251 + 1;
                                                res_87258 =
                                                    sitofp_i64_f64(res_87257);
                                                res_87256 = res_87258;
                                            } else {
                                                res_87256 = res_87200;
                                            }
                                            res_87254 = res_87256;
                                        } else {
                                            char cond_87259;
                                            double res_87260;
                                            
                                            cond_87259 = res_87200 < res_87252;
                                            if (cond_87259) {
                                                res_87260 = res_87252;
                                            } else {
                                                res_87260 = res_87200;
                                            }
                                            res_87254 = res_87260;
                                        }
                                        res_87190 = res_87199;
                                        res_87191 = res_87200;
                                        res_87192 = res_87236;
                                        res_87193 = res_87254;
                                        res_87194 = x_87198;
                                    } else {
                                        char cond_87261;
                                        char cond_87262;
                                        char eq_87263;
                                        char x_87264;
                                        double res_87265;
                                        double res_87266;
                                        int64_t res_87290;
                                        double res_87291;
                                        char cond_87292;
                                        double res_87293;
                                        double res_87300;
                                        int64_t res_87301;
                                        double res_87302;
                                        char cond_87303;
                                        double res_87304;
                                        char cond_87311;
                                        double res_87312;
                                        
                                        cond_87261 = res_87173 ==
                                            gridHalfWidth_73921;
                                        cond_87262 = res_87174 == res_86979;
                                        eq_87263 = cond_87261 && cond_87262;
                                        x_87264 = !eq_87263;
                                        if (eq_87263) {
                                            double arg_87267;
                                            int64_t res_87268;
                                            double res_87269;
                                            char cond_87270;
                                            double res_87271;
                                            double y_87278;
                                            double x_87279;
                                            double res_87280;
                                            double res_87281;
                                            
                                            arg_87267 = res_87174 / delta_73922;
                                            res_87268 =
                                                fptosi_f64_i64(arg_87267);
                                            res_87269 =
                                                sitofp_i64_f64(res_87268);
                                            cond_87270 = 0.0 <= arg_87267;
                                            if (cond_87270) {
                                                char cond_87272;
                                                double res_87273;
                                                
                                                cond_87272 = res_87269 <
                                                    arg_87267;
                                                if (cond_87272) {
                                                    int64_t res_87274;
                                                    double res_87275;
                                                    
                                                    res_87274 = res_87268 + 1;
                                                    res_87275 =
                                                        sitofp_i64_f64(res_87274);
                                                    res_87273 = res_87275;
                                                } else {
                                                    res_87273 = arg_87267;
                                                }
                                                res_87271 = res_87273;
                                            } else {
                                                char cond_87276;
                                                double res_87277;
                                                
                                                cond_87276 = arg_87267 <
                                                    res_87269;
                                                if (cond_87276) {
                                                    res_87277 = res_87269;
                                                } else {
                                                    res_87277 = arg_87267;
                                                }
                                                res_87271 = res_87277;
                                            }
                                            y_87278 = res_86972 / delta_73922;
                                            x_87279 = res_87271 - y_87278;
                                            res_87280 = x_87279 / res_86970;
                                            if (cond_87270) {
                                                char cond_87282;
                                                double res_87283;
                                                
                                                cond_87282 = res_87269 <
                                                    arg_87267;
                                                if (cond_87282) {
                                                    int64_t res_87284;
                                                    double res_87285;
                                                    
                                                    res_87284 = res_87268 + 1;
                                                    res_87285 =
                                                        sitofp_i64_f64(res_87284);
                                                    res_87283 = res_87285;
                                                } else {
                                                    res_87283 = arg_87267;
                                                }
                                                res_87281 = res_87283;
                                            } else {
                                                char cond_87286;
                                                double res_87287;
                                                
                                                cond_87286 = arg_87267 <
                                                    res_87269;
                                                if (cond_87286) {
                                                    res_87287 = res_87269;
                                                } else {
                                                    res_87287 = arg_87267;
                                                }
                                                res_87281 = res_87287;
                                            }
                                            res_87265 = res_87280;
                                            res_87266 = res_87281;
                                        } else {
                                            double res_87288;
                                            double res_87289;
                                            
                                            res_87288 = res_87173 / delta_73922;
                                            res_87289 = res_87174 / delta_73922;
                                            res_87265 = res_87288;
                                            res_87266 = res_87289;
                                        }
                                        res_87290 = fptosi_f64_i64(res_87265);
                                        res_87291 = sitofp_i64_f64(res_87290);
                                        cond_87292 = 0.0 <= res_87265;
                                        if (cond_87292) {
                                            char cond_87294;
                                            double res_87295;
                                            
                                            cond_87294 = res_87291 < res_87265;
                                            if (cond_87294) {
                                                int64_t res_87296;
                                                double res_87297;
                                                
                                                res_87296 = res_87290 + 1;
                                                res_87297 =
                                                    sitofp_i64_f64(res_87296);
                                                res_87295 = res_87297;
                                            } else {
                                                res_87295 = res_87265;
                                            }
                                            res_87293 = res_87295;
                                        } else {
                                            char cond_87298;
                                            double res_87299;
                                            
                                            cond_87298 = res_87265 < res_87291;
                                            if (cond_87298) {
                                                res_87299 = res_87291;
                                            } else {
                                                res_87299 = res_87265;
                                            }
                                            res_87293 = res_87299;
                                        }
                                        res_87300 = res_87266 + 0.5;
                                        res_87301 = fptosi_f64_i64(res_87300);
                                        res_87302 = sitofp_i64_f64(res_87301);
                                        cond_87303 = 0.0 <= res_87300;
                                        if (cond_87303) {
                                            char cond_87305;
                                            double res_87306;
                                            
                                            cond_87305 = res_87302 < res_87300;
                                            if (cond_87305) {
                                                res_87306 = res_87302;
                                            } else {
                                                res_87306 = res_87300;
                                            }
                                            res_87304 = res_87306;
                                        } else {
                                            char cond_87307;
                                            double res_87308;
                                            
                                            cond_87307 = res_87300 < res_87302;
                                            if (cond_87307) {
                                                int64_t res_87309;
                                                double res_87310;
                                                
                                                res_87309 = res_87301 - 1;
                                                res_87310 =
                                                    sitofp_i64_f64(res_87309);
                                                res_87308 = res_87310;
                                            } else {
                                                res_87308 = res_87300;
                                            }
                                            res_87304 = res_87308;
                                        }
                                        cond_87311 = res_87304 == res_87300;
                                        if (cond_87311) {
                                            int64_t res_87313;
                                            double res_87314;
                                            char cond_87315;
                                            double res_87316;
                                            int64_t x_87323;
                                            int64_t cond_87324;
                                            char cond_87325;
                                            double res_87326;
                                            
                                            res_87313 =
                                                fptosi_f64_i64(res_87266);
                                            res_87314 =
                                                sitofp_i64_f64(res_87313);
                                            cond_87315 = 0.0 <= res_87266;
                                            if (cond_87315) {
                                                char cond_87317;
                                                double res_87318;
                                                
                                                cond_87317 = res_87314 <
                                                    res_87266;
                                                if (cond_87317) {
                                                    res_87318 = res_87314;
                                                } else {
                                                    res_87318 = res_87266;
                                                }
                                                res_87316 = res_87318;
                                            } else {
                                                char cond_87319;
                                                double res_87320;
                                                
                                                cond_87319 = res_87266 <
                                                    res_87314;
                                                if (cond_87319) {
                                                    int64_t res_87321;
                                                    double res_87322;
                                                    
                                                    res_87321 = res_87313 - 1;
                                                    res_87322 =
                                                        sitofp_i64_f64(res_87321);
                                                    res_87320 = res_87322;
                                                } else {
                                                    res_87320 = res_87266;
                                                }
                                                res_87316 = res_87320;
                                            }
                                            x_87323 = fptosi_f64_i64(res_87316);
                                            cond_87324 = smod64(x_87323, 2);
                                            cond_87325 = cond_87324 == 0;
                                            if (cond_87325) {
                                                res_87326 = res_87316;
                                            } else {
                                                res_87326 = res_87304;
                                            }
                                            res_87312 = res_87326;
                                        } else {
                                            res_87312 = res_87304;
                                        }
                                        res_87190 = res_87265;
                                        res_87191 = res_87266;
                                        res_87192 = res_87293;
                                        res_87193 = res_87312;
                                        res_87194 = x_87264;
                                    }
                                    res_87185 = res_87190;
                                    res_87186 = res_87191;
                                    res_87187 = res_87192;
                                    res_87188 = res_87193;
                                    res_87189 = res_87194;
                                }
                                res_87162 = res_87185;
                                res_87163 = res_87186;
                                res_87164 = res_87187;
                                res_87165 = res_87188;
                                res_87166 = res_87189;
                                res_87167 = eq_87184;
                            } else {
                                char cond_87327;
                                char res_87328;
                                char x_87329;
                                double res_87330;
                                double res_87331;
                                double res_87332;
                                double res_87333;
                                char res_87334;
                                char res_87335;
                                
                                cond_87327 = 180.0 <
                                    eAngles_zzip_res_elem_87703;
                                res_87328 = eAngles_zzip_res_elem_87703 < 270.0;
                                x_87329 = cond_87327 && res_87328;
                                if (x_87329) {
                                    char cond_87336;
                                    char res_87337;
                                    char x_87338;
                                    char y_87339;
                                    char cond_87340;
                                    double res_87341;
                                    double res_87342;
                                    char cond_87350;
                                    char cond_87351;
                                    char eq_87352;
                                    double res_87353;
                                    double res_87354;
                                    double res_87355;
                                    double res_87356;
                                    char res_87357;
                                    
                                    cond_87336 = gridHalfWidth_73921 <
                                        res_86974;
                                    res_87337 = res_86974 < x_86975;
                                    x_87338 = !cond_87336;
                                    y_87339 = x_87338 && res_87337;
                                    cond_87340 = cond_87336 || y_87339;
                                    if (cond_87340) {
                                        char cond_87343;
                                        char res_87344;
                                        char x_87345;
                                        char y_87346;
                                        char cond_87347;
                                        double res_87348;
                                        double res_87349;
                                        
                                        cond_87343 = gridHalfWidth_73921 <
                                            res_86981;
                                        res_87344 = res_86981 < x_86975;
                                        x_87345 = !cond_87343;
                                        y_87346 = x_87345 && res_87344;
                                        cond_87347 = cond_87343 || y_87346;
                                        if (cond_87347) {
                                            res_87348 = 0.0;
                                        } else {
                                            res_87348 = x_86975;
                                        }
                                        if (cond_87347) {
                                            res_87349 = 0.0;
                                        } else {
                                            res_87349 = res_86981;
                                        }
                                        res_87341 = res_87348;
                                        res_87342 = res_87349;
                                    } else {
                                        res_87341 = res_86974;
                                        res_87342 = gridHalfWidth_73921;
                                    }
                                    cond_87350 = res_87341 == 0.0;
                                    cond_87351 = res_87342 == 0.0;
                                    eq_87352 = cond_87350 && cond_87351;
                                    if (eq_87352) {
                                        res_87353 = 0.0;
                                        res_87354 = 0.0;
                                        res_87355 = 0.0;
                                        res_87356 = 0.0;
                                        res_87357 = 1;
                                    } else {
                                        double res_87358;
                                        double res_87359;
                                        double res_87360;
                                        double res_87361;
                                        char res_87362;
                                        
                                        if (res_86990) {
                                            char cond_87363;
                                            char cond_87364;
                                            char eq_87365;
                                            char x_87366;
                                            double res_87367;
                                            double res_87368;
                                            double res_87392;
                                            int64_t res_87393;
                                            double res_87394;
                                            char cond_87395;
                                            double res_87396;
                                            char cond_87403;
                                            double res_87404;
                                            int64_t res_87419;
                                            double res_87420;
                                            char cond_87421;
                                            double res_87422;
                                            
                                            cond_87363 = res_87341 == res_86974;
                                            cond_87364 = res_87342 ==
                                                gridHalfWidth_73921;
                                            eq_87365 = cond_87363 && cond_87364;
                                            x_87366 = !eq_87365;
                                            if (eq_87365) {
                                                double arg_87369;
                                                int64_t res_87370;
                                                double res_87371;
                                                char cond_87372;
                                                double res_87373;
                                                double res_87380;
                                                double x_87387;
                                                double y_87388;
                                                double res_87389;
                                                
                                                arg_87369 = res_87341 /
                                                    delta_73922;
                                                res_87370 =
                                                    fptosi_f64_i64(arg_87369);
                                                res_87371 =
                                                    sitofp_i64_f64(res_87370);
                                                cond_87372 = 0.0 <= arg_87369;
                                                if (cond_87372) {
                                                    char cond_87374;
                                                    double res_87375;
                                                    
                                                    cond_87374 = res_87371 <
                                                        arg_87369;
                                                    if (cond_87374) {
                                                        res_87375 = res_87371;
                                                    } else {
                                                        res_87375 = arg_87369;
                                                    }
                                                    res_87373 = res_87375;
                                                } else {
                                                    char cond_87376;
                                                    double res_87377;
                                                    
                                                    cond_87376 = arg_87369 <
                                                        res_87371;
                                                    if (cond_87376) {
                                                        int64_t res_87378;
                                                        double res_87379;
                                                        
                                                        res_87378 = res_87370 -
                                                            1;
                                                        res_87379 =
                                                            sitofp_i64_f64(res_87378);
                                                        res_87377 = res_87379;
                                                    } else {
                                                        res_87377 = arg_87369;
                                                    }
                                                    res_87373 = res_87377;
                                                }
                                                if (cond_87372) {
                                                    char cond_87381;
                                                    double res_87382;
                                                    
                                                    cond_87381 = res_87371 <
                                                        arg_87369;
                                                    if (cond_87381) {
                                                        res_87382 = res_87371;
                                                    } else {
                                                        res_87382 = arg_87369;
                                                    }
                                                    res_87380 = res_87382;
                                                } else {
                                                    char cond_87383;
                                                    double res_87384;
                                                    
                                                    cond_87383 = arg_87369 <
                                                        res_87371;
                                                    if (cond_87383) {
                                                        int64_t res_87385;
                                                        double res_87386;
                                                        
                                                        res_87385 = res_87370 -
                                                            1;
                                                        res_87386 =
                                                            sitofp_i64_f64(res_87385);
                                                        res_87384 = res_87386;
                                                    } else {
                                                        res_87384 = arg_87369;
                                                    }
                                                    res_87380 = res_87384;
                                                }
                                                x_87387 = res_86970 * res_87380;
                                                y_87388 = res_86972 /
                                                    delta_73922;
                                                res_87389 = x_87387 + y_87388;
                                                res_87367 = res_87373;
                                                res_87368 = res_87389;
                                            } else {
                                                double res_87390;
                                                double res_87391;
                                                
                                                res_87390 = res_87341 /
                                                    delta_73922;
                                                res_87391 = res_87342 /
                                                    delta_73922;
                                                res_87367 = res_87390;
                                                res_87368 = res_87391;
                                            }
                                            res_87392 = res_87367 + 0.5;
                                            res_87393 =
                                                fptosi_f64_i64(res_87392);
                                            res_87394 =
                                                sitofp_i64_f64(res_87393);
                                            cond_87395 = 0.0 <= res_87392;
                                            if (cond_87395) {
                                                char cond_87397;
                                                double res_87398;
                                                
                                                cond_87397 = res_87394 <
                                                    res_87392;
                                                if (cond_87397) {
                                                    res_87398 = res_87394;
                                                } else {
                                                    res_87398 = res_87392;
                                                }
                                                res_87396 = res_87398;
                                            } else {
                                                char cond_87399;
                                                double res_87400;
                                                
                                                cond_87399 = res_87392 <
                                                    res_87394;
                                                if (cond_87399) {
                                                    int64_t res_87401;
                                                    double res_87402;
                                                    
                                                    res_87401 = res_87393 - 1;
                                                    res_87402 =
                                                        sitofp_i64_f64(res_87401);
                                                    res_87400 = res_87402;
                                                } else {
                                                    res_87400 = res_87392;
                                                }
                                                res_87396 = res_87400;
                                            }
                                            cond_87403 = res_87396 == res_87392;
                                            if (cond_87403) {
                                                int64_t res_87405;
                                                double res_87406;
                                                char cond_87407;
                                                double res_87408;
                                                int64_t x_87415;
                                                int64_t cond_87416;
                                                char cond_87417;
                                                double res_87418;
                                                
                                                res_87405 =
                                                    fptosi_f64_i64(res_87367);
                                                res_87406 =
                                                    sitofp_i64_f64(res_87405);
                                                cond_87407 = 0.0 <= res_87367;
                                                if (cond_87407) {
                                                    char cond_87409;
                                                    double res_87410;
                                                    
                                                    cond_87409 = res_87406 <
                                                        res_87367;
                                                    if (cond_87409) {
                                                        res_87410 = res_87406;
                                                    } else {
                                                        res_87410 = res_87367;
                                                    }
                                                    res_87408 = res_87410;
                                                } else {
                                                    char cond_87411;
                                                    double res_87412;
                                                    
                                                    cond_87411 = res_87367 <
                                                        res_87406;
                                                    if (cond_87411) {
                                                        int64_t res_87413;
                                                        double res_87414;
                                                        
                                                        res_87413 = res_87405 -
                                                            1;
                                                        res_87414 =
                                                            sitofp_i64_f64(res_87413);
                                                        res_87412 = res_87414;
                                                    } else {
                                                        res_87412 = res_87367;
                                                    }
                                                    res_87408 = res_87412;
                                                }
                                                x_87415 =
                                                    fptosi_f64_i64(res_87408);
                                                cond_87416 = smod64(x_87415, 2);
                                                cond_87417 = cond_87416 == 0;
                                                if (cond_87417) {
                                                    res_87418 = res_87408;
                                                } else {
                                                    res_87418 = res_87396;
                                                }
                                                res_87404 = res_87418;
                                            } else {
                                                res_87404 = res_87396;
                                            }
                                            res_87419 =
                                                fptosi_f64_i64(res_87368);
                                            res_87420 =
                                                sitofp_i64_f64(res_87419);
                                            cond_87421 = 0.0 <= res_87368;
                                            if (cond_87421) {
                                                char cond_87423;
                                                double res_87424;
                                                
                                                cond_87423 = res_87420 <
                                                    res_87368;
                                                if (cond_87423) {
                                                    int64_t res_87425;
                                                    double res_87426;
                                                    
                                                    res_87425 = res_87419 + 1;
                                                    res_87426 =
                                                        sitofp_i64_f64(res_87425);
                                                    res_87424 = res_87426;
                                                } else {
                                                    res_87424 = res_87368;
                                                }
                                                res_87422 = res_87424;
                                            } else {
                                                char cond_87427;
                                                double res_87428;
                                                
                                                cond_87427 = res_87368 <
                                                    res_87420;
                                                if (cond_87427) {
                                                    res_87428 = res_87420;
                                                } else {
                                                    res_87428 = res_87368;
                                                }
                                                res_87422 = res_87428;
                                            }
                                            res_87358 = res_87367;
                                            res_87359 = res_87368;
                                            res_87360 = res_87404;
                                            res_87361 = res_87422;
                                            res_87362 = x_87366;
                                        } else {
                                            char cond_87429;
                                            char cond_87430;
                                            char eq_87431;
                                            char x_87432;
                                            double res_87433;
                                            double res_87434;
                                            int64_t res_87458;
                                            double res_87459;
                                            char cond_87460;
                                            double res_87461;
                                            double res_87468;
                                            int64_t res_87469;
                                            double res_87470;
                                            char cond_87471;
                                            double res_87472;
                                            char cond_87479;
                                            double res_87480;
                                            
                                            cond_87429 = res_87341 == x_86975;
                                            cond_87430 = res_87342 == res_86981;
                                            eq_87431 = cond_87429 && cond_87430;
                                            x_87432 = !eq_87431;
                                            if (eq_87431) {
                                                double arg_87435;
                                                int64_t res_87436;
                                                double res_87437;
                                                char cond_87438;
                                                double res_87439;
                                                double y_87446;
                                                double x_87447;
                                                double res_87448;
                                                double res_87449;
                                                
                                                arg_87435 = res_87342 /
                                                    delta_73922;
                                                res_87436 =
                                                    fptosi_f64_i64(arg_87435);
                                                res_87437 =
                                                    sitofp_i64_f64(res_87436);
                                                cond_87438 = 0.0 <= arg_87435;
                                                if (cond_87438) {
                                                    char cond_87440;
                                                    double res_87441;
                                                    
                                                    cond_87440 = res_87437 <
                                                        arg_87435;
                                                    if (cond_87440) {
                                                        int64_t res_87442;
                                                        double res_87443;
                                                        
                                                        res_87442 = res_87436 +
                                                            1;
                                                        res_87443 =
                                                            sitofp_i64_f64(res_87442);
                                                        res_87441 = res_87443;
                                                    } else {
                                                        res_87441 = arg_87435;
                                                    }
                                                    res_87439 = res_87441;
                                                } else {
                                                    char cond_87444;
                                                    double res_87445;
                                                    
                                                    cond_87444 = arg_87435 <
                                                        res_87437;
                                                    if (cond_87444) {
                                                        res_87445 = res_87437;
                                                    } else {
                                                        res_87445 = arg_87435;
                                                    }
                                                    res_87439 = res_87445;
                                                }
                                                y_87446 = res_86972 /
                                                    delta_73922;
                                                x_87447 = res_87439 - y_87446;
                                                res_87448 = x_87447 / res_86970;
                                                if (cond_87438) {
                                                    char cond_87450;
                                                    double res_87451;
                                                    
                                                    cond_87450 = res_87437 <
                                                        arg_87435;
                                                    if (cond_87450) {
                                                        int64_t res_87452;
                                                        double res_87453;
                                                        
                                                        res_87452 = res_87436 +
                                                            1;
                                                        res_87453 =
                                                            sitofp_i64_f64(res_87452);
                                                        res_87451 = res_87453;
                                                    } else {
                                                        res_87451 = arg_87435;
                                                    }
                                                    res_87449 = res_87451;
                                                } else {
                                                    char cond_87454;
                                                    double res_87455;
                                                    
                                                    cond_87454 = arg_87435 <
                                                        res_87437;
                                                    if (cond_87454) {
                                                        res_87455 = res_87437;
                                                    } else {
                                                        res_87455 = arg_87435;
                                                    }
                                                    res_87449 = res_87455;
                                                }
                                                res_87433 = res_87448;
                                                res_87434 = res_87449;
                                            } else {
                                                double res_87456;
                                                double res_87457;
                                                
                                                res_87456 = res_87341 /
                                                    delta_73922;
                                                res_87457 = res_87342 /
                                                    delta_73922;
                                                res_87433 = res_87456;
                                                res_87434 = res_87457;
                                            }
                                            res_87458 =
                                                fptosi_f64_i64(res_87433);
                                            res_87459 =
                                                sitofp_i64_f64(res_87458);
                                            cond_87460 = 0.0 <= res_87433;
                                            if (cond_87460) {
                                                char cond_87462;
                                                double res_87463;
                                                
                                                cond_87462 = res_87459 <
                                                    res_87433;
                                                if (cond_87462) {
                                                    res_87463 = res_87459;
                                                } else {
                                                    res_87463 = res_87433;
                                                }
                                                res_87461 = res_87463;
                                            } else {
                                                char cond_87464;
                                                double res_87465;
                                                
                                                cond_87464 = res_87433 <
                                                    res_87459;
                                                if (cond_87464) {
                                                    int64_t res_87466;
                                                    double res_87467;
                                                    
                                                    res_87466 = res_87458 - 1;
                                                    res_87467 =
                                                        sitofp_i64_f64(res_87466);
                                                    res_87465 = res_87467;
                                                } else {
                                                    res_87465 = res_87433;
                                                }
                                                res_87461 = res_87465;
                                            }
                                            res_87468 = res_87434 + 0.5;
                                            res_87469 =
                                                fptosi_f64_i64(res_87468);
                                            res_87470 =
                                                sitofp_i64_f64(res_87469);
                                            cond_87471 = 0.0 <= res_87468;
                                            if (cond_87471) {
                                                char cond_87473;
                                                double res_87474;
                                                
                                                cond_87473 = res_87470 <
                                                    res_87468;
                                                if (cond_87473) {
                                                    res_87474 = res_87470;
                                                } else {
                                                    res_87474 = res_87468;
                                                }
                                                res_87472 = res_87474;
                                            } else {
                                                char cond_87475;
                                                double res_87476;
                                                
                                                cond_87475 = res_87468 <
                                                    res_87470;
                                                if (cond_87475) {
                                                    int64_t res_87477;
                                                    double res_87478;
                                                    
                                                    res_87477 = res_87469 - 1;
                                                    res_87478 =
                                                        sitofp_i64_f64(res_87477);
                                                    res_87476 = res_87478;
                                                } else {
                                                    res_87476 = res_87468;
                                                }
                                                res_87472 = res_87476;
                                            }
                                            cond_87479 = res_87472 == res_87468;
                                            if (cond_87479) {
                                                int64_t res_87481;
                                                double res_87482;
                                                char cond_87483;
                                                double res_87484;
                                                int64_t x_87491;
                                                int64_t cond_87492;
                                                char cond_87493;
                                                double res_87494;
                                                
                                                res_87481 =
                                                    fptosi_f64_i64(res_87434);
                                                res_87482 =
                                                    sitofp_i64_f64(res_87481);
                                                cond_87483 = 0.0 <= res_87434;
                                                if (cond_87483) {
                                                    char cond_87485;
                                                    double res_87486;
                                                    
                                                    cond_87485 = res_87482 <
                                                        res_87434;
                                                    if (cond_87485) {
                                                        res_87486 = res_87482;
                                                    } else {
                                                        res_87486 = res_87434;
                                                    }
                                                    res_87484 = res_87486;
                                                } else {
                                                    char cond_87487;
                                                    double res_87488;
                                                    
                                                    cond_87487 = res_87434 <
                                                        res_87482;
                                                    if (cond_87487) {
                                                        int64_t res_87489;
                                                        double res_87490;
                                                        
                                                        res_87489 = res_87481 -
                                                            1;
                                                        res_87490 =
                                                            sitofp_i64_f64(res_87489);
                                                        res_87488 = res_87490;
                                                    } else {
                                                        res_87488 = res_87434;
                                                    }
                                                    res_87484 = res_87488;
                                                }
                                                x_87491 =
                                                    fptosi_f64_i64(res_87484);
                                                cond_87492 = smod64(x_87491, 2);
                                                cond_87493 = cond_87492 == 0;
                                                if (cond_87493) {
                                                    res_87494 = res_87484;
                                                } else {
                                                    res_87494 = res_87472;
                                                }
                                                res_87480 = res_87494;
                                            } else {
                                                res_87480 = res_87472;
                                            }
                                            res_87358 = res_87433;
                                            res_87359 = res_87434;
                                            res_87360 = res_87461;
                                            res_87361 = res_87480;
                                            res_87362 = x_87432;
                                        }
                                        res_87353 = res_87358;
                                        res_87354 = res_87359;
                                        res_87355 = res_87360;
                                        res_87356 = res_87361;
                                        res_87357 = res_87362;
                                    }
                                    res_87330 = res_87353;
                                    res_87331 = res_87354;
                                    res_87332 = res_87355;
                                    res_87333 = res_87356;
                                    res_87334 = res_87357;
                                    res_87335 = eq_87352;
                                } else {
                                    char cond_87495;
                                    char res_87496;
                                    char x_87497;
                                    char y_87498;
                                    char cond_87499;
                                    double res_87500;
                                    double res_87501;
                                    char cond_87509;
                                    char cond_87510;
                                    char eq_87511;
                                    double res_87512;
                                    double res_87513;
                                    double res_87514;
                                    double res_87515;
                                    char res_87516;
                                    
                                    cond_87495 = gridHalfWidth_73921 <
                                        res_86977;
                                    res_87496 = res_86977 < x_86975;
                                    x_87497 = !cond_87495;
                                    y_87498 = x_87497 && res_87496;
                                    cond_87499 = cond_87495 || y_87498;
                                    if (cond_87499) {
                                        char cond_87502;
                                        char res_87503;
                                        char x_87504;
                                        char y_87505;
                                        char cond_87506;
                                        double res_87507;
                                        double res_87508;
                                        
                                        cond_87502 = gridHalfWidth_73921 <
                                            res_86981;
                                        res_87503 = res_86981 < x_86975;
                                        x_87504 = !cond_87502;
                                        y_87505 = x_87504 && res_87503;
                                        cond_87506 = cond_87502 || y_87505;
                                        if (cond_87506) {
                                            res_87507 = 0.0;
                                        } else {
                                            res_87507 = x_86975;
                                        }
                                        if (cond_87506) {
                                            res_87508 = 0.0;
                                        } else {
                                            res_87508 = res_86981;
                                        }
                                        res_87500 = res_87507;
                                        res_87501 = res_87508;
                                    } else {
                                        res_87500 = res_86977;
                                        res_87501 = x_86975;
                                    }
                                    cond_87509 = res_87500 == 0.0;
                                    cond_87510 = res_87501 == 0.0;
                                    eq_87511 = cond_87509 && cond_87510;
                                    if (eq_87511) {
                                        res_87512 = 0.0;
                                        res_87513 = 0.0;
                                        res_87514 = 0.0;
                                        res_87515 = 0.0;
                                        res_87516 = 1;
                                    } else {
                                        double res_87517;
                                        double res_87518;
                                        double res_87519;
                                        double res_87520;
                                        char res_87521;
                                        
                                        if (res_86990) {
                                            char cond_87522;
                                            char cond_87523;
                                            char eq_87524;
                                            char x_87525;
                                            double res_87526;
                                            double res_87527;
                                            double res_87551;
                                            int64_t res_87552;
                                            double res_87553;
                                            char cond_87554;
                                            double res_87555;
                                            char cond_87562;
                                            double res_87563;
                                            int64_t res_87578;
                                            double res_87579;
                                            char cond_87580;
                                            double res_87581;
                                            
                                            cond_87522 = res_87500 == res_86977;
                                            cond_87523 = res_87501 == x_86975;
                                            eq_87524 = cond_87522 && cond_87523;
                                            x_87525 = !eq_87524;
                                            if (eq_87524) {
                                                double arg_87528;
                                                int64_t res_87529;
                                                double res_87530;
                                                char cond_87531;
                                                double res_87532;
                                                double res_87539;
                                                double x_87546;
                                                double y_87547;
                                                double res_87548;
                                                
                                                arg_87528 = res_87500 /
                                                    delta_73922;
                                                res_87529 =
                                                    fptosi_f64_i64(arg_87528);
                                                res_87530 =
                                                    sitofp_i64_f64(res_87529);
                                                cond_87531 = 0.0 <= arg_87528;
                                                if (cond_87531) {
                                                    char cond_87533;
                                                    double res_87534;
                                                    
                                                    cond_87533 = res_87530 <
                                                        arg_87528;
                                                    if (cond_87533) {
                                                        res_87534 = res_87530;
                                                    } else {
                                                        res_87534 = arg_87528;
                                                    }
                                                    res_87532 = res_87534;
                                                } else {
                                                    char cond_87535;
                                                    double res_87536;
                                                    
                                                    cond_87535 = arg_87528 <
                                                        res_87530;
                                                    if (cond_87535) {
                                                        int64_t res_87537;
                                                        double res_87538;
                                                        
                                                        res_87537 = res_87529 -
                                                            1;
                                                        res_87538 =
                                                            sitofp_i64_f64(res_87537);
                                                        res_87536 = res_87538;
                                                    } else {
                                                        res_87536 = arg_87528;
                                                    }
                                                    res_87532 = res_87536;
                                                }
                                                if (cond_87531) {
                                                    char cond_87540;
                                                    double res_87541;
                                                    
                                                    cond_87540 = res_87530 <
                                                        arg_87528;
                                                    if (cond_87540) {
                                                        res_87541 = res_87530;
                                                    } else {
                                                        res_87541 = arg_87528;
                                                    }
                                                    res_87539 = res_87541;
                                                } else {
                                                    char cond_87542;
                                                    double res_87543;
                                                    
                                                    cond_87542 = arg_87528 <
                                                        res_87530;
                                                    if (cond_87542) {
                                                        int64_t res_87544;
                                                        double res_87545;
                                                        
                                                        res_87544 = res_87529 -
                                                            1;
                                                        res_87545 =
                                                            sitofp_i64_f64(res_87544);
                                                        res_87543 = res_87545;
                                                    } else {
                                                        res_87543 = arg_87528;
                                                    }
                                                    res_87539 = res_87543;
                                                }
                                                x_87546 = res_86970 * res_87539;
                                                y_87547 = res_86972 /
                                                    delta_73922;
                                                res_87548 = x_87546 + y_87547;
                                                res_87526 = res_87532;
                                                res_87527 = res_87548;
                                            } else {
                                                double res_87549;
                                                double res_87550;
                                                
                                                res_87549 = res_87500 /
                                                    delta_73922;
                                                res_87550 = res_87501 /
                                                    delta_73922;
                                                res_87526 = res_87549;
                                                res_87527 = res_87550;
                                            }
                                            res_87551 = res_87526 + 0.5;
                                            res_87552 =
                                                fptosi_f64_i64(res_87551);
                                            res_87553 =
                                                sitofp_i64_f64(res_87552);
                                            cond_87554 = 0.0 <= res_87551;
                                            if (cond_87554) {
                                                char cond_87556;
                                                double res_87557;
                                                
                                                cond_87556 = res_87553 <
                                                    res_87551;
                                                if (cond_87556) {
                                                    res_87557 = res_87553;
                                                } else {
                                                    res_87557 = res_87551;
                                                }
                                                res_87555 = res_87557;
                                            } else {
                                                char cond_87558;
                                                double res_87559;
                                                
                                                cond_87558 = res_87551 <
                                                    res_87553;
                                                if (cond_87558) {
                                                    int64_t res_87560;
                                                    double res_87561;
                                                    
                                                    res_87560 = res_87552 - 1;
                                                    res_87561 =
                                                        sitofp_i64_f64(res_87560);
                                                    res_87559 = res_87561;
                                                } else {
                                                    res_87559 = res_87551;
                                                }
                                                res_87555 = res_87559;
                                            }
                                            cond_87562 = res_87555 == res_87551;
                                            if (cond_87562) {
                                                int64_t res_87564;
                                                double res_87565;
                                                char cond_87566;
                                                double res_87567;
                                                int64_t x_87574;
                                                int64_t cond_87575;
                                                char cond_87576;
                                                double res_87577;
                                                
                                                res_87564 =
                                                    fptosi_f64_i64(res_87526);
                                                res_87565 =
                                                    sitofp_i64_f64(res_87564);
                                                cond_87566 = 0.0 <= res_87526;
                                                if (cond_87566) {
                                                    char cond_87568;
                                                    double res_87569;
                                                    
                                                    cond_87568 = res_87565 <
                                                        res_87526;
                                                    if (cond_87568) {
                                                        res_87569 = res_87565;
                                                    } else {
                                                        res_87569 = res_87526;
                                                    }
                                                    res_87567 = res_87569;
                                                } else {
                                                    char cond_87570;
                                                    double res_87571;
                                                    
                                                    cond_87570 = res_87526 <
                                                        res_87565;
                                                    if (cond_87570) {
                                                        int64_t res_87572;
                                                        double res_87573;
                                                        
                                                        res_87572 = res_87564 -
                                                            1;
                                                        res_87573 =
                                                            sitofp_i64_f64(res_87572);
                                                        res_87571 = res_87573;
                                                    } else {
                                                        res_87571 = res_87526;
                                                    }
                                                    res_87567 = res_87571;
                                                }
                                                x_87574 =
                                                    fptosi_f64_i64(res_87567);
                                                cond_87575 = smod64(x_87574, 2);
                                                cond_87576 = cond_87575 == 0;
                                                if (cond_87576) {
                                                    res_87577 = res_87567;
                                                } else {
                                                    res_87577 = res_87555;
                                                }
                                                res_87563 = res_87577;
                                            } else {
                                                res_87563 = res_87555;
                                            }
                                            res_87578 =
                                                fptosi_f64_i64(res_87527);
                                            res_87579 =
                                                sitofp_i64_f64(res_87578);
                                            cond_87580 = 0.0 <= res_87527;
                                            if (cond_87580) {
                                                char cond_87582;
                                                double res_87583;
                                                
                                                cond_87582 = res_87579 <
                                                    res_87527;
                                                if (cond_87582) {
                                                    res_87583 = res_87579;
                                                } else {
                                                    res_87583 = res_87527;
                                                }
                                                res_87581 = res_87583;
                                            } else {
                                                char cond_87584;
                                                double res_87585;
                                                
                                                cond_87584 = res_87527 <
                                                    res_87579;
                                                if (cond_87584) {
                                                    int64_t res_87586;
                                                    double res_87587;
                                                    
                                                    res_87586 = res_87578 - 1;
                                                    res_87587 =
                                                        sitofp_i64_f64(res_87586);
                                                    res_87585 = res_87587;
                                                } else {
                                                    res_87585 = res_87527;
                                                }
                                                res_87581 = res_87585;
                                            }
                                            res_87517 = res_87526;
                                            res_87518 = res_87527;
                                            res_87519 = res_87563;
                                            res_87520 = res_87581;
                                            res_87521 = x_87525;
                                        } else {
                                            char cond_87588;
                                            char cond_87589;
                                            char eq_87590;
                                            char x_87591;
                                            double res_87592;
                                            double res_87593;
                                            int64_t res_87617;
                                            double res_87618;
                                            char cond_87619;
                                            double res_87620;
                                            double res_87627;
                                            int64_t res_87628;
                                            double res_87629;
                                            char cond_87630;
                                            double res_87631;
                                            char cond_87638;
                                            double res_87639;
                                            
                                            cond_87588 = res_87500 == x_86975;
                                            cond_87589 = res_87501 == res_86981;
                                            eq_87590 = cond_87588 && cond_87589;
                                            x_87591 = !eq_87590;
                                            if (eq_87590) {
                                                double arg_87594;
                                                int64_t res_87595;
                                                double res_87596;
                                                char cond_87597;
                                                double res_87598;
                                                double y_87605;
                                                double x_87606;
                                                double res_87607;
                                                double res_87608;
                                                
                                                arg_87594 = res_87501 /
                                                    delta_73922;
                                                res_87595 =
                                                    fptosi_f64_i64(arg_87594);
                                                res_87596 =
                                                    sitofp_i64_f64(res_87595);
                                                cond_87597 = 0.0 <= arg_87594;
                                                if (cond_87597) {
                                                    char cond_87599;
                                                    double res_87600;
                                                    
                                                    cond_87599 = res_87596 <
                                                        arg_87594;
                                                    if (cond_87599) {
                                                        res_87600 = res_87596;
                                                    } else {
                                                        res_87600 = arg_87594;
                                                    }
                                                    res_87598 = res_87600;
                                                } else {
                                                    char cond_87601;
                                                    double res_87602;
                                                    
                                                    cond_87601 = arg_87594 <
                                                        res_87596;
                                                    if (cond_87601) {
                                                        int64_t res_87603;
                                                        double res_87604;
                                                        
                                                        res_87603 = res_87595 -
                                                            1;
                                                        res_87604 =
                                                            sitofp_i64_f64(res_87603);
                                                        res_87602 = res_87604;
                                                    } else {
                                                        res_87602 = arg_87594;
                                                    }
                                                    res_87598 = res_87602;
                                                }
                                                y_87605 = res_86972 /
                                                    delta_73922;
                                                x_87606 = res_87598 - y_87605;
                                                res_87607 = x_87606 / res_86970;
                                                if (cond_87597) {
                                                    char cond_87609;
                                                    double res_87610;
                                                    
                                                    cond_87609 = res_87596 <
                                                        arg_87594;
                                                    if (cond_87609) {
                                                        res_87610 = res_87596;
                                                    } else {
                                                        res_87610 = arg_87594;
                                                    }
                                                    res_87608 = res_87610;
                                                } else {
                                                    char cond_87611;
                                                    double res_87612;
                                                    
                                                    cond_87611 = arg_87594 <
                                                        res_87596;
                                                    if (cond_87611) {
                                                        int64_t res_87613;
                                                        double res_87614;
                                                        
                                                        res_87613 = res_87595 -
                                                            1;
                                                        res_87614 =
                                                            sitofp_i64_f64(res_87613);
                                                        res_87612 = res_87614;
                                                    } else {
                                                        res_87612 = arg_87594;
                                                    }
                                                    res_87608 = res_87612;
                                                }
                                                res_87592 = res_87607;
                                                res_87593 = res_87608;
                                            } else {
                                                double res_87615;
                                                double res_87616;
                                                
                                                res_87615 = res_87500 /
                                                    delta_73922;
                                                res_87616 = res_87501 /
                                                    delta_73922;
                                                res_87592 = res_87615;
                                                res_87593 = res_87616;
                                            }
                                            res_87617 =
                                                fptosi_f64_i64(res_87592);
                                            res_87618 =
                                                sitofp_i64_f64(res_87617);
                                            cond_87619 = 0.0 <= res_87592;
                                            if (cond_87619) {
                                                char cond_87621;
                                                double res_87622;
                                                
                                                cond_87621 = res_87618 <
                                                    res_87592;
                                                if (cond_87621) {
                                                    res_87622 = res_87618;
                                                } else {
                                                    res_87622 = res_87592;
                                                }
                                                res_87620 = res_87622;
                                            } else {
                                                char cond_87623;
                                                double res_87624;
                                                
                                                cond_87623 = res_87592 <
                                                    res_87618;
                                                if (cond_87623) {
                                                    int64_t res_87625;
                                                    double res_87626;
                                                    
                                                    res_87625 = res_87617 - 1;
                                                    res_87626 =
                                                        sitofp_i64_f64(res_87625);
                                                    res_87624 = res_87626;
                                                } else {
                                                    res_87624 = res_87592;
                                                }
                                                res_87620 = res_87624;
                                            }
                                            res_87627 = res_87593 + 0.5;
                                            res_87628 =
                                                fptosi_f64_i64(res_87627);
                                            res_87629 =
                                                sitofp_i64_f64(res_87628);
                                            cond_87630 = 0.0 <= res_87627;
                                            if (cond_87630) {
                                                char cond_87632;
                                                double res_87633;
                                                
                                                cond_87632 = res_87629 <
                                                    res_87627;
                                                if (cond_87632) {
                                                    res_87633 = res_87629;
                                                } else {
                                                    res_87633 = res_87627;
                                                }
                                                res_87631 = res_87633;
                                            } else {
                                                char cond_87634;
                                                double res_87635;
                                                
                                                cond_87634 = res_87627 <
                                                    res_87629;
                                                if (cond_87634) {
                                                    int64_t res_87636;
                                                    double res_87637;
                                                    
                                                    res_87636 = res_87628 - 1;
                                                    res_87637 =
                                                        sitofp_i64_f64(res_87636);
                                                    res_87635 = res_87637;
                                                } else {
                                                    res_87635 = res_87627;
                                                }
                                                res_87631 = res_87635;
                                            }
                                            cond_87638 = res_87631 == res_87627;
                                            if (cond_87638) {
                                                int64_t res_87640;
                                                double res_87641;
                                                char cond_87642;
                                                double res_87643;
                                                int64_t x_87650;
                                                int64_t cond_87651;
                                                char cond_87652;
                                                double res_87653;
                                                
                                                res_87640 =
                                                    fptosi_f64_i64(res_87593);
                                                res_87641 =
                                                    sitofp_i64_f64(res_87640);
                                                cond_87642 = 0.0 <= res_87593;
                                                if (cond_87642) {
                                                    char cond_87644;
                                                    double res_87645;
                                                    
                                                    cond_87644 = res_87641 <
                                                        res_87593;
                                                    if (cond_87644) {
                                                        res_87645 = res_87641;
                                                    } else {
                                                        res_87645 = res_87593;
                                                    }
                                                    res_87643 = res_87645;
                                                } else {
                                                    char cond_87646;
                                                    double res_87647;
                                                    
                                                    cond_87646 = res_87593 <
                                                        res_87641;
                                                    if (cond_87646) {
                                                        int64_t res_87648;
                                                        double res_87649;
                                                        
                                                        res_87648 = res_87640 -
                                                            1;
                                                        res_87649 =
                                                            sitofp_i64_f64(res_87648);
                                                        res_87647 = res_87649;
                                                    } else {
                                                        res_87647 = res_87593;
                                                    }
                                                    res_87643 = res_87647;
                                                }
                                                x_87650 =
                                                    fptosi_f64_i64(res_87643);
                                                cond_87651 = smod64(x_87650, 2);
                                                cond_87652 = cond_87651 == 0;
                                                if (cond_87652) {
                                                    res_87653 = res_87643;
                                                } else {
                                                    res_87653 = res_87631;
                                                }
                                                res_87639 = res_87653;
                                            } else {
                                                res_87639 = res_87631;
                                            }
                                            res_87517 = res_87592;
                                            res_87518 = res_87593;
                                            res_87519 = res_87620;
                                            res_87520 = res_87639;
                                            res_87521 = x_87591;
                                        }
                                        res_87512 = res_87517;
                                        res_87513 = res_87518;
                                        res_87514 = res_87519;
                                        res_87515 = res_87520;
                                        res_87516 = res_87521;
                                    }
                                    res_87330 = res_87512;
                                    res_87331 = res_87513;
                                    res_87332 = res_87514;
                                    res_87333 = res_87515;
                                    res_87334 = res_87516;
                                    res_87335 = eq_87511;
                                }
                                res_87162 = res_87330;
                                res_87163 = res_87331;
                                res_87164 = res_87332;
                                res_87165 = res_87333;
                                res_87166 = res_87334;
                                res_87167 = res_87335;
                            }
                            res_86994 = res_87162;
                            res_86995 = res_87163;
                            res_86996 = res_87164;
                            res_86997 = res_87165;
                            res_86998 = res_87166;
                            res_86999 = res_87167;
                        }
                        x_87654 = res_86996 - res_86994;
                        x_87655 = fpow64(x_87654, 2.0);
                        x_87656 = res_86997 - res_86995;
                        y_87657 = fpow64(x_87656, 2.0);
                        x_87658 = x_87655 + y_87657;
                        x_87659 = futrts_sqrt64(x_87658);
                        res_87660 = x_87659 * delta_73922;
                        res_86907 = res_86996;
                        res_86908 = res_86997;
                        res_86909 = res_87660;
                        res_86910 = res_86998;
                        res_86911 = res_86999;
                    }
                    res_86848 = res_86907;
                    res_86849 = res_86908;
                    res_86850 = res_86909;
                    res_86851 = res_86910;
                    res_86852 = res_86911;
                }
                res_87661 = fptosi_f64_i16(res_86848);
                res_87662 = fptosi_f64_i16(res_86849);
                cond_87663 = !res_86852;
                if (cond_87663) {
                    part_res_87664 = 0;
                } else {
                    part_res_87664 = 1;
                }
                if (cond_87663) {
                    part_res_87665 = 1;
                } else {
                    part_res_87665 = 0;
                }
                zz_87666 = x_merge_87695 + part_res_87665;
                *(__global int32_t *) &mem_97044[j_87701 * 4] = part_res_87664;
                *(__global int16_t *) &mem_97047[j_87701 * 2] = res_87661;
                *(__global int16_t *) &mem_97050[j_87701 * 2] = res_87662;
                *(__global double *) &mem_97053[j_87701 * 8] = res_86850;
                *(__global char *) &mem_97055[j_87701] = res_86851;
                *(__global char *) &mem_97057[j_87701] = res_86852;
                foldres_87711 = zz_87666;
            } else {
                foldres_87711 = x_merge_87695;
            }
            if (slt32(local_tid_87690, group_sizze_86815) && 1) {
                *(__local int32_t *) &mem_97072[local_tid_87690 * 4] =
                    foldres_87711;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int32_t my_index_87667;
            int32_t other_index_87668;
            int32_t x_87669;
            int32_t y_87670;
            int32_t my_index_97811;
            int32_t other_index_97812;
            int32_t x_97813;
            int32_t y_97814;
            
            my_index_87667 = local_tid_87690;
            if (slt32(local_tid_87690, group_sizze_86815)) {
                y_87670 = *(volatile __local
                            int32_t *) &mem_97072[local_tid_87690 *
                                                  sizeof(int32_t)];
            }
            // in-block scan (hopefully no barriers needed)
            {
                int32_t skip_threads_97816 = 1;
                
                while (slt32(skip_threads_97816, 32)) {
                    if (slt32(local_tid_87690, group_sizze_86815) &&
                        sle32(skip_threads_97816, local_tid_87690 -
                              squot32(local_tid_87690, 32) * 32)) {
                        // read operands
                        {
                            x_87669 = *(volatile __local
                                        int32_t *) &mem_97072[(local_tid_87690 -
                                                               skip_threads_97816) *
                                                              sizeof(int32_t)];
                        }
                        // perform operation
                        {
                            int32_t zz_87671 = x_87669 + y_87670;
                            
                            y_87670 = zz_87671;
                        }
                    }
                    if (sle32(wave_sizze_97800, skip_threads_97816)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (slt32(local_tid_87690, group_sizze_86815) &&
                        sle32(skip_threads_97816, local_tid_87690 -
                              squot32(local_tid_87690, 32) * 32)) {
                        // write result
                        {
                            *(volatile __local
                              int32_t *) &mem_97072[local_tid_87690 *
                                                    sizeof(int32_t)] = y_87670;
                        }
                    }
                    if (sle32(wave_sizze_97800, skip_threads_97816)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_97816 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_87690 - squot32(local_tid_87690, 32) * 32) ==
                    31 && slt32(local_tid_87690, group_sizze_86815)) {
                    *(volatile __local
                      int32_t *) &mem_97072[squot32(local_tid_87690, 32) *
                                            sizeof(int32_t)] = y_87670;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for warp 'i+1'
            {
                if (squot32(local_tid_87690, 32) == 0 && slt32(local_tid_87690,
                                                               group_sizze_86815)) {
                    y_97814 = *(volatile __local
                                int32_t *) &mem_97072[local_tid_87690 *
                                                      sizeof(int32_t)];
                }
                // in-block scan (hopefully no barriers needed)
                {
                    int32_t skip_threads_97817 = 1;
                    
                    while (slt32(skip_threads_97817, 32)) {
                        if ((squot32(local_tid_87690, 32) == 0 &&
                             slt32(local_tid_87690, group_sizze_86815)) &&
                            sle32(skip_threads_97817, local_tid_87690 -
                                  squot32(local_tid_87690, 32) * 32)) {
                            // read operands
                            {
                                x_97813 = *(volatile __local
                                            int32_t *) &mem_97072[(local_tid_87690 -
                                                                   skip_threads_97817) *
                                                                  sizeof(int32_t)];
                            }
                            // perform operation
                            {
                                int32_t zz_97815 = x_97813 + y_97814;
                                
                                y_97814 = zz_97815;
                            }
                        }
                        if (sle32(wave_sizze_97800, skip_threads_97817)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if ((squot32(local_tid_87690, 32) == 0 &&
                             slt32(local_tid_87690, group_sizze_86815)) &&
                            sle32(skip_threads_97817, local_tid_87690 -
                                  squot32(local_tid_87690, 32) * 32)) {
                            // write result
                            {
                                *(volatile __local
                                  int32_t *) &mem_97072[local_tid_87690 *
                                                        sizeof(int32_t)] =
                                    y_97814;
                            }
                        }
                        if (sle32(wave_sizze_97800, skip_threads_97817)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_97817 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_87690, 32) == 0 ||
                      !slt32(local_tid_87690, group_sizze_86815))) {
                    // read operands
                    {
                        x_87669 = *(volatile __local
                                    int32_t *) &mem_97072[(squot32(local_tid_87690,
                                                                   32) - 1) *
                                                          sizeof(int32_t)];
                    }
                    // perform operation
                    {
                        int32_t zz_87671 = x_87669 + y_87670;
                        
                        y_87670 = zz_87671;
                    }
                    // write final result
                    {
                        *(volatile __local
                          int32_t *) &mem_97072[local_tid_87690 *
                                                sizeof(int32_t)] = y_87670;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_87690, 32) == 0) {
                    *(volatile __local int32_t *) &mem_97072[local_tid_87690 *
                                                             sizeof(int32_t)] =
                        y_87670;
                }
            }
            if (cond_87702) {
                int32_t scanned_elem_87721 = *(__local
                                               int32_t *) &mem_97072[local_tid_87690 *
                                                                     4];
                
                *(__global int32_t *) &mem_97041[j_87701 * 4] =
                    scanned_elem_87721;
            }
            
            int32_t new_carry_87726;
            
            if (is_first_thread_87724) {
                int32_t carry_87725 = *(__local int32_t *) &mem_97072[y_86818 *
                                                                      4];
                
                new_carry_87726 = carry_87725;
            } else {
                new_carry_87726 = 0;
            }
            
            int32_t new_carry_sync_87727;
            
            new_carry_sync_87727 = new_carry_87726;
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int32_t x_merge_tmp_97810 = new_carry_sync_87727;
            
            x_merge_87695 = x_merge_tmp_97810;
        }
        result_87735 = x_merge_87695;
    }
    if (local_tid_87690 == 0) {
        *(__global int32_t *) &mem_97084[group_id_87691 * 4] = result_87735;
    }
}
__kernel void scan1_kernel_88641(__local volatile int64_t *mem_aligned_0,
                                 int32_t conc_tmp_74004,
                                 int32_t num_iterations_88646, int32_t y_88649,
                                 __global unsigned char *mem_97316, __global
                                 unsigned char *mem_97319, __global
                                 unsigned char *mem_97328)
{
    __local volatile char *restrict mem_97322 = mem_aligned_0;
    int32_t wave_sizze_97909;
    int32_t group_sizze_97910;
    char thread_active_97911;
    int32_t global_tid_88641;
    int32_t local_tid_88642;
    int32_t group_id_88643;
    
    global_tid_88641 = get_global_id(0);
    local_tid_88642 = get_local_id(0);
    group_sizze_97910 = get_local_size(0);
    wave_sizze_97909 = LOCKSTEP_WIDTH;
    group_id_88643 = get_group_id(0);
    thread_active_97911 = 1;
    
    int32_t x_88650;
    char is_first_thread_88663;
    int32_t result_88668;
    
    if (thread_active_97911) {
        x_88650 = group_id_88643 * y_88649;
        is_first_thread_88663 = local_tid_88642 == 0;
        
        int32_t x_merge_88647 = 0;
        
        for (int32_t i_88648 = 0; i_88648 < num_iterations_88646; i_88648++) {
            int32_t y_88651 = i_88648 * group_sizze_88613;
            int32_t offset_88652 = x_88650 + y_88651;
            int32_t j_88653 = offset_88652 + local_tid_88642;
            char cond_88654 = slt32(j_88653, conc_tmp_74004);
            int32_t foldres_88656;
            
            if (cond_88654) {
                char index_concat_cmp_96943;
                int32_t index_concat_branch_96947;
                int32_t res_88630;
                
                index_concat_cmp_96943 = sle32(1, j_88653);
                if (index_concat_cmp_96943) {
                    int32_t index_concat_i_96944;
                    int32_t index_concat_96945;
                    
                    index_concat_i_96944 = j_88653 - 1;
                    index_concat_96945 = *(__global
                                           int32_t *) &mem_97316[index_concat_i_96944 *
                                                                 4];
                    index_concat_branch_96947 = index_concat_96945;
                } else {
                    index_concat_branch_96947 = 0;
                }
                res_88630 = x_merge_88647 + index_concat_branch_96947;
                foldres_88656 = res_88630;
            } else {
                foldres_88656 = x_merge_88647;
            }
            if (slt32(local_tid_88642, group_sizze_88613) && 1) {
                *(__local int32_t *) &mem_97322[local_tid_88642 * 4] =
                    foldres_88656;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int32_t my_index_88631;
            int32_t other_index_88632;
            int32_t x_88633;
            int32_t x_88634;
            int32_t my_index_97914;
            int32_t other_index_97915;
            int32_t x_97916;
            int32_t x_97917;
            
            my_index_88631 = local_tid_88642;
            if (slt32(local_tid_88642, group_sizze_88613)) {
                x_88634 = *(volatile __local
                            int32_t *) &mem_97322[local_tid_88642 *
                                                  sizeof(int32_t)];
            }
            // in-block scan (hopefully no barriers needed)
            {
                int32_t skip_threads_97919 = 1;
                
                while (slt32(skip_threads_97919, 32)) {
                    if (slt32(local_tid_88642, group_sizze_88613) &&
                        sle32(skip_threads_97919, local_tid_88642 -
                              squot32(local_tid_88642, 32) * 32)) {
                        // read operands
                        {
                            x_88633 = *(volatile __local
                                        int32_t *) &mem_97322[(local_tid_88642 -
                                                               skip_threads_97919) *
                                                              sizeof(int32_t)];
                        }
                        // perform operation
                        {
                            int32_t res_88635 = x_88633 + x_88634;
                            
                            x_88634 = res_88635;
                        }
                    }
                    if (sle32(wave_sizze_97909, skip_threads_97919)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (slt32(local_tid_88642, group_sizze_88613) &&
                        sle32(skip_threads_97919, local_tid_88642 -
                              squot32(local_tid_88642, 32) * 32)) {
                        // write result
                        {
                            *(volatile __local
                              int32_t *) &mem_97322[local_tid_88642 *
                                                    sizeof(int32_t)] = x_88634;
                        }
                    }
                    if (sle32(wave_sizze_97909, skip_threads_97919)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_97919 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_88642 - squot32(local_tid_88642, 32) * 32) ==
                    31 && slt32(local_tid_88642, group_sizze_88613)) {
                    *(volatile __local
                      int32_t *) &mem_97322[squot32(local_tid_88642, 32) *
                                            sizeof(int32_t)] = x_88634;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for warp 'i+1'
            {
                if (squot32(local_tid_88642, 32) == 0 && slt32(local_tid_88642,
                                                               group_sizze_88613)) {
                    x_97917 = *(volatile __local
                                int32_t *) &mem_97322[local_tid_88642 *
                                                      sizeof(int32_t)];
                }
                // in-block scan (hopefully no barriers needed)
                {
                    int32_t skip_threads_97920 = 1;
                    
                    while (slt32(skip_threads_97920, 32)) {
                        if ((squot32(local_tid_88642, 32) == 0 &&
                             slt32(local_tid_88642, group_sizze_88613)) &&
                            sle32(skip_threads_97920, local_tid_88642 -
                                  squot32(local_tid_88642, 32) * 32)) {
                            // read operands
                            {
                                x_97916 = *(volatile __local
                                            int32_t *) &mem_97322[(local_tid_88642 -
                                                                   skip_threads_97920) *
                                                                  sizeof(int32_t)];
                            }
                            // perform operation
                            {
                                int32_t res_97918 = x_97916 + x_97917;
                                
                                x_97917 = res_97918;
                            }
                        }
                        if (sle32(wave_sizze_97909, skip_threads_97920)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if ((squot32(local_tid_88642, 32) == 0 &&
                             slt32(local_tid_88642, group_sizze_88613)) &&
                            sle32(skip_threads_97920, local_tid_88642 -
                                  squot32(local_tid_88642, 32) * 32)) {
                            // write result
                            {
                                *(volatile __local
                                  int32_t *) &mem_97322[local_tid_88642 *
                                                        sizeof(int32_t)] =
                                    x_97917;
                            }
                        }
                        if (sle32(wave_sizze_97909, skip_threads_97920)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_97920 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_88642, 32) == 0 ||
                      !slt32(local_tid_88642, group_sizze_88613))) {
                    // read operands
                    {
                        x_88633 = *(volatile __local
                                    int32_t *) &mem_97322[(squot32(local_tid_88642,
                                                                   32) - 1) *
                                                          sizeof(int32_t)];
                    }
                    // perform operation
                    {
                        int32_t res_88635 = x_88633 + x_88634;
                        
                        x_88634 = res_88635;
                    }
                    // write final result
                    {
                        *(volatile __local
                          int32_t *) &mem_97322[local_tid_88642 *
                                                sizeof(int32_t)] = x_88634;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_88642, 32) == 0) {
                    *(volatile __local int32_t *) &mem_97322[local_tid_88642 *
                                                             sizeof(int32_t)] =
                        x_88634;
                }
            }
            if (cond_88654) {
                int32_t scanned_elem_88660 = *(__local
                                               int32_t *) &mem_97322[local_tid_88642 *
                                                                     4];
                
                *(__global int32_t *) &mem_97319[j_88653 * 4] =
                    scanned_elem_88660;
            }
            
            int32_t new_carry_88665;
            
            if (is_first_thread_88663) {
                int32_t carry_88664 = *(__local int32_t *) &mem_97322[y_88616 *
                                                                      4];
                
                new_carry_88665 = carry_88664;
            } else {
                new_carry_88665 = 0;
            }
            
            int32_t new_carry_sync_88666;
            
            new_carry_sync_88666 = new_carry_88665;
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int32_t x_merge_tmp_97913 = new_carry_sync_88666;
            
            x_merge_88647 = x_merge_tmp_97913;
        }
        result_88668 = x_merge_88647;
    }
    if (local_tid_88642 == 0) {
        *(__global int32_t *) &mem_97328[group_id_88643 * 4] = result_88668;
    }
}
__kernel void scan1_kernel_88760(__local volatile int64_t *mem_aligned_0,
                                 int32_t num_elems_74001,
                                 int32_t num_iterations_88765, int32_t y_88768,
                                 int32_t convop_x_97339, __global
                                 unsigned char *mem_97352, __global
                                 unsigned char *mem_97355, __global
                                 unsigned char *mem_97359, __global
                                 unsigned char *mem_97371)
{
    __local volatile char *restrict mem_97364 = mem_aligned_0;
    int32_t wave_sizze_97938;
    int32_t group_sizze_97939;
    char thread_active_97940;
    int32_t global_tid_88760;
    int32_t local_tid_88761;
    int32_t group_id_88762;
    
    global_tid_88760 = get_global_id(0);
    local_tid_88761 = get_local_id(0);
    group_sizze_97939 = get_local_size(0);
    wave_sizze_97938 = LOCKSTEP_WIDTH;
    group_id_88762 = get_group_id(0);
    thread_active_97940 = 1;
    
    int32_t x_88769;
    char is_first_thread_88784;
    int32_t result_88790;
    
    if (thread_active_97940) {
        x_88769 = group_id_88762 * y_88768;
        is_first_thread_88784 = local_tid_88761 == 0;
        
        int32_t x_merge_88766 = 0;
        
        for (int32_t i_88767 = 0; i_88767 < num_iterations_88765; i_88767++) {
            int32_t y_88770 = i_88767 * group_sizze_88726;
            int32_t offset_88771 = x_88769 + y_88770;
            int32_t j_88772 = offset_88771 + local_tid_88761;
            char cond_88773 = slt32(j_88772, convop_x_97339);
            int32_t foldres_88776;
            
            if (cond_88773) {
                int32_t new_index_96948;
                int32_t binop_y_96950;
                int32_t new_index_96951;
                double reshape_elem_88774;
                char cond_88743;
                char cond_88744;
                int32_t part_res_88745;
                int32_t part_res_88746;
                int32_t zz_88747;
                
                new_index_96948 = squot32(j_88772, num_elems_74001);
                binop_y_96950 = new_index_96948 * num_elems_74001;
                new_index_96951 = j_88772 - binop_y_96950;
                reshape_elem_88774 = *(__global
                                       double *) &mem_97359[(new_index_96948 *
                                                             num_elems_74001 +
                                                             new_index_96951) *
                                                            8];
                cond_88743 = reshape_elem_88774 == -1.0;
                cond_88744 = !cond_88743;
                if (cond_88744) {
                    part_res_88745 = 0;
                } else {
                    part_res_88745 = 1;
                }
                if (cond_88744) {
                    part_res_88746 = 1;
                } else {
                    part_res_88746 = 0;
                }
                zz_88747 = x_merge_88766 + part_res_88746;
                *(__global int32_t *) &mem_97355[j_88772 * 4] = part_res_88745;
                foldres_88776 = zz_88747;
            } else {
                foldres_88776 = x_merge_88766;
            }
            if (slt32(local_tid_88761, group_sizze_88726) && 1) {
                *(__local int32_t *) &mem_97364[local_tid_88761 * 4] =
                    foldres_88776;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int32_t my_index_88748;
            int32_t other_index_88749;
            int32_t x_88750;
            int32_t y_88751;
            int32_t my_index_97944;
            int32_t other_index_97945;
            int32_t x_97946;
            int32_t y_97947;
            
            my_index_88748 = local_tid_88761;
            if (slt32(local_tid_88761, group_sizze_88726)) {
                y_88751 = *(volatile __local
                            int32_t *) &mem_97364[local_tid_88761 *
                                                  sizeof(int32_t)];
            }
            // in-block scan (hopefully no barriers needed)
            {
                int32_t skip_threads_97949 = 1;
                
                while (slt32(skip_threads_97949, 32)) {
                    if (slt32(local_tid_88761, group_sizze_88726) &&
                        sle32(skip_threads_97949, local_tid_88761 -
                              squot32(local_tid_88761, 32) * 32)) {
                        // read operands
                        {
                            x_88750 = *(volatile __local
                                        int32_t *) &mem_97364[(local_tid_88761 -
                                                               skip_threads_97949) *
                                                              sizeof(int32_t)];
                        }
                        // perform operation
                        {
                            int32_t zz_88752 = x_88750 + y_88751;
                            
                            y_88751 = zz_88752;
                        }
                    }
                    if (sle32(wave_sizze_97938, skip_threads_97949)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (slt32(local_tid_88761, group_sizze_88726) &&
                        sle32(skip_threads_97949, local_tid_88761 -
                              squot32(local_tid_88761, 32) * 32)) {
                        // write result
                        {
                            *(volatile __local
                              int32_t *) &mem_97364[local_tid_88761 *
                                                    sizeof(int32_t)] = y_88751;
                        }
                    }
                    if (sle32(wave_sizze_97938, skip_threads_97949)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_97949 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_88761 - squot32(local_tid_88761, 32) * 32) ==
                    31 && slt32(local_tid_88761, group_sizze_88726)) {
                    *(volatile __local
                      int32_t *) &mem_97364[squot32(local_tid_88761, 32) *
                                            sizeof(int32_t)] = y_88751;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for warp 'i+1'
            {
                if (squot32(local_tid_88761, 32) == 0 && slt32(local_tid_88761,
                                                               group_sizze_88726)) {
                    y_97947 = *(volatile __local
                                int32_t *) &mem_97364[local_tid_88761 *
                                                      sizeof(int32_t)];
                }
                // in-block scan (hopefully no barriers needed)
                {
                    int32_t skip_threads_97950 = 1;
                    
                    while (slt32(skip_threads_97950, 32)) {
                        if ((squot32(local_tid_88761, 32) == 0 &&
                             slt32(local_tid_88761, group_sizze_88726)) &&
                            sle32(skip_threads_97950, local_tid_88761 -
                                  squot32(local_tid_88761, 32) * 32)) {
                            // read operands
                            {
                                x_97946 = *(volatile __local
                                            int32_t *) &mem_97364[(local_tid_88761 -
                                                                   skip_threads_97950) *
                                                                  sizeof(int32_t)];
                            }
                            // perform operation
                            {
                                int32_t zz_97948 = x_97946 + y_97947;
                                
                                y_97947 = zz_97948;
                            }
                        }
                        if (sle32(wave_sizze_97938, skip_threads_97950)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if ((squot32(local_tid_88761, 32) == 0 &&
                             slt32(local_tid_88761, group_sizze_88726)) &&
                            sle32(skip_threads_97950, local_tid_88761 -
                                  squot32(local_tid_88761, 32) * 32)) {
                            // write result
                            {
                                *(volatile __local
                                  int32_t *) &mem_97364[local_tid_88761 *
                                                        sizeof(int32_t)] =
                                    y_97947;
                            }
                        }
                        if (sle32(wave_sizze_97938, skip_threads_97950)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_97950 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_88761, 32) == 0 ||
                      !slt32(local_tid_88761, group_sizze_88726))) {
                    // read operands
                    {
                        x_88750 = *(volatile __local
                                    int32_t *) &mem_97364[(squot32(local_tid_88761,
                                                                   32) - 1) *
                                                          sizeof(int32_t)];
                    }
                    // perform operation
                    {
                        int32_t zz_88752 = x_88750 + y_88751;
                        
                        y_88751 = zz_88752;
                    }
                    // write final result
                    {
                        *(volatile __local
                          int32_t *) &mem_97364[local_tid_88761 *
                                                sizeof(int32_t)] = y_88751;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_88761, 32) == 0) {
                    *(volatile __local int32_t *) &mem_97364[local_tid_88761 *
                                                             sizeof(int32_t)] =
                        y_88751;
                }
            }
            if (cond_88773) {
                int32_t scanned_elem_88781 = *(__local
                                               int32_t *) &mem_97364[local_tid_88761 *
                                                                     4];
                
                *(__global int32_t *) &mem_97352[j_88772 * 4] =
                    scanned_elem_88781;
            }
            
            int32_t new_carry_88786;
            
            if (is_first_thread_88784) {
                int32_t carry_88785 = *(__local int32_t *) &mem_97364[y_88729 *
                                                                      4];
                
                new_carry_88786 = carry_88785;
            } else {
                new_carry_88786 = 0;
            }
            
            int32_t new_carry_sync_88787;
            
            new_carry_sync_88787 = new_carry_88786;
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int32_t x_merge_tmp_97943 = new_carry_sync_88787;
            
            x_merge_88766 = x_merge_tmp_97943;
        }
        result_88790 = x_merge_88766;
    }
    if (local_tid_88761 == 0) {
        *(__global int32_t *) &mem_97371[group_id_88762 * 4] = result_88790;
    }
}
__kernel void scan1_kernel_89712(__local volatile int64_t *mem_aligned_0,
                                 int32_t sizze_73917,
                                 double gridHalfWidth_73921, double delta_73922,
                                 int32_t nesting_sizze_86802,
                                 int32_t num_iterations_89717, int32_t y_89720,
                                 __global
                                 unsigned char *detectorPositions_mem_97020,
                                 __global unsigned char *mem_97038, __global
                                 unsigned char *mem_97397, __global
                                 unsigned char *mem_97400, __global
                                 unsigned char *mem_97403, __global
                                 unsigned char *mem_97406, __global
                                 unsigned char *mem_97409, __global
                                 unsigned char *mem_97411, __global
                                 unsigned char *mem_97413, __global
                                 unsigned char *mem_97440)
{
    __local volatile char *restrict mem_97428 = mem_aligned_0;
    int32_t wave_sizze_97968;
    int32_t group_sizze_97969;
    char thread_active_97970;
    int32_t global_tid_89712;
    int32_t local_tid_89713;
    int32_t group_id_89714;
    
    global_tid_89712 = get_global_id(0);
    local_tid_89713 = get_local_id(0);
    group_sizze_97969 = get_local_size(0);
    wave_sizze_97968 = LOCKSTEP_WIDTH;
    group_id_89714 = get_group_id(0);
    thread_active_97970 = 1;
    
    int32_t x_89721;
    char is_first_thread_89747;
    int32_t result_89758;
    
    if (thread_active_97970) {
        x_89721 = group_id_89714 * y_89720;
        is_first_thread_89747 = local_tid_89713 == 0;
        
        int32_t x_merge_89718 = 0;
        
        for (int32_t i_89719 = 0; i_89719 < num_iterations_89717; i_89719++) {
            int32_t y_89722 = i_89719 * group_sizze_88838;
            int32_t offset_89723 = x_89721 + y_89722;
            int32_t j_89724 = offset_89723 + local_tid_89713;
            char cond_89725 = slt32(j_89724, nesting_sizze_86802);
            int32_t foldres_89734;
            
            if (cond_89725) {
                int32_t new_index_96960;
                int32_t binop_y_96962;
                int32_t new_index_96963;
                double eAngles_zzip_res_elem_89726;
                double reshape_elem_89727;
                double res_88856;
                double res_88857;
                double res_88858;
                double res_88859;
                double res_88860;
                char cond_88861;
                char res_88862;
                char x_88863;
                char y_88864;
                char res_88865;
                char cond_88866;
                char res_88867;
                char x_88868;
                char y_88869;
                char res_88870;
                double res_88871;
                double res_88872;
                double res_88873;
                char res_88874;
                char res_88875;
                int16_t res_89684;
                int16_t res_89685;
                char cond_89686;
                int32_t part_res_89687;
                int32_t part_res_89688;
                int32_t zz_89689;
                
                new_index_96960 = squot32(j_89724, sizze_73917);
                binop_y_96962 = new_index_96960 * sizze_73917;
                new_index_96963 = j_89724 - binop_y_96962;
                eAngles_zzip_res_elem_89726 = *(__global
                                                double *) &mem_97038[(new_index_96960 *
                                                                      sizze_73917 +
                                                                      new_index_96963) *
                                                                     8];
                reshape_elem_89727 = *(__global
                                       double *) &detectorPositions_mem_97020[new_index_96963 *
                                                                              8];
                res_88856 = 1.7453292519943295e-2 * eAngles_zzip_res_elem_89726;
                res_88857 = futrts_cos64(res_88856);
                res_88858 = futrts_sin64(res_88856);
                res_88859 = res_88857 * reshape_elem_89727;
                res_88860 = res_88858 * reshape_elem_89727;
                cond_88861 = eAngles_zzip_res_elem_89726 == 0.0;
                res_88862 = eAngles_zzip_res_elem_89726 == 180.0;
                x_88863 = !cond_88861;
                y_88864 = x_88863 && res_88862;
                res_88865 = cond_88861 || y_88864;
                cond_88866 = eAngles_zzip_res_elem_89726 == 90.0;
                res_88867 = eAngles_zzip_res_elem_89726 == 270.0;
                x_88868 = !cond_88866;
                y_88869 = x_88868 && res_88867;
                res_88870 = cond_88866 || y_88869;
                if (res_88865) {
                    double y_88876;
                    char cond_88877;
                    char res_88878;
                    char x_88879;
                    char cond_88880;
                    double res_88881;
                    double res_88882;
                    
                    y_88876 = 0.0 - gridHalfWidth_73921;
                    cond_88877 = y_88876 <= res_88859;
                    res_88878 = res_88859 < gridHalfWidth_73921;
                    x_88879 = cond_88877 && res_88878;
                    cond_88880 = !x_88879;
                    if (cond_88880) {
                        res_88881 = 0.0;
                        res_88882 = 0.0;
                    } else {
                        double res_88883;
                        double res_88884;
                        
                        if (cond_88861) {
                            double arg_88885;
                            int64_t res_88886;
                            double res_88887;
                            char cond_88888;
                            double res_88889;
                            double negate_arg_88896;
                            double arg_88897;
                            int64_t res_88898;
                            double res_88899;
                            char cond_88900;
                            double res_88901;
                            
                            arg_88885 = res_88859 / delta_73922;
                            res_88886 = fptosi_f64_i64(arg_88885);
                            res_88887 = sitofp_i64_f64(res_88886);
                            cond_88888 = 0.0 <= arg_88885;
                            if (cond_88888) {
                                char cond_88890;
                                double res_88891;
                                
                                cond_88890 = res_88887 < arg_88885;
                                if (cond_88890) {
                                    res_88891 = res_88887;
                                } else {
                                    res_88891 = arg_88885;
                                }
                                res_88889 = res_88891;
                            } else {
                                char cond_88892;
                                double res_88893;
                                
                                cond_88892 = arg_88885 < res_88887;
                                if (cond_88892) {
                                    int64_t res_88894;
                                    double res_88895;
                                    
                                    res_88894 = res_88886 - 1;
                                    res_88895 = sitofp_i64_f64(res_88894);
                                    res_88893 = res_88895;
                                } else {
                                    res_88893 = arg_88885;
                                }
                                res_88889 = res_88893;
                            }
                            negate_arg_88896 = gridHalfWidth_73921 /
                                delta_73922;
                            arg_88897 = 0.0 - negate_arg_88896;
                            res_88898 = fptosi_f64_i64(arg_88897);
                            res_88899 = sitofp_i64_f64(res_88898);
                            cond_88900 = 0.0 <= arg_88897;
                            if (cond_88900) {
                                char cond_88902;
                                double res_88903;
                                
                                cond_88902 = res_88899 < arg_88897;
                                if (cond_88902) {
                                    res_88903 = res_88899;
                                } else {
                                    res_88903 = arg_88897;
                                }
                                res_88901 = res_88903;
                            } else {
                                char cond_88904;
                                double res_88905;
                                
                                cond_88904 = arg_88897 < res_88899;
                                if (cond_88904) {
                                    int64_t res_88906;
                                    double res_88907;
                                    
                                    res_88906 = res_88898 - 1;
                                    res_88907 = sitofp_i64_f64(res_88906);
                                    res_88905 = res_88907;
                                } else {
                                    res_88905 = arg_88897;
                                }
                                res_88901 = res_88905;
                            }
                            res_88883 = res_88889;
                            res_88884 = res_88901;
                        } else {
                            double arg_88908;
                            int64_t res_88909;
                            double res_88910;
                            char cond_88911;
                            double res_88912;
                            double arg_88919;
                            int64_t res_88920;
                            double res_88921;
                            char cond_88922;
                            double res_88923;
                            
                            arg_88908 = res_88859 / delta_73922;
                            res_88909 = fptosi_f64_i64(arg_88908);
                            res_88910 = sitofp_i64_f64(res_88909);
                            cond_88911 = 0.0 <= arg_88908;
                            if (cond_88911) {
                                char cond_88913;
                                double res_88914;
                                
                                cond_88913 = res_88910 < arg_88908;
                                if (cond_88913) {
                                    res_88914 = res_88910;
                                } else {
                                    res_88914 = arg_88908;
                                }
                                res_88912 = res_88914;
                            } else {
                                char cond_88915;
                                double res_88916;
                                
                                cond_88915 = arg_88908 < res_88910;
                                if (cond_88915) {
                                    int64_t res_88917;
                                    double res_88918;
                                    
                                    res_88917 = res_88909 - 1;
                                    res_88918 = sitofp_i64_f64(res_88917);
                                    res_88916 = res_88918;
                                } else {
                                    res_88916 = arg_88908;
                                }
                                res_88912 = res_88916;
                            }
                            arg_88919 = gridHalfWidth_73921 / delta_73922;
                            res_88920 = fptosi_f64_i64(arg_88919);
                            res_88921 = sitofp_i64_f64(res_88920);
                            cond_88922 = 0.0 <= arg_88919;
                            if (cond_88922) {
                                char cond_88924;
                                double res_88925;
                                
                                cond_88924 = res_88921 < arg_88919;
                                if (cond_88924) {
                                    res_88925 = res_88921;
                                } else {
                                    res_88925 = arg_88919;
                                }
                                res_88923 = res_88925;
                            } else {
                                char cond_88926;
                                double res_88927;
                                
                                cond_88926 = arg_88919 < res_88921;
                                if (cond_88926) {
                                    int64_t res_88928;
                                    double res_88929;
                                    
                                    res_88928 = res_88920 - 1;
                                    res_88929 = sitofp_i64_f64(res_88928);
                                    res_88927 = res_88929;
                                } else {
                                    res_88927 = arg_88919;
                                }
                                res_88923 = res_88927;
                            }
                            res_88883 = res_88912;
                            res_88884 = res_88923;
                        }
                        res_88881 = res_88883;
                        res_88882 = res_88884;
                    }
                    res_88871 = res_88881;
                    res_88872 = res_88882;
                    res_88873 = 0.0;
                    res_88874 = x_88879;
                    res_88875 = cond_88880;
                } else {
                    double res_88930;
                    double res_88931;
                    double res_88932;
                    char res_88933;
                    char res_88934;
                    
                    if (res_88870) {
                        double y_88935;
                        char cond_88936;
                        char res_88937;
                        char x_88938;
                        char cond_88939;
                        double res_88940;
                        double res_88941;
                        
                        y_88935 = 0.0 - gridHalfWidth_73921;
                        cond_88936 = y_88935 <= res_88860;
                        res_88937 = res_88860 < gridHalfWidth_73921;
                        x_88938 = cond_88936 && res_88937;
                        cond_88939 = !x_88938;
                        if (cond_88939) {
                            res_88940 = 0.0;
                            res_88941 = 0.0;
                        } else {
                            double res_88942;
                            double res_88943;
                            
                            if (cond_88866) {
                                double arg_88944;
                                int64_t res_88945;
                                double res_88946;
                                char cond_88947;
                                double res_88948;
                                double arg_88955;
                                int64_t res_88956;
                                double res_88957;
                                char cond_88958;
                                double res_88959;
                                
                                arg_88944 = gridHalfWidth_73921 / delta_73922;
                                res_88945 = fptosi_f64_i64(arg_88944);
                                res_88946 = sitofp_i64_f64(res_88945);
                                cond_88947 = 0.0 <= arg_88944;
                                if (cond_88947) {
                                    char cond_88949;
                                    double res_88950;
                                    
                                    cond_88949 = res_88946 < arg_88944;
                                    if (cond_88949) {
                                        res_88950 = res_88946;
                                    } else {
                                        res_88950 = arg_88944;
                                    }
                                    res_88948 = res_88950;
                                } else {
                                    char cond_88951;
                                    double res_88952;
                                    
                                    cond_88951 = arg_88944 < res_88946;
                                    if (cond_88951) {
                                        int64_t res_88953;
                                        double res_88954;
                                        
                                        res_88953 = res_88945 - 1;
                                        res_88954 = sitofp_i64_f64(res_88953);
                                        res_88952 = res_88954;
                                    } else {
                                        res_88952 = arg_88944;
                                    }
                                    res_88948 = res_88952;
                                }
                                arg_88955 = res_88860 / delta_73922;
                                res_88956 = fptosi_f64_i64(arg_88955);
                                res_88957 = sitofp_i64_f64(res_88956);
                                cond_88958 = 0.0 <= arg_88955;
                                if (cond_88958) {
                                    char cond_88960;
                                    double res_88961;
                                    
                                    cond_88960 = res_88957 < arg_88955;
                                    if (cond_88960) {
                                        res_88961 = res_88957;
                                    } else {
                                        res_88961 = arg_88955;
                                    }
                                    res_88959 = res_88961;
                                } else {
                                    char cond_88962;
                                    double res_88963;
                                    
                                    cond_88962 = arg_88955 < res_88957;
                                    if (cond_88962) {
                                        int64_t res_88964;
                                        double res_88965;
                                        
                                        res_88964 = res_88956 - 1;
                                        res_88965 = sitofp_i64_f64(res_88964);
                                        res_88963 = res_88965;
                                    } else {
                                        res_88963 = arg_88955;
                                    }
                                    res_88959 = res_88963;
                                }
                                res_88942 = res_88948;
                                res_88943 = res_88959;
                            } else {
                                double negate_arg_88966;
                                double arg_88967;
                                int64_t res_88968;
                                double res_88969;
                                char cond_88970;
                                double res_88971;
                                double arg_88978;
                                int64_t res_88979;
                                double res_88980;
                                char cond_88981;
                                double res_88982;
                                
                                negate_arg_88966 = gridHalfWidth_73921 /
                                    delta_73922;
                                arg_88967 = 0.0 - negate_arg_88966;
                                res_88968 = fptosi_f64_i64(arg_88967);
                                res_88969 = sitofp_i64_f64(res_88968);
                                cond_88970 = 0.0 <= arg_88967;
                                if (cond_88970) {
                                    char cond_88972;
                                    double res_88973;
                                    
                                    cond_88972 = res_88969 < arg_88967;
                                    if (cond_88972) {
                                        res_88973 = res_88969;
                                    } else {
                                        res_88973 = arg_88967;
                                    }
                                    res_88971 = res_88973;
                                } else {
                                    char cond_88974;
                                    double res_88975;
                                    
                                    cond_88974 = arg_88967 < res_88969;
                                    if (cond_88974) {
                                        int64_t res_88976;
                                        double res_88977;
                                        
                                        res_88976 = res_88968 - 1;
                                        res_88977 = sitofp_i64_f64(res_88976);
                                        res_88975 = res_88977;
                                    } else {
                                        res_88975 = arg_88967;
                                    }
                                    res_88971 = res_88975;
                                }
                                arg_88978 = res_88860 / delta_73922;
                                res_88979 = fptosi_f64_i64(arg_88978);
                                res_88980 = sitofp_i64_f64(res_88979);
                                cond_88981 = 0.0 <= arg_88978;
                                if (cond_88981) {
                                    char cond_88983;
                                    double res_88984;
                                    
                                    cond_88983 = res_88980 < arg_88978;
                                    if (cond_88983) {
                                        res_88984 = res_88980;
                                    } else {
                                        res_88984 = arg_88978;
                                    }
                                    res_88982 = res_88984;
                                } else {
                                    char cond_88985;
                                    double res_88986;
                                    
                                    cond_88985 = arg_88978 < res_88980;
                                    if (cond_88985) {
                                        int64_t res_88987;
                                        double res_88988;
                                        
                                        res_88987 = res_88979 - 1;
                                        res_88988 = sitofp_i64_f64(res_88987);
                                        res_88986 = res_88988;
                                    } else {
                                        res_88986 = arg_88978;
                                    }
                                    res_88982 = res_88986;
                                }
                                res_88942 = res_88971;
                                res_88943 = res_88982;
                            }
                            res_88940 = res_88942;
                            res_88941 = res_88943;
                        }
                        res_88930 = res_88940;
                        res_88931 = res_88941;
                        res_88932 = 0.0;
                        res_88933 = x_88938;
                        res_88934 = cond_88939;
                    } else {
                        double arg_88989;
                        double arg_88990;
                        double x_88991;
                        double y_88992;
                        double res_88993;
                        double y_88994;
                        double res_88995;
                        double x_88996;
                        double res_88997;
                        double x_88998;
                        double x_88999;
                        double res_89000;
                        double x_89001;
                        double res_89002;
                        double x_89003;
                        double res_89004;
                        char cond_89005;
                        char res_89006;
                        char x_89007;
                        char cond_89008;
                        char res_89009;
                        char x_89010;
                        char x_89011;
                        char y_89012;
                        char res_89013;
                        char cond_89014;
                        char res_89015;
                        char x_89016;
                        double res_89017;
                        double res_89018;
                        double res_89019;
                        double res_89020;
                        char res_89021;
                        char res_89022;
                        double x_89677;
                        double x_89678;
                        double x_89679;
                        double y_89680;
                        double x_89681;
                        double x_89682;
                        double res_89683;
                        
                        arg_88989 = eAngles_zzip_res_elem_89726 + 270.0;
                        arg_88990 = 1.7453292519943295e-2 * arg_88989;
                        x_88991 = futrts_sin64(arg_88990);
                        y_88992 = futrts_cos64(arg_88990);
                        res_88993 = x_88991 / y_88992;
                        y_88994 = res_88859 * res_88993;
                        res_88995 = res_88860 - y_88994;
                        x_88996 = gridHalfWidth_73921 - res_88995;
                        res_88997 = x_88996 / res_88993;
                        x_88998 = 0.0 - gridHalfWidth_73921;
                        x_88999 = x_88998 - res_88995;
                        res_89000 = x_88999 / res_88993;
                        x_89001 = res_88993 * gridHalfWidth_73921;
                        res_89002 = x_89001 + res_88995;
                        x_89003 = res_88993 * x_88998;
                        res_89004 = x_89003 + res_88995;
                        cond_89005 = 45.0 < eAngles_zzip_res_elem_89726;
                        res_89006 = eAngles_zzip_res_elem_89726 <= 135.0;
                        x_89007 = cond_89005 && res_89006;
                        cond_89008 = 225.0 <= eAngles_zzip_res_elem_89726;
                        res_89009 = eAngles_zzip_res_elem_89726 <= 315.0;
                        x_89010 = cond_89008 && res_89009;
                        x_89011 = !x_89007;
                        y_89012 = x_89011 && x_89010;
                        res_89013 = x_89007 || y_89012;
                        cond_89014 = 0.0 < eAngles_zzip_res_elem_89726;
                        res_89015 = eAngles_zzip_res_elem_89726 < 90.0;
                        x_89016 = cond_89014 && res_89015;
                        if (x_89016) {
                            char cond_89023;
                            char res_89024;
                            char x_89025;
                            char y_89026;
                            char cond_89027;
                            double res_89028;
                            double res_89029;
                            char cond_89037;
                            char cond_89038;
                            char eq_89039;
                            double res_89040;
                            double res_89041;
                            double res_89042;
                            double res_89043;
                            char res_89044;
                            
                            cond_89023 = gridHalfWidth_73921 < res_89000;
                            res_89024 = res_89000 < x_88998;
                            x_89025 = !cond_89023;
                            y_89026 = x_89025 && res_89024;
                            cond_89027 = cond_89023 || y_89026;
                            if (cond_89027) {
                                char cond_89030;
                                char res_89031;
                                char x_89032;
                                char y_89033;
                                char cond_89034;
                                double res_89035;
                                double res_89036;
                                
                                cond_89030 = gridHalfWidth_73921 < res_89002;
                                res_89031 = res_89002 < x_88998;
                                x_89032 = !cond_89030;
                                y_89033 = x_89032 && res_89031;
                                cond_89034 = cond_89030 || y_89033;
                                if (cond_89034) {
                                    res_89035 = 0.0;
                                } else {
                                    res_89035 = gridHalfWidth_73921;
                                }
                                if (cond_89034) {
                                    res_89036 = 0.0;
                                } else {
                                    res_89036 = res_89002;
                                }
                                res_89028 = res_89035;
                                res_89029 = res_89036;
                            } else {
                                res_89028 = res_89000;
                                res_89029 = x_88998;
                            }
                            cond_89037 = res_89028 == 0.0;
                            cond_89038 = res_89029 == 0.0;
                            eq_89039 = cond_89037 && cond_89038;
                            if (eq_89039) {
                                res_89040 = 0.0;
                                res_89041 = 0.0;
                                res_89042 = 0.0;
                                res_89043 = 0.0;
                                res_89044 = 1;
                            } else {
                                double res_89045;
                                double res_89046;
                                double res_89047;
                                double res_89048;
                                char res_89049;
                                
                                if (res_89013) {
                                    char cond_89050;
                                    char cond_89051;
                                    char eq_89052;
                                    char x_89053;
                                    double res_89054;
                                    double res_89055;
                                    double res_89079;
                                    int64_t res_89080;
                                    double res_89081;
                                    char cond_89082;
                                    double res_89083;
                                    char cond_89090;
                                    double res_89091;
                                    int64_t res_89106;
                                    double res_89107;
                                    char cond_89108;
                                    double res_89109;
                                    
                                    cond_89050 = res_89028 == res_89000;
                                    cond_89051 = res_89029 == x_88998;
                                    eq_89052 = cond_89050 && cond_89051;
                                    x_89053 = !eq_89052;
                                    if (eq_89052) {
                                        double arg_89056;
                                        int64_t res_89057;
                                        double res_89058;
                                        char cond_89059;
                                        double res_89060;
                                        double res_89067;
                                        double x_89074;
                                        double y_89075;
                                        double res_89076;
                                        
                                        arg_89056 = res_89028 / delta_73922;
                                        res_89057 = fptosi_f64_i64(arg_89056);
                                        res_89058 = sitofp_i64_f64(res_89057);
                                        cond_89059 = 0.0 <= arg_89056;
                                        if (cond_89059) {
                                            char cond_89061;
                                            double res_89062;
                                            
                                            cond_89061 = res_89058 < arg_89056;
                                            if (cond_89061) {
                                                int64_t res_89063;
                                                double res_89064;
                                                
                                                res_89063 = res_89057 + 1;
                                                res_89064 =
                                                    sitofp_i64_f64(res_89063);
                                                res_89062 = res_89064;
                                            } else {
                                                res_89062 = arg_89056;
                                            }
                                            res_89060 = res_89062;
                                        } else {
                                            char cond_89065;
                                            double res_89066;
                                            
                                            cond_89065 = arg_89056 < res_89058;
                                            if (cond_89065) {
                                                res_89066 = res_89058;
                                            } else {
                                                res_89066 = arg_89056;
                                            }
                                            res_89060 = res_89066;
                                        }
                                        if (cond_89059) {
                                            char cond_89068;
                                            double res_89069;
                                            
                                            cond_89068 = res_89058 < arg_89056;
                                            if (cond_89068) {
                                                int64_t res_89070;
                                                double res_89071;
                                                
                                                res_89070 = res_89057 + 1;
                                                res_89071 =
                                                    sitofp_i64_f64(res_89070);
                                                res_89069 = res_89071;
                                            } else {
                                                res_89069 = arg_89056;
                                            }
                                            res_89067 = res_89069;
                                        } else {
                                            char cond_89072;
                                            double res_89073;
                                            
                                            cond_89072 = arg_89056 < res_89058;
                                            if (cond_89072) {
                                                res_89073 = res_89058;
                                            } else {
                                                res_89073 = arg_89056;
                                            }
                                            res_89067 = res_89073;
                                        }
                                        x_89074 = res_88993 * res_89067;
                                        y_89075 = res_88995 / delta_73922;
                                        res_89076 = x_89074 + y_89075;
                                        res_89054 = res_89060;
                                        res_89055 = res_89076;
                                    } else {
                                        double res_89077;
                                        double res_89078;
                                        
                                        res_89077 = res_89028 / delta_73922;
                                        res_89078 = res_89029 / delta_73922;
                                        res_89054 = res_89077;
                                        res_89055 = res_89078;
                                    }
                                    res_89079 = res_89054 + 0.5;
                                    res_89080 = fptosi_f64_i64(res_89079);
                                    res_89081 = sitofp_i64_f64(res_89080);
                                    cond_89082 = 0.0 <= res_89079;
                                    if (cond_89082) {
                                        char cond_89084;
                                        double res_89085;
                                        
                                        cond_89084 = res_89081 < res_89079;
                                        if (cond_89084) {
                                            res_89085 = res_89081;
                                        } else {
                                            res_89085 = res_89079;
                                        }
                                        res_89083 = res_89085;
                                    } else {
                                        char cond_89086;
                                        double res_89087;
                                        
                                        cond_89086 = res_89079 < res_89081;
                                        if (cond_89086) {
                                            int64_t res_89088;
                                            double res_89089;
                                            
                                            res_89088 = res_89080 - 1;
                                            res_89089 =
                                                sitofp_i64_f64(res_89088);
                                            res_89087 = res_89089;
                                        } else {
                                            res_89087 = res_89079;
                                        }
                                        res_89083 = res_89087;
                                    }
                                    cond_89090 = res_89083 == res_89079;
                                    if (cond_89090) {
                                        int64_t res_89092;
                                        double res_89093;
                                        char cond_89094;
                                        double res_89095;
                                        int64_t x_89102;
                                        int64_t cond_89103;
                                        char cond_89104;
                                        double res_89105;
                                        
                                        res_89092 = fptosi_f64_i64(res_89054);
                                        res_89093 = sitofp_i64_f64(res_89092);
                                        cond_89094 = 0.0 <= res_89054;
                                        if (cond_89094) {
                                            char cond_89096;
                                            double res_89097;
                                            
                                            cond_89096 = res_89093 < res_89054;
                                            if (cond_89096) {
                                                res_89097 = res_89093;
                                            } else {
                                                res_89097 = res_89054;
                                            }
                                            res_89095 = res_89097;
                                        } else {
                                            char cond_89098;
                                            double res_89099;
                                            
                                            cond_89098 = res_89054 < res_89093;
                                            if (cond_89098) {
                                                int64_t res_89100;
                                                double res_89101;
                                                
                                                res_89100 = res_89092 - 1;
                                                res_89101 =
                                                    sitofp_i64_f64(res_89100);
                                                res_89099 = res_89101;
                                            } else {
                                                res_89099 = res_89054;
                                            }
                                            res_89095 = res_89099;
                                        }
                                        x_89102 = fptosi_f64_i64(res_89095);
                                        cond_89103 = smod64(x_89102, 2);
                                        cond_89104 = cond_89103 == 0;
                                        if (cond_89104) {
                                            res_89105 = res_89095;
                                        } else {
                                            res_89105 = res_89083;
                                        }
                                        res_89091 = res_89105;
                                    } else {
                                        res_89091 = res_89083;
                                    }
                                    res_89106 = fptosi_f64_i64(res_89055);
                                    res_89107 = sitofp_i64_f64(res_89106);
                                    cond_89108 = 0.0 <= res_89055;
                                    if (cond_89108) {
                                        char cond_89110;
                                        double res_89111;
                                        
                                        cond_89110 = res_89107 < res_89055;
                                        if (cond_89110) {
                                            res_89111 = res_89107;
                                        } else {
                                            res_89111 = res_89055;
                                        }
                                        res_89109 = res_89111;
                                    } else {
                                        char cond_89112;
                                        double res_89113;
                                        
                                        cond_89112 = res_89055 < res_89107;
                                        if (cond_89112) {
                                            int64_t res_89114;
                                            double res_89115;
                                            
                                            res_89114 = res_89106 - 1;
                                            res_89115 =
                                                sitofp_i64_f64(res_89114);
                                            res_89113 = res_89115;
                                        } else {
                                            res_89113 = res_89055;
                                        }
                                        res_89109 = res_89113;
                                    }
                                    res_89045 = res_89054;
                                    res_89046 = res_89055;
                                    res_89047 = res_89091;
                                    res_89048 = res_89109;
                                    res_89049 = x_89053;
                                } else {
                                    char cond_89116;
                                    char cond_89117;
                                    char eq_89118;
                                    char x_89119;
                                    double res_89120;
                                    double res_89121;
                                    int64_t res_89145;
                                    double res_89146;
                                    char cond_89147;
                                    double res_89148;
                                    double res_89155;
                                    int64_t res_89156;
                                    double res_89157;
                                    char cond_89158;
                                    double res_89159;
                                    char cond_89166;
                                    double res_89167;
                                    
                                    cond_89116 = res_89028 ==
                                        gridHalfWidth_73921;
                                    cond_89117 = res_89029 == res_89002;
                                    eq_89118 = cond_89116 && cond_89117;
                                    x_89119 = !eq_89118;
                                    if (eq_89118) {
                                        double arg_89122;
                                        int64_t res_89123;
                                        double res_89124;
                                        char cond_89125;
                                        double res_89126;
                                        double y_89133;
                                        double x_89134;
                                        double res_89135;
                                        double res_89136;
                                        
                                        arg_89122 = res_89029 / delta_73922;
                                        res_89123 = fptosi_f64_i64(arg_89122);
                                        res_89124 = sitofp_i64_f64(res_89123);
                                        cond_89125 = 0.0 <= arg_89122;
                                        if (cond_89125) {
                                            char cond_89127;
                                            double res_89128;
                                            
                                            cond_89127 = res_89124 < arg_89122;
                                            if (cond_89127) {
                                                res_89128 = res_89124;
                                            } else {
                                                res_89128 = arg_89122;
                                            }
                                            res_89126 = res_89128;
                                        } else {
                                            char cond_89129;
                                            double res_89130;
                                            
                                            cond_89129 = arg_89122 < res_89124;
                                            if (cond_89129) {
                                                int64_t res_89131;
                                                double res_89132;
                                                
                                                res_89131 = res_89123 - 1;
                                                res_89132 =
                                                    sitofp_i64_f64(res_89131);
                                                res_89130 = res_89132;
                                            } else {
                                                res_89130 = arg_89122;
                                            }
                                            res_89126 = res_89130;
                                        }
                                        y_89133 = res_88995 / delta_73922;
                                        x_89134 = res_89126 - y_89133;
                                        res_89135 = x_89134 / res_88993;
                                        if (cond_89125) {
                                            char cond_89137;
                                            double res_89138;
                                            
                                            cond_89137 = res_89124 < arg_89122;
                                            if (cond_89137) {
                                                res_89138 = res_89124;
                                            } else {
                                                res_89138 = arg_89122;
                                            }
                                            res_89136 = res_89138;
                                        } else {
                                            char cond_89139;
                                            double res_89140;
                                            
                                            cond_89139 = arg_89122 < res_89124;
                                            if (cond_89139) {
                                                int64_t res_89141;
                                                double res_89142;
                                                
                                                res_89141 = res_89123 - 1;
                                                res_89142 =
                                                    sitofp_i64_f64(res_89141);
                                                res_89140 = res_89142;
                                            } else {
                                                res_89140 = arg_89122;
                                            }
                                            res_89136 = res_89140;
                                        }
                                        res_89120 = res_89135;
                                        res_89121 = res_89136;
                                    } else {
                                        double res_89143;
                                        double res_89144;
                                        
                                        res_89143 = res_89028 / delta_73922;
                                        res_89144 = res_89029 / delta_73922;
                                        res_89120 = res_89143;
                                        res_89121 = res_89144;
                                    }
                                    res_89145 = fptosi_f64_i64(res_89120);
                                    res_89146 = sitofp_i64_f64(res_89145);
                                    cond_89147 = 0.0 <= res_89120;
                                    if (cond_89147) {
                                        char cond_89149;
                                        double res_89150;
                                        
                                        cond_89149 = res_89146 < res_89120;
                                        if (cond_89149) {
                                            int64_t res_89151;
                                            double res_89152;
                                            
                                            res_89151 = res_89145 + 1;
                                            res_89152 =
                                                sitofp_i64_f64(res_89151);
                                            res_89150 = res_89152;
                                        } else {
                                            res_89150 = res_89120;
                                        }
                                        res_89148 = res_89150;
                                    } else {
                                        char cond_89153;
                                        double res_89154;
                                        
                                        cond_89153 = res_89120 < res_89146;
                                        if (cond_89153) {
                                            res_89154 = res_89146;
                                        } else {
                                            res_89154 = res_89120;
                                        }
                                        res_89148 = res_89154;
                                    }
                                    res_89155 = res_89121 + 0.5;
                                    res_89156 = fptosi_f64_i64(res_89155);
                                    res_89157 = sitofp_i64_f64(res_89156);
                                    cond_89158 = 0.0 <= res_89155;
                                    if (cond_89158) {
                                        char cond_89160;
                                        double res_89161;
                                        
                                        cond_89160 = res_89157 < res_89155;
                                        if (cond_89160) {
                                            res_89161 = res_89157;
                                        } else {
                                            res_89161 = res_89155;
                                        }
                                        res_89159 = res_89161;
                                    } else {
                                        char cond_89162;
                                        double res_89163;
                                        
                                        cond_89162 = res_89155 < res_89157;
                                        if (cond_89162) {
                                            int64_t res_89164;
                                            double res_89165;
                                            
                                            res_89164 = res_89156 - 1;
                                            res_89165 =
                                                sitofp_i64_f64(res_89164);
                                            res_89163 = res_89165;
                                        } else {
                                            res_89163 = res_89155;
                                        }
                                        res_89159 = res_89163;
                                    }
                                    cond_89166 = res_89159 == res_89155;
                                    if (cond_89166) {
                                        int64_t res_89168;
                                        double res_89169;
                                        char cond_89170;
                                        double res_89171;
                                        int64_t x_89178;
                                        int64_t cond_89179;
                                        char cond_89180;
                                        double res_89181;
                                        
                                        res_89168 = fptosi_f64_i64(res_89121);
                                        res_89169 = sitofp_i64_f64(res_89168);
                                        cond_89170 = 0.0 <= res_89121;
                                        if (cond_89170) {
                                            char cond_89172;
                                            double res_89173;
                                            
                                            cond_89172 = res_89169 < res_89121;
                                            if (cond_89172) {
                                                res_89173 = res_89169;
                                            } else {
                                                res_89173 = res_89121;
                                            }
                                            res_89171 = res_89173;
                                        } else {
                                            char cond_89174;
                                            double res_89175;
                                            
                                            cond_89174 = res_89121 < res_89169;
                                            if (cond_89174) {
                                                int64_t res_89176;
                                                double res_89177;
                                                
                                                res_89176 = res_89168 - 1;
                                                res_89177 =
                                                    sitofp_i64_f64(res_89176);
                                                res_89175 = res_89177;
                                            } else {
                                                res_89175 = res_89121;
                                            }
                                            res_89171 = res_89175;
                                        }
                                        x_89178 = fptosi_f64_i64(res_89171);
                                        cond_89179 = smod64(x_89178, 2);
                                        cond_89180 = cond_89179 == 0;
                                        if (cond_89180) {
                                            res_89181 = res_89171;
                                        } else {
                                            res_89181 = res_89159;
                                        }
                                        res_89167 = res_89181;
                                    } else {
                                        res_89167 = res_89159;
                                    }
                                    res_89045 = res_89120;
                                    res_89046 = res_89121;
                                    res_89047 = res_89148;
                                    res_89048 = res_89167;
                                    res_89049 = x_89119;
                                }
                                res_89040 = res_89045;
                                res_89041 = res_89046;
                                res_89042 = res_89047;
                                res_89043 = res_89048;
                                res_89044 = res_89049;
                            }
                            res_89017 = res_89040;
                            res_89018 = res_89041;
                            res_89019 = res_89042;
                            res_89020 = res_89043;
                            res_89021 = res_89044;
                            res_89022 = eq_89039;
                        } else {
                            char cond_89182;
                            char res_89183;
                            char x_89184;
                            double res_89185;
                            double res_89186;
                            double res_89187;
                            double res_89188;
                            char res_89189;
                            char res_89190;
                            
                            cond_89182 = 90.0 < eAngles_zzip_res_elem_89726;
                            res_89183 = eAngles_zzip_res_elem_89726 < 180.0;
                            x_89184 = cond_89182 && res_89183;
                            if (x_89184) {
                                char cond_89191;
                                char res_89192;
                                char x_89193;
                                char y_89194;
                                char cond_89195;
                                double res_89196;
                                double res_89197;
                                char cond_89205;
                                char cond_89206;
                                char eq_89207;
                                double res_89208;
                                double res_89209;
                                double res_89210;
                                double res_89211;
                                char res_89212;
                                
                                cond_89191 = gridHalfWidth_73921 < res_88997;
                                res_89192 = res_88997 < x_88998;
                                x_89193 = !cond_89191;
                                y_89194 = x_89193 && res_89192;
                                cond_89195 = cond_89191 || y_89194;
                                if (cond_89195) {
                                    char cond_89198;
                                    char res_89199;
                                    char x_89200;
                                    char y_89201;
                                    char cond_89202;
                                    double res_89203;
                                    double res_89204;
                                    
                                    cond_89198 = gridHalfWidth_73921 <
                                        res_89002;
                                    res_89199 = res_89002 < x_88998;
                                    x_89200 = !cond_89198;
                                    y_89201 = x_89200 && res_89199;
                                    cond_89202 = cond_89198 || y_89201;
                                    if (cond_89202) {
                                        res_89203 = 0.0;
                                    } else {
                                        res_89203 = gridHalfWidth_73921;
                                    }
                                    if (cond_89202) {
                                        res_89204 = 0.0;
                                    } else {
                                        res_89204 = res_89002;
                                    }
                                    res_89196 = res_89203;
                                    res_89197 = res_89204;
                                } else {
                                    res_89196 = res_88997;
                                    res_89197 = gridHalfWidth_73921;
                                }
                                cond_89205 = res_89196 == 0.0;
                                cond_89206 = res_89197 == 0.0;
                                eq_89207 = cond_89205 && cond_89206;
                                if (eq_89207) {
                                    res_89208 = 0.0;
                                    res_89209 = 0.0;
                                    res_89210 = 0.0;
                                    res_89211 = 0.0;
                                    res_89212 = 1;
                                } else {
                                    double res_89213;
                                    double res_89214;
                                    double res_89215;
                                    double res_89216;
                                    char res_89217;
                                    
                                    if (res_89013) {
                                        char cond_89218;
                                        char cond_89219;
                                        char eq_89220;
                                        char x_89221;
                                        double res_89222;
                                        double res_89223;
                                        double res_89247;
                                        int64_t res_89248;
                                        double res_89249;
                                        char cond_89250;
                                        double res_89251;
                                        char cond_89258;
                                        double res_89259;
                                        int64_t res_89274;
                                        double res_89275;
                                        char cond_89276;
                                        double res_89277;
                                        
                                        cond_89218 = res_89196 == res_88997;
                                        cond_89219 = res_89197 ==
                                            gridHalfWidth_73921;
                                        eq_89220 = cond_89218 && cond_89219;
                                        x_89221 = !eq_89220;
                                        if (eq_89220) {
                                            double arg_89224;
                                            int64_t res_89225;
                                            double res_89226;
                                            char cond_89227;
                                            double res_89228;
                                            double res_89235;
                                            double x_89242;
                                            double y_89243;
                                            double res_89244;
                                            
                                            arg_89224 = res_89196 / delta_73922;
                                            res_89225 =
                                                fptosi_f64_i64(arg_89224);
                                            res_89226 =
                                                sitofp_i64_f64(res_89225);
                                            cond_89227 = 0.0 <= arg_89224;
                                            if (cond_89227) {
                                                char cond_89229;
                                                double res_89230;
                                                
                                                cond_89229 = res_89226 <
                                                    arg_89224;
                                                if (cond_89229) {
                                                    int64_t res_89231;
                                                    double res_89232;
                                                    
                                                    res_89231 = res_89225 + 1;
                                                    res_89232 =
                                                        sitofp_i64_f64(res_89231);
                                                    res_89230 = res_89232;
                                                } else {
                                                    res_89230 = arg_89224;
                                                }
                                                res_89228 = res_89230;
                                            } else {
                                                char cond_89233;
                                                double res_89234;
                                                
                                                cond_89233 = arg_89224 <
                                                    res_89226;
                                                if (cond_89233) {
                                                    res_89234 = res_89226;
                                                } else {
                                                    res_89234 = arg_89224;
                                                }
                                                res_89228 = res_89234;
                                            }
                                            if (cond_89227) {
                                                char cond_89236;
                                                double res_89237;
                                                
                                                cond_89236 = res_89226 <
                                                    arg_89224;
                                                if (cond_89236) {
                                                    int64_t res_89238;
                                                    double res_89239;
                                                    
                                                    res_89238 = res_89225 + 1;
                                                    res_89239 =
                                                        sitofp_i64_f64(res_89238);
                                                    res_89237 = res_89239;
                                                } else {
                                                    res_89237 = arg_89224;
                                                }
                                                res_89235 = res_89237;
                                            } else {
                                                char cond_89240;
                                                double res_89241;
                                                
                                                cond_89240 = arg_89224 <
                                                    res_89226;
                                                if (cond_89240) {
                                                    res_89241 = res_89226;
                                                } else {
                                                    res_89241 = arg_89224;
                                                }
                                                res_89235 = res_89241;
                                            }
                                            x_89242 = res_88993 * res_89235;
                                            y_89243 = res_88995 / delta_73922;
                                            res_89244 = x_89242 + y_89243;
                                            res_89222 = res_89228;
                                            res_89223 = res_89244;
                                        } else {
                                            double res_89245;
                                            double res_89246;
                                            
                                            res_89245 = res_89196 / delta_73922;
                                            res_89246 = res_89197 / delta_73922;
                                            res_89222 = res_89245;
                                            res_89223 = res_89246;
                                        }
                                        res_89247 = res_89222 + 0.5;
                                        res_89248 = fptosi_f64_i64(res_89247);
                                        res_89249 = sitofp_i64_f64(res_89248);
                                        cond_89250 = 0.0 <= res_89247;
                                        if (cond_89250) {
                                            char cond_89252;
                                            double res_89253;
                                            
                                            cond_89252 = res_89249 < res_89247;
                                            if (cond_89252) {
                                                res_89253 = res_89249;
                                            } else {
                                                res_89253 = res_89247;
                                            }
                                            res_89251 = res_89253;
                                        } else {
                                            char cond_89254;
                                            double res_89255;
                                            
                                            cond_89254 = res_89247 < res_89249;
                                            if (cond_89254) {
                                                int64_t res_89256;
                                                double res_89257;
                                                
                                                res_89256 = res_89248 - 1;
                                                res_89257 =
                                                    sitofp_i64_f64(res_89256);
                                                res_89255 = res_89257;
                                            } else {
                                                res_89255 = res_89247;
                                            }
                                            res_89251 = res_89255;
                                        }
                                        cond_89258 = res_89251 == res_89247;
                                        if (cond_89258) {
                                            int64_t res_89260;
                                            double res_89261;
                                            char cond_89262;
                                            double res_89263;
                                            int64_t x_89270;
                                            int64_t cond_89271;
                                            char cond_89272;
                                            double res_89273;
                                            
                                            res_89260 =
                                                fptosi_f64_i64(res_89222);
                                            res_89261 =
                                                sitofp_i64_f64(res_89260);
                                            cond_89262 = 0.0 <= res_89222;
                                            if (cond_89262) {
                                                char cond_89264;
                                                double res_89265;
                                                
                                                cond_89264 = res_89261 <
                                                    res_89222;
                                                if (cond_89264) {
                                                    res_89265 = res_89261;
                                                } else {
                                                    res_89265 = res_89222;
                                                }
                                                res_89263 = res_89265;
                                            } else {
                                                char cond_89266;
                                                double res_89267;
                                                
                                                cond_89266 = res_89222 <
                                                    res_89261;
                                                if (cond_89266) {
                                                    int64_t res_89268;
                                                    double res_89269;
                                                    
                                                    res_89268 = res_89260 - 1;
                                                    res_89269 =
                                                        sitofp_i64_f64(res_89268);
                                                    res_89267 = res_89269;
                                                } else {
                                                    res_89267 = res_89222;
                                                }
                                                res_89263 = res_89267;
                                            }
                                            x_89270 = fptosi_f64_i64(res_89263);
                                            cond_89271 = smod64(x_89270, 2);
                                            cond_89272 = cond_89271 == 0;
                                            if (cond_89272) {
                                                res_89273 = res_89263;
                                            } else {
                                                res_89273 = res_89251;
                                            }
                                            res_89259 = res_89273;
                                        } else {
                                            res_89259 = res_89251;
                                        }
                                        res_89274 = fptosi_f64_i64(res_89223);
                                        res_89275 = sitofp_i64_f64(res_89274);
                                        cond_89276 = 0.0 <= res_89223;
                                        if (cond_89276) {
                                            char cond_89278;
                                            double res_89279;
                                            
                                            cond_89278 = res_89275 < res_89223;
                                            if (cond_89278) {
                                                int64_t res_89280;
                                                double res_89281;
                                                
                                                res_89280 = res_89274 + 1;
                                                res_89281 =
                                                    sitofp_i64_f64(res_89280);
                                                res_89279 = res_89281;
                                            } else {
                                                res_89279 = res_89223;
                                            }
                                            res_89277 = res_89279;
                                        } else {
                                            char cond_89282;
                                            double res_89283;
                                            
                                            cond_89282 = res_89223 < res_89275;
                                            if (cond_89282) {
                                                res_89283 = res_89275;
                                            } else {
                                                res_89283 = res_89223;
                                            }
                                            res_89277 = res_89283;
                                        }
                                        res_89213 = res_89222;
                                        res_89214 = res_89223;
                                        res_89215 = res_89259;
                                        res_89216 = res_89277;
                                        res_89217 = x_89221;
                                    } else {
                                        char cond_89284;
                                        char cond_89285;
                                        char eq_89286;
                                        char x_89287;
                                        double res_89288;
                                        double res_89289;
                                        int64_t res_89313;
                                        double res_89314;
                                        char cond_89315;
                                        double res_89316;
                                        double res_89323;
                                        int64_t res_89324;
                                        double res_89325;
                                        char cond_89326;
                                        double res_89327;
                                        char cond_89334;
                                        double res_89335;
                                        
                                        cond_89284 = res_89196 ==
                                            gridHalfWidth_73921;
                                        cond_89285 = res_89197 == res_89002;
                                        eq_89286 = cond_89284 && cond_89285;
                                        x_89287 = !eq_89286;
                                        if (eq_89286) {
                                            double arg_89290;
                                            int64_t res_89291;
                                            double res_89292;
                                            char cond_89293;
                                            double res_89294;
                                            double y_89301;
                                            double x_89302;
                                            double res_89303;
                                            double res_89304;
                                            
                                            arg_89290 = res_89197 / delta_73922;
                                            res_89291 =
                                                fptosi_f64_i64(arg_89290);
                                            res_89292 =
                                                sitofp_i64_f64(res_89291);
                                            cond_89293 = 0.0 <= arg_89290;
                                            if (cond_89293) {
                                                char cond_89295;
                                                double res_89296;
                                                
                                                cond_89295 = res_89292 <
                                                    arg_89290;
                                                if (cond_89295) {
                                                    int64_t res_89297;
                                                    double res_89298;
                                                    
                                                    res_89297 = res_89291 + 1;
                                                    res_89298 =
                                                        sitofp_i64_f64(res_89297);
                                                    res_89296 = res_89298;
                                                } else {
                                                    res_89296 = arg_89290;
                                                }
                                                res_89294 = res_89296;
                                            } else {
                                                char cond_89299;
                                                double res_89300;
                                                
                                                cond_89299 = arg_89290 <
                                                    res_89292;
                                                if (cond_89299) {
                                                    res_89300 = res_89292;
                                                } else {
                                                    res_89300 = arg_89290;
                                                }
                                                res_89294 = res_89300;
                                            }
                                            y_89301 = res_88995 / delta_73922;
                                            x_89302 = res_89294 - y_89301;
                                            res_89303 = x_89302 / res_88993;
                                            if (cond_89293) {
                                                char cond_89305;
                                                double res_89306;
                                                
                                                cond_89305 = res_89292 <
                                                    arg_89290;
                                                if (cond_89305) {
                                                    int64_t res_89307;
                                                    double res_89308;
                                                    
                                                    res_89307 = res_89291 + 1;
                                                    res_89308 =
                                                        sitofp_i64_f64(res_89307);
                                                    res_89306 = res_89308;
                                                } else {
                                                    res_89306 = arg_89290;
                                                }
                                                res_89304 = res_89306;
                                            } else {
                                                char cond_89309;
                                                double res_89310;
                                                
                                                cond_89309 = arg_89290 <
                                                    res_89292;
                                                if (cond_89309) {
                                                    res_89310 = res_89292;
                                                } else {
                                                    res_89310 = arg_89290;
                                                }
                                                res_89304 = res_89310;
                                            }
                                            res_89288 = res_89303;
                                            res_89289 = res_89304;
                                        } else {
                                            double res_89311;
                                            double res_89312;
                                            
                                            res_89311 = res_89196 / delta_73922;
                                            res_89312 = res_89197 / delta_73922;
                                            res_89288 = res_89311;
                                            res_89289 = res_89312;
                                        }
                                        res_89313 = fptosi_f64_i64(res_89288);
                                        res_89314 = sitofp_i64_f64(res_89313);
                                        cond_89315 = 0.0 <= res_89288;
                                        if (cond_89315) {
                                            char cond_89317;
                                            double res_89318;
                                            
                                            cond_89317 = res_89314 < res_89288;
                                            if (cond_89317) {
                                                int64_t res_89319;
                                                double res_89320;
                                                
                                                res_89319 = res_89313 + 1;
                                                res_89320 =
                                                    sitofp_i64_f64(res_89319);
                                                res_89318 = res_89320;
                                            } else {
                                                res_89318 = res_89288;
                                            }
                                            res_89316 = res_89318;
                                        } else {
                                            char cond_89321;
                                            double res_89322;
                                            
                                            cond_89321 = res_89288 < res_89314;
                                            if (cond_89321) {
                                                res_89322 = res_89314;
                                            } else {
                                                res_89322 = res_89288;
                                            }
                                            res_89316 = res_89322;
                                        }
                                        res_89323 = res_89289 + 0.5;
                                        res_89324 = fptosi_f64_i64(res_89323);
                                        res_89325 = sitofp_i64_f64(res_89324);
                                        cond_89326 = 0.0 <= res_89323;
                                        if (cond_89326) {
                                            char cond_89328;
                                            double res_89329;
                                            
                                            cond_89328 = res_89325 < res_89323;
                                            if (cond_89328) {
                                                res_89329 = res_89325;
                                            } else {
                                                res_89329 = res_89323;
                                            }
                                            res_89327 = res_89329;
                                        } else {
                                            char cond_89330;
                                            double res_89331;
                                            
                                            cond_89330 = res_89323 < res_89325;
                                            if (cond_89330) {
                                                int64_t res_89332;
                                                double res_89333;
                                                
                                                res_89332 = res_89324 - 1;
                                                res_89333 =
                                                    sitofp_i64_f64(res_89332);
                                                res_89331 = res_89333;
                                            } else {
                                                res_89331 = res_89323;
                                            }
                                            res_89327 = res_89331;
                                        }
                                        cond_89334 = res_89327 == res_89323;
                                        if (cond_89334) {
                                            int64_t res_89336;
                                            double res_89337;
                                            char cond_89338;
                                            double res_89339;
                                            int64_t x_89346;
                                            int64_t cond_89347;
                                            char cond_89348;
                                            double res_89349;
                                            
                                            res_89336 =
                                                fptosi_f64_i64(res_89289);
                                            res_89337 =
                                                sitofp_i64_f64(res_89336);
                                            cond_89338 = 0.0 <= res_89289;
                                            if (cond_89338) {
                                                char cond_89340;
                                                double res_89341;
                                                
                                                cond_89340 = res_89337 <
                                                    res_89289;
                                                if (cond_89340) {
                                                    res_89341 = res_89337;
                                                } else {
                                                    res_89341 = res_89289;
                                                }
                                                res_89339 = res_89341;
                                            } else {
                                                char cond_89342;
                                                double res_89343;
                                                
                                                cond_89342 = res_89289 <
                                                    res_89337;
                                                if (cond_89342) {
                                                    int64_t res_89344;
                                                    double res_89345;
                                                    
                                                    res_89344 = res_89336 - 1;
                                                    res_89345 =
                                                        sitofp_i64_f64(res_89344);
                                                    res_89343 = res_89345;
                                                } else {
                                                    res_89343 = res_89289;
                                                }
                                                res_89339 = res_89343;
                                            }
                                            x_89346 = fptosi_f64_i64(res_89339);
                                            cond_89347 = smod64(x_89346, 2);
                                            cond_89348 = cond_89347 == 0;
                                            if (cond_89348) {
                                                res_89349 = res_89339;
                                            } else {
                                                res_89349 = res_89327;
                                            }
                                            res_89335 = res_89349;
                                        } else {
                                            res_89335 = res_89327;
                                        }
                                        res_89213 = res_89288;
                                        res_89214 = res_89289;
                                        res_89215 = res_89316;
                                        res_89216 = res_89335;
                                        res_89217 = x_89287;
                                    }
                                    res_89208 = res_89213;
                                    res_89209 = res_89214;
                                    res_89210 = res_89215;
                                    res_89211 = res_89216;
                                    res_89212 = res_89217;
                                }
                                res_89185 = res_89208;
                                res_89186 = res_89209;
                                res_89187 = res_89210;
                                res_89188 = res_89211;
                                res_89189 = res_89212;
                                res_89190 = eq_89207;
                            } else {
                                char cond_89350;
                                char res_89351;
                                char x_89352;
                                double res_89353;
                                double res_89354;
                                double res_89355;
                                double res_89356;
                                char res_89357;
                                char res_89358;
                                
                                cond_89350 = 180.0 <
                                    eAngles_zzip_res_elem_89726;
                                res_89351 = eAngles_zzip_res_elem_89726 < 270.0;
                                x_89352 = cond_89350 && res_89351;
                                if (x_89352) {
                                    char cond_89359;
                                    char res_89360;
                                    char x_89361;
                                    char y_89362;
                                    char cond_89363;
                                    double res_89364;
                                    double res_89365;
                                    char cond_89373;
                                    char cond_89374;
                                    char eq_89375;
                                    double res_89376;
                                    double res_89377;
                                    double res_89378;
                                    double res_89379;
                                    char res_89380;
                                    
                                    cond_89359 = gridHalfWidth_73921 <
                                        res_88997;
                                    res_89360 = res_88997 < x_88998;
                                    x_89361 = !cond_89359;
                                    y_89362 = x_89361 && res_89360;
                                    cond_89363 = cond_89359 || y_89362;
                                    if (cond_89363) {
                                        char cond_89366;
                                        char res_89367;
                                        char x_89368;
                                        char y_89369;
                                        char cond_89370;
                                        double res_89371;
                                        double res_89372;
                                        
                                        cond_89366 = gridHalfWidth_73921 <
                                            res_89004;
                                        res_89367 = res_89004 < x_88998;
                                        x_89368 = !cond_89366;
                                        y_89369 = x_89368 && res_89367;
                                        cond_89370 = cond_89366 || y_89369;
                                        if (cond_89370) {
                                            res_89371 = 0.0;
                                        } else {
                                            res_89371 = x_88998;
                                        }
                                        if (cond_89370) {
                                            res_89372 = 0.0;
                                        } else {
                                            res_89372 = res_89004;
                                        }
                                        res_89364 = res_89371;
                                        res_89365 = res_89372;
                                    } else {
                                        res_89364 = res_88997;
                                        res_89365 = gridHalfWidth_73921;
                                    }
                                    cond_89373 = res_89364 == 0.0;
                                    cond_89374 = res_89365 == 0.0;
                                    eq_89375 = cond_89373 && cond_89374;
                                    if (eq_89375) {
                                        res_89376 = 0.0;
                                        res_89377 = 0.0;
                                        res_89378 = 0.0;
                                        res_89379 = 0.0;
                                        res_89380 = 1;
                                    } else {
                                        double res_89381;
                                        double res_89382;
                                        double res_89383;
                                        double res_89384;
                                        char res_89385;
                                        
                                        if (res_89013) {
                                            char cond_89386;
                                            char cond_89387;
                                            char eq_89388;
                                            char x_89389;
                                            double res_89390;
                                            double res_89391;
                                            double res_89415;
                                            int64_t res_89416;
                                            double res_89417;
                                            char cond_89418;
                                            double res_89419;
                                            char cond_89426;
                                            double res_89427;
                                            int64_t res_89442;
                                            double res_89443;
                                            char cond_89444;
                                            double res_89445;
                                            
                                            cond_89386 = res_89364 == res_88997;
                                            cond_89387 = res_89365 ==
                                                gridHalfWidth_73921;
                                            eq_89388 = cond_89386 && cond_89387;
                                            x_89389 = !eq_89388;
                                            if (eq_89388) {
                                                double arg_89392;
                                                int64_t res_89393;
                                                double res_89394;
                                                char cond_89395;
                                                double res_89396;
                                                double res_89403;
                                                double x_89410;
                                                double y_89411;
                                                double res_89412;
                                                
                                                arg_89392 = res_89364 /
                                                    delta_73922;
                                                res_89393 =
                                                    fptosi_f64_i64(arg_89392);
                                                res_89394 =
                                                    sitofp_i64_f64(res_89393);
                                                cond_89395 = 0.0 <= arg_89392;
                                                if (cond_89395) {
                                                    char cond_89397;
                                                    double res_89398;
                                                    
                                                    cond_89397 = res_89394 <
                                                        arg_89392;
                                                    if (cond_89397) {
                                                        res_89398 = res_89394;
                                                    } else {
                                                        res_89398 = arg_89392;
                                                    }
                                                    res_89396 = res_89398;
                                                } else {
                                                    char cond_89399;
                                                    double res_89400;
                                                    
                                                    cond_89399 = arg_89392 <
                                                        res_89394;
                                                    if (cond_89399) {
                                                        int64_t res_89401;
                                                        double res_89402;
                                                        
                                                        res_89401 = res_89393 -
                                                            1;
                                                        res_89402 =
                                                            sitofp_i64_f64(res_89401);
                                                        res_89400 = res_89402;
                                                    } else {
                                                        res_89400 = arg_89392;
                                                    }
                                                    res_89396 = res_89400;
                                                }
                                                if (cond_89395) {
                                                    char cond_89404;
                                                    double res_89405;
                                                    
                                                    cond_89404 = res_89394 <
                                                        arg_89392;
                                                    if (cond_89404) {
                                                        res_89405 = res_89394;
                                                    } else {
                                                        res_89405 = arg_89392;
                                                    }
                                                    res_89403 = res_89405;
                                                } else {
                                                    char cond_89406;
                                                    double res_89407;
                                                    
                                                    cond_89406 = arg_89392 <
                                                        res_89394;
                                                    if (cond_89406) {
                                                        int64_t res_89408;
                                                        double res_89409;
                                                        
                                                        res_89408 = res_89393 -
                                                            1;
                                                        res_89409 =
                                                            sitofp_i64_f64(res_89408);
                                                        res_89407 = res_89409;
                                                    } else {
                                                        res_89407 = arg_89392;
                                                    }
                                                    res_89403 = res_89407;
                                                }
                                                x_89410 = res_88993 * res_89403;
                                                y_89411 = res_88995 /
                                                    delta_73922;
                                                res_89412 = x_89410 + y_89411;
                                                res_89390 = res_89396;
                                                res_89391 = res_89412;
                                            } else {
                                                double res_89413;
                                                double res_89414;
                                                
                                                res_89413 = res_89364 /
                                                    delta_73922;
                                                res_89414 = res_89365 /
                                                    delta_73922;
                                                res_89390 = res_89413;
                                                res_89391 = res_89414;
                                            }
                                            res_89415 = res_89390 + 0.5;
                                            res_89416 =
                                                fptosi_f64_i64(res_89415);
                                            res_89417 =
                                                sitofp_i64_f64(res_89416);
                                            cond_89418 = 0.0 <= res_89415;
                                            if (cond_89418) {
                                                char cond_89420;
                                                double res_89421;
                                                
                                                cond_89420 = res_89417 <
                                                    res_89415;
                                                if (cond_89420) {
                                                    res_89421 = res_89417;
                                                } else {
                                                    res_89421 = res_89415;
                                                }
                                                res_89419 = res_89421;
                                            } else {
                                                char cond_89422;
                                                double res_89423;
                                                
                                                cond_89422 = res_89415 <
                                                    res_89417;
                                                if (cond_89422) {
                                                    int64_t res_89424;
                                                    double res_89425;
                                                    
                                                    res_89424 = res_89416 - 1;
                                                    res_89425 =
                                                        sitofp_i64_f64(res_89424);
                                                    res_89423 = res_89425;
                                                } else {
                                                    res_89423 = res_89415;
                                                }
                                                res_89419 = res_89423;
                                            }
                                            cond_89426 = res_89419 == res_89415;
                                            if (cond_89426) {
                                                int64_t res_89428;
                                                double res_89429;
                                                char cond_89430;
                                                double res_89431;
                                                int64_t x_89438;
                                                int64_t cond_89439;
                                                char cond_89440;
                                                double res_89441;
                                                
                                                res_89428 =
                                                    fptosi_f64_i64(res_89390);
                                                res_89429 =
                                                    sitofp_i64_f64(res_89428);
                                                cond_89430 = 0.0 <= res_89390;
                                                if (cond_89430) {
                                                    char cond_89432;
                                                    double res_89433;
                                                    
                                                    cond_89432 = res_89429 <
                                                        res_89390;
                                                    if (cond_89432) {
                                                        res_89433 = res_89429;
                                                    } else {
                                                        res_89433 = res_89390;
                                                    }
                                                    res_89431 = res_89433;
                                                } else {
                                                    char cond_89434;
                                                    double res_89435;
                                                    
                                                    cond_89434 = res_89390 <
                                                        res_89429;
                                                    if (cond_89434) {
                                                        int64_t res_89436;
                                                        double res_89437;
                                                        
                                                        res_89436 = res_89428 -
                                                            1;
                                                        res_89437 =
                                                            sitofp_i64_f64(res_89436);
                                                        res_89435 = res_89437;
                                                    } else {
                                                        res_89435 = res_89390;
                                                    }
                                                    res_89431 = res_89435;
                                                }
                                                x_89438 =
                                                    fptosi_f64_i64(res_89431);
                                                cond_89439 = smod64(x_89438, 2);
                                                cond_89440 = cond_89439 == 0;
                                                if (cond_89440) {
                                                    res_89441 = res_89431;
                                                } else {
                                                    res_89441 = res_89419;
                                                }
                                                res_89427 = res_89441;
                                            } else {
                                                res_89427 = res_89419;
                                            }
                                            res_89442 =
                                                fptosi_f64_i64(res_89391);
                                            res_89443 =
                                                sitofp_i64_f64(res_89442);
                                            cond_89444 = 0.0 <= res_89391;
                                            if (cond_89444) {
                                                char cond_89446;
                                                double res_89447;
                                                
                                                cond_89446 = res_89443 <
                                                    res_89391;
                                                if (cond_89446) {
                                                    int64_t res_89448;
                                                    double res_89449;
                                                    
                                                    res_89448 = res_89442 + 1;
                                                    res_89449 =
                                                        sitofp_i64_f64(res_89448);
                                                    res_89447 = res_89449;
                                                } else {
                                                    res_89447 = res_89391;
                                                }
                                                res_89445 = res_89447;
                                            } else {
                                                char cond_89450;
                                                double res_89451;
                                                
                                                cond_89450 = res_89391 <
                                                    res_89443;
                                                if (cond_89450) {
                                                    res_89451 = res_89443;
                                                } else {
                                                    res_89451 = res_89391;
                                                }
                                                res_89445 = res_89451;
                                            }
                                            res_89381 = res_89390;
                                            res_89382 = res_89391;
                                            res_89383 = res_89427;
                                            res_89384 = res_89445;
                                            res_89385 = x_89389;
                                        } else {
                                            char cond_89452;
                                            char cond_89453;
                                            char eq_89454;
                                            char x_89455;
                                            double res_89456;
                                            double res_89457;
                                            int64_t res_89481;
                                            double res_89482;
                                            char cond_89483;
                                            double res_89484;
                                            double res_89491;
                                            int64_t res_89492;
                                            double res_89493;
                                            char cond_89494;
                                            double res_89495;
                                            char cond_89502;
                                            double res_89503;
                                            
                                            cond_89452 = res_89364 == x_88998;
                                            cond_89453 = res_89365 == res_89004;
                                            eq_89454 = cond_89452 && cond_89453;
                                            x_89455 = !eq_89454;
                                            if (eq_89454) {
                                                double arg_89458;
                                                int64_t res_89459;
                                                double res_89460;
                                                char cond_89461;
                                                double res_89462;
                                                double y_89469;
                                                double x_89470;
                                                double res_89471;
                                                double res_89472;
                                                
                                                arg_89458 = res_89365 /
                                                    delta_73922;
                                                res_89459 =
                                                    fptosi_f64_i64(arg_89458);
                                                res_89460 =
                                                    sitofp_i64_f64(res_89459);
                                                cond_89461 = 0.0 <= arg_89458;
                                                if (cond_89461) {
                                                    char cond_89463;
                                                    double res_89464;
                                                    
                                                    cond_89463 = res_89460 <
                                                        arg_89458;
                                                    if (cond_89463) {
                                                        int64_t res_89465;
                                                        double res_89466;
                                                        
                                                        res_89465 = res_89459 +
                                                            1;
                                                        res_89466 =
                                                            sitofp_i64_f64(res_89465);
                                                        res_89464 = res_89466;
                                                    } else {
                                                        res_89464 = arg_89458;
                                                    }
                                                    res_89462 = res_89464;
                                                } else {
                                                    char cond_89467;
                                                    double res_89468;
                                                    
                                                    cond_89467 = arg_89458 <
                                                        res_89460;
                                                    if (cond_89467) {
                                                        res_89468 = res_89460;
                                                    } else {
                                                        res_89468 = arg_89458;
                                                    }
                                                    res_89462 = res_89468;
                                                }
                                                y_89469 = res_88995 /
                                                    delta_73922;
                                                x_89470 = res_89462 - y_89469;
                                                res_89471 = x_89470 / res_88993;
                                                if (cond_89461) {
                                                    char cond_89473;
                                                    double res_89474;
                                                    
                                                    cond_89473 = res_89460 <
                                                        arg_89458;
                                                    if (cond_89473) {
                                                        int64_t res_89475;
                                                        double res_89476;
                                                        
                                                        res_89475 = res_89459 +
                                                            1;
                                                        res_89476 =
                                                            sitofp_i64_f64(res_89475);
                                                        res_89474 = res_89476;
                                                    } else {
                                                        res_89474 = arg_89458;
                                                    }
                                                    res_89472 = res_89474;
                                                } else {
                                                    char cond_89477;
                                                    double res_89478;
                                                    
                                                    cond_89477 = arg_89458 <
                                                        res_89460;
                                                    if (cond_89477) {
                                                        res_89478 = res_89460;
                                                    } else {
                                                        res_89478 = arg_89458;
                                                    }
                                                    res_89472 = res_89478;
                                                }
                                                res_89456 = res_89471;
                                                res_89457 = res_89472;
                                            } else {
                                                double res_89479;
                                                double res_89480;
                                                
                                                res_89479 = res_89364 /
                                                    delta_73922;
                                                res_89480 = res_89365 /
                                                    delta_73922;
                                                res_89456 = res_89479;
                                                res_89457 = res_89480;
                                            }
                                            res_89481 =
                                                fptosi_f64_i64(res_89456);
                                            res_89482 =
                                                sitofp_i64_f64(res_89481);
                                            cond_89483 = 0.0 <= res_89456;
                                            if (cond_89483) {
                                                char cond_89485;
                                                double res_89486;
                                                
                                                cond_89485 = res_89482 <
                                                    res_89456;
                                                if (cond_89485) {
                                                    res_89486 = res_89482;
                                                } else {
                                                    res_89486 = res_89456;
                                                }
                                                res_89484 = res_89486;
                                            } else {
                                                char cond_89487;
                                                double res_89488;
                                                
                                                cond_89487 = res_89456 <
                                                    res_89482;
                                                if (cond_89487) {
                                                    int64_t res_89489;
                                                    double res_89490;
                                                    
                                                    res_89489 = res_89481 - 1;
                                                    res_89490 =
                                                        sitofp_i64_f64(res_89489);
                                                    res_89488 = res_89490;
                                                } else {
                                                    res_89488 = res_89456;
                                                }
                                                res_89484 = res_89488;
                                            }
                                            res_89491 = res_89457 + 0.5;
                                            res_89492 =
                                                fptosi_f64_i64(res_89491);
                                            res_89493 =
                                                sitofp_i64_f64(res_89492);
                                            cond_89494 = 0.0 <= res_89491;
                                            if (cond_89494) {
                                                char cond_89496;
                                                double res_89497;
                                                
                                                cond_89496 = res_89493 <
                                                    res_89491;
                                                if (cond_89496) {
                                                    res_89497 = res_89493;
                                                } else {
                                                    res_89497 = res_89491;
                                                }
                                                res_89495 = res_89497;
                                            } else {
                                                char cond_89498;
                                                double res_89499;
                                                
                                                cond_89498 = res_89491 <
                                                    res_89493;
                                                if (cond_89498) {
                                                    int64_t res_89500;
                                                    double res_89501;
                                                    
                                                    res_89500 = res_89492 - 1;
                                                    res_89501 =
                                                        sitofp_i64_f64(res_89500);
                                                    res_89499 = res_89501;
                                                } else {
                                                    res_89499 = res_89491;
                                                }
                                                res_89495 = res_89499;
                                            }
                                            cond_89502 = res_89495 == res_89491;
                                            if (cond_89502) {
                                                int64_t res_89504;
                                                double res_89505;
                                                char cond_89506;
                                                double res_89507;
                                                int64_t x_89514;
                                                int64_t cond_89515;
                                                char cond_89516;
                                                double res_89517;
                                                
                                                res_89504 =
                                                    fptosi_f64_i64(res_89457);
                                                res_89505 =
                                                    sitofp_i64_f64(res_89504);
                                                cond_89506 = 0.0 <= res_89457;
                                                if (cond_89506) {
                                                    char cond_89508;
                                                    double res_89509;
                                                    
                                                    cond_89508 = res_89505 <
                                                        res_89457;
                                                    if (cond_89508) {
                                                        res_89509 = res_89505;
                                                    } else {
                                                        res_89509 = res_89457;
                                                    }
                                                    res_89507 = res_89509;
                                                } else {
                                                    char cond_89510;
                                                    double res_89511;
                                                    
                                                    cond_89510 = res_89457 <
                                                        res_89505;
                                                    if (cond_89510) {
                                                        int64_t res_89512;
                                                        double res_89513;
                                                        
                                                        res_89512 = res_89504 -
                                                            1;
                                                        res_89513 =
                                                            sitofp_i64_f64(res_89512);
                                                        res_89511 = res_89513;
                                                    } else {
                                                        res_89511 = res_89457;
                                                    }
                                                    res_89507 = res_89511;
                                                }
                                                x_89514 =
                                                    fptosi_f64_i64(res_89507);
                                                cond_89515 = smod64(x_89514, 2);
                                                cond_89516 = cond_89515 == 0;
                                                if (cond_89516) {
                                                    res_89517 = res_89507;
                                                } else {
                                                    res_89517 = res_89495;
                                                }
                                                res_89503 = res_89517;
                                            } else {
                                                res_89503 = res_89495;
                                            }
                                            res_89381 = res_89456;
                                            res_89382 = res_89457;
                                            res_89383 = res_89484;
                                            res_89384 = res_89503;
                                            res_89385 = x_89455;
                                        }
                                        res_89376 = res_89381;
                                        res_89377 = res_89382;
                                        res_89378 = res_89383;
                                        res_89379 = res_89384;
                                        res_89380 = res_89385;
                                    }
                                    res_89353 = res_89376;
                                    res_89354 = res_89377;
                                    res_89355 = res_89378;
                                    res_89356 = res_89379;
                                    res_89357 = res_89380;
                                    res_89358 = eq_89375;
                                } else {
                                    char cond_89518;
                                    char res_89519;
                                    char x_89520;
                                    char y_89521;
                                    char cond_89522;
                                    double res_89523;
                                    double res_89524;
                                    char cond_89532;
                                    char cond_89533;
                                    char eq_89534;
                                    double res_89535;
                                    double res_89536;
                                    double res_89537;
                                    double res_89538;
                                    char res_89539;
                                    
                                    cond_89518 = gridHalfWidth_73921 <
                                        res_89000;
                                    res_89519 = res_89000 < x_88998;
                                    x_89520 = !cond_89518;
                                    y_89521 = x_89520 && res_89519;
                                    cond_89522 = cond_89518 || y_89521;
                                    if (cond_89522) {
                                        char cond_89525;
                                        char res_89526;
                                        char x_89527;
                                        char y_89528;
                                        char cond_89529;
                                        double res_89530;
                                        double res_89531;
                                        
                                        cond_89525 = gridHalfWidth_73921 <
                                            res_89004;
                                        res_89526 = res_89004 < x_88998;
                                        x_89527 = !cond_89525;
                                        y_89528 = x_89527 && res_89526;
                                        cond_89529 = cond_89525 || y_89528;
                                        if (cond_89529) {
                                            res_89530 = 0.0;
                                        } else {
                                            res_89530 = x_88998;
                                        }
                                        if (cond_89529) {
                                            res_89531 = 0.0;
                                        } else {
                                            res_89531 = res_89004;
                                        }
                                        res_89523 = res_89530;
                                        res_89524 = res_89531;
                                    } else {
                                        res_89523 = res_89000;
                                        res_89524 = x_88998;
                                    }
                                    cond_89532 = res_89523 == 0.0;
                                    cond_89533 = res_89524 == 0.0;
                                    eq_89534 = cond_89532 && cond_89533;
                                    if (eq_89534) {
                                        res_89535 = 0.0;
                                        res_89536 = 0.0;
                                        res_89537 = 0.0;
                                        res_89538 = 0.0;
                                        res_89539 = 1;
                                    } else {
                                        double res_89540;
                                        double res_89541;
                                        double res_89542;
                                        double res_89543;
                                        char res_89544;
                                        
                                        if (res_89013) {
                                            char cond_89545;
                                            char cond_89546;
                                            char eq_89547;
                                            char x_89548;
                                            double res_89549;
                                            double res_89550;
                                            double res_89574;
                                            int64_t res_89575;
                                            double res_89576;
                                            char cond_89577;
                                            double res_89578;
                                            char cond_89585;
                                            double res_89586;
                                            int64_t res_89601;
                                            double res_89602;
                                            char cond_89603;
                                            double res_89604;
                                            
                                            cond_89545 = res_89523 == res_89000;
                                            cond_89546 = res_89524 == x_88998;
                                            eq_89547 = cond_89545 && cond_89546;
                                            x_89548 = !eq_89547;
                                            if (eq_89547) {
                                                double arg_89551;
                                                int64_t res_89552;
                                                double res_89553;
                                                char cond_89554;
                                                double res_89555;
                                                double res_89562;
                                                double x_89569;
                                                double y_89570;
                                                double res_89571;
                                                
                                                arg_89551 = res_89523 /
                                                    delta_73922;
                                                res_89552 =
                                                    fptosi_f64_i64(arg_89551);
                                                res_89553 =
                                                    sitofp_i64_f64(res_89552);
                                                cond_89554 = 0.0 <= arg_89551;
                                                if (cond_89554) {
                                                    char cond_89556;
                                                    double res_89557;
                                                    
                                                    cond_89556 = res_89553 <
                                                        arg_89551;
                                                    if (cond_89556) {
                                                        res_89557 = res_89553;
                                                    } else {
                                                        res_89557 = arg_89551;
                                                    }
                                                    res_89555 = res_89557;
                                                } else {
                                                    char cond_89558;
                                                    double res_89559;
                                                    
                                                    cond_89558 = arg_89551 <
                                                        res_89553;
                                                    if (cond_89558) {
                                                        int64_t res_89560;
                                                        double res_89561;
                                                        
                                                        res_89560 = res_89552 -
                                                            1;
                                                        res_89561 =
                                                            sitofp_i64_f64(res_89560);
                                                        res_89559 = res_89561;
                                                    } else {
                                                        res_89559 = arg_89551;
                                                    }
                                                    res_89555 = res_89559;
                                                }
                                                if (cond_89554) {
                                                    char cond_89563;
                                                    double res_89564;
                                                    
                                                    cond_89563 = res_89553 <
                                                        arg_89551;
                                                    if (cond_89563) {
                                                        res_89564 = res_89553;
                                                    } else {
                                                        res_89564 = arg_89551;
                                                    }
                                                    res_89562 = res_89564;
                                                } else {
                                                    char cond_89565;
                                                    double res_89566;
                                                    
                                                    cond_89565 = arg_89551 <
                                                        res_89553;
                                                    if (cond_89565) {
                                                        int64_t res_89567;
                                                        double res_89568;
                                                        
                                                        res_89567 = res_89552 -
                                                            1;
                                                        res_89568 =
                                                            sitofp_i64_f64(res_89567);
                                                        res_89566 = res_89568;
                                                    } else {
                                                        res_89566 = arg_89551;
                                                    }
                                                    res_89562 = res_89566;
                                                }
                                                x_89569 = res_88993 * res_89562;
                                                y_89570 = res_88995 /
                                                    delta_73922;
                                                res_89571 = x_89569 + y_89570;
                                                res_89549 = res_89555;
                                                res_89550 = res_89571;
                                            } else {
                                                double res_89572;
                                                double res_89573;
                                                
                                                res_89572 = res_89523 /
                                                    delta_73922;
                                                res_89573 = res_89524 /
                                                    delta_73922;
                                                res_89549 = res_89572;
                                                res_89550 = res_89573;
                                            }
                                            res_89574 = res_89549 + 0.5;
                                            res_89575 =
                                                fptosi_f64_i64(res_89574);
                                            res_89576 =
                                                sitofp_i64_f64(res_89575);
                                            cond_89577 = 0.0 <= res_89574;
                                            if (cond_89577) {
                                                char cond_89579;
                                                double res_89580;
                                                
                                                cond_89579 = res_89576 <
                                                    res_89574;
                                                if (cond_89579) {
                                                    res_89580 = res_89576;
                                                } else {
                                                    res_89580 = res_89574;
                                                }
                                                res_89578 = res_89580;
                                            } else {
                                                char cond_89581;
                                                double res_89582;
                                                
                                                cond_89581 = res_89574 <
                                                    res_89576;
                                                if (cond_89581) {
                                                    int64_t res_89583;
                                                    double res_89584;
                                                    
                                                    res_89583 = res_89575 - 1;
                                                    res_89584 =
                                                        sitofp_i64_f64(res_89583);
                                                    res_89582 = res_89584;
                                                } else {
                                                    res_89582 = res_89574;
                                                }
                                                res_89578 = res_89582;
                                            }
                                            cond_89585 = res_89578 == res_89574;
                                            if (cond_89585) {
                                                int64_t res_89587;
                                                double res_89588;
                                                char cond_89589;
                                                double res_89590;
                                                int64_t x_89597;
                                                int64_t cond_89598;
                                                char cond_89599;
                                                double res_89600;
                                                
                                                res_89587 =
                                                    fptosi_f64_i64(res_89549);
                                                res_89588 =
                                                    sitofp_i64_f64(res_89587);
                                                cond_89589 = 0.0 <= res_89549;
                                                if (cond_89589) {
                                                    char cond_89591;
                                                    double res_89592;
                                                    
                                                    cond_89591 = res_89588 <
                                                        res_89549;
                                                    if (cond_89591) {
                                                        res_89592 = res_89588;
                                                    } else {
                                                        res_89592 = res_89549;
                                                    }
                                                    res_89590 = res_89592;
                                                } else {
                                                    char cond_89593;
                                                    double res_89594;
                                                    
                                                    cond_89593 = res_89549 <
                                                        res_89588;
                                                    if (cond_89593) {
                                                        int64_t res_89595;
                                                        double res_89596;
                                                        
                                                        res_89595 = res_89587 -
                                                            1;
                                                        res_89596 =
                                                            sitofp_i64_f64(res_89595);
                                                        res_89594 = res_89596;
                                                    } else {
                                                        res_89594 = res_89549;
                                                    }
                                                    res_89590 = res_89594;
                                                }
                                                x_89597 =
                                                    fptosi_f64_i64(res_89590);
                                                cond_89598 = smod64(x_89597, 2);
                                                cond_89599 = cond_89598 == 0;
                                                if (cond_89599) {
                                                    res_89600 = res_89590;
                                                } else {
                                                    res_89600 = res_89578;
                                                }
                                                res_89586 = res_89600;
                                            } else {
                                                res_89586 = res_89578;
                                            }
                                            res_89601 =
                                                fptosi_f64_i64(res_89550);
                                            res_89602 =
                                                sitofp_i64_f64(res_89601);
                                            cond_89603 = 0.0 <= res_89550;
                                            if (cond_89603) {
                                                char cond_89605;
                                                double res_89606;
                                                
                                                cond_89605 = res_89602 <
                                                    res_89550;
                                                if (cond_89605) {
                                                    res_89606 = res_89602;
                                                } else {
                                                    res_89606 = res_89550;
                                                }
                                                res_89604 = res_89606;
                                            } else {
                                                char cond_89607;
                                                double res_89608;
                                                
                                                cond_89607 = res_89550 <
                                                    res_89602;
                                                if (cond_89607) {
                                                    int64_t res_89609;
                                                    double res_89610;
                                                    
                                                    res_89609 = res_89601 - 1;
                                                    res_89610 =
                                                        sitofp_i64_f64(res_89609);
                                                    res_89608 = res_89610;
                                                } else {
                                                    res_89608 = res_89550;
                                                }
                                                res_89604 = res_89608;
                                            }
                                            res_89540 = res_89549;
                                            res_89541 = res_89550;
                                            res_89542 = res_89586;
                                            res_89543 = res_89604;
                                            res_89544 = x_89548;
                                        } else {
                                            char cond_89611;
                                            char cond_89612;
                                            char eq_89613;
                                            char x_89614;
                                            double res_89615;
                                            double res_89616;
                                            int64_t res_89640;
                                            double res_89641;
                                            char cond_89642;
                                            double res_89643;
                                            double res_89650;
                                            int64_t res_89651;
                                            double res_89652;
                                            char cond_89653;
                                            double res_89654;
                                            char cond_89661;
                                            double res_89662;
                                            
                                            cond_89611 = res_89523 == x_88998;
                                            cond_89612 = res_89524 == res_89004;
                                            eq_89613 = cond_89611 && cond_89612;
                                            x_89614 = !eq_89613;
                                            if (eq_89613) {
                                                double arg_89617;
                                                int64_t res_89618;
                                                double res_89619;
                                                char cond_89620;
                                                double res_89621;
                                                double y_89628;
                                                double x_89629;
                                                double res_89630;
                                                double res_89631;
                                                
                                                arg_89617 = res_89524 /
                                                    delta_73922;
                                                res_89618 =
                                                    fptosi_f64_i64(arg_89617);
                                                res_89619 =
                                                    sitofp_i64_f64(res_89618);
                                                cond_89620 = 0.0 <= arg_89617;
                                                if (cond_89620) {
                                                    char cond_89622;
                                                    double res_89623;
                                                    
                                                    cond_89622 = res_89619 <
                                                        arg_89617;
                                                    if (cond_89622) {
                                                        res_89623 = res_89619;
                                                    } else {
                                                        res_89623 = arg_89617;
                                                    }
                                                    res_89621 = res_89623;
                                                } else {
                                                    char cond_89624;
                                                    double res_89625;
                                                    
                                                    cond_89624 = arg_89617 <
                                                        res_89619;
                                                    if (cond_89624) {
                                                        int64_t res_89626;
                                                        double res_89627;
                                                        
                                                        res_89626 = res_89618 -
                                                            1;
                                                        res_89627 =
                                                            sitofp_i64_f64(res_89626);
                                                        res_89625 = res_89627;
                                                    } else {
                                                        res_89625 = arg_89617;
                                                    }
                                                    res_89621 = res_89625;
                                                }
                                                y_89628 = res_88995 /
                                                    delta_73922;
                                                x_89629 = res_89621 - y_89628;
                                                res_89630 = x_89629 / res_88993;
                                                if (cond_89620) {
                                                    char cond_89632;
                                                    double res_89633;
                                                    
                                                    cond_89632 = res_89619 <
                                                        arg_89617;
                                                    if (cond_89632) {
                                                        res_89633 = res_89619;
                                                    } else {
                                                        res_89633 = arg_89617;
                                                    }
                                                    res_89631 = res_89633;
                                                } else {
                                                    char cond_89634;
                                                    double res_89635;
                                                    
                                                    cond_89634 = arg_89617 <
                                                        res_89619;
                                                    if (cond_89634) {
                                                        int64_t res_89636;
                                                        double res_89637;
                                                        
                                                        res_89636 = res_89618 -
                                                            1;
                                                        res_89637 =
                                                            sitofp_i64_f64(res_89636);
                                                        res_89635 = res_89637;
                                                    } else {
                                                        res_89635 = arg_89617;
                                                    }
                                                    res_89631 = res_89635;
                                                }
                                                res_89615 = res_89630;
                                                res_89616 = res_89631;
                                            } else {
                                                double res_89638;
                                                double res_89639;
                                                
                                                res_89638 = res_89523 /
                                                    delta_73922;
                                                res_89639 = res_89524 /
                                                    delta_73922;
                                                res_89615 = res_89638;
                                                res_89616 = res_89639;
                                            }
                                            res_89640 =
                                                fptosi_f64_i64(res_89615);
                                            res_89641 =
                                                sitofp_i64_f64(res_89640);
                                            cond_89642 = 0.0 <= res_89615;
                                            if (cond_89642) {
                                                char cond_89644;
                                                double res_89645;
                                                
                                                cond_89644 = res_89641 <
                                                    res_89615;
                                                if (cond_89644) {
                                                    res_89645 = res_89641;
                                                } else {
                                                    res_89645 = res_89615;
                                                }
                                                res_89643 = res_89645;
                                            } else {
                                                char cond_89646;
                                                double res_89647;
                                                
                                                cond_89646 = res_89615 <
                                                    res_89641;
                                                if (cond_89646) {
                                                    int64_t res_89648;
                                                    double res_89649;
                                                    
                                                    res_89648 = res_89640 - 1;
                                                    res_89649 =
                                                        sitofp_i64_f64(res_89648);
                                                    res_89647 = res_89649;
                                                } else {
                                                    res_89647 = res_89615;
                                                }
                                                res_89643 = res_89647;
                                            }
                                            res_89650 = res_89616 + 0.5;
                                            res_89651 =
                                                fptosi_f64_i64(res_89650);
                                            res_89652 =
                                                sitofp_i64_f64(res_89651);
                                            cond_89653 = 0.0 <= res_89650;
                                            if (cond_89653) {
                                                char cond_89655;
                                                double res_89656;
                                                
                                                cond_89655 = res_89652 <
                                                    res_89650;
                                                if (cond_89655) {
                                                    res_89656 = res_89652;
                                                } else {
                                                    res_89656 = res_89650;
                                                }
                                                res_89654 = res_89656;
                                            } else {
                                                char cond_89657;
                                                double res_89658;
                                                
                                                cond_89657 = res_89650 <
                                                    res_89652;
                                                if (cond_89657) {
                                                    int64_t res_89659;
                                                    double res_89660;
                                                    
                                                    res_89659 = res_89651 - 1;
                                                    res_89660 =
                                                        sitofp_i64_f64(res_89659);
                                                    res_89658 = res_89660;
                                                } else {
                                                    res_89658 = res_89650;
                                                }
                                                res_89654 = res_89658;
                                            }
                                            cond_89661 = res_89654 == res_89650;
                                            if (cond_89661) {
                                                int64_t res_89663;
                                                double res_89664;
                                                char cond_89665;
                                                double res_89666;
                                                int64_t x_89673;
                                                int64_t cond_89674;
                                                char cond_89675;
                                                double res_89676;
                                                
                                                res_89663 =
                                                    fptosi_f64_i64(res_89616);
                                                res_89664 =
                                                    sitofp_i64_f64(res_89663);
                                                cond_89665 = 0.0 <= res_89616;
                                                if (cond_89665) {
                                                    char cond_89667;
                                                    double res_89668;
                                                    
                                                    cond_89667 = res_89664 <
                                                        res_89616;
                                                    if (cond_89667) {
                                                        res_89668 = res_89664;
                                                    } else {
                                                        res_89668 = res_89616;
                                                    }
                                                    res_89666 = res_89668;
                                                } else {
                                                    char cond_89669;
                                                    double res_89670;
                                                    
                                                    cond_89669 = res_89616 <
                                                        res_89664;
                                                    if (cond_89669) {
                                                        int64_t res_89671;
                                                        double res_89672;
                                                        
                                                        res_89671 = res_89663 -
                                                            1;
                                                        res_89672 =
                                                            sitofp_i64_f64(res_89671);
                                                        res_89670 = res_89672;
                                                    } else {
                                                        res_89670 = res_89616;
                                                    }
                                                    res_89666 = res_89670;
                                                }
                                                x_89673 =
                                                    fptosi_f64_i64(res_89666);
                                                cond_89674 = smod64(x_89673, 2);
                                                cond_89675 = cond_89674 == 0;
                                                if (cond_89675) {
                                                    res_89676 = res_89666;
                                                } else {
                                                    res_89676 = res_89654;
                                                }
                                                res_89662 = res_89676;
                                            } else {
                                                res_89662 = res_89654;
                                            }
                                            res_89540 = res_89615;
                                            res_89541 = res_89616;
                                            res_89542 = res_89643;
                                            res_89543 = res_89662;
                                            res_89544 = x_89614;
                                        }
                                        res_89535 = res_89540;
                                        res_89536 = res_89541;
                                        res_89537 = res_89542;
                                        res_89538 = res_89543;
                                        res_89539 = res_89544;
                                    }
                                    res_89353 = res_89535;
                                    res_89354 = res_89536;
                                    res_89355 = res_89537;
                                    res_89356 = res_89538;
                                    res_89357 = res_89539;
                                    res_89358 = eq_89534;
                                }
                                res_89185 = res_89353;
                                res_89186 = res_89354;
                                res_89187 = res_89355;
                                res_89188 = res_89356;
                                res_89189 = res_89357;
                                res_89190 = res_89358;
                            }
                            res_89017 = res_89185;
                            res_89018 = res_89186;
                            res_89019 = res_89187;
                            res_89020 = res_89188;
                            res_89021 = res_89189;
                            res_89022 = res_89190;
                        }
                        x_89677 = res_89019 - res_89017;
                        x_89678 = fpow64(x_89677, 2.0);
                        x_89679 = res_89020 - res_89018;
                        y_89680 = fpow64(x_89679, 2.0);
                        x_89681 = x_89678 + y_89680;
                        x_89682 = futrts_sqrt64(x_89681);
                        res_89683 = x_89682 * delta_73922;
                        res_88930 = res_89019;
                        res_88931 = res_89020;
                        res_88932 = res_89683;
                        res_88933 = res_89021;
                        res_88934 = res_89022;
                    }
                    res_88871 = res_88930;
                    res_88872 = res_88931;
                    res_88873 = res_88932;
                    res_88874 = res_88933;
                    res_88875 = res_88934;
                }
                res_89684 = fptosi_f64_i16(res_88871);
                res_89685 = fptosi_f64_i16(res_88872);
                cond_89686 = !res_88875;
                if (cond_89686) {
                    part_res_89687 = 0;
                } else {
                    part_res_89687 = 1;
                }
                if (cond_89686) {
                    part_res_89688 = 1;
                } else {
                    part_res_89688 = 0;
                }
                zz_89689 = x_merge_89718 + part_res_89688;
                *(__global int32_t *) &mem_97400[j_89724 * 4] = part_res_89687;
                *(__global int16_t *) &mem_97403[j_89724 * 2] = res_89684;
                *(__global int16_t *) &mem_97406[j_89724 * 2] = res_89685;
                *(__global double *) &mem_97409[j_89724 * 8] = res_88873;
                *(__global char *) &mem_97411[j_89724] = res_88874;
                *(__global char *) &mem_97413[j_89724] = res_88875;
                foldres_89734 = zz_89689;
            } else {
                foldres_89734 = x_merge_89718;
            }
            if (slt32(local_tid_89713, group_sizze_88838) && 1) {
                *(__local int32_t *) &mem_97428[local_tid_89713 * 4] =
                    foldres_89734;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int32_t my_index_89690;
            int32_t other_index_89691;
            int32_t x_89692;
            int32_t y_89693;
            int32_t my_index_97979;
            int32_t other_index_97980;
            int32_t x_97981;
            int32_t y_97982;
            
            my_index_89690 = local_tid_89713;
            if (slt32(local_tid_89713, group_sizze_88838)) {
                y_89693 = *(volatile __local
                            int32_t *) &mem_97428[local_tid_89713 *
                                                  sizeof(int32_t)];
            }
            // in-block scan (hopefully no barriers needed)
            {
                int32_t skip_threads_97984 = 1;
                
                while (slt32(skip_threads_97984, 32)) {
                    if (slt32(local_tid_89713, group_sizze_88838) &&
                        sle32(skip_threads_97984, local_tid_89713 -
                              squot32(local_tid_89713, 32) * 32)) {
                        // read operands
                        {
                            x_89692 = *(volatile __local
                                        int32_t *) &mem_97428[(local_tid_89713 -
                                                               skip_threads_97984) *
                                                              sizeof(int32_t)];
                        }
                        // perform operation
                        {
                            int32_t zz_89694 = x_89692 + y_89693;
                            
                            y_89693 = zz_89694;
                        }
                    }
                    if (sle32(wave_sizze_97968, skip_threads_97984)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (slt32(local_tid_89713, group_sizze_88838) &&
                        sle32(skip_threads_97984, local_tid_89713 -
                              squot32(local_tid_89713, 32) * 32)) {
                        // write result
                        {
                            *(volatile __local
                              int32_t *) &mem_97428[local_tid_89713 *
                                                    sizeof(int32_t)] = y_89693;
                        }
                    }
                    if (sle32(wave_sizze_97968, skip_threads_97984)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_97984 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_89713 - squot32(local_tid_89713, 32) * 32) ==
                    31 && slt32(local_tid_89713, group_sizze_88838)) {
                    *(volatile __local
                      int32_t *) &mem_97428[squot32(local_tid_89713, 32) *
                                            sizeof(int32_t)] = y_89693;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for warp 'i+1'
            {
                if (squot32(local_tid_89713, 32) == 0 && slt32(local_tid_89713,
                                                               group_sizze_88838)) {
                    y_97982 = *(volatile __local
                                int32_t *) &mem_97428[local_tid_89713 *
                                                      sizeof(int32_t)];
                }
                // in-block scan (hopefully no barriers needed)
                {
                    int32_t skip_threads_97985 = 1;
                    
                    while (slt32(skip_threads_97985, 32)) {
                        if ((squot32(local_tid_89713, 32) == 0 &&
                             slt32(local_tid_89713, group_sizze_88838)) &&
                            sle32(skip_threads_97985, local_tid_89713 -
                                  squot32(local_tid_89713, 32) * 32)) {
                            // read operands
                            {
                                x_97981 = *(volatile __local
                                            int32_t *) &mem_97428[(local_tid_89713 -
                                                                   skip_threads_97985) *
                                                                  sizeof(int32_t)];
                            }
                            // perform operation
                            {
                                int32_t zz_97983 = x_97981 + y_97982;
                                
                                y_97982 = zz_97983;
                            }
                        }
                        if (sle32(wave_sizze_97968, skip_threads_97985)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if ((squot32(local_tid_89713, 32) == 0 &&
                             slt32(local_tid_89713, group_sizze_88838)) &&
                            sle32(skip_threads_97985, local_tid_89713 -
                                  squot32(local_tid_89713, 32) * 32)) {
                            // write result
                            {
                                *(volatile __local
                                  int32_t *) &mem_97428[local_tid_89713 *
                                                        sizeof(int32_t)] =
                                    y_97982;
                            }
                        }
                        if (sle32(wave_sizze_97968, skip_threads_97985)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_97985 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_89713, 32) == 0 ||
                      !slt32(local_tid_89713, group_sizze_88838))) {
                    // read operands
                    {
                        x_89692 = *(volatile __local
                                    int32_t *) &mem_97428[(squot32(local_tid_89713,
                                                                   32) - 1) *
                                                          sizeof(int32_t)];
                    }
                    // perform operation
                    {
                        int32_t zz_89694 = x_89692 + y_89693;
                        
                        y_89693 = zz_89694;
                    }
                    // write final result
                    {
                        *(volatile __local
                          int32_t *) &mem_97428[local_tid_89713 *
                                                sizeof(int32_t)] = y_89693;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_89713, 32) == 0) {
                    *(volatile __local int32_t *) &mem_97428[local_tid_89713 *
                                                             sizeof(int32_t)] =
                        y_89693;
                }
            }
            if (cond_89725) {
                int32_t scanned_elem_89744 = *(__local
                                               int32_t *) &mem_97428[local_tid_89713 *
                                                                     4];
                
                *(__global int32_t *) &mem_97397[j_89724 * 4] =
                    scanned_elem_89744;
            }
            
            int32_t new_carry_89749;
            
            if (is_first_thread_89747) {
                int32_t carry_89748 = *(__local int32_t *) &mem_97428[y_88841 *
                                                                      4];
                
                new_carry_89749 = carry_89748;
            } else {
                new_carry_89749 = 0;
            }
            
            int32_t new_carry_sync_89750;
            
            new_carry_sync_89750 = new_carry_89749;
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int32_t x_merge_tmp_97978 = new_carry_sync_89750;
            
            x_merge_89718 = x_merge_tmp_97978;
        }
        result_89758 = x_merge_89718;
    }
    if (local_tid_89713 == 0) {
        *(__global int32_t *) &mem_97440[group_id_89714 * 4] = result_89758;
    }
}
__kernel void scan1_kernel_90653(__local volatile int64_t *mem_aligned_0,
                                 int32_t num_elems_74001,
                                 int32_t num_iterations_90658, int32_t y_90661,
                                 int32_t convop_x_97668, __global
                                 unsigned char *mem_97685, __global
                                 unsigned char *mem_97688, __global
                                 unsigned char *mem_97692, __global
                                 unsigned char *mem_97704)
{
    __local volatile char *restrict mem_97697 = mem_aligned_0;
    int32_t wave_sizze_98069;
    int32_t group_sizze_98070;
    char thread_active_98071;
    int32_t global_tid_90653;
    int32_t local_tid_90654;
    int32_t group_id_90655;
    
    global_tid_90653 = get_global_id(0);
    local_tid_90654 = get_local_id(0);
    group_sizze_98070 = get_local_size(0);
    wave_sizze_98069 = LOCKSTEP_WIDTH;
    group_id_90655 = get_group_id(0);
    thread_active_98071 = 1;
    
    int32_t x_90662;
    char is_first_thread_90677;
    int32_t result_90683;
    
    if (thread_active_98071) {
        x_90662 = group_id_90655 * y_90661;
        is_first_thread_90677 = local_tid_90654 == 0;
        
        int32_t x_merge_90659 = 0;
        
        for (int32_t i_90660 = 0; i_90660 < num_iterations_90658; i_90660++) {
            int32_t y_90663 = i_90660 * group_sizze_90619;
            int32_t offset_90664 = x_90662 + y_90663;
            int32_t j_90665 = offset_90664 + local_tid_90654;
            char cond_90666 = slt32(j_90665, convop_x_97668);
            int32_t foldres_90669;
            
            if (cond_90666) {
                int32_t new_index_96991;
                int32_t binop_y_96993;
                int32_t new_index_96994;
                double reshape_elem_90667;
                char cond_90636;
                char cond_90637;
                int32_t part_res_90638;
                int32_t part_res_90639;
                int32_t zz_90640;
                
                new_index_96991 = squot32(j_90665, num_elems_74001);
                binop_y_96993 = new_index_96991 * num_elems_74001;
                new_index_96994 = j_90665 - binop_y_96993;
                reshape_elem_90667 = *(__global
                                       double *) &mem_97692[(new_index_96991 *
                                                             num_elems_74001 +
                                                             new_index_96994) *
                                                            8];
                cond_90636 = reshape_elem_90667 == -1.0;
                cond_90637 = !cond_90636;
                if (cond_90637) {
                    part_res_90638 = 0;
                } else {
                    part_res_90638 = 1;
                }
                if (cond_90637) {
                    part_res_90639 = 1;
                } else {
                    part_res_90639 = 0;
                }
                zz_90640 = x_merge_90659 + part_res_90639;
                *(__global int32_t *) &mem_97688[j_90665 * 4] = part_res_90638;
                foldres_90669 = zz_90640;
            } else {
                foldres_90669 = x_merge_90659;
            }
            if (slt32(local_tid_90654, group_sizze_90619) && 1) {
                *(__local int32_t *) &mem_97697[local_tid_90654 * 4] =
                    foldres_90669;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int32_t my_index_90641;
            int32_t other_index_90642;
            int32_t x_90643;
            int32_t y_90644;
            int32_t my_index_98075;
            int32_t other_index_98076;
            int32_t x_98077;
            int32_t y_98078;
            
            my_index_90641 = local_tid_90654;
            if (slt32(local_tid_90654, group_sizze_90619)) {
                y_90644 = *(volatile __local
                            int32_t *) &mem_97697[local_tid_90654 *
                                                  sizeof(int32_t)];
            }
            // in-block scan (hopefully no barriers needed)
            {
                int32_t skip_threads_98080 = 1;
                
                while (slt32(skip_threads_98080, 32)) {
                    if (slt32(local_tid_90654, group_sizze_90619) &&
                        sle32(skip_threads_98080, local_tid_90654 -
                              squot32(local_tid_90654, 32) * 32)) {
                        // read operands
                        {
                            x_90643 = *(volatile __local
                                        int32_t *) &mem_97697[(local_tid_90654 -
                                                               skip_threads_98080) *
                                                              sizeof(int32_t)];
                        }
                        // perform operation
                        {
                            int32_t zz_90645 = x_90643 + y_90644;
                            
                            y_90644 = zz_90645;
                        }
                    }
                    if (sle32(wave_sizze_98069, skip_threads_98080)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (slt32(local_tid_90654, group_sizze_90619) &&
                        sle32(skip_threads_98080, local_tid_90654 -
                              squot32(local_tid_90654, 32) * 32)) {
                        // write result
                        {
                            *(volatile __local
                              int32_t *) &mem_97697[local_tid_90654 *
                                                    sizeof(int32_t)] = y_90644;
                        }
                    }
                    if (sle32(wave_sizze_98069, skip_threads_98080)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_98080 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_90654 - squot32(local_tid_90654, 32) * 32) ==
                    31 && slt32(local_tid_90654, group_sizze_90619)) {
                    *(volatile __local
                      int32_t *) &mem_97697[squot32(local_tid_90654, 32) *
                                            sizeof(int32_t)] = y_90644;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for warp 'i+1'
            {
                if (squot32(local_tid_90654, 32) == 0 && slt32(local_tid_90654,
                                                               group_sizze_90619)) {
                    y_98078 = *(volatile __local
                                int32_t *) &mem_97697[local_tid_90654 *
                                                      sizeof(int32_t)];
                }
                // in-block scan (hopefully no barriers needed)
                {
                    int32_t skip_threads_98081 = 1;
                    
                    while (slt32(skip_threads_98081, 32)) {
                        if ((squot32(local_tid_90654, 32) == 0 &&
                             slt32(local_tid_90654, group_sizze_90619)) &&
                            sle32(skip_threads_98081, local_tid_90654 -
                                  squot32(local_tid_90654, 32) * 32)) {
                            // read operands
                            {
                                x_98077 = *(volatile __local
                                            int32_t *) &mem_97697[(local_tid_90654 -
                                                                   skip_threads_98081) *
                                                                  sizeof(int32_t)];
                            }
                            // perform operation
                            {
                                int32_t zz_98079 = x_98077 + y_98078;
                                
                                y_98078 = zz_98079;
                            }
                        }
                        if (sle32(wave_sizze_98069, skip_threads_98081)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if ((squot32(local_tid_90654, 32) == 0 &&
                             slt32(local_tid_90654, group_sizze_90619)) &&
                            sle32(skip_threads_98081, local_tid_90654 -
                                  squot32(local_tid_90654, 32) * 32)) {
                            // write result
                            {
                                *(volatile __local
                                  int32_t *) &mem_97697[local_tid_90654 *
                                                        sizeof(int32_t)] =
                                    y_98078;
                            }
                        }
                        if (sle32(wave_sizze_98069, skip_threads_98081)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_98081 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_90654, 32) == 0 ||
                      !slt32(local_tid_90654, group_sizze_90619))) {
                    // read operands
                    {
                        x_90643 = *(volatile __local
                                    int32_t *) &mem_97697[(squot32(local_tid_90654,
                                                                   32) - 1) *
                                                          sizeof(int32_t)];
                    }
                    // perform operation
                    {
                        int32_t zz_90645 = x_90643 + y_90644;
                        
                        y_90644 = zz_90645;
                    }
                    // write final result
                    {
                        *(volatile __local
                          int32_t *) &mem_97697[local_tid_90654 *
                                                sizeof(int32_t)] = y_90644;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_90654, 32) == 0) {
                    *(volatile __local int32_t *) &mem_97697[local_tid_90654 *
                                                             sizeof(int32_t)] =
                        y_90644;
                }
            }
            if (cond_90666) {
                int32_t scanned_elem_90674 = *(__local
                                               int32_t *) &mem_97697[local_tid_90654 *
                                                                     4];
                
                *(__global int32_t *) &mem_97685[j_90665 * 4] =
                    scanned_elem_90674;
            }
            
            int32_t new_carry_90679;
            
            if (is_first_thread_90677) {
                int32_t carry_90678 = *(__local int32_t *) &mem_97697[y_90622 *
                                                                      4];
                
                new_carry_90679 = carry_90678;
            } else {
                new_carry_90679 = 0;
            }
            
            int32_t new_carry_sync_90680;
            
            new_carry_sync_90680 = new_carry_90679;
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int32_t x_merge_tmp_98074 = new_carry_sync_90680;
            
            x_merge_90659 = x_merge_tmp_98074;
        }
        result_90683 = x_merge_90659;
    }
    if (local_tid_90654 == 0) {
        *(__global int32_t *) &mem_97704[group_id_90655 * 4] = result_90683;
    }
}
__kernel void scan1_kernel_91729(__local volatile int64_t *mem_aligned_0,
                                 int32_t sizze_78971,
                                 double gridHalfWidth_78975, double delta_78976,
                                 int32_t nesting_sizze_90842,
                                 int32_t num_iterations_91734, int32_t y_91737,
                                 __global
                                 unsigned char *detectorPositions_mem_97020,
                                 __global unsigned char *mem_97050, __global
                                 unsigned char *mem_97053, __global
                                 unsigned char *mem_97056, __global
                                 unsigned char *mem_97059, __global
                                 unsigned char *mem_97062, __global
                                 unsigned char *mem_97065, __global
                                 unsigned char *mem_97067, __global
                                 unsigned char *mem_97069, __global
                                 unsigned char *mem_97096)
{
    __local volatile char *restrict mem_97084 = mem_aligned_0;
    int32_t wave_sizze_98136;
    int32_t group_sizze_98137;
    char thread_active_98138;
    int32_t global_tid_91729;
    int32_t local_tid_91730;
    int32_t group_id_91731;
    
    global_tid_91729 = get_global_id(0);
    local_tid_91730 = get_local_id(0);
    group_sizze_98137 = get_local_size(0);
    wave_sizze_98136 = LOCKSTEP_WIDTH;
    group_id_91731 = get_group_id(0);
    thread_active_98138 = 1;
    
    int32_t x_91738;
    char is_first_thread_91764;
    int32_t result_91775;
    
    if (thread_active_98138) {
        x_91738 = group_id_91731 * y_91737;
        is_first_thread_91764 = local_tid_91730 == 0;
        
        int32_t x_merge_91735 = 0;
        
        for (int32_t i_91736 = 0; i_91736 < num_iterations_91734; i_91736++) {
            int32_t y_91739 = i_91736 * group_sizze_90855;
            int32_t offset_91740 = x_91738 + y_91739;
            int32_t j_91741 = offset_91740 + local_tid_91730;
            char cond_91742 = slt32(j_91741, nesting_sizze_90842);
            int32_t foldres_91751;
            
            if (cond_91742) {
                int32_t new_index_96915;
                int32_t binop_y_96917;
                int32_t new_index_96918;
                double eAngles_zzip_res_elem_91743;
                double reshape_elem_91744;
                double res_90873;
                double res_90874;
                double res_90875;
                double res_90876;
                double res_90877;
                char cond_90878;
                char res_90879;
                char x_90880;
                char y_90881;
                char res_90882;
                char cond_90883;
                char res_90884;
                char x_90885;
                char y_90886;
                char res_90887;
                double res_90888;
                double res_90889;
                double res_90890;
                char res_90891;
                char res_90892;
                int16_t res_91701;
                int16_t res_91702;
                char cond_91703;
                int32_t part_res_91704;
                int32_t part_res_91705;
                int32_t zz_91706;
                
                new_index_96915 = squot32(j_91741, sizze_78971);
                binop_y_96917 = new_index_96915 * sizze_78971;
                new_index_96918 = j_91741 - binop_y_96917;
                eAngles_zzip_res_elem_91743 = *(__global
                                                double *) &mem_97050[(new_index_96915 *
                                                                      sizze_78971 +
                                                                      new_index_96918) *
                                                                     8];
                reshape_elem_91744 = *(__global
                                       double *) &detectorPositions_mem_97020[new_index_96918 *
                                                                              8];
                res_90873 = 1.7453292519943295e-2 * eAngles_zzip_res_elem_91743;
                res_90874 = futrts_cos64(res_90873);
                res_90875 = futrts_sin64(res_90873);
                res_90876 = res_90874 * reshape_elem_91744;
                res_90877 = res_90875 * reshape_elem_91744;
                cond_90878 = eAngles_zzip_res_elem_91743 == 0.0;
                res_90879 = eAngles_zzip_res_elem_91743 == 180.0;
                x_90880 = !cond_90878;
                y_90881 = x_90880 && res_90879;
                res_90882 = cond_90878 || y_90881;
                cond_90883 = eAngles_zzip_res_elem_91743 == 90.0;
                res_90884 = eAngles_zzip_res_elem_91743 == 270.0;
                x_90885 = !cond_90883;
                y_90886 = x_90885 && res_90884;
                res_90887 = cond_90883 || y_90886;
                if (res_90882) {
                    double y_90893;
                    char cond_90894;
                    char res_90895;
                    char x_90896;
                    char cond_90897;
                    double res_90898;
                    double res_90899;
                    
                    y_90893 = 0.0 - gridHalfWidth_78975;
                    cond_90894 = y_90893 <= res_90876;
                    res_90895 = res_90876 < gridHalfWidth_78975;
                    x_90896 = cond_90894 && res_90895;
                    cond_90897 = !x_90896;
                    if (cond_90897) {
                        res_90898 = 0.0;
                        res_90899 = 0.0;
                    } else {
                        double res_90900;
                        double res_90901;
                        
                        if (cond_90878) {
                            double arg_90902;
                            int64_t res_90903;
                            double res_90904;
                            char cond_90905;
                            double res_90906;
                            double negate_arg_90913;
                            double arg_90914;
                            int64_t res_90915;
                            double res_90916;
                            char cond_90917;
                            double res_90918;
                            
                            arg_90902 = res_90876 / delta_78976;
                            res_90903 = fptosi_f64_i64(arg_90902);
                            res_90904 = sitofp_i64_f64(res_90903);
                            cond_90905 = 0.0 <= arg_90902;
                            if (cond_90905) {
                                char cond_90907;
                                double res_90908;
                                
                                cond_90907 = res_90904 < arg_90902;
                                if (cond_90907) {
                                    res_90908 = res_90904;
                                } else {
                                    res_90908 = arg_90902;
                                }
                                res_90906 = res_90908;
                            } else {
                                char cond_90909;
                                double res_90910;
                                
                                cond_90909 = arg_90902 < res_90904;
                                if (cond_90909) {
                                    int64_t res_90911;
                                    double res_90912;
                                    
                                    res_90911 = res_90903 - 1;
                                    res_90912 = sitofp_i64_f64(res_90911);
                                    res_90910 = res_90912;
                                } else {
                                    res_90910 = arg_90902;
                                }
                                res_90906 = res_90910;
                            }
                            negate_arg_90913 = gridHalfWidth_78975 /
                                delta_78976;
                            arg_90914 = 0.0 - negate_arg_90913;
                            res_90915 = fptosi_f64_i64(arg_90914);
                            res_90916 = sitofp_i64_f64(res_90915);
                            cond_90917 = 0.0 <= arg_90914;
                            if (cond_90917) {
                                char cond_90919;
                                double res_90920;
                                
                                cond_90919 = res_90916 < arg_90914;
                                if (cond_90919) {
                                    res_90920 = res_90916;
                                } else {
                                    res_90920 = arg_90914;
                                }
                                res_90918 = res_90920;
                            } else {
                                char cond_90921;
                                double res_90922;
                                
                                cond_90921 = arg_90914 < res_90916;
                                if (cond_90921) {
                                    int64_t res_90923;
                                    double res_90924;
                                    
                                    res_90923 = res_90915 - 1;
                                    res_90924 = sitofp_i64_f64(res_90923);
                                    res_90922 = res_90924;
                                } else {
                                    res_90922 = arg_90914;
                                }
                                res_90918 = res_90922;
                            }
                            res_90900 = res_90906;
                            res_90901 = res_90918;
                        } else {
                            double arg_90925;
                            int64_t res_90926;
                            double res_90927;
                            char cond_90928;
                            double res_90929;
                            double arg_90936;
                            int64_t res_90937;
                            double res_90938;
                            char cond_90939;
                            double res_90940;
                            
                            arg_90925 = res_90876 / delta_78976;
                            res_90926 = fptosi_f64_i64(arg_90925);
                            res_90927 = sitofp_i64_f64(res_90926);
                            cond_90928 = 0.0 <= arg_90925;
                            if (cond_90928) {
                                char cond_90930;
                                double res_90931;
                                
                                cond_90930 = res_90927 < arg_90925;
                                if (cond_90930) {
                                    res_90931 = res_90927;
                                } else {
                                    res_90931 = arg_90925;
                                }
                                res_90929 = res_90931;
                            } else {
                                char cond_90932;
                                double res_90933;
                                
                                cond_90932 = arg_90925 < res_90927;
                                if (cond_90932) {
                                    int64_t res_90934;
                                    double res_90935;
                                    
                                    res_90934 = res_90926 - 1;
                                    res_90935 = sitofp_i64_f64(res_90934);
                                    res_90933 = res_90935;
                                } else {
                                    res_90933 = arg_90925;
                                }
                                res_90929 = res_90933;
                            }
                            arg_90936 = gridHalfWidth_78975 / delta_78976;
                            res_90937 = fptosi_f64_i64(arg_90936);
                            res_90938 = sitofp_i64_f64(res_90937);
                            cond_90939 = 0.0 <= arg_90936;
                            if (cond_90939) {
                                char cond_90941;
                                double res_90942;
                                
                                cond_90941 = res_90938 < arg_90936;
                                if (cond_90941) {
                                    res_90942 = res_90938;
                                } else {
                                    res_90942 = arg_90936;
                                }
                                res_90940 = res_90942;
                            } else {
                                char cond_90943;
                                double res_90944;
                                
                                cond_90943 = arg_90936 < res_90938;
                                if (cond_90943) {
                                    int64_t res_90945;
                                    double res_90946;
                                    
                                    res_90945 = res_90937 - 1;
                                    res_90946 = sitofp_i64_f64(res_90945);
                                    res_90944 = res_90946;
                                } else {
                                    res_90944 = arg_90936;
                                }
                                res_90940 = res_90944;
                            }
                            res_90900 = res_90929;
                            res_90901 = res_90940;
                        }
                        res_90898 = res_90900;
                        res_90899 = res_90901;
                    }
                    res_90888 = res_90898;
                    res_90889 = res_90899;
                    res_90890 = 0.0;
                    res_90891 = x_90896;
                    res_90892 = cond_90897;
                } else {
                    double res_90947;
                    double res_90948;
                    double res_90949;
                    char res_90950;
                    char res_90951;
                    
                    if (res_90887) {
                        double y_90952;
                        char cond_90953;
                        char res_90954;
                        char x_90955;
                        char cond_90956;
                        double res_90957;
                        double res_90958;
                        
                        y_90952 = 0.0 - gridHalfWidth_78975;
                        cond_90953 = y_90952 <= res_90877;
                        res_90954 = res_90877 < gridHalfWidth_78975;
                        x_90955 = cond_90953 && res_90954;
                        cond_90956 = !x_90955;
                        if (cond_90956) {
                            res_90957 = 0.0;
                            res_90958 = 0.0;
                        } else {
                            double res_90959;
                            double res_90960;
                            
                            if (cond_90883) {
                                double arg_90961;
                                int64_t res_90962;
                                double res_90963;
                                char cond_90964;
                                double res_90965;
                                double arg_90972;
                                int64_t res_90973;
                                double res_90974;
                                char cond_90975;
                                double res_90976;
                                
                                arg_90961 = gridHalfWidth_78975 / delta_78976;
                                res_90962 = fptosi_f64_i64(arg_90961);
                                res_90963 = sitofp_i64_f64(res_90962);
                                cond_90964 = 0.0 <= arg_90961;
                                if (cond_90964) {
                                    char cond_90966;
                                    double res_90967;
                                    
                                    cond_90966 = res_90963 < arg_90961;
                                    if (cond_90966) {
                                        res_90967 = res_90963;
                                    } else {
                                        res_90967 = arg_90961;
                                    }
                                    res_90965 = res_90967;
                                } else {
                                    char cond_90968;
                                    double res_90969;
                                    
                                    cond_90968 = arg_90961 < res_90963;
                                    if (cond_90968) {
                                        int64_t res_90970;
                                        double res_90971;
                                        
                                        res_90970 = res_90962 - 1;
                                        res_90971 = sitofp_i64_f64(res_90970);
                                        res_90969 = res_90971;
                                    } else {
                                        res_90969 = arg_90961;
                                    }
                                    res_90965 = res_90969;
                                }
                                arg_90972 = res_90877 / delta_78976;
                                res_90973 = fptosi_f64_i64(arg_90972);
                                res_90974 = sitofp_i64_f64(res_90973);
                                cond_90975 = 0.0 <= arg_90972;
                                if (cond_90975) {
                                    char cond_90977;
                                    double res_90978;
                                    
                                    cond_90977 = res_90974 < arg_90972;
                                    if (cond_90977) {
                                        res_90978 = res_90974;
                                    } else {
                                        res_90978 = arg_90972;
                                    }
                                    res_90976 = res_90978;
                                } else {
                                    char cond_90979;
                                    double res_90980;
                                    
                                    cond_90979 = arg_90972 < res_90974;
                                    if (cond_90979) {
                                        int64_t res_90981;
                                        double res_90982;
                                        
                                        res_90981 = res_90973 - 1;
                                        res_90982 = sitofp_i64_f64(res_90981);
                                        res_90980 = res_90982;
                                    } else {
                                        res_90980 = arg_90972;
                                    }
                                    res_90976 = res_90980;
                                }
                                res_90959 = res_90965;
                                res_90960 = res_90976;
                            } else {
                                double negate_arg_90983;
                                double arg_90984;
                                int64_t res_90985;
                                double res_90986;
                                char cond_90987;
                                double res_90988;
                                double arg_90995;
                                int64_t res_90996;
                                double res_90997;
                                char cond_90998;
                                double res_90999;
                                
                                negate_arg_90983 = gridHalfWidth_78975 /
                                    delta_78976;
                                arg_90984 = 0.0 - negate_arg_90983;
                                res_90985 = fptosi_f64_i64(arg_90984);
                                res_90986 = sitofp_i64_f64(res_90985);
                                cond_90987 = 0.0 <= arg_90984;
                                if (cond_90987) {
                                    char cond_90989;
                                    double res_90990;
                                    
                                    cond_90989 = res_90986 < arg_90984;
                                    if (cond_90989) {
                                        res_90990 = res_90986;
                                    } else {
                                        res_90990 = arg_90984;
                                    }
                                    res_90988 = res_90990;
                                } else {
                                    char cond_90991;
                                    double res_90992;
                                    
                                    cond_90991 = arg_90984 < res_90986;
                                    if (cond_90991) {
                                        int64_t res_90993;
                                        double res_90994;
                                        
                                        res_90993 = res_90985 - 1;
                                        res_90994 = sitofp_i64_f64(res_90993);
                                        res_90992 = res_90994;
                                    } else {
                                        res_90992 = arg_90984;
                                    }
                                    res_90988 = res_90992;
                                }
                                arg_90995 = res_90877 / delta_78976;
                                res_90996 = fptosi_f64_i64(arg_90995);
                                res_90997 = sitofp_i64_f64(res_90996);
                                cond_90998 = 0.0 <= arg_90995;
                                if (cond_90998) {
                                    char cond_91000;
                                    double res_91001;
                                    
                                    cond_91000 = res_90997 < arg_90995;
                                    if (cond_91000) {
                                        res_91001 = res_90997;
                                    } else {
                                        res_91001 = arg_90995;
                                    }
                                    res_90999 = res_91001;
                                } else {
                                    char cond_91002;
                                    double res_91003;
                                    
                                    cond_91002 = arg_90995 < res_90997;
                                    if (cond_91002) {
                                        int64_t res_91004;
                                        double res_91005;
                                        
                                        res_91004 = res_90996 - 1;
                                        res_91005 = sitofp_i64_f64(res_91004);
                                        res_91003 = res_91005;
                                    } else {
                                        res_91003 = arg_90995;
                                    }
                                    res_90999 = res_91003;
                                }
                                res_90959 = res_90988;
                                res_90960 = res_90999;
                            }
                            res_90957 = res_90959;
                            res_90958 = res_90960;
                        }
                        res_90947 = res_90957;
                        res_90948 = res_90958;
                        res_90949 = 0.0;
                        res_90950 = x_90955;
                        res_90951 = cond_90956;
                    } else {
                        double arg_91006;
                        double arg_91007;
                        double x_91008;
                        double y_91009;
                        double res_91010;
                        double y_91011;
                        double res_91012;
                        double x_91013;
                        double res_91014;
                        double x_91015;
                        double x_91016;
                        double res_91017;
                        double x_91018;
                        double res_91019;
                        double x_91020;
                        double res_91021;
                        char cond_91022;
                        char res_91023;
                        char x_91024;
                        char cond_91025;
                        char res_91026;
                        char x_91027;
                        char x_91028;
                        char y_91029;
                        char res_91030;
                        char cond_91031;
                        char res_91032;
                        char x_91033;
                        double res_91034;
                        double res_91035;
                        double res_91036;
                        double res_91037;
                        char res_91038;
                        char res_91039;
                        double x_91694;
                        double x_91695;
                        double x_91696;
                        double y_91697;
                        double x_91698;
                        double x_91699;
                        double res_91700;
                        
                        arg_91006 = eAngles_zzip_res_elem_91743 + 270.0;
                        arg_91007 = 1.7453292519943295e-2 * arg_91006;
                        x_91008 = futrts_sin64(arg_91007);
                        y_91009 = futrts_cos64(arg_91007);
                        res_91010 = x_91008 / y_91009;
                        y_91011 = res_90876 * res_91010;
                        res_91012 = res_90877 - y_91011;
                        x_91013 = gridHalfWidth_78975 - res_91012;
                        res_91014 = x_91013 / res_91010;
                        x_91015 = 0.0 - gridHalfWidth_78975;
                        x_91016 = x_91015 - res_91012;
                        res_91017 = x_91016 / res_91010;
                        x_91018 = res_91010 * gridHalfWidth_78975;
                        res_91019 = x_91018 + res_91012;
                        x_91020 = res_91010 * x_91015;
                        res_91021 = x_91020 + res_91012;
                        cond_91022 = 45.0 < eAngles_zzip_res_elem_91743;
                        res_91023 = eAngles_zzip_res_elem_91743 <= 135.0;
                        x_91024 = cond_91022 && res_91023;
                        cond_91025 = 225.0 <= eAngles_zzip_res_elem_91743;
                        res_91026 = eAngles_zzip_res_elem_91743 <= 315.0;
                        x_91027 = cond_91025 && res_91026;
                        x_91028 = !x_91024;
                        y_91029 = x_91028 && x_91027;
                        res_91030 = x_91024 || y_91029;
                        cond_91031 = 0.0 < eAngles_zzip_res_elem_91743;
                        res_91032 = eAngles_zzip_res_elem_91743 < 90.0;
                        x_91033 = cond_91031 && res_91032;
                        if (x_91033) {
                            char cond_91040;
                            char res_91041;
                            char x_91042;
                            char y_91043;
                            char cond_91044;
                            double res_91045;
                            double res_91046;
                            char cond_91054;
                            char cond_91055;
                            char eq_91056;
                            double res_91057;
                            double res_91058;
                            double res_91059;
                            double res_91060;
                            char res_91061;
                            
                            cond_91040 = gridHalfWidth_78975 < res_91017;
                            res_91041 = res_91017 < x_91015;
                            x_91042 = !cond_91040;
                            y_91043 = x_91042 && res_91041;
                            cond_91044 = cond_91040 || y_91043;
                            if (cond_91044) {
                                char cond_91047;
                                char res_91048;
                                char x_91049;
                                char y_91050;
                                char cond_91051;
                                double res_91052;
                                double res_91053;
                                
                                cond_91047 = gridHalfWidth_78975 < res_91019;
                                res_91048 = res_91019 < x_91015;
                                x_91049 = !cond_91047;
                                y_91050 = x_91049 && res_91048;
                                cond_91051 = cond_91047 || y_91050;
                                if (cond_91051) {
                                    res_91052 = 0.0;
                                } else {
                                    res_91052 = gridHalfWidth_78975;
                                }
                                if (cond_91051) {
                                    res_91053 = 0.0;
                                } else {
                                    res_91053 = res_91019;
                                }
                                res_91045 = res_91052;
                                res_91046 = res_91053;
                            } else {
                                res_91045 = res_91017;
                                res_91046 = x_91015;
                            }
                            cond_91054 = res_91045 == 0.0;
                            cond_91055 = res_91046 == 0.0;
                            eq_91056 = cond_91054 && cond_91055;
                            if (eq_91056) {
                                res_91057 = 0.0;
                                res_91058 = 0.0;
                                res_91059 = 0.0;
                                res_91060 = 0.0;
                                res_91061 = 1;
                            } else {
                                double res_91062;
                                double res_91063;
                                double res_91064;
                                double res_91065;
                                char res_91066;
                                
                                if (res_91030) {
                                    char cond_91067;
                                    char cond_91068;
                                    char eq_91069;
                                    char x_91070;
                                    double res_91071;
                                    double res_91072;
                                    double res_91096;
                                    int64_t res_91097;
                                    double res_91098;
                                    char cond_91099;
                                    double res_91100;
                                    char cond_91107;
                                    double res_91108;
                                    int64_t res_91123;
                                    double res_91124;
                                    char cond_91125;
                                    double res_91126;
                                    
                                    cond_91067 = res_91045 == res_91017;
                                    cond_91068 = res_91046 == x_91015;
                                    eq_91069 = cond_91067 && cond_91068;
                                    x_91070 = !eq_91069;
                                    if (eq_91069) {
                                        double arg_91073;
                                        int64_t res_91074;
                                        double res_91075;
                                        char cond_91076;
                                        double res_91077;
                                        double res_91084;
                                        double x_91091;
                                        double y_91092;
                                        double res_91093;
                                        
                                        arg_91073 = res_91045 / delta_78976;
                                        res_91074 = fptosi_f64_i64(arg_91073);
                                        res_91075 = sitofp_i64_f64(res_91074);
                                        cond_91076 = 0.0 <= arg_91073;
                                        if (cond_91076) {
                                            char cond_91078;
                                            double res_91079;
                                            
                                            cond_91078 = res_91075 < arg_91073;
                                            if (cond_91078) {
                                                int64_t res_91080;
                                                double res_91081;
                                                
                                                res_91080 = res_91074 + 1;
                                                res_91081 =
                                                    sitofp_i64_f64(res_91080);
                                                res_91079 = res_91081;
                                            } else {
                                                res_91079 = arg_91073;
                                            }
                                            res_91077 = res_91079;
                                        } else {
                                            char cond_91082;
                                            double res_91083;
                                            
                                            cond_91082 = arg_91073 < res_91075;
                                            if (cond_91082) {
                                                res_91083 = res_91075;
                                            } else {
                                                res_91083 = arg_91073;
                                            }
                                            res_91077 = res_91083;
                                        }
                                        if (cond_91076) {
                                            char cond_91085;
                                            double res_91086;
                                            
                                            cond_91085 = res_91075 < arg_91073;
                                            if (cond_91085) {
                                                int64_t res_91087;
                                                double res_91088;
                                                
                                                res_91087 = res_91074 + 1;
                                                res_91088 =
                                                    sitofp_i64_f64(res_91087);
                                                res_91086 = res_91088;
                                            } else {
                                                res_91086 = arg_91073;
                                            }
                                            res_91084 = res_91086;
                                        } else {
                                            char cond_91089;
                                            double res_91090;
                                            
                                            cond_91089 = arg_91073 < res_91075;
                                            if (cond_91089) {
                                                res_91090 = res_91075;
                                            } else {
                                                res_91090 = arg_91073;
                                            }
                                            res_91084 = res_91090;
                                        }
                                        x_91091 = res_91010 * res_91084;
                                        y_91092 = res_91012 / delta_78976;
                                        res_91093 = x_91091 + y_91092;
                                        res_91071 = res_91077;
                                        res_91072 = res_91093;
                                    } else {
                                        double res_91094;
                                        double res_91095;
                                        
                                        res_91094 = res_91045 / delta_78976;
                                        res_91095 = res_91046 / delta_78976;
                                        res_91071 = res_91094;
                                        res_91072 = res_91095;
                                    }
                                    res_91096 = res_91071 + 0.5;
                                    res_91097 = fptosi_f64_i64(res_91096);
                                    res_91098 = sitofp_i64_f64(res_91097);
                                    cond_91099 = 0.0 <= res_91096;
                                    if (cond_91099) {
                                        char cond_91101;
                                        double res_91102;
                                        
                                        cond_91101 = res_91098 < res_91096;
                                        if (cond_91101) {
                                            res_91102 = res_91098;
                                        } else {
                                            res_91102 = res_91096;
                                        }
                                        res_91100 = res_91102;
                                    } else {
                                        char cond_91103;
                                        double res_91104;
                                        
                                        cond_91103 = res_91096 < res_91098;
                                        if (cond_91103) {
                                            int64_t res_91105;
                                            double res_91106;
                                            
                                            res_91105 = res_91097 - 1;
                                            res_91106 =
                                                sitofp_i64_f64(res_91105);
                                            res_91104 = res_91106;
                                        } else {
                                            res_91104 = res_91096;
                                        }
                                        res_91100 = res_91104;
                                    }
                                    cond_91107 = res_91100 == res_91096;
                                    if (cond_91107) {
                                        int64_t res_91109;
                                        double res_91110;
                                        char cond_91111;
                                        double res_91112;
                                        int64_t x_91119;
                                        int64_t cond_91120;
                                        char cond_91121;
                                        double res_91122;
                                        
                                        res_91109 = fptosi_f64_i64(res_91071);
                                        res_91110 = sitofp_i64_f64(res_91109);
                                        cond_91111 = 0.0 <= res_91071;
                                        if (cond_91111) {
                                            char cond_91113;
                                            double res_91114;
                                            
                                            cond_91113 = res_91110 < res_91071;
                                            if (cond_91113) {
                                                res_91114 = res_91110;
                                            } else {
                                                res_91114 = res_91071;
                                            }
                                            res_91112 = res_91114;
                                        } else {
                                            char cond_91115;
                                            double res_91116;
                                            
                                            cond_91115 = res_91071 < res_91110;
                                            if (cond_91115) {
                                                int64_t res_91117;
                                                double res_91118;
                                                
                                                res_91117 = res_91109 - 1;
                                                res_91118 =
                                                    sitofp_i64_f64(res_91117);
                                                res_91116 = res_91118;
                                            } else {
                                                res_91116 = res_91071;
                                            }
                                            res_91112 = res_91116;
                                        }
                                        x_91119 = fptosi_f64_i64(res_91112);
                                        cond_91120 = smod64(x_91119, 2);
                                        cond_91121 = cond_91120 == 0;
                                        if (cond_91121) {
                                            res_91122 = res_91112;
                                        } else {
                                            res_91122 = res_91100;
                                        }
                                        res_91108 = res_91122;
                                    } else {
                                        res_91108 = res_91100;
                                    }
                                    res_91123 = fptosi_f64_i64(res_91072);
                                    res_91124 = sitofp_i64_f64(res_91123);
                                    cond_91125 = 0.0 <= res_91072;
                                    if (cond_91125) {
                                        char cond_91127;
                                        double res_91128;
                                        
                                        cond_91127 = res_91124 < res_91072;
                                        if (cond_91127) {
                                            res_91128 = res_91124;
                                        } else {
                                            res_91128 = res_91072;
                                        }
                                        res_91126 = res_91128;
                                    } else {
                                        char cond_91129;
                                        double res_91130;
                                        
                                        cond_91129 = res_91072 < res_91124;
                                        if (cond_91129) {
                                            int64_t res_91131;
                                            double res_91132;
                                            
                                            res_91131 = res_91123 - 1;
                                            res_91132 =
                                                sitofp_i64_f64(res_91131);
                                            res_91130 = res_91132;
                                        } else {
                                            res_91130 = res_91072;
                                        }
                                        res_91126 = res_91130;
                                    }
                                    res_91062 = res_91071;
                                    res_91063 = res_91072;
                                    res_91064 = res_91108;
                                    res_91065 = res_91126;
                                    res_91066 = x_91070;
                                } else {
                                    char cond_91133;
                                    char cond_91134;
                                    char eq_91135;
                                    char x_91136;
                                    double res_91137;
                                    double res_91138;
                                    int64_t res_91162;
                                    double res_91163;
                                    char cond_91164;
                                    double res_91165;
                                    double res_91172;
                                    int64_t res_91173;
                                    double res_91174;
                                    char cond_91175;
                                    double res_91176;
                                    char cond_91183;
                                    double res_91184;
                                    
                                    cond_91133 = res_91045 ==
                                        gridHalfWidth_78975;
                                    cond_91134 = res_91046 == res_91019;
                                    eq_91135 = cond_91133 && cond_91134;
                                    x_91136 = !eq_91135;
                                    if (eq_91135) {
                                        double arg_91139;
                                        int64_t res_91140;
                                        double res_91141;
                                        char cond_91142;
                                        double res_91143;
                                        double y_91150;
                                        double x_91151;
                                        double res_91152;
                                        double res_91153;
                                        
                                        arg_91139 = res_91046 / delta_78976;
                                        res_91140 = fptosi_f64_i64(arg_91139);
                                        res_91141 = sitofp_i64_f64(res_91140);
                                        cond_91142 = 0.0 <= arg_91139;
                                        if (cond_91142) {
                                            char cond_91144;
                                            double res_91145;
                                            
                                            cond_91144 = res_91141 < arg_91139;
                                            if (cond_91144) {
                                                res_91145 = res_91141;
                                            } else {
                                                res_91145 = arg_91139;
                                            }
                                            res_91143 = res_91145;
                                        } else {
                                            char cond_91146;
                                            double res_91147;
                                            
                                            cond_91146 = arg_91139 < res_91141;
                                            if (cond_91146) {
                                                int64_t res_91148;
                                                double res_91149;
                                                
                                                res_91148 = res_91140 - 1;
                                                res_91149 =
                                                    sitofp_i64_f64(res_91148);
                                                res_91147 = res_91149;
                                            } else {
                                                res_91147 = arg_91139;
                                            }
                                            res_91143 = res_91147;
                                        }
                                        y_91150 = res_91012 / delta_78976;
                                        x_91151 = res_91143 - y_91150;
                                        res_91152 = x_91151 / res_91010;
                                        if (cond_91142) {
                                            char cond_91154;
                                            double res_91155;
                                            
                                            cond_91154 = res_91141 < arg_91139;
                                            if (cond_91154) {
                                                res_91155 = res_91141;
                                            } else {
                                                res_91155 = arg_91139;
                                            }
                                            res_91153 = res_91155;
                                        } else {
                                            char cond_91156;
                                            double res_91157;
                                            
                                            cond_91156 = arg_91139 < res_91141;
                                            if (cond_91156) {
                                                int64_t res_91158;
                                                double res_91159;
                                                
                                                res_91158 = res_91140 - 1;
                                                res_91159 =
                                                    sitofp_i64_f64(res_91158);
                                                res_91157 = res_91159;
                                            } else {
                                                res_91157 = arg_91139;
                                            }
                                            res_91153 = res_91157;
                                        }
                                        res_91137 = res_91152;
                                        res_91138 = res_91153;
                                    } else {
                                        double res_91160;
                                        double res_91161;
                                        
                                        res_91160 = res_91045 / delta_78976;
                                        res_91161 = res_91046 / delta_78976;
                                        res_91137 = res_91160;
                                        res_91138 = res_91161;
                                    }
                                    res_91162 = fptosi_f64_i64(res_91137);
                                    res_91163 = sitofp_i64_f64(res_91162);
                                    cond_91164 = 0.0 <= res_91137;
                                    if (cond_91164) {
                                        char cond_91166;
                                        double res_91167;
                                        
                                        cond_91166 = res_91163 < res_91137;
                                        if (cond_91166) {
                                            int64_t res_91168;
                                            double res_91169;
                                            
                                            res_91168 = res_91162 + 1;
                                            res_91169 =
                                                sitofp_i64_f64(res_91168);
                                            res_91167 = res_91169;
                                        } else {
                                            res_91167 = res_91137;
                                        }
                                        res_91165 = res_91167;
                                    } else {
                                        char cond_91170;
                                        double res_91171;
                                        
                                        cond_91170 = res_91137 < res_91163;
                                        if (cond_91170) {
                                            res_91171 = res_91163;
                                        } else {
                                            res_91171 = res_91137;
                                        }
                                        res_91165 = res_91171;
                                    }
                                    res_91172 = res_91138 + 0.5;
                                    res_91173 = fptosi_f64_i64(res_91172);
                                    res_91174 = sitofp_i64_f64(res_91173);
                                    cond_91175 = 0.0 <= res_91172;
                                    if (cond_91175) {
                                        char cond_91177;
                                        double res_91178;
                                        
                                        cond_91177 = res_91174 < res_91172;
                                        if (cond_91177) {
                                            res_91178 = res_91174;
                                        } else {
                                            res_91178 = res_91172;
                                        }
                                        res_91176 = res_91178;
                                    } else {
                                        char cond_91179;
                                        double res_91180;
                                        
                                        cond_91179 = res_91172 < res_91174;
                                        if (cond_91179) {
                                            int64_t res_91181;
                                            double res_91182;
                                            
                                            res_91181 = res_91173 - 1;
                                            res_91182 =
                                                sitofp_i64_f64(res_91181);
                                            res_91180 = res_91182;
                                        } else {
                                            res_91180 = res_91172;
                                        }
                                        res_91176 = res_91180;
                                    }
                                    cond_91183 = res_91176 == res_91172;
                                    if (cond_91183) {
                                        int64_t res_91185;
                                        double res_91186;
                                        char cond_91187;
                                        double res_91188;
                                        int64_t x_91195;
                                        int64_t cond_91196;
                                        char cond_91197;
                                        double res_91198;
                                        
                                        res_91185 = fptosi_f64_i64(res_91138);
                                        res_91186 = sitofp_i64_f64(res_91185);
                                        cond_91187 = 0.0 <= res_91138;
                                        if (cond_91187) {
                                            char cond_91189;
                                            double res_91190;
                                            
                                            cond_91189 = res_91186 < res_91138;
                                            if (cond_91189) {
                                                res_91190 = res_91186;
                                            } else {
                                                res_91190 = res_91138;
                                            }
                                            res_91188 = res_91190;
                                        } else {
                                            char cond_91191;
                                            double res_91192;
                                            
                                            cond_91191 = res_91138 < res_91186;
                                            if (cond_91191) {
                                                int64_t res_91193;
                                                double res_91194;
                                                
                                                res_91193 = res_91185 - 1;
                                                res_91194 =
                                                    sitofp_i64_f64(res_91193);
                                                res_91192 = res_91194;
                                            } else {
                                                res_91192 = res_91138;
                                            }
                                            res_91188 = res_91192;
                                        }
                                        x_91195 = fptosi_f64_i64(res_91188);
                                        cond_91196 = smod64(x_91195, 2);
                                        cond_91197 = cond_91196 == 0;
                                        if (cond_91197) {
                                            res_91198 = res_91188;
                                        } else {
                                            res_91198 = res_91176;
                                        }
                                        res_91184 = res_91198;
                                    } else {
                                        res_91184 = res_91176;
                                    }
                                    res_91062 = res_91137;
                                    res_91063 = res_91138;
                                    res_91064 = res_91165;
                                    res_91065 = res_91184;
                                    res_91066 = x_91136;
                                }
                                res_91057 = res_91062;
                                res_91058 = res_91063;
                                res_91059 = res_91064;
                                res_91060 = res_91065;
                                res_91061 = res_91066;
                            }
                            res_91034 = res_91057;
                            res_91035 = res_91058;
                            res_91036 = res_91059;
                            res_91037 = res_91060;
                            res_91038 = res_91061;
                            res_91039 = eq_91056;
                        } else {
                            char cond_91199;
                            char res_91200;
                            char x_91201;
                            double res_91202;
                            double res_91203;
                            double res_91204;
                            double res_91205;
                            char res_91206;
                            char res_91207;
                            
                            cond_91199 = 90.0 < eAngles_zzip_res_elem_91743;
                            res_91200 = eAngles_zzip_res_elem_91743 < 180.0;
                            x_91201 = cond_91199 && res_91200;
                            if (x_91201) {
                                char cond_91208;
                                char res_91209;
                                char x_91210;
                                char y_91211;
                                char cond_91212;
                                double res_91213;
                                double res_91214;
                                char cond_91222;
                                char cond_91223;
                                char eq_91224;
                                double res_91225;
                                double res_91226;
                                double res_91227;
                                double res_91228;
                                char res_91229;
                                
                                cond_91208 = gridHalfWidth_78975 < res_91014;
                                res_91209 = res_91014 < x_91015;
                                x_91210 = !cond_91208;
                                y_91211 = x_91210 && res_91209;
                                cond_91212 = cond_91208 || y_91211;
                                if (cond_91212) {
                                    char cond_91215;
                                    char res_91216;
                                    char x_91217;
                                    char y_91218;
                                    char cond_91219;
                                    double res_91220;
                                    double res_91221;
                                    
                                    cond_91215 = gridHalfWidth_78975 <
                                        res_91019;
                                    res_91216 = res_91019 < x_91015;
                                    x_91217 = !cond_91215;
                                    y_91218 = x_91217 && res_91216;
                                    cond_91219 = cond_91215 || y_91218;
                                    if (cond_91219) {
                                        res_91220 = 0.0;
                                    } else {
                                        res_91220 = gridHalfWidth_78975;
                                    }
                                    if (cond_91219) {
                                        res_91221 = 0.0;
                                    } else {
                                        res_91221 = res_91019;
                                    }
                                    res_91213 = res_91220;
                                    res_91214 = res_91221;
                                } else {
                                    res_91213 = res_91014;
                                    res_91214 = gridHalfWidth_78975;
                                }
                                cond_91222 = res_91213 == 0.0;
                                cond_91223 = res_91214 == 0.0;
                                eq_91224 = cond_91222 && cond_91223;
                                if (eq_91224) {
                                    res_91225 = 0.0;
                                    res_91226 = 0.0;
                                    res_91227 = 0.0;
                                    res_91228 = 0.0;
                                    res_91229 = 1;
                                } else {
                                    double res_91230;
                                    double res_91231;
                                    double res_91232;
                                    double res_91233;
                                    char res_91234;
                                    
                                    if (res_91030) {
                                        char cond_91235;
                                        char cond_91236;
                                        char eq_91237;
                                        char x_91238;
                                        double res_91239;
                                        double res_91240;
                                        double res_91264;
                                        int64_t res_91265;
                                        double res_91266;
                                        char cond_91267;
                                        double res_91268;
                                        char cond_91275;
                                        double res_91276;
                                        int64_t res_91291;
                                        double res_91292;
                                        char cond_91293;
                                        double res_91294;
                                        
                                        cond_91235 = res_91213 == res_91014;
                                        cond_91236 = res_91214 ==
                                            gridHalfWidth_78975;
                                        eq_91237 = cond_91235 && cond_91236;
                                        x_91238 = !eq_91237;
                                        if (eq_91237) {
                                            double arg_91241;
                                            int64_t res_91242;
                                            double res_91243;
                                            char cond_91244;
                                            double res_91245;
                                            double res_91252;
                                            double x_91259;
                                            double y_91260;
                                            double res_91261;
                                            
                                            arg_91241 = res_91213 / delta_78976;
                                            res_91242 =
                                                fptosi_f64_i64(arg_91241);
                                            res_91243 =
                                                sitofp_i64_f64(res_91242);
                                            cond_91244 = 0.0 <= arg_91241;
                                            if (cond_91244) {
                                                char cond_91246;
                                                double res_91247;
                                                
                                                cond_91246 = res_91243 <
                                                    arg_91241;
                                                if (cond_91246) {
                                                    int64_t res_91248;
                                                    double res_91249;
                                                    
                                                    res_91248 = res_91242 + 1;
                                                    res_91249 =
                                                        sitofp_i64_f64(res_91248);
                                                    res_91247 = res_91249;
                                                } else {
                                                    res_91247 = arg_91241;
                                                }
                                                res_91245 = res_91247;
                                            } else {
                                                char cond_91250;
                                                double res_91251;
                                                
                                                cond_91250 = arg_91241 <
                                                    res_91243;
                                                if (cond_91250) {
                                                    res_91251 = res_91243;
                                                } else {
                                                    res_91251 = arg_91241;
                                                }
                                                res_91245 = res_91251;
                                            }
                                            if (cond_91244) {
                                                char cond_91253;
                                                double res_91254;
                                                
                                                cond_91253 = res_91243 <
                                                    arg_91241;
                                                if (cond_91253) {
                                                    int64_t res_91255;
                                                    double res_91256;
                                                    
                                                    res_91255 = res_91242 + 1;
                                                    res_91256 =
                                                        sitofp_i64_f64(res_91255);
                                                    res_91254 = res_91256;
                                                } else {
                                                    res_91254 = arg_91241;
                                                }
                                                res_91252 = res_91254;
                                            } else {
                                                char cond_91257;
                                                double res_91258;
                                                
                                                cond_91257 = arg_91241 <
                                                    res_91243;
                                                if (cond_91257) {
                                                    res_91258 = res_91243;
                                                } else {
                                                    res_91258 = arg_91241;
                                                }
                                                res_91252 = res_91258;
                                            }
                                            x_91259 = res_91010 * res_91252;
                                            y_91260 = res_91012 / delta_78976;
                                            res_91261 = x_91259 + y_91260;
                                            res_91239 = res_91245;
                                            res_91240 = res_91261;
                                        } else {
                                            double res_91262;
                                            double res_91263;
                                            
                                            res_91262 = res_91213 / delta_78976;
                                            res_91263 = res_91214 / delta_78976;
                                            res_91239 = res_91262;
                                            res_91240 = res_91263;
                                        }
                                        res_91264 = res_91239 + 0.5;
                                        res_91265 = fptosi_f64_i64(res_91264);
                                        res_91266 = sitofp_i64_f64(res_91265);
                                        cond_91267 = 0.0 <= res_91264;
                                        if (cond_91267) {
                                            char cond_91269;
                                            double res_91270;
                                            
                                            cond_91269 = res_91266 < res_91264;
                                            if (cond_91269) {
                                                res_91270 = res_91266;
                                            } else {
                                                res_91270 = res_91264;
                                            }
                                            res_91268 = res_91270;
                                        } else {
                                            char cond_91271;
                                            double res_91272;
                                            
                                            cond_91271 = res_91264 < res_91266;
                                            if (cond_91271) {
                                                int64_t res_91273;
                                                double res_91274;
                                                
                                                res_91273 = res_91265 - 1;
                                                res_91274 =
                                                    sitofp_i64_f64(res_91273);
                                                res_91272 = res_91274;
                                            } else {
                                                res_91272 = res_91264;
                                            }
                                            res_91268 = res_91272;
                                        }
                                        cond_91275 = res_91268 == res_91264;
                                        if (cond_91275) {
                                            int64_t res_91277;
                                            double res_91278;
                                            char cond_91279;
                                            double res_91280;
                                            int64_t x_91287;
                                            int64_t cond_91288;
                                            char cond_91289;
                                            double res_91290;
                                            
                                            res_91277 =
                                                fptosi_f64_i64(res_91239);
                                            res_91278 =
                                                sitofp_i64_f64(res_91277);
                                            cond_91279 = 0.0 <= res_91239;
                                            if (cond_91279) {
                                                char cond_91281;
                                                double res_91282;
                                                
                                                cond_91281 = res_91278 <
                                                    res_91239;
                                                if (cond_91281) {
                                                    res_91282 = res_91278;
                                                } else {
                                                    res_91282 = res_91239;
                                                }
                                                res_91280 = res_91282;
                                            } else {
                                                char cond_91283;
                                                double res_91284;
                                                
                                                cond_91283 = res_91239 <
                                                    res_91278;
                                                if (cond_91283) {
                                                    int64_t res_91285;
                                                    double res_91286;
                                                    
                                                    res_91285 = res_91277 - 1;
                                                    res_91286 =
                                                        sitofp_i64_f64(res_91285);
                                                    res_91284 = res_91286;
                                                } else {
                                                    res_91284 = res_91239;
                                                }
                                                res_91280 = res_91284;
                                            }
                                            x_91287 = fptosi_f64_i64(res_91280);
                                            cond_91288 = smod64(x_91287, 2);
                                            cond_91289 = cond_91288 == 0;
                                            if (cond_91289) {
                                                res_91290 = res_91280;
                                            } else {
                                                res_91290 = res_91268;
                                            }
                                            res_91276 = res_91290;
                                        } else {
                                            res_91276 = res_91268;
                                        }
                                        res_91291 = fptosi_f64_i64(res_91240);
                                        res_91292 = sitofp_i64_f64(res_91291);
                                        cond_91293 = 0.0 <= res_91240;
                                        if (cond_91293) {
                                            char cond_91295;
                                            double res_91296;
                                            
                                            cond_91295 = res_91292 < res_91240;
                                            if (cond_91295) {
                                                int64_t res_91297;
                                                double res_91298;
                                                
                                                res_91297 = res_91291 + 1;
                                                res_91298 =
                                                    sitofp_i64_f64(res_91297);
                                                res_91296 = res_91298;
                                            } else {
                                                res_91296 = res_91240;
                                            }
                                            res_91294 = res_91296;
                                        } else {
                                            char cond_91299;
                                            double res_91300;
                                            
                                            cond_91299 = res_91240 < res_91292;
                                            if (cond_91299) {
                                                res_91300 = res_91292;
                                            } else {
                                                res_91300 = res_91240;
                                            }
                                            res_91294 = res_91300;
                                        }
                                        res_91230 = res_91239;
                                        res_91231 = res_91240;
                                        res_91232 = res_91276;
                                        res_91233 = res_91294;
                                        res_91234 = x_91238;
                                    } else {
                                        char cond_91301;
                                        char cond_91302;
                                        char eq_91303;
                                        char x_91304;
                                        double res_91305;
                                        double res_91306;
                                        int64_t res_91330;
                                        double res_91331;
                                        char cond_91332;
                                        double res_91333;
                                        double res_91340;
                                        int64_t res_91341;
                                        double res_91342;
                                        char cond_91343;
                                        double res_91344;
                                        char cond_91351;
                                        double res_91352;
                                        
                                        cond_91301 = res_91213 ==
                                            gridHalfWidth_78975;
                                        cond_91302 = res_91214 == res_91019;
                                        eq_91303 = cond_91301 && cond_91302;
                                        x_91304 = !eq_91303;
                                        if (eq_91303) {
                                            double arg_91307;
                                            int64_t res_91308;
                                            double res_91309;
                                            char cond_91310;
                                            double res_91311;
                                            double y_91318;
                                            double x_91319;
                                            double res_91320;
                                            double res_91321;
                                            
                                            arg_91307 = res_91214 / delta_78976;
                                            res_91308 =
                                                fptosi_f64_i64(arg_91307);
                                            res_91309 =
                                                sitofp_i64_f64(res_91308);
                                            cond_91310 = 0.0 <= arg_91307;
                                            if (cond_91310) {
                                                char cond_91312;
                                                double res_91313;
                                                
                                                cond_91312 = res_91309 <
                                                    arg_91307;
                                                if (cond_91312) {
                                                    int64_t res_91314;
                                                    double res_91315;
                                                    
                                                    res_91314 = res_91308 + 1;
                                                    res_91315 =
                                                        sitofp_i64_f64(res_91314);
                                                    res_91313 = res_91315;
                                                } else {
                                                    res_91313 = arg_91307;
                                                }
                                                res_91311 = res_91313;
                                            } else {
                                                char cond_91316;
                                                double res_91317;
                                                
                                                cond_91316 = arg_91307 <
                                                    res_91309;
                                                if (cond_91316) {
                                                    res_91317 = res_91309;
                                                } else {
                                                    res_91317 = arg_91307;
                                                }
                                                res_91311 = res_91317;
                                            }
                                            y_91318 = res_91012 / delta_78976;
                                            x_91319 = res_91311 - y_91318;
                                            res_91320 = x_91319 / res_91010;
                                            if (cond_91310) {
                                                char cond_91322;
                                                double res_91323;
                                                
                                                cond_91322 = res_91309 <
                                                    arg_91307;
                                                if (cond_91322) {
                                                    int64_t res_91324;
                                                    double res_91325;
                                                    
                                                    res_91324 = res_91308 + 1;
                                                    res_91325 =
                                                        sitofp_i64_f64(res_91324);
                                                    res_91323 = res_91325;
                                                } else {
                                                    res_91323 = arg_91307;
                                                }
                                                res_91321 = res_91323;
                                            } else {
                                                char cond_91326;
                                                double res_91327;
                                                
                                                cond_91326 = arg_91307 <
                                                    res_91309;
                                                if (cond_91326) {
                                                    res_91327 = res_91309;
                                                } else {
                                                    res_91327 = arg_91307;
                                                }
                                                res_91321 = res_91327;
                                            }
                                            res_91305 = res_91320;
                                            res_91306 = res_91321;
                                        } else {
                                            double res_91328;
                                            double res_91329;
                                            
                                            res_91328 = res_91213 / delta_78976;
                                            res_91329 = res_91214 / delta_78976;
                                            res_91305 = res_91328;
                                            res_91306 = res_91329;
                                        }
                                        res_91330 = fptosi_f64_i64(res_91305);
                                        res_91331 = sitofp_i64_f64(res_91330);
                                        cond_91332 = 0.0 <= res_91305;
                                        if (cond_91332) {
                                            char cond_91334;
                                            double res_91335;
                                            
                                            cond_91334 = res_91331 < res_91305;
                                            if (cond_91334) {
                                                int64_t res_91336;
                                                double res_91337;
                                                
                                                res_91336 = res_91330 + 1;
                                                res_91337 =
                                                    sitofp_i64_f64(res_91336);
                                                res_91335 = res_91337;
                                            } else {
                                                res_91335 = res_91305;
                                            }
                                            res_91333 = res_91335;
                                        } else {
                                            char cond_91338;
                                            double res_91339;
                                            
                                            cond_91338 = res_91305 < res_91331;
                                            if (cond_91338) {
                                                res_91339 = res_91331;
                                            } else {
                                                res_91339 = res_91305;
                                            }
                                            res_91333 = res_91339;
                                        }
                                        res_91340 = res_91306 + 0.5;
                                        res_91341 = fptosi_f64_i64(res_91340);
                                        res_91342 = sitofp_i64_f64(res_91341);
                                        cond_91343 = 0.0 <= res_91340;
                                        if (cond_91343) {
                                            char cond_91345;
                                            double res_91346;
                                            
                                            cond_91345 = res_91342 < res_91340;
                                            if (cond_91345) {
                                                res_91346 = res_91342;
                                            } else {
                                                res_91346 = res_91340;
                                            }
                                            res_91344 = res_91346;
                                        } else {
                                            char cond_91347;
                                            double res_91348;
                                            
                                            cond_91347 = res_91340 < res_91342;
                                            if (cond_91347) {
                                                int64_t res_91349;
                                                double res_91350;
                                                
                                                res_91349 = res_91341 - 1;
                                                res_91350 =
                                                    sitofp_i64_f64(res_91349);
                                                res_91348 = res_91350;
                                            } else {
                                                res_91348 = res_91340;
                                            }
                                            res_91344 = res_91348;
                                        }
                                        cond_91351 = res_91344 == res_91340;
                                        if (cond_91351) {
                                            int64_t res_91353;
                                            double res_91354;
                                            char cond_91355;
                                            double res_91356;
                                            int64_t x_91363;
                                            int64_t cond_91364;
                                            char cond_91365;
                                            double res_91366;
                                            
                                            res_91353 =
                                                fptosi_f64_i64(res_91306);
                                            res_91354 =
                                                sitofp_i64_f64(res_91353);
                                            cond_91355 = 0.0 <= res_91306;
                                            if (cond_91355) {
                                                char cond_91357;
                                                double res_91358;
                                                
                                                cond_91357 = res_91354 <
                                                    res_91306;
                                                if (cond_91357) {
                                                    res_91358 = res_91354;
                                                } else {
                                                    res_91358 = res_91306;
                                                }
                                                res_91356 = res_91358;
                                            } else {
                                                char cond_91359;
                                                double res_91360;
                                                
                                                cond_91359 = res_91306 <
                                                    res_91354;
                                                if (cond_91359) {
                                                    int64_t res_91361;
                                                    double res_91362;
                                                    
                                                    res_91361 = res_91353 - 1;
                                                    res_91362 =
                                                        sitofp_i64_f64(res_91361);
                                                    res_91360 = res_91362;
                                                } else {
                                                    res_91360 = res_91306;
                                                }
                                                res_91356 = res_91360;
                                            }
                                            x_91363 = fptosi_f64_i64(res_91356);
                                            cond_91364 = smod64(x_91363, 2);
                                            cond_91365 = cond_91364 == 0;
                                            if (cond_91365) {
                                                res_91366 = res_91356;
                                            } else {
                                                res_91366 = res_91344;
                                            }
                                            res_91352 = res_91366;
                                        } else {
                                            res_91352 = res_91344;
                                        }
                                        res_91230 = res_91305;
                                        res_91231 = res_91306;
                                        res_91232 = res_91333;
                                        res_91233 = res_91352;
                                        res_91234 = x_91304;
                                    }
                                    res_91225 = res_91230;
                                    res_91226 = res_91231;
                                    res_91227 = res_91232;
                                    res_91228 = res_91233;
                                    res_91229 = res_91234;
                                }
                                res_91202 = res_91225;
                                res_91203 = res_91226;
                                res_91204 = res_91227;
                                res_91205 = res_91228;
                                res_91206 = res_91229;
                                res_91207 = eq_91224;
                            } else {
                                char cond_91367;
                                char res_91368;
                                char x_91369;
                                double res_91370;
                                double res_91371;
                                double res_91372;
                                double res_91373;
                                char res_91374;
                                char res_91375;
                                
                                cond_91367 = 180.0 <
                                    eAngles_zzip_res_elem_91743;
                                res_91368 = eAngles_zzip_res_elem_91743 < 270.0;
                                x_91369 = cond_91367 && res_91368;
                                if (x_91369) {
                                    char cond_91376;
                                    char res_91377;
                                    char x_91378;
                                    char y_91379;
                                    char cond_91380;
                                    double res_91381;
                                    double res_91382;
                                    char cond_91390;
                                    char cond_91391;
                                    char eq_91392;
                                    double res_91393;
                                    double res_91394;
                                    double res_91395;
                                    double res_91396;
                                    char res_91397;
                                    
                                    cond_91376 = gridHalfWidth_78975 <
                                        res_91014;
                                    res_91377 = res_91014 < x_91015;
                                    x_91378 = !cond_91376;
                                    y_91379 = x_91378 && res_91377;
                                    cond_91380 = cond_91376 || y_91379;
                                    if (cond_91380) {
                                        char cond_91383;
                                        char res_91384;
                                        char x_91385;
                                        char y_91386;
                                        char cond_91387;
                                        double res_91388;
                                        double res_91389;
                                        
                                        cond_91383 = gridHalfWidth_78975 <
                                            res_91021;
                                        res_91384 = res_91021 < x_91015;
                                        x_91385 = !cond_91383;
                                        y_91386 = x_91385 && res_91384;
                                        cond_91387 = cond_91383 || y_91386;
                                        if (cond_91387) {
                                            res_91388 = 0.0;
                                        } else {
                                            res_91388 = x_91015;
                                        }
                                        if (cond_91387) {
                                            res_91389 = 0.0;
                                        } else {
                                            res_91389 = res_91021;
                                        }
                                        res_91381 = res_91388;
                                        res_91382 = res_91389;
                                    } else {
                                        res_91381 = res_91014;
                                        res_91382 = gridHalfWidth_78975;
                                    }
                                    cond_91390 = res_91381 == 0.0;
                                    cond_91391 = res_91382 == 0.0;
                                    eq_91392 = cond_91390 && cond_91391;
                                    if (eq_91392) {
                                        res_91393 = 0.0;
                                        res_91394 = 0.0;
                                        res_91395 = 0.0;
                                        res_91396 = 0.0;
                                        res_91397 = 1;
                                    } else {
                                        double res_91398;
                                        double res_91399;
                                        double res_91400;
                                        double res_91401;
                                        char res_91402;
                                        
                                        if (res_91030) {
                                            char cond_91403;
                                            char cond_91404;
                                            char eq_91405;
                                            char x_91406;
                                            double res_91407;
                                            double res_91408;
                                            double res_91432;
                                            int64_t res_91433;
                                            double res_91434;
                                            char cond_91435;
                                            double res_91436;
                                            char cond_91443;
                                            double res_91444;
                                            int64_t res_91459;
                                            double res_91460;
                                            char cond_91461;
                                            double res_91462;
                                            
                                            cond_91403 = res_91381 == res_91014;
                                            cond_91404 = res_91382 ==
                                                gridHalfWidth_78975;
                                            eq_91405 = cond_91403 && cond_91404;
                                            x_91406 = !eq_91405;
                                            if (eq_91405) {
                                                double arg_91409;
                                                int64_t res_91410;
                                                double res_91411;
                                                char cond_91412;
                                                double res_91413;
                                                double res_91420;
                                                double x_91427;
                                                double y_91428;
                                                double res_91429;
                                                
                                                arg_91409 = res_91381 /
                                                    delta_78976;
                                                res_91410 =
                                                    fptosi_f64_i64(arg_91409);
                                                res_91411 =
                                                    sitofp_i64_f64(res_91410);
                                                cond_91412 = 0.0 <= arg_91409;
                                                if (cond_91412) {
                                                    char cond_91414;
                                                    double res_91415;
                                                    
                                                    cond_91414 = res_91411 <
                                                        arg_91409;
                                                    if (cond_91414) {
                                                        res_91415 = res_91411;
                                                    } else {
                                                        res_91415 = arg_91409;
                                                    }
                                                    res_91413 = res_91415;
                                                } else {
                                                    char cond_91416;
                                                    double res_91417;
                                                    
                                                    cond_91416 = arg_91409 <
                                                        res_91411;
                                                    if (cond_91416) {
                                                        int64_t res_91418;
                                                        double res_91419;
                                                        
                                                        res_91418 = res_91410 -
                                                            1;
                                                        res_91419 =
                                                            sitofp_i64_f64(res_91418);
                                                        res_91417 = res_91419;
                                                    } else {
                                                        res_91417 = arg_91409;
                                                    }
                                                    res_91413 = res_91417;
                                                }
                                                if (cond_91412) {
                                                    char cond_91421;
                                                    double res_91422;
                                                    
                                                    cond_91421 = res_91411 <
                                                        arg_91409;
                                                    if (cond_91421) {
                                                        res_91422 = res_91411;
                                                    } else {
                                                        res_91422 = arg_91409;
                                                    }
                                                    res_91420 = res_91422;
                                                } else {
                                                    char cond_91423;
                                                    double res_91424;
                                                    
                                                    cond_91423 = arg_91409 <
                                                        res_91411;
                                                    if (cond_91423) {
                                                        int64_t res_91425;
                                                        double res_91426;
                                                        
                                                        res_91425 = res_91410 -
                                                            1;
                                                        res_91426 =
                                                            sitofp_i64_f64(res_91425);
                                                        res_91424 = res_91426;
                                                    } else {
                                                        res_91424 = arg_91409;
                                                    }
                                                    res_91420 = res_91424;
                                                }
                                                x_91427 = res_91010 * res_91420;
                                                y_91428 = res_91012 /
                                                    delta_78976;
                                                res_91429 = x_91427 + y_91428;
                                                res_91407 = res_91413;
                                                res_91408 = res_91429;
                                            } else {
                                                double res_91430;
                                                double res_91431;
                                                
                                                res_91430 = res_91381 /
                                                    delta_78976;
                                                res_91431 = res_91382 /
                                                    delta_78976;
                                                res_91407 = res_91430;
                                                res_91408 = res_91431;
                                            }
                                            res_91432 = res_91407 + 0.5;
                                            res_91433 =
                                                fptosi_f64_i64(res_91432);
                                            res_91434 =
                                                sitofp_i64_f64(res_91433);
                                            cond_91435 = 0.0 <= res_91432;
                                            if (cond_91435) {
                                                char cond_91437;
                                                double res_91438;
                                                
                                                cond_91437 = res_91434 <
                                                    res_91432;
                                                if (cond_91437) {
                                                    res_91438 = res_91434;
                                                } else {
                                                    res_91438 = res_91432;
                                                }
                                                res_91436 = res_91438;
                                            } else {
                                                char cond_91439;
                                                double res_91440;
                                                
                                                cond_91439 = res_91432 <
                                                    res_91434;
                                                if (cond_91439) {
                                                    int64_t res_91441;
                                                    double res_91442;
                                                    
                                                    res_91441 = res_91433 - 1;
                                                    res_91442 =
                                                        sitofp_i64_f64(res_91441);
                                                    res_91440 = res_91442;
                                                } else {
                                                    res_91440 = res_91432;
                                                }
                                                res_91436 = res_91440;
                                            }
                                            cond_91443 = res_91436 == res_91432;
                                            if (cond_91443) {
                                                int64_t res_91445;
                                                double res_91446;
                                                char cond_91447;
                                                double res_91448;
                                                int64_t x_91455;
                                                int64_t cond_91456;
                                                char cond_91457;
                                                double res_91458;
                                                
                                                res_91445 =
                                                    fptosi_f64_i64(res_91407);
                                                res_91446 =
                                                    sitofp_i64_f64(res_91445);
                                                cond_91447 = 0.0 <= res_91407;
                                                if (cond_91447) {
                                                    char cond_91449;
                                                    double res_91450;
                                                    
                                                    cond_91449 = res_91446 <
                                                        res_91407;
                                                    if (cond_91449) {
                                                        res_91450 = res_91446;
                                                    } else {
                                                        res_91450 = res_91407;
                                                    }
                                                    res_91448 = res_91450;
                                                } else {
                                                    char cond_91451;
                                                    double res_91452;
                                                    
                                                    cond_91451 = res_91407 <
                                                        res_91446;
                                                    if (cond_91451) {
                                                        int64_t res_91453;
                                                        double res_91454;
                                                        
                                                        res_91453 = res_91445 -
                                                            1;
                                                        res_91454 =
                                                            sitofp_i64_f64(res_91453);
                                                        res_91452 = res_91454;
                                                    } else {
                                                        res_91452 = res_91407;
                                                    }
                                                    res_91448 = res_91452;
                                                }
                                                x_91455 =
                                                    fptosi_f64_i64(res_91448);
                                                cond_91456 = smod64(x_91455, 2);
                                                cond_91457 = cond_91456 == 0;
                                                if (cond_91457) {
                                                    res_91458 = res_91448;
                                                } else {
                                                    res_91458 = res_91436;
                                                }
                                                res_91444 = res_91458;
                                            } else {
                                                res_91444 = res_91436;
                                            }
                                            res_91459 =
                                                fptosi_f64_i64(res_91408);
                                            res_91460 =
                                                sitofp_i64_f64(res_91459);
                                            cond_91461 = 0.0 <= res_91408;
                                            if (cond_91461) {
                                                char cond_91463;
                                                double res_91464;
                                                
                                                cond_91463 = res_91460 <
                                                    res_91408;
                                                if (cond_91463) {
                                                    int64_t res_91465;
                                                    double res_91466;
                                                    
                                                    res_91465 = res_91459 + 1;
                                                    res_91466 =
                                                        sitofp_i64_f64(res_91465);
                                                    res_91464 = res_91466;
                                                } else {
                                                    res_91464 = res_91408;
                                                }
                                                res_91462 = res_91464;
                                            } else {
                                                char cond_91467;
                                                double res_91468;
                                                
                                                cond_91467 = res_91408 <
                                                    res_91460;
                                                if (cond_91467) {
                                                    res_91468 = res_91460;
                                                } else {
                                                    res_91468 = res_91408;
                                                }
                                                res_91462 = res_91468;
                                            }
                                            res_91398 = res_91407;
                                            res_91399 = res_91408;
                                            res_91400 = res_91444;
                                            res_91401 = res_91462;
                                            res_91402 = x_91406;
                                        } else {
                                            char cond_91469;
                                            char cond_91470;
                                            char eq_91471;
                                            char x_91472;
                                            double res_91473;
                                            double res_91474;
                                            int64_t res_91498;
                                            double res_91499;
                                            char cond_91500;
                                            double res_91501;
                                            double res_91508;
                                            int64_t res_91509;
                                            double res_91510;
                                            char cond_91511;
                                            double res_91512;
                                            char cond_91519;
                                            double res_91520;
                                            
                                            cond_91469 = res_91381 == x_91015;
                                            cond_91470 = res_91382 == res_91021;
                                            eq_91471 = cond_91469 && cond_91470;
                                            x_91472 = !eq_91471;
                                            if (eq_91471) {
                                                double arg_91475;
                                                int64_t res_91476;
                                                double res_91477;
                                                char cond_91478;
                                                double res_91479;
                                                double y_91486;
                                                double x_91487;
                                                double res_91488;
                                                double res_91489;
                                                
                                                arg_91475 = res_91382 /
                                                    delta_78976;
                                                res_91476 =
                                                    fptosi_f64_i64(arg_91475);
                                                res_91477 =
                                                    sitofp_i64_f64(res_91476);
                                                cond_91478 = 0.0 <= arg_91475;
                                                if (cond_91478) {
                                                    char cond_91480;
                                                    double res_91481;
                                                    
                                                    cond_91480 = res_91477 <
                                                        arg_91475;
                                                    if (cond_91480) {
                                                        int64_t res_91482;
                                                        double res_91483;
                                                        
                                                        res_91482 = res_91476 +
                                                            1;
                                                        res_91483 =
                                                            sitofp_i64_f64(res_91482);
                                                        res_91481 = res_91483;
                                                    } else {
                                                        res_91481 = arg_91475;
                                                    }
                                                    res_91479 = res_91481;
                                                } else {
                                                    char cond_91484;
                                                    double res_91485;
                                                    
                                                    cond_91484 = arg_91475 <
                                                        res_91477;
                                                    if (cond_91484) {
                                                        res_91485 = res_91477;
                                                    } else {
                                                        res_91485 = arg_91475;
                                                    }
                                                    res_91479 = res_91485;
                                                }
                                                y_91486 = res_91012 /
                                                    delta_78976;
                                                x_91487 = res_91479 - y_91486;
                                                res_91488 = x_91487 / res_91010;
                                                if (cond_91478) {
                                                    char cond_91490;
                                                    double res_91491;
                                                    
                                                    cond_91490 = res_91477 <
                                                        arg_91475;
                                                    if (cond_91490) {
                                                        int64_t res_91492;
                                                        double res_91493;
                                                        
                                                        res_91492 = res_91476 +
                                                            1;
                                                        res_91493 =
                                                            sitofp_i64_f64(res_91492);
                                                        res_91491 = res_91493;
                                                    } else {
                                                        res_91491 = arg_91475;
                                                    }
                                                    res_91489 = res_91491;
                                                } else {
                                                    char cond_91494;
                                                    double res_91495;
                                                    
                                                    cond_91494 = arg_91475 <
                                                        res_91477;
                                                    if (cond_91494) {
                                                        res_91495 = res_91477;
                                                    } else {
                                                        res_91495 = arg_91475;
                                                    }
                                                    res_91489 = res_91495;
                                                }
                                                res_91473 = res_91488;
                                                res_91474 = res_91489;
                                            } else {
                                                double res_91496;
                                                double res_91497;
                                                
                                                res_91496 = res_91381 /
                                                    delta_78976;
                                                res_91497 = res_91382 /
                                                    delta_78976;
                                                res_91473 = res_91496;
                                                res_91474 = res_91497;
                                            }
                                            res_91498 =
                                                fptosi_f64_i64(res_91473);
                                            res_91499 =
                                                sitofp_i64_f64(res_91498);
                                            cond_91500 = 0.0 <= res_91473;
                                            if (cond_91500) {
                                                char cond_91502;
                                                double res_91503;
                                                
                                                cond_91502 = res_91499 <
                                                    res_91473;
                                                if (cond_91502) {
                                                    res_91503 = res_91499;
                                                } else {
                                                    res_91503 = res_91473;
                                                }
                                                res_91501 = res_91503;
                                            } else {
                                                char cond_91504;
                                                double res_91505;
                                                
                                                cond_91504 = res_91473 <
                                                    res_91499;
                                                if (cond_91504) {
                                                    int64_t res_91506;
                                                    double res_91507;
                                                    
                                                    res_91506 = res_91498 - 1;
                                                    res_91507 =
                                                        sitofp_i64_f64(res_91506);
                                                    res_91505 = res_91507;
                                                } else {
                                                    res_91505 = res_91473;
                                                }
                                                res_91501 = res_91505;
                                            }
                                            res_91508 = res_91474 + 0.5;
                                            res_91509 =
                                                fptosi_f64_i64(res_91508);
                                            res_91510 =
                                                sitofp_i64_f64(res_91509);
                                            cond_91511 = 0.0 <= res_91508;
                                            if (cond_91511) {
                                                char cond_91513;
                                                double res_91514;
                                                
                                                cond_91513 = res_91510 <
                                                    res_91508;
                                                if (cond_91513) {
                                                    res_91514 = res_91510;
                                                } else {
                                                    res_91514 = res_91508;
                                                }
                                                res_91512 = res_91514;
                                            } else {
                                                char cond_91515;
                                                double res_91516;
                                                
                                                cond_91515 = res_91508 <
                                                    res_91510;
                                                if (cond_91515) {
                                                    int64_t res_91517;
                                                    double res_91518;
                                                    
                                                    res_91517 = res_91509 - 1;
                                                    res_91518 =
                                                        sitofp_i64_f64(res_91517);
                                                    res_91516 = res_91518;
                                                } else {
                                                    res_91516 = res_91508;
                                                }
                                                res_91512 = res_91516;
                                            }
                                            cond_91519 = res_91512 == res_91508;
                                            if (cond_91519) {
                                                int64_t res_91521;
                                                double res_91522;
                                                char cond_91523;
                                                double res_91524;
                                                int64_t x_91531;
                                                int64_t cond_91532;
                                                char cond_91533;
                                                double res_91534;
                                                
                                                res_91521 =
                                                    fptosi_f64_i64(res_91474);
                                                res_91522 =
                                                    sitofp_i64_f64(res_91521);
                                                cond_91523 = 0.0 <= res_91474;
                                                if (cond_91523) {
                                                    char cond_91525;
                                                    double res_91526;
                                                    
                                                    cond_91525 = res_91522 <
                                                        res_91474;
                                                    if (cond_91525) {
                                                        res_91526 = res_91522;
                                                    } else {
                                                        res_91526 = res_91474;
                                                    }
                                                    res_91524 = res_91526;
                                                } else {
                                                    char cond_91527;
                                                    double res_91528;
                                                    
                                                    cond_91527 = res_91474 <
                                                        res_91522;
                                                    if (cond_91527) {
                                                        int64_t res_91529;
                                                        double res_91530;
                                                        
                                                        res_91529 = res_91521 -
                                                            1;
                                                        res_91530 =
                                                            sitofp_i64_f64(res_91529);
                                                        res_91528 = res_91530;
                                                    } else {
                                                        res_91528 = res_91474;
                                                    }
                                                    res_91524 = res_91528;
                                                }
                                                x_91531 =
                                                    fptosi_f64_i64(res_91524);
                                                cond_91532 = smod64(x_91531, 2);
                                                cond_91533 = cond_91532 == 0;
                                                if (cond_91533) {
                                                    res_91534 = res_91524;
                                                } else {
                                                    res_91534 = res_91512;
                                                }
                                                res_91520 = res_91534;
                                            } else {
                                                res_91520 = res_91512;
                                            }
                                            res_91398 = res_91473;
                                            res_91399 = res_91474;
                                            res_91400 = res_91501;
                                            res_91401 = res_91520;
                                            res_91402 = x_91472;
                                        }
                                        res_91393 = res_91398;
                                        res_91394 = res_91399;
                                        res_91395 = res_91400;
                                        res_91396 = res_91401;
                                        res_91397 = res_91402;
                                    }
                                    res_91370 = res_91393;
                                    res_91371 = res_91394;
                                    res_91372 = res_91395;
                                    res_91373 = res_91396;
                                    res_91374 = res_91397;
                                    res_91375 = eq_91392;
                                } else {
                                    char cond_91535;
                                    char res_91536;
                                    char x_91537;
                                    char y_91538;
                                    char cond_91539;
                                    double res_91540;
                                    double res_91541;
                                    char cond_91549;
                                    char cond_91550;
                                    char eq_91551;
                                    double res_91552;
                                    double res_91553;
                                    double res_91554;
                                    double res_91555;
                                    char res_91556;
                                    
                                    cond_91535 = gridHalfWidth_78975 <
                                        res_91017;
                                    res_91536 = res_91017 < x_91015;
                                    x_91537 = !cond_91535;
                                    y_91538 = x_91537 && res_91536;
                                    cond_91539 = cond_91535 || y_91538;
                                    if (cond_91539) {
                                        char cond_91542;
                                        char res_91543;
                                        char x_91544;
                                        char y_91545;
                                        char cond_91546;
                                        double res_91547;
                                        double res_91548;
                                        
                                        cond_91542 = gridHalfWidth_78975 <
                                            res_91021;
                                        res_91543 = res_91021 < x_91015;
                                        x_91544 = !cond_91542;
                                        y_91545 = x_91544 && res_91543;
                                        cond_91546 = cond_91542 || y_91545;
                                        if (cond_91546) {
                                            res_91547 = 0.0;
                                        } else {
                                            res_91547 = x_91015;
                                        }
                                        if (cond_91546) {
                                            res_91548 = 0.0;
                                        } else {
                                            res_91548 = res_91021;
                                        }
                                        res_91540 = res_91547;
                                        res_91541 = res_91548;
                                    } else {
                                        res_91540 = res_91017;
                                        res_91541 = x_91015;
                                    }
                                    cond_91549 = res_91540 == 0.0;
                                    cond_91550 = res_91541 == 0.0;
                                    eq_91551 = cond_91549 && cond_91550;
                                    if (eq_91551) {
                                        res_91552 = 0.0;
                                        res_91553 = 0.0;
                                        res_91554 = 0.0;
                                        res_91555 = 0.0;
                                        res_91556 = 1;
                                    } else {
                                        double res_91557;
                                        double res_91558;
                                        double res_91559;
                                        double res_91560;
                                        char res_91561;
                                        
                                        if (res_91030) {
                                            char cond_91562;
                                            char cond_91563;
                                            char eq_91564;
                                            char x_91565;
                                            double res_91566;
                                            double res_91567;
                                            double res_91591;
                                            int64_t res_91592;
                                            double res_91593;
                                            char cond_91594;
                                            double res_91595;
                                            char cond_91602;
                                            double res_91603;
                                            int64_t res_91618;
                                            double res_91619;
                                            char cond_91620;
                                            double res_91621;
                                            
                                            cond_91562 = res_91540 == res_91017;
                                            cond_91563 = res_91541 == x_91015;
                                            eq_91564 = cond_91562 && cond_91563;
                                            x_91565 = !eq_91564;
                                            if (eq_91564) {
                                                double arg_91568;
                                                int64_t res_91569;
                                                double res_91570;
                                                char cond_91571;
                                                double res_91572;
                                                double res_91579;
                                                double x_91586;
                                                double y_91587;
                                                double res_91588;
                                                
                                                arg_91568 = res_91540 /
                                                    delta_78976;
                                                res_91569 =
                                                    fptosi_f64_i64(arg_91568);
                                                res_91570 =
                                                    sitofp_i64_f64(res_91569);
                                                cond_91571 = 0.0 <= arg_91568;
                                                if (cond_91571) {
                                                    char cond_91573;
                                                    double res_91574;
                                                    
                                                    cond_91573 = res_91570 <
                                                        arg_91568;
                                                    if (cond_91573) {
                                                        res_91574 = res_91570;
                                                    } else {
                                                        res_91574 = arg_91568;
                                                    }
                                                    res_91572 = res_91574;
                                                } else {
                                                    char cond_91575;
                                                    double res_91576;
                                                    
                                                    cond_91575 = arg_91568 <
                                                        res_91570;
                                                    if (cond_91575) {
                                                        int64_t res_91577;
                                                        double res_91578;
                                                        
                                                        res_91577 = res_91569 -
                                                            1;
                                                        res_91578 =
                                                            sitofp_i64_f64(res_91577);
                                                        res_91576 = res_91578;
                                                    } else {
                                                        res_91576 = arg_91568;
                                                    }
                                                    res_91572 = res_91576;
                                                }
                                                if (cond_91571) {
                                                    char cond_91580;
                                                    double res_91581;
                                                    
                                                    cond_91580 = res_91570 <
                                                        arg_91568;
                                                    if (cond_91580) {
                                                        res_91581 = res_91570;
                                                    } else {
                                                        res_91581 = arg_91568;
                                                    }
                                                    res_91579 = res_91581;
                                                } else {
                                                    char cond_91582;
                                                    double res_91583;
                                                    
                                                    cond_91582 = arg_91568 <
                                                        res_91570;
                                                    if (cond_91582) {
                                                        int64_t res_91584;
                                                        double res_91585;
                                                        
                                                        res_91584 = res_91569 -
                                                            1;
                                                        res_91585 =
                                                            sitofp_i64_f64(res_91584);
                                                        res_91583 = res_91585;
                                                    } else {
                                                        res_91583 = arg_91568;
                                                    }
                                                    res_91579 = res_91583;
                                                }
                                                x_91586 = res_91010 * res_91579;
                                                y_91587 = res_91012 /
                                                    delta_78976;
                                                res_91588 = x_91586 + y_91587;
                                                res_91566 = res_91572;
                                                res_91567 = res_91588;
                                            } else {
                                                double res_91589;
                                                double res_91590;
                                                
                                                res_91589 = res_91540 /
                                                    delta_78976;
                                                res_91590 = res_91541 /
                                                    delta_78976;
                                                res_91566 = res_91589;
                                                res_91567 = res_91590;
                                            }
                                            res_91591 = res_91566 + 0.5;
                                            res_91592 =
                                                fptosi_f64_i64(res_91591);
                                            res_91593 =
                                                sitofp_i64_f64(res_91592);
                                            cond_91594 = 0.0 <= res_91591;
                                            if (cond_91594) {
                                                char cond_91596;
                                                double res_91597;
                                                
                                                cond_91596 = res_91593 <
                                                    res_91591;
                                                if (cond_91596) {
                                                    res_91597 = res_91593;
                                                } else {
                                                    res_91597 = res_91591;
                                                }
                                                res_91595 = res_91597;
                                            } else {
                                                char cond_91598;
                                                double res_91599;
                                                
                                                cond_91598 = res_91591 <
                                                    res_91593;
                                                if (cond_91598) {
                                                    int64_t res_91600;
                                                    double res_91601;
                                                    
                                                    res_91600 = res_91592 - 1;
                                                    res_91601 =
                                                        sitofp_i64_f64(res_91600);
                                                    res_91599 = res_91601;
                                                } else {
                                                    res_91599 = res_91591;
                                                }
                                                res_91595 = res_91599;
                                            }
                                            cond_91602 = res_91595 == res_91591;
                                            if (cond_91602) {
                                                int64_t res_91604;
                                                double res_91605;
                                                char cond_91606;
                                                double res_91607;
                                                int64_t x_91614;
                                                int64_t cond_91615;
                                                char cond_91616;
                                                double res_91617;
                                                
                                                res_91604 =
                                                    fptosi_f64_i64(res_91566);
                                                res_91605 =
                                                    sitofp_i64_f64(res_91604);
                                                cond_91606 = 0.0 <= res_91566;
                                                if (cond_91606) {
                                                    char cond_91608;
                                                    double res_91609;
                                                    
                                                    cond_91608 = res_91605 <
                                                        res_91566;
                                                    if (cond_91608) {
                                                        res_91609 = res_91605;
                                                    } else {
                                                        res_91609 = res_91566;
                                                    }
                                                    res_91607 = res_91609;
                                                } else {
                                                    char cond_91610;
                                                    double res_91611;
                                                    
                                                    cond_91610 = res_91566 <
                                                        res_91605;
                                                    if (cond_91610) {
                                                        int64_t res_91612;
                                                        double res_91613;
                                                        
                                                        res_91612 = res_91604 -
                                                            1;
                                                        res_91613 =
                                                            sitofp_i64_f64(res_91612);
                                                        res_91611 = res_91613;
                                                    } else {
                                                        res_91611 = res_91566;
                                                    }
                                                    res_91607 = res_91611;
                                                }
                                                x_91614 =
                                                    fptosi_f64_i64(res_91607);
                                                cond_91615 = smod64(x_91614, 2);
                                                cond_91616 = cond_91615 == 0;
                                                if (cond_91616) {
                                                    res_91617 = res_91607;
                                                } else {
                                                    res_91617 = res_91595;
                                                }
                                                res_91603 = res_91617;
                                            } else {
                                                res_91603 = res_91595;
                                            }
                                            res_91618 =
                                                fptosi_f64_i64(res_91567);
                                            res_91619 =
                                                sitofp_i64_f64(res_91618);
                                            cond_91620 = 0.0 <= res_91567;
                                            if (cond_91620) {
                                                char cond_91622;
                                                double res_91623;
                                                
                                                cond_91622 = res_91619 <
                                                    res_91567;
                                                if (cond_91622) {
                                                    res_91623 = res_91619;
                                                } else {
                                                    res_91623 = res_91567;
                                                }
                                                res_91621 = res_91623;
                                            } else {
                                                char cond_91624;
                                                double res_91625;
                                                
                                                cond_91624 = res_91567 <
                                                    res_91619;
                                                if (cond_91624) {
                                                    int64_t res_91626;
                                                    double res_91627;
                                                    
                                                    res_91626 = res_91618 - 1;
                                                    res_91627 =
                                                        sitofp_i64_f64(res_91626);
                                                    res_91625 = res_91627;
                                                } else {
                                                    res_91625 = res_91567;
                                                }
                                                res_91621 = res_91625;
                                            }
                                            res_91557 = res_91566;
                                            res_91558 = res_91567;
                                            res_91559 = res_91603;
                                            res_91560 = res_91621;
                                            res_91561 = x_91565;
                                        } else {
                                            char cond_91628;
                                            char cond_91629;
                                            char eq_91630;
                                            char x_91631;
                                            double res_91632;
                                            double res_91633;
                                            int64_t res_91657;
                                            double res_91658;
                                            char cond_91659;
                                            double res_91660;
                                            double res_91667;
                                            int64_t res_91668;
                                            double res_91669;
                                            char cond_91670;
                                            double res_91671;
                                            char cond_91678;
                                            double res_91679;
                                            
                                            cond_91628 = res_91540 == x_91015;
                                            cond_91629 = res_91541 == res_91021;
                                            eq_91630 = cond_91628 && cond_91629;
                                            x_91631 = !eq_91630;
                                            if (eq_91630) {
                                                double arg_91634;
                                                int64_t res_91635;
                                                double res_91636;
                                                char cond_91637;
                                                double res_91638;
                                                double y_91645;
                                                double x_91646;
                                                double res_91647;
                                                double res_91648;
                                                
                                                arg_91634 = res_91541 /
                                                    delta_78976;
                                                res_91635 =
                                                    fptosi_f64_i64(arg_91634);
                                                res_91636 =
                                                    sitofp_i64_f64(res_91635);
                                                cond_91637 = 0.0 <= arg_91634;
                                                if (cond_91637) {
                                                    char cond_91639;
                                                    double res_91640;
                                                    
                                                    cond_91639 = res_91636 <
                                                        arg_91634;
                                                    if (cond_91639) {
                                                        res_91640 = res_91636;
                                                    } else {
                                                        res_91640 = arg_91634;
                                                    }
                                                    res_91638 = res_91640;
                                                } else {
                                                    char cond_91641;
                                                    double res_91642;
                                                    
                                                    cond_91641 = arg_91634 <
                                                        res_91636;
                                                    if (cond_91641) {
                                                        int64_t res_91643;
                                                        double res_91644;
                                                        
                                                        res_91643 = res_91635 -
                                                            1;
                                                        res_91644 =
                                                            sitofp_i64_f64(res_91643);
                                                        res_91642 = res_91644;
                                                    } else {
                                                        res_91642 = arg_91634;
                                                    }
                                                    res_91638 = res_91642;
                                                }
                                                y_91645 = res_91012 /
                                                    delta_78976;
                                                x_91646 = res_91638 - y_91645;
                                                res_91647 = x_91646 / res_91010;
                                                if (cond_91637) {
                                                    char cond_91649;
                                                    double res_91650;
                                                    
                                                    cond_91649 = res_91636 <
                                                        arg_91634;
                                                    if (cond_91649) {
                                                        res_91650 = res_91636;
                                                    } else {
                                                        res_91650 = arg_91634;
                                                    }
                                                    res_91648 = res_91650;
                                                } else {
                                                    char cond_91651;
                                                    double res_91652;
                                                    
                                                    cond_91651 = arg_91634 <
                                                        res_91636;
                                                    if (cond_91651) {
                                                        int64_t res_91653;
                                                        double res_91654;
                                                        
                                                        res_91653 = res_91635 -
                                                            1;
                                                        res_91654 =
                                                            sitofp_i64_f64(res_91653);
                                                        res_91652 = res_91654;
                                                    } else {
                                                        res_91652 = arg_91634;
                                                    }
                                                    res_91648 = res_91652;
                                                }
                                                res_91632 = res_91647;
                                                res_91633 = res_91648;
                                            } else {
                                                double res_91655;
                                                double res_91656;
                                                
                                                res_91655 = res_91540 /
                                                    delta_78976;
                                                res_91656 = res_91541 /
                                                    delta_78976;
                                                res_91632 = res_91655;
                                                res_91633 = res_91656;
                                            }
                                            res_91657 =
                                                fptosi_f64_i64(res_91632);
                                            res_91658 =
                                                sitofp_i64_f64(res_91657);
                                            cond_91659 = 0.0 <= res_91632;
                                            if (cond_91659) {
                                                char cond_91661;
                                                double res_91662;
                                                
                                                cond_91661 = res_91658 <
                                                    res_91632;
                                                if (cond_91661) {
                                                    res_91662 = res_91658;
                                                } else {
                                                    res_91662 = res_91632;
                                                }
                                                res_91660 = res_91662;
                                            } else {
                                                char cond_91663;
                                                double res_91664;
                                                
                                                cond_91663 = res_91632 <
                                                    res_91658;
                                                if (cond_91663) {
                                                    int64_t res_91665;
                                                    double res_91666;
                                                    
                                                    res_91665 = res_91657 - 1;
                                                    res_91666 =
                                                        sitofp_i64_f64(res_91665);
                                                    res_91664 = res_91666;
                                                } else {
                                                    res_91664 = res_91632;
                                                }
                                                res_91660 = res_91664;
                                            }
                                            res_91667 = res_91633 + 0.5;
                                            res_91668 =
                                                fptosi_f64_i64(res_91667);
                                            res_91669 =
                                                sitofp_i64_f64(res_91668);
                                            cond_91670 = 0.0 <= res_91667;
                                            if (cond_91670) {
                                                char cond_91672;
                                                double res_91673;
                                                
                                                cond_91672 = res_91669 <
                                                    res_91667;
                                                if (cond_91672) {
                                                    res_91673 = res_91669;
                                                } else {
                                                    res_91673 = res_91667;
                                                }
                                                res_91671 = res_91673;
                                            } else {
                                                char cond_91674;
                                                double res_91675;
                                                
                                                cond_91674 = res_91667 <
                                                    res_91669;
                                                if (cond_91674) {
                                                    int64_t res_91676;
                                                    double res_91677;
                                                    
                                                    res_91676 = res_91668 - 1;
                                                    res_91677 =
                                                        sitofp_i64_f64(res_91676);
                                                    res_91675 = res_91677;
                                                } else {
                                                    res_91675 = res_91667;
                                                }
                                                res_91671 = res_91675;
                                            }
                                            cond_91678 = res_91671 == res_91667;
                                            if (cond_91678) {
                                                int64_t res_91680;
                                                double res_91681;
                                                char cond_91682;
                                                double res_91683;
                                                int64_t x_91690;
                                                int64_t cond_91691;
                                                char cond_91692;
                                                double res_91693;
                                                
                                                res_91680 =
                                                    fptosi_f64_i64(res_91633);
                                                res_91681 =
                                                    sitofp_i64_f64(res_91680);
                                                cond_91682 = 0.0 <= res_91633;
                                                if (cond_91682) {
                                                    char cond_91684;
                                                    double res_91685;
                                                    
                                                    cond_91684 = res_91681 <
                                                        res_91633;
                                                    if (cond_91684) {
                                                        res_91685 = res_91681;
                                                    } else {
                                                        res_91685 = res_91633;
                                                    }
                                                    res_91683 = res_91685;
                                                } else {
                                                    char cond_91686;
                                                    double res_91687;
                                                    
                                                    cond_91686 = res_91633 <
                                                        res_91681;
                                                    if (cond_91686) {
                                                        int64_t res_91688;
                                                        double res_91689;
                                                        
                                                        res_91688 = res_91680 -
                                                            1;
                                                        res_91689 =
                                                            sitofp_i64_f64(res_91688);
                                                        res_91687 = res_91689;
                                                    } else {
                                                        res_91687 = res_91633;
                                                    }
                                                    res_91683 = res_91687;
                                                }
                                                x_91690 =
                                                    fptosi_f64_i64(res_91683);
                                                cond_91691 = smod64(x_91690, 2);
                                                cond_91692 = cond_91691 == 0;
                                                if (cond_91692) {
                                                    res_91693 = res_91683;
                                                } else {
                                                    res_91693 = res_91671;
                                                }
                                                res_91679 = res_91693;
                                            } else {
                                                res_91679 = res_91671;
                                            }
                                            res_91557 = res_91632;
                                            res_91558 = res_91633;
                                            res_91559 = res_91660;
                                            res_91560 = res_91679;
                                            res_91561 = x_91631;
                                        }
                                        res_91552 = res_91557;
                                        res_91553 = res_91558;
                                        res_91554 = res_91559;
                                        res_91555 = res_91560;
                                        res_91556 = res_91561;
                                    }
                                    res_91370 = res_91552;
                                    res_91371 = res_91553;
                                    res_91372 = res_91554;
                                    res_91373 = res_91555;
                                    res_91374 = res_91556;
                                    res_91375 = eq_91551;
                                }
                                res_91202 = res_91370;
                                res_91203 = res_91371;
                                res_91204 = res_91372;
                                res_91205 = res_91373;
                                res_91206 = res_91374;
                                res_91207 = res_91375;
                            }
                            res_91034 = res_91202;
                            res_91035 = res_91203;
                            res_91036 = res_91204;
                            res_91037 = res_91205;
                            res_91038 = res_91206;
                            res_91039 = res_91207;
                        }
                        x_91694 = res_91036 - res_91034;
                        x_91695 = fpow64(x_91694, 2.0);
                        x_91696 = res_91037 - res_91035;
                        y_91697 = fpow64(x_91696, 2.0);
                        x_91698 = x_91695 + y_91697;
                        x_91699 = futrts_sqrt64(x_91698);
                        res_91700 = x_91699 * delta_78976;
                        res_90947 = res_91036;
                        res_90948 = res_91037;
                        res_90949 = res_91700;
                        res_90950 = res_91038;
                        res_90951 = res_91039;
                    }
                    res_90888 = res_90947;
                    res_90889 = res_90948;
                    res_90890 = res_90949;
                    res_90891 = res_90950;
                    res_90892 = res_90951;
                }
                res_91701 = fptosi_f64_i16(res_90888);
                res_91702 = fptosi_f64_i16(res_90889);
                cond_91703 = !res_90892;
                if (cond_91703) {
                    part_res_91704 = 0;
                } else {
                    part_res_91704 = 1;
                }
                if (cond_91703) {
                    part_res_91705 = 1;
                } else {
                    part_res_91705 = 0;
                }
                zz_91706 = x_merge_91735 + part_res_91705;
                *(__global int32_t *) &mem_97056[j_91741 * 4] = part_res_91704;
                *(__global int16_t *) &mem_97059[j_91741 * 2] = res_91701;
                *(__global int16_t *) &mem_97062[j_91741 * 2] = res_91702;
                *(__global double *) &mem_97065[j_91741 * 8] = res_90890;
                *(__global char *) &mem_97067[j_91741] = res_90891;
                *(__global char *) &mem_97069[j_91741] = res_90892;
                foldres_91751 = zz_91706;
            } else {
                foldres_91751 = x_merge_91735;
            }
            if (slt32(local_tid_91730, group_sizze_90855) && 1) {
                *(__local int32_t *) &mem_97084[local_tid_91730 * 4] =
                    foldres_91751;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int32_t my_index_91707;
            int32_t other_index_91708;
            int32_t x_91709;
            int32_t y_91710;
            int32_t my_index_98147;
            int32_t other_index_98148;
            int32_t x_98149;
            int32_t y_98150;
            
            my_index_91707 = local_tid_91730;
            if (slt32(local_tid_91730, group_sizze_90855)) {
                y_91710 = *(volatile __local
                            int32_t *) &mem_97084[local_tid_91730 *
                                                  sizeof(int32_t)];
            }
            // in-block scan (hopefully no barriers needed)
            {
                int32_t skip_threads_98152 = 1;
                
                while (slt32(skip_threads_98152, 32)) {
                    if (slt32(local_tid_91730, group_sizze_90855) &&
                        sle32(skip_threads_98152, local_tid_91730 -
                              squot32(local_tid_91730, 32) * 32)) {
                        // read operands
                        {
                            x_91709 = *(volatile __local
                                        int32_t *) &mem_97084[(local_tid_91730 -
                                                               skip_threads_98152) *
                                                              sizeof(int32_t)];
                        }
                        // perform operation
                        {
                            int32_t zz_91711 = x_91709 + y_91710;
                            
                            y_91710 = zz_91711;
                        }
                    }
                    if (sle32(wave_sizze_98136, skip_threads_98152)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (slt32(local_tid_91730, group_sizze_90855) &&
                        sle32(skip_threads_98152, local_tid_91730 -
                              squot32(local_tid_91730, 32) * 32)) {
                        // write result
                        {
                            *(volatile __local
                              int32_t *) &mem_97084[local_tid_91730 *
                                                    sizeof(int32_t)] = y_91710;
                        }
                    }
                    if (sle32(wave_sizze_98136, skip_threads_98152)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_98152 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_91730 - squot32(local_tid_91730, 32) * 32) ==
                    31 && slt32(local_tid_91730, group_sizze_90855)) {
                    *(volatile __local
                      int32_t *) &mem_97084[squot32(local_tid_91730, 32) *
                                            sizeof(int32_t)] = y_91710;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for warp 'i+1'
            {
                if (squot32(local_tid_91730, 32) == 0 && slt32(local_tid_91730,
                                                               group_sizze_90855)) {
                    y_98150 = *(volatile __local
                                int32_t *) &mem_97084[local_tid_91730 *
                                                      sizeof(int32_t)];
                }
                // in-block scan (hopefully no barriers needed)
                {
                    int32_t skip_threads_98153 = 1;
                    
                    while (slt32(skip_threads_98153, 32)) {
                        if ((squot32(local_tid_91730, 32) == 0 &&
                             slt32(local_tid_91730, group_sizze_90855)) &&
                            sle32(skip_threads_98153, local_tid_91730 -
                                  squot32(local_tid_91730, 32) * 32)) {
                            // read operands
                            {
                                x_98149 = *(volatile __local
                                            int32_t *) &mem_97084[(local_tid_91730 -
                                                                   skip_threads_98153) *
                                                                  sizeof(int32_t)];
                            }
                            // perform operation
                            {
                                int32_t zz_98151 = x_98149 + y_98150;
                                
                                y_98150 = zz_98151;
                            }
                        }
                        if (sle32(wave_sizze_98136, skip_threads_98153)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if ((squot32(local_tid_91730, 32) == 0 &&
                             slt32(local_tid_91730, group_sizze_90855)) &&
                            sle32(skip_threads_98153, local_tid_91730 -
                                  squot32(local_tid_91730, 32) * 32)) {
                            // write result
                            {
                                *(volatile __local
                                  int32_t *) &mem_97084[local_tid_91730 *
                                                        sizeof(int32_t)] =
                                    y_98150;
                            }
                        }
                        if (sle32(wave_sizze_98136, skip_threads_98153)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_98153 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_91730, 32) == 0 ||
                      !slt32(local_tid_91730, group_sizze_90855))) {
                    // read operands
                    {
                        x_91709 = *(volatile __local
                                    int32_t *) &mem_97084[(squot32(local_tid_91730,
                                                                   32) - 1) *
                                                          sizeof(int32_t)];
                    }
                    // perform operation
                    {
                        int32_t zz_91711 = x_91709 + y_91710;
                        
                        y_91710 = zz_91711;
                    }
                    // write final result
                    {
                        *(volatile __local
                          int32_t *) &mem_97084[local_tid_91730 *
                                                sizeof(int32_t)] = y_91710;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_91730, 32) == 0) {
                    *(volatile __local int32_t *) &mem_97084[local_tid_91730 *
                                                             sizeof(int32_t)] =
                        y_91710;
                }
            }
            if (cond_91742) {
                int32_t scanned_elem_91761 = *(__local
                                               int32_t *) &mem_97084[local_tid_91730 *
                                                                     4];
                
                *(__global int32_t *) &mem_97053[j_91741 * 4] =
                    scanned_elem_91761;
            }
            
            int32_t new_carry_91766;
            
            if (is_first_thread_91764) {
                int32_t carry_91765 = *(__local int32_t *) &mem_97084[y_90858 *
                                                                      4];
                
                new_carry_91766 = carry_91765;
            } else {
                new_carry_91766 = 0;
            }
            
            int32_t new_carry_sync_91767;
            
            new_carry_sync_91767 = new_carry_91766;
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int32_t x_merge_tmp_98146 = new_carry_sync_91767;
            
            x_merge_91735 = x_merge_tmp_98146;
        }
        result_91775 = x_merge_91735;
    }
    if (local_tid_91730 == 0) {
        *(__global int32_t *) &mem_97096[group_id_91731 * 4] = result_91775;
    }
}
__kernel void scan1_kernel_92670(__local volatile int64_t *mem_aligned_0,
                                 int32_t num_elems_79093,
                                 int32_t num_iterations_92675, int32_t y_92678,
                                 int32_t convop_x_97324, __global
                                 unsigned char *mem_97341, __global
                                 unsigned char *mem_97344, __global
                                 unsigned char *mem_97348, __global
                                 unsigned char *mem_97360)
{
    __local volatile char *restrict mem_97353 = mem_aligned_0;
    int32_t wave_sizze_98237;
    int32_t group_sizze_98238;
    char thread_active_98239;
    int32_t global_tid_92670;
    int32_t local_tid_92671;
    int32_t group_id_92672;
    
    global_tid_92670 = get_global_id(0);
    local_tid_92671 = get_local_id(0);
    group_sizze_98238 = get_local_size(0);
    wave_sizze_98237 = LOCKSTEP_WIDTH;
    group_id_92672 = get_group_id(0);
    thread_active_98239 = 1;
    
    int32_t x_92679;
    char is_first_thread_92694;
    int32_t result_92700;
    
    if (thread_active_98239) {
        x_92679 = group_id_92672 * y_92678;
        is_first_thread_92694 = local_tid_92671 == 0;
        
        int32_t x_merge_92676 = 0;
        
        for (int32_t i_92677 = 0; i_92677 < num_iterations_92675; i_92677++) {
            int32_t y_92680 = i_92677 * group_sizze_92636;
            int32_t offset_92681 = x_92679 + y_92680;
            int32_t j_92682 = offset_92681 + local_tid_92671;
            char cond_92683 = slt32(j_92682, convop_x_97324);
            int32_t foldres_92686;
            
            if (cond_92683) {
                int32_t new_index_96946;
                int32_t binop_y_96948;
                int32_t new_index_96949;
                double reshape_elem_92684;
                char cond_92653;
                char cond_92654;
                int32_t part_res_92655;
                int32_t part_res_92656;
                int32_t zz_92657;
                
                new_index_96946 = squot32(j_92682, num_elems_79093);
                binop_y_96948 = new_index_96946 * num_elems_79093;
                new_index_96949 = j_92682 - binop_y_96948;
                reshape_elem_92684 = *(__global
                                       double *) &mem_97348[(new_index_96946 *
                                                             num_elems_79093 +
                                                             new_index_96949) *
                                                            8];
                cond_92653 = reshape_elem_92684 == -1.0;
                cond_92654 = !cond_92653;
                if (cond_92654) {
                    part_res_92655 = 0;
                } else {
                    part_res_92655 = 1;
                }
                if (cond_92654) {
                    part_res_92656 = 1;
                } else {
                    part_res_92656 = 0;
                }
                zz_92657 = x_merge_92676 + part_res_92656;
                *(__global int32_t *) &mem_97344[j_92682 * 4] = part_res_92655;
                foldres_92686 = zz_92657;
            } else {
                foldres_92686 = x_merge_92676;
            }
            if (slt32(local_tid_92671, group_sizze_92636) && 1) {
                *(__local int32_t *) &mem_97353[local_tid_92671 * 4] =
                    foldres_92686;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int32_t my_index_92658;
            int32_t other_index_92659;
            int32_t x_92660;
            int32_t y_92661;
            int32_t my_index_98243;
            int32_t other_index_98244;
            int32_t x_98245;
            int32_t y_98246;
            
            my_index_92658 = local_tid_92671;
            if (slt32(local_tid_92671, group_sizze_92636)) {
                y_92661 = *(volatile __local
                            int32_t *) &mem_97353[local_tid_92671 *
                                                  sizeof(int32_t)];
            }
            // in-block scan (hopefully no barriers needed)
            {
                int32_t skip_threads_98248 = 1;
                
                while (slt32(skip_threads_98248, 32)) {
                    if (slt32(local_tid_92671, group_sizze_92636) &&
                        sle32(skip_threads_98248, local_tid_92671 -
                              squot32(local_tid_92671, 32) * 32)) {
                        // read operands
                        {
                            x_92660 = *(volatile __local
                                        int32_t *) &mem_97353[(local_tid_92671 -
                                                               skip_threads_98248) *
                                                              sizeof(int32_t)];
                        }
                        // perform operation
                        {
                            int32_t zz_92662 = x_92660 + y_92661;
                            
                            y_92661 = zz_92662;
                        }
                    }
                    if (sle32(wave_sizze_98237, skip_threads_98248)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (slt32(local_tid_92671, group_sizze_92636) &&
                        sle32(skip_threads_98248, local_tid_92671 -
                              squot32(local_tid_92671, 32) * 32)) {
                        // write result
                        {
                            *(volatile __local
                              int32_t *) &mem_97353[local_tid_92671 *
                                                    sizeof(int32_t)] = y_92661;
                        }
                    }
                    if (sle32(wave_sizze_98237, skip_threads_98248)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_98248 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_92671 - squot32(local_tid_92671, 32) * 32) ==
                    31 && slt32(local_tid_92671, group_sizze_92636)) {
                    *(volatile __local
                      int32_t *) &mem_97353[squot32(local_tid_92671, 32) *
                                            sizeof(int32_t)] = y_92661;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for warp 'i+1'
            {
                if (squot32(local_tid_92671, 32) == 0 && slt32(local_tid_92671,
                                                               group_sizze_92636)) {
                    y_98246 = *(volatile __local
                                int32_t *) &mem_97353[local_tid_92671 *
                                                      sizeof(int32_t)];
                }
                // in-block scan (hopefully no barriers needed)
                {
                    int32_t skip_threads_98249 = 1;
                    
                    while (slt32(skip_threads_98249, 32)) {
                        if ((squot32(local_tid_92671, 32) == 0 &&
                             slt32(local_tid_92671, group_sizze_92636)) &&
                            sle32(skip_threads_98249, local_tid_92671 -
                                  squot32(local_tid_92671, 32) * 32)) {
                            // read operands
                            {
                                x_98245 = *(volatile __local
                                            int32_t *) &mem_97353[(local_tid_92671 -
                                                                   skip_threads_98249) *
                                                                  sizeof(int32_t)];
                            }
                            // perform operation
                            {
                                int32_t zz_98247 = x_98245 + y_98246;
                                
                                y_98246 = zz_98247;
                            }
                        }
                        if (sle32(wave_sizze_98237, skip_threads_98249)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if ((squot32(local_tid_92671, 32) == 0 &&
                             slt32(local_tid_92671, group_sizze_92636)) &&
                            sle32(skip_threads_98249, local_tid_92671 -
                                  squot32(local_tid_92671, 32) * 32)) {
                            // write result
                            {
                                *(volatile __local
                                  int32_t *) &mem_97353[local_tid_92671 *
                                                        sizeof(int32_t)] =
                                    y_98246;
                            }
                        }
                        if (sle32(wave_sizze_98237, skip_threads_98249)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_98249 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_92671, 32) == 0 ||
                      !slt32(local_tid_92671, group_sizze_92636))) {
                    // read operands
                    {
                        x_92660 = *(volatile __local
                                    int32_t *) &mem_97353[(squot32(local_tid_92671,
                                                                   32) - 1) *
                                                          sizeof(int32_t)];
                    }
                    // perform operation
                    {
                        int32_t zz_92662 = x_92660 + y_92661;
                        
                        y_92661 = zz_92662;
                    }
                    // write final result
                    {
                        *(volatile __local
                          int32_t *) &mem_97353[local_tid_92671 *
                                                sizeof(int32_t)] = y_92661;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_92671, 32) == 0) {
                    *(volatile __local int32_t *) &mem_97353[local_tid_92671 *
                                                             sizeof(int32_t)] =
                        y_92661;
                }
            }
            if (cond_92683) {
                int32_t scanned_elem_92691 = *(__local
                                               int32_t *) &mem_97353[local_tid_92671 *
                                                                     4];
                
                *(__global int32_t *) &mem_97341[j_92682 * 4] =
                    scanned_elem_92691;
            }
            
            int32_t new_carry_92696;
            
            if (is_first_thread_92694) {
                int32_t carry_92695 = *(__local int32_t *) &mem_97353[y_92639 *
                                                                      4];
                
                new_carry_92696 = carry_92695;
            } else {
                new_carry_92696 = 0;
            }
            
            int32_t new_carry_sync_92697;
            
            new_carry_sync_92697 = new_carry_92696;
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int32_t x_merge_tmp_98242 = new_carry_sync_92697;
            
            x_merge_92676 = x_merge_tmp_98242;
        }
        result_92700 = x_merge_92676;
    }
    if (local_tid_92671 == 0) {
        *(__global int32_t *) &mem_97360[group_id_92672 * 4] = result_92700;
    }
}
__kernel void scan1_kernel_93746(__local volatile int64_t *mem_aligned_0,
                                 int32_t sizze_81560,
                                 double gridHalfWidth_81564, double delta_81565,
                                 int32_t nesting_sizze_92859,
                                 int32_t num_iterations_93751, int32_t y_93754,
                                 __global
                                 unsigned char *detectorPositions_mem_97020,
                                 __global unsigned char *mem_97038, __global
                                 unsigned char *mem_97041, __global
                                 unsigned char *mem_97044, __global
                                 unsigned char *mem_97047, __global
                                 unsigned char *mem_97050, __global
                                 unsigned char *mem_97053, __global
                                 unsigned char *mem_97055, __global
                                 unsigned char *mem_97057, __global
                                 unsigned char *mem_97084)
{
    __local volatile char *restrict mem_97072 = mem_aligned_0;
    int32_t wave_sizze_98293;
    int32_t group_sizze_98294;
    char thread_active_98295;
    int32_t global_tid_93746;
    int32_t local_tid_93747;
    int32_t group_id_93748;
    
    global_tid_93746 = get_global_id(0);
    local_tid_93747 = get_local_id(0);
    group_sizze_98294 = get_local_size(0);
    wave_sizze_98293 = LOCKSTEP_WIDTH;
    group_id_93748 = get_group_id(0);
    thread_active_98295 = 1;
    
    int32_t x_93755;
    char is_first_thread_93781;
    int32_t result_93792;
    
    if (thread_active_98295) {
        x_93755 = group_id_93748 * y_93754;
        is_first_thread_93781 = local_tid_93747 == 0;
        
        int32_t x_merge_93752 = 0;
        
        for (int32_t i_93753 = 0; i_93753 < num_iterations_93751; i_93753++) {
            int32_t y_93756 = i_93753 * group_sizze_92872;
            int32_t offset_93757 = x_93755 + y_93756;
            int32_t j_93758 = offset_93757 + local_tid_93747;
            char cond_93759 = slt32(j_93758, nesting_sizze_92859);
            int32_t foldres_93768;
            
            if (cond_93759) {
                int32_t new_index_96911;
                int32_t binop_y_96913;
                int32_t new_index_96914;
                double eAngles_zzip_res_elem_93760;
                double reshape_elem_93761;
                double res_92890;
                double res_92891;
                double res_92892;
                double res_92893;
                double res_92894;
                char cond_92895;
                char res_92896;
                char x_92897;
                char y_92898;
                char res_92899;
                char cond_92900;
                char res_92901;
                char x_92902;
                char y_92903;
                char res_92904;
                double res_92905;
                double res_92906;
                double res_92907;
                char res_92908;
                char res_92909;
                int16_t res_93718;
                int16_t res_93719;
                char cond_93720;
                int32_t part_res_93721;
                int32_t part_res_93722;
                int32_t zz_93723;
                
                new_index_96911 = squot32(j_93758, sizze_81560);
                binop_y_96913 = new_index_96911 * sizze_81560;
                new_index_96914 = j_93758 - binop_y_96913;
                eAngles_zzip_res_elem_93760 = *(__global
                                                double *) &mem_97038[(new_index_96911 *
                                                                      sizze_81560 +
                                                                      new_index_96914) *
                                                                     8];
                reshape_elem_93761 = *(__global
                                       double *) &detectorPositions_mem_97020[new_index_96914 *
                                                                              8];
                res_92890 = 1.7453292519943295e-2 * eAngles_zzip_res_elem_93760;
                res_92891 = futrts_cos64(res_92890);
                res_92892 = futrts_sin64(res_92890);
                res_92893 = res_92891 * reshape_elem_93761;
                res_92894 = res_92892 * reshape_elem_93761;
                cond_92895 = eAngles_zzip_res_elem_93760 == 0.0;
                res_92896 = eAngles_zzip_res_elem_93760 == 180.0;
                x_92897 = !cond_92895;
                y_92898 = x_92897 && res_92896;
                res_92899 = cond_92895 || y_92898;
                cond_92900 = eAngles_zzip_res_elem_93760 == 90.0;
                res_92901 = eAngles_zzip_res_elem_93760 == 270.0;
                x_92902 = !cond_92900;
                y_92903 = x_92902 && res_92901;
                res_92904 = cond_92900 || y_92903;
                if (res_92899) {
                    double y_92910;
                    char cond_92911;
                    char res_92912;
                    char x_92913;
                    char cond_92914;
                    double res_92915;
                    double res_92916;
                    
                    y_92910 = 0.0 - gridHalfWidth_81564;
                    cond_92911 = y_92910 <= res_92893;
                    res_92912 = res_92893 < gridHalfWidth_81564;
                    x_92913 = cond_92911 && res_92912;
                    cond_92914 = !x_92913;
                    if (cond_92914) {
                        res_92915 = 0.0;
                        res_92916 = 0.0;
                    } else {
                        double res_92917;
                        double res_92918;
                        
                        if (cond_92895) {
                            double arg_92919;
                            int64_t res_92920;
                            double res_92921;
                            char cond_92922;
                            double res_92923;
                            double negate_arg_92930;
                            double arg_92931;
                            int64_t res_92932;
                            double res_92933;
                            char cond_92934;
                            double res_92935;
                            
                            arg_92919 = res_92893 / delta_81565;
                            res_92920 = fptosi_f64_i64(arg_92919);
                            res_92921 = sitofp_i64_f64(res_92920);
                            cond_92922 = 0.0 <= arg_92919;
                            if (cond_92922) {
                                char cond_92924;
                                double res_92925;
                                
                                cond_92924 = res_92921 < arg_92919;
                                if (cond_92924) {
                                    res_92925 = res_92921;
                                } else {
                                    res_92925 = arg_92919;
                                }
                                res_92923 = res_92925;
                            } else {
                                char cond_92926;
                                double res_92927;
                                
                                cond_92926 = arg_92919 < res_92921;
                                if (cond_92926) {
                                    int64_t res_92928;
                                    double res_92929;
                                    
                                    res_92928 = res_92920 - 1;
                                    res_92929 = sitofp_i64_f64(res_92928);
                                    res_92927 = res_92929;
                                } else {
                                    res_92927 = arg_92919;
                                }
                                res_92923 = res_92927;
                            }
                            negate_arg_92930 = gridHalfWidth_81564 /
                                delta_81565;
                            arg_92931 = 0.0 - negate_arg_92930;
                            res_92932 = fptosi_f64_i64(arg_92931);
                            res_92933 = sitofp_i64_f64(res_92932);
                            cond_92934 = 0.0 <= arg_92931;
                            if (cond_92934) {
                                char cond_92936;
                                double res_92937;
                                
                                cond_92936 = res_92933 < arg_92931;
                                if (cond_92936) {
                                    res_92937 = res_92933;
                                } else {
                                    res_92937 = arg_92931;
                                }
                                res_92935 = res_92937;
                            } else {
                                char cond_92938;
                                double res_92939;
                                
                                cond_92938 = arg_92931 < res_92933;
                                if (cond_92938) {
                                    int64_t res_92940;
                                    double res_92941;
                                    
                                    res_92940 = res_92932 - 1;
                                    res_92941 = sitofp_i64_f64(res_92940);
                                    res_92939 = res_92941;
                                } else {
                                    res_92939 = arg_92931;
                                }
                                res_92935 = res_92939;
                            }
                            res_92917 = res_92923;
                            res_92918 = res_92935;
                        } else {
                            double arg_92942;
                            int64_t res_92943;
                            double res_92944;
                            char cond_92945;
                            double res_92946;
                            double arg_92953;
                            int64_t res_92954;
                            double res_92955;
                            char cond_92956;
                            double res_92957;
                            
                            arg_92942 = res_92893 / delta_81565;
                            res_92943 = fptosi_f64_i64(arg_92942);
                            res_92944 = sitofp_i64_f64(res_92943);
                            cond_92945 = 0.0 <= arg_92942;
                            if (cond_92945) {
                                char cond_92947;
                                double res_92948;
                                
                                cond_92947 = res_92944 < arg_92942;
                                if (cond_92947) {
                                    res_92948 = res_92944;
                                } else {
                                    res_92948 = arg_92942;
                                }
                                res_92946 = res_92948;
                            } else {
                                char cond_92949;
                                double res_92950;
                                
                                cond_92949 = arg_92942 < res_92944;
                                if (cond_92949) {
                                    int64_t res_92951;
                                    double res_92952;
                                    
                                    res_92951 = res_92943 - 1;
                                    res_92952 = sitofp_i64_f64(res_92951);
                                    res_92950 = res_92952;
                                } else {
                                    res_92950 = arg_92942;
                                }
                                res_92946 = res_92950;
                            }
                            arg_92953 = gridHalfWidth_81564 / delta_81565;
                            res_92954 = fptosi_f64_i64(arg_92953);
                            res_92955 = sitofp_i64_f64(res_92954);
                            cond_92956 = 0.0 <= arg_92953;
                            if (cond_92956) {
                                char cond_92958;
                                double res_92959;
                                
                                cond_92958 = res_92955 < arg_92953;
                                if (cond_92958) {
                                    res_92959 = res_92955;
                                } else {
                                    res_92959 = arg_92953;
                                }
                                res_92957 = res_92959;
                            } else {
                                char cond_92960;
                                double res_92961;
                                
                                cond_92960 = arg_92953 < res_92955;
                                if (cond_92960) {
                                    int64_t res_92962;
                                    double res_92963;
                                    
                                    res_92962 = res_92954 - 1;
                                    res_92963 = sitofp_i64_f64(res_92962);
                                    res_92961 = res_92963;
                                } else {
                                    res_92961 = arg_92953;
                                }
                                res_92957 = res_92961;
                            }
                            res_92917 = res_92946;
                            res_92918 = res_92957;
                        }
                        res_92915 = res_92917;
                        res_92916 = res_92918;
                    }
                    res_92905 = res_92915;
                    res_92906 = res_92916;
                    res_92907 = 0.0;
                    res_92908 = x_92913;
                    res_92909 = cond_92914;
                } else {
                    double res_92964;
                    double res_92965;
                    double res_92966;
                    char res_92967;
                    char res_92968;
                    
                    if (res_92904) {
                        double y_92969;
                        char cond_92970;
                        char res_92971;
                        char x_92972;
                        char cond_92973;
                        double res_92974;
                        double res_92975;
                        
                        y_92969 = 0.0 - gridHalfWidth_81564;
                        cond_92970 = y_92969 <= res_92894;
                        res_92971 = res_92894 < gridHalfWidth_81564;
                        x_92972 = cond_92970 && res_92971;
                        cond_92973 = !x_92972;
                        if (cond_92973) {
                            res_92974 = 0.0;
                            res_92975 = 0.0;
                        } else {
                            double res_92976;
                            double res_92977;
                            
                            if (cond_92900) {
                                double arg_92978;
                                int64_t res_92979;
                                double res_92980;
                                char cond_92981;
                                double res_92982;
                                double arg_92989;
                                int64_t res_92990;
                                double res_92991;
                                char cond_92992;
                                double res_92993;
                                
                                arg_92978 = gridHalfWidth_81564 / delta_81565;
                                res_92979 = fptosi_f64_i64(arg_92978);
                                res_92980 = sitofp_i64_f64(res_92979);
                                cond_92981 = 0.0 <= arg_92978;
                                if (cond_92981) {
                                    char cond_92983;
                                    double res_92984;
                                    
                                    cond_92983 = res_92980 < arg_92978;
                                    if (cond_92983) {
                                        res_92984 = res_92980;
                                    } else {
                                        res_92984 = arg_92978;
                                    }
                                    res_92982 = res_92984;
                                } else {
                                    char cond_92985;
                                    double res_92986;
                                    
                                    cond_92985 = arg_92978 < res_92980;
                                    if (cond_92985) {
                                        int64_t res_92987;
                                        double res_92988;
                                        
                                        res_92987 = res_92979 - 1;
                                        res_92988 = sitofp_i64_f64(res_92987);
                                        res_92986 = res_92988;
                                    } else {
                                        res_92986 = arg_92978;
                                    }
                                    res_92982 = res_92986;
                                }
                                arg_92989 = res_92894 / delta_81565;
                                res_92990 = fptosi_f64_i64(arg_92989);
                                res_92991 = sitofp_i64_f64(res_92990);
                                cond_92992 = 0.0 <= arg_92989;
                                if (cond_92992) {
                                    char cond_92994;
                                    double res_92995;
                                    
                                    cond_92994 = res_92991 < arg_92989;
                                    if (cond_92994) {
                                        res_92995 = res_92991;
                                    } else {
                                        res_92995 = arg_92989;
                                    }
                                    res_92993 = res_92995;
                                } else {
                                    char cond_92996;
                                    double res_92997;
                                    
                                    cond_92996 = arg_92989 < res_92991;
                                    if (cond_92996) {
                                        int64_t res_92998;
                                        double res_92999;
                                        
                                        res_92998 = res_92990 - 1;
                                        res_92999 = sitofp_i64_f64(res_92998);
                                        res_92997 = res_92999;
                                    } else {
                                        res_92997 = arg_92989;
                                    }
                                    res_92993 = res_92997;
                                }
                                res_92976 = res_92982;
                                res_92977 = res_92993;
                            } else {
                                double negate_arg_93000;
                                double arg_93001;
                                int64_t res_93002;
                                double res_93003;
                                char cond_93004;
                                double res_93005;
                                double arg_93012;
                                int64_t res_93013;
                                double res_93014;
                                char cond_93015;
                                double res_93016;
                                
                                negate_arg_93000 = gridHalfWidth_81564 /
                                    delta_81565;
                                arg_93001 = 0.0 - negate_arg_93000;
                                res_93002 = fptosi_f64_i64(arg_93001);
                                res_93003 = sitofp_i64_f64(res_93002);
                                cond_93004 = 0.0 <= arg_93001;
                                if (cond_93004) {
                                    char cond_93006;
                                    double res_93007;
                                    
                                    cond_93006 = res_93003 < arg_93001;
                                    if (cond_93006) {
                                        res_93007 = res_93003;
                                    } else {
                                        res_93007 = arg_93001;
                                    }
                                    res_93005 = res_93007;
                                } else {
                                    char cond_93008;
                                    double res_93009;
                                    
                                    cond_93008 = arg_93001 < res_93003;
                                    if (cond_93008) {
                                        int64_t res_93010;
                                        double res_93011;
                                        
                                        res_93010 = res_93002 - 1;
                                        res_93011 = sitofp_i64_f64(res_93010);
                                        res_93009 = res_93011;
                                    } else {
                                        res_93009 = arg_93001;
                                    }
                                    res_93005 = res_93009;
                                }
                                arg_93012 = res_92894 / delta_81565;
                                res_93013 = fptosi_f64_i64(arg_93012);
                                res_93014 = sitofp_i64_f64(res_93013);
                                cond_93015 = 0.0 <= arg_93012;
                                if (cond_93015) {
                                    char cond_93017;
                                    double res_93018;
                                    
                                    cond_93017 = res_93014 < arg_93012;
                                    if (cond_93017) {
                                        res_93018 = res_93014;
                                    } else {
                                        res_93018 = arg_93012;
                                    }
                                    res_93016 = res_93018;
                                } else {
                                    char cond_93019;
                                    double res_93020;
                                    
                                    cond_93019 = arg_93012 < res_93014;
                                    if (cond_93019) {
                                        int64_t res_93021;
                                        double res_93022;
                                        
                                        res_93021 = res_93013 - 1;
                                        res_93022 = sitofp_i64_f64(res_93021);
                                        res_93020 = res_93022;
                                    } else {
                                        res_93020 = arg_93012;
                                    }
                                    res_93016 = res_93020;
                                }
                                res_92976 = res_93005;
                                res_92977 = res_93016;
                            }
                            res_92974 = res_92976;
                            res_92975 = res_92977;
                        }
                        res_92964 = res_92974;
                        res_92965 = res_92975;
                        res_92966 = 0.0;
                        res_92967 = x_92972;
                        res_92968 = cond_92973;
                    } else {
                        double arg_93023;
                        double arg_93024;
                        double x_93025;
                        double y_93026;
                        double res_93027;
                        double y_93028;
                        double res_93029;
                        double x_93030;
                        double res_93031;
                        double x_93032;
                        double x_93033;
                        double res_93034;
                        double x_93035;
                        double res_93036;
                        double x_93037;
                        double res_93038;
                        char cond_93039;
                        char res_93040;
                        char x_93041;
                        char cond_93042;
                        char res_93043;
                        char x_93044;
                        char x_93045;
                        char y_93046;
                        char res_93047;
                        char cond_93048;
                        char res_93049;
                        char x_93050;
                        double res_93051;
                        double res_93052;
                        double res_93053;
                        double res_93054;
                        char res_93055;
                        char res_93056;
                        double x_93711;
                        double x_93712;
                        double x_93713;
                        double y_93714;
                        double x_93715;
                        double x_93716;
                        double res_93717;
                        
                        arg_93023 = eAngles_zzip_res_elem_93760 + 270.0;
                        arg_93024 = 1.7453292519943295e-2 * arg_93023;
                        x_93025 = futrts_sin64(arg_93024);
                        y_93026 = futrts_cos64(arg_93024);
                        res_93027 = x_93025 / y_93026;
                        y_93028 = res_92893 * res_93027;
                        res_93029 = res_92894 - y_93028;
                        x_93030 = gridHalfWidth_81564 - res_93029;
                        res_93031 = x_93030 / res_93027;
                        x_93032 = 0.0 - gridHalfWidth_81564;
                        x_93033 = x_93032 - res_93029;
                        res_93034 = x_93033 / res_93027;
                        x_93035 = res_93027 * gridHalfWidth_81564;
                        res_93036 = x_93035 + res_93029;
                        x_93037 = res_93027 * x_93032;
                        res_93038 = x_93037 + res_93029;
                        cond_93039 = 45.0 < eAngles_zzip_res_elem_93760;
                        res_93040 = eAngles_zzip_res_elem_93760 <= 135.0;
                        x_93041 = cond_93039 && res_93040;
                        cond_93042 = 225.0 <= eAngles_zzip_res_elem_93760;
                        res_93043 = eAngles_zzip_res_elem_93760 <= 315.0;
                        x_93044 = cond_93042 && res_93043;
                        x_93045 = !x_93041;
                        y_93046 = x_93045 && x_93044;
                        res_93047 = x_93041 || y_93046;
                        cond_93048 = 0.0 < eAngles_zzip_res_elem_93760;
                        res_93049 = eAngles_zzip_res_elem_93760 < 90.0;
                        x_93050 = cond_93048 && res_93049;
                        if (x_93050) {
                            char cond_93057;
                            char res_93058;
                            char x_93059;
                            char y_93060;
                            char cond_93061;
                            double res_93062;
                            double res_93063;
                            char cond_93071;
                            char cond_93072;
                            char eq_93073;
                            double res_93074;
                            double res_93075;
                            double res_93076;
                            double res_93077;
                            char res_93078;
                            
                            cond_93057 = gridHalfWidth_81564 < res_93034;
                            res_93058 = res_93034 < x_93032;
                            x_93059 = !cond_93057;
                            y_93060 = x_93059 && res_93058;
                            cond_93061 = cond_93057 || y_93060;
                            if (cond_93061) {
                                char cond_93064;
                                char res_93065;
                                char x_93066;
                                char y_93067;
                                char cond_93068;
                                double res_93069;
                                double res_93070;
                                
                                cond_93064 = gridHalfWidth_81564 < res_93036;
                                res_93065 = res_93036 < x_93032;
                                x_93066 = !cond_93064;
                                y_93067 = x_93066 && res_93065;
                                cond_93068 = cond_93064 || y_93067;
                                if (cond_93068) {
                                    res_93069 = 0.0;
                                } else {
                                    res_93069 = gridHalfWidth_81564;
                                }
                                if (cond_93068) {
                                    res_93070 = 0.0;
                                } else {
                                    res_93070 = res_93036;
                                }
                                res_93062 = res_93069;
                                res_93063 = res_93070;
                            } else {
                                res_93062 = res_93034;
                                res_93063 = x_93032;
                            }
                            cond_93071 = res_93062 == 0.0;
                            cond_93072 = res_93063 == 0.0;
                            eq_93073 = cond_93071 && cond_93072;
                            if (eq_93073) {
                                res_93074 = 0.0;
                                res_93075 = 0.0;
                                res_93076 = 0.0;
                                res_93077 = 0.0;
                                res_93078 = 1;
                            } else {
                                double res_93079;
                                double res_93080;
                                double res_93081;
                                double res_93082;
                                char res_93083;
                                
                                if (res_93047) {
                                    char cond_93084;
                                    char cond_93085;
                                    char eq_93086;
                                    char x_93087;
                                    double res_93088;
                                    double res_93089;
                                    double res_93113;
                                    int64_t res_93114;
                                    double res_93115;
                                    char cond_93116;
                                    double res_93117;
                                    char cond_93124;
                                    double res_93125;
                                    int64_t res_93140;
                                    double res_93141;
                                    char cond_93142;
                                    double res_93143;
                                    
                                    cond_93084 = res_93062 == res_93034;
                                    cond_93085 = res_93063 == x_93032;
                                    eq_93086 = cond_93084 && cond_93085;
                                    x_93087 = !eq_93086;
                                    if (eq_93086) {
                                        double arg_93090;
                                        int64_t res_93091;
                                        double res_93092;
                                        char cond_93093;
                                        double res_93094;
                                        double res_93101;
                                        double x_93108;
                                        double y_93109;
                                        double res_93110;
                                        
                                        arg_93090 = res_93062 / delta_81565;
                                        res_93091 = fptosi_f64_i64(arg_93090);
                                        res_93092 = sitofp_i64_f64(res_93091);
                                        cond_93093 = 0.0 <= arg_93090;
                                        if (cond_93093) {
                                            char cond_93095;
                                            double res_93096;
                                            
                                            cond_93095 = res_93092 < arg_93090;
                                            if (cond_93095) {
                                                int64_t res_93097;
                                                double res_93098;
                                                
                                                res_93097 = res_93091 + 1;
                                                res_93098 =
                                                    sitofp_i64_f64(res_93097);
                                                res_93096 = res_93098;
                                            } else {
                                                res_93096 = arg_93090;
                                            }
                                            res_93094 = res_93096;
                                        } else {
                                            char cond_93099;
                                            double res_93100;
                                            
                                            cond_93099 = arg_93090 < res_93092;
                                            if (cond_93099) {
                                                res_93100 = res_93092;
                                            } else {
                                                res_93100 = arg_93090;
                                            }
                                            res_93094 = res_93100;
                                        }
                                        if (cond_93093) {
                                            char cond_93102;
                                            double res_93103;
                                            
                                            cond_93102 = res_93092 < arg_93090;
                                            if (cond_93102) {
                                                int64_t res_93104;
                                                double res_93105;
                                                
                                                res_93104 = res_93091 + 1;
                                                res_93105 =
                                                    sitofp_i64_f64(res_93104);
                                                res_93103 = res_93105;
                                            } else {
                                                res_93103 = arg_93090;
                                            }
                                            res_93101 = res_93103;
                                        } else {
                                            char cond_93106;
                                            double res_93107;
                                            
                                            cond_93106 = arg_93090 < res_93092;
                                            if (cond_93106) {
                                                res_93107 = res_93092;
                                            } else {
                                                res_93107 = arg_93090;
                                            }
                                            res_93101 = res_93107;
                                        }
                                        x_93108 = res_93027 * res_93101;
                                        y_93109 = res_93029 / delta_81565;
                                        res_93110 = x_93108 + y_93109;
                                        res_93088 = res_93094;
                                        res_93089 = res_93110;
                                    } else {
                                        double res_93111;
                                        double res_93112;
                                        
                                        res_93111 = res_93062 / delta_81565;
                                        res_93112 = res_93063 / delta_81565;
                                        res_93088 = res_93111;
                                        res_93089 = res_93112;
                                    }
                                    res_93113 = res_93088 + 0.5;
                                    res_93114 = fptosi_f64_i64(res_93113);
                                    res_93115 = sitofp_i64_f64(res_93114);
                                    cond_93116 = 0.0 <= res_93113;
                                    if (cond_93116) {
                                        char cond_93118;
                                        double res_93119;
                                        
                                        cond_93118 = res_93115 < res_93113;
                                        if (cond_93118) {
                                            res_93119 = res_93115;
                                        } else {
                                            res_93119 = res_93113;
                                        }
                                        res_93117 = res_93119;
                                    } else {
                                        char cond_93120;
                                        double res_93121;
                                        
                                        cond_93120 = res_93113 < res_93115;
                                        if (cond_93120) {
                                            int64_t res_93122;
                                            double res_93123;
                                            
                                            res_93122 = res_93114 - 1;
                                            res_93123 =
                                                sitofp_i64_f64(res_93122);
                                            res_93121 = res_93123;
                                        } else {
                                            res_93121 = res_93113;
                                        }
                                        res_93117 = res_93121;
                                    }
                                    cond_93124 = res_93117 == res_93113;
                                    if (cond_93124) {
                                        int64_t res_93126;
                                        double res_93127;
                                        char cond_93128;
                                        double res_93129;
                                        int64_t x_93136;
                                        int64_t cond_93137;
                                        char cond_93138;
                                        double res_93139;
                                        
                                        res_93126 = fptosi_f64_i64(res_93088);
                                        res_93127 = sitofp_i64_f64(res_93126);
                                        cond_93128 = 0.0 <= res_93088;
                                        if (cond_93128) {
                                            char cond_93130;
                                            double res_93131;
                                            
                                            cond_93130 = res_93127 < res_93088;
                                            if (cond_93130) {
                                                res_93131 = res_93127;
                                            } else {
                                                res_93131 = res_93088;
                                            }
                                            res_93129 = res_93131;
                                        } else {
                                            char cond_93132;
                                            double res_93133;
                                            
                                            cond_93132 = res_93088 < res_93127;
                                            if (cond_93132) {
                                                int64_t res_93134;
                                                double res_93135;
                                                
                                                res_93134 = res_93126 - 1;
                                                res_93135 =
                                                    sitofp_i64_f64(res_93134);
                                                res_93133 = res_93135;
                                            } else {
                                                res_93133 = res_93088;
                                            }
                                            res_93129 = res_93133;
                                        }
                                        x_93136 = fptosi_f64_i64(res_93129);
                                        cond_93137 = smod64(x_93136, 2);
                                        cond_93138 = cond_93137 == 0;
                                        if (cond_93138) {
                                            res_93139 = res_93129;
                                        } else {
                                            res_93139 = res_93117;
                                        }
                                        res_93125 = res_93139;
                                    } else {
                                        res_93125 = res_93117;
                                    }
                                    res_93140 = fptosi_f64_i64(res_93089);
                                    res_93141 = sitofp_i64_f64(res_93140);
                                    cond_93142 = 0.0 <= res_93089;
                                    if (cond_93142) {
                                        char cond_93144;
                                        double res_93145;
                                        
                                        cond_93144 = res_93141 < res_93089;
                                        if (cond_93144) {
                                            res_93145 = res_93141;
                                        } else {
                                            res_93145 = res_93089;
                                        }
                                        res_93143 = res_93145;
                                    } else {
                                        char cond_93146;
                                        double res_93147;
                                        
                                        cond_93146 = res_93089 < res_93141;
                                        if (cond_93146) {
                                            int64_t res_93148;
                                            double res_93149;
                                            
                                            res_93148 = res_93140 - 1;
                                            res_93149 =
                                                sitofp_i64_f64(res_93148);
                                            res_93147 = res_93149;
                                        } else {
                                            res_93147 = res_93089;
                                        }
                                        res_93143 = res_93147;
                                    }
                                    res_93079 = res_93088;
                                    res_93080 = res_93089;
                                    res_93081 = res_93125;
                                    res_93082 = res_93143;
                                    res_93083 = x_93087;
                                } else {
                                    char cond_93150;
                                    char cond_93151;
                                    char eq_93152;
                                    char x_93153;
                                    double res_93154;
                                    double res_93155;
                                    int64_t res_93179;
                                    double res_93180;
                                    char cond_93181;
                                    double res_93182;
                                    double res_93189;
                                    int64_t res_93190;
                                    double res_93191;
                                    char cond_93192;
                                    double res_93193;
                                    char cond_93200;
                                    double res_93201;
                                    
                                    cond_93150 = res_93062 ==
                                        gridHalfWidth_81564;
                                    cond_93151 = res_93063 == res_93036;
                                    eq_93152 = cond_93150 && cond_93151;
                                    x_93153 = !eq_93152;
                                    if (eq_93152) {
                                        double arg_93156;
                                        int64_t res_93157;
                                        double res_93158;
                                        char cond_93159;
                                        double res_93160;
                                        double y_93167;
                                        double x_93168;
                                        double res_93169;
                                        double res_93170;
                                        
                                        arg_93156 = res_93063 / delta_81565;
                                        res_93157 = fptosi_f64_i64(arg_93156);
                                        res_93158 = sitofp_i64_f64(res_93157);
                                        cond_93159 = 0.0 <= arg_93156;
                                        if (cond_93159) {
                                            char cond_93161;
                                            double res_93162;
                                            
                                            cond_93161 = res_93158 < arg_93156;
                                            if (cond_93161) {
                                                res_93162 = res_93158;
                                            } else {
                                                res_93162 = arg_93156;
                                            }
                                            res_93160 = res_93162;
                                        } else {
                                            char cond_93163;
                                            double res_93164;
                                            
                                            cond_93163 = arg_93156 < res_93158;
                                            if (cond_93163) {
                                                int64_t res_93165;
                                                double res_93166;
                                                
                                                res_93165 = res_93157 - 1;
                                                res_93166 =
                                                    sitofp_i64_f64(res_93165);
                                                res_93164 = res_93166;
                                            } else {
                                                res_93164 = arg_93156;
                                            }
                                            res_93160 = res_93164;
                                        }
                                        y_93167 = res_93029 / delta_81565;
                                        x_93168 = res_93160 - y_93167;
                                        res_93169 = x_93168 / res_93027;
                                        if (cond_93159) {
                                            char cond_93171;
                                            double res_93172;
                                            
                                            cond_93171 = res_93158 < arg_93156;
                                            if (cond_93171) {
                                                res_93172 = res_93158;
                                            } else {
                                                res_93172 = arg_93156;
                                            }
                                            res_93170 = res_93172;
                                        } else {
                                            char cond_93173;
                                            double res_93174;
                                            
                                            cond_93173 = arg_93156 < res_93158;
                                            if (cond_93173) {
                                                int64_t res_93175;
                                                double res_93176;
                                                
                                                res_93175 = res_93157 - 1;
                                                res_93176 =
                                                    sitofp_i64_f64(res_93175);
                                                res_93174 = res_93176;
                                            } else {
                                                res_93174 = arg_93156;
                                            }
                                            res_93170 = res_93174;
                                        }
                                        res_93154 = res_93169;
                                        res_93155 = res_93170;
                                    } else {
                                        double res_93177;
                                        double res_93178;
                                        
                                        res_93177 = res_93062 / delta_81565;
                                        res_93178 = res_93063 / delta_81565;
                                        res_93154 = res_93177;
                                        res_93155 = res_93178;
                                    }
                                    res_93179 = fptosi_f64_i64(res_93154);
                                    res_93180 = sitofp_i64_f64(res_93179);
                                    cond_93181 = 0.0 <= res_93154;
                                    if (cond_93181) {
                                        char cond_93183;
                                        double res_93184;
                                        
                                        cond_93183 = res_93180 < res_93154;
                                        if (cond_93183) {
                                            int64_t res_93185;
                                            double res_93186;
                                            
                                            res_93185 = res_93179 + 1;
                                            res_93186 =
                                                sitofp_i64_f64(res_93185);
                                            res_93184 = res_93186;
                                        } else {
                                            res_93184 = res_93154;
                                        }
                                        res_93182 = res_93184;
                                    } else {
                                        char cond_93187;
                                        double res_93188;
                                        
                                        cond_93187 = res_93154 < res_93180;
                                        if (cond_93187) {
                                            res_93188 = res_93180;
                                        } else {
                                            res_93188 = res_93154;
                                        }
                                        res_93182 = res_93188;
                                    }
                                    res_93189 = res_93155 + 0.5;
                                    res_93190 = fptosi_f64_i64(res_93189);
                                    res_93191 = sitofp_i64_f64(res_93190);
                                    cond_93192 = 0.0 <= res_93189;
                                    if (cond_93192) {
                                        char cond_93194;
                                        double res_93195;
                                        
                                        cond_93194 = res_93191 < res_93189;
                                        if (cond_93194) {
                                            res_93195 = res_93191;
                                        } else {
                                            res_93195 = res_93189;
                                        }
                                        res_93193 = res_93195;
                                    } else {
                                        char cond_93196;
                                        double res_93197;
                                        
                                        cond_93196 = res_93189 < res_93191;
                                        if (cond_93196) {
                                            int64_t res_93198;
                                            double res_93199;
                                            
                                            res_93198 = res_93190 - 1;
                                            res_93199 =
                                                sitofp_i64_f64(res_93198);
                                            res_93197 = res_93199;
                                        } else {
                                            res_93197 = res_93189;
                                        }
                                        res_93193 = res_93197;
                                    }
                                    cond_93200 = res_93193 == res_93189;
                                    if (cond_93200) {
                                        int64_t res_93202;
                                        double res_93203;
                                        char cond_93204;
                                        double res_93205;
                                        int64_t x_93212;
                                        int64_t cond_93213;
                                        char cond_93214;
                                        double res_93215;
                                        
                                        res_93202 = fptosi_f64_i64(res_93155);
                                        res_93203 = sitofp_i64_f64(res_93202);
                                        cond_93204 = 0.0 <= res_93155;
                                        if (cond_93204) {
                                            char cond_93206;
                                            double res_93207;
                                            
                                            cond_93206 = res_93203 < res_93155;
                                            if (cond_93206) {
                                                res_93207 = res_93203;
                                            } else {
                                                res_93207 = res_93155;
                                            }
                                            res_93205 = res_93207;
                                        } else {
                                            char cond_93208;
                                            double res_93209;
                                            
                                            cond_93208 = res_93155 < res_93203;
                                            if (cond_93208) {
                                                int64_t res_93210;
                                                double res_93211;
                                                
                                                res_93210 = res_93202 - 1;
                                                res_93211 =
                                                    sitofp_i64_f64(res_93210);
                                                res_93209 = res_93211;
                                            } else {
                                                res_93209 = res_93155;
                                            }
                                            res_93205 = res_93209;
                                        }
                                        x_93212 = fptosi_f64_i64(res_93205);
                                        cond_93213 = smod64(x_93212, 2);
                                        cond_93214 = cond_93213 == 0;
                                        if (cond_93214) {
                                            res_93215 = res_93205;
                                        } else {
                                            res_93215 = res_93193;
                                        }
                                        res_93201 = res_93215;
                                    } else {
                                        res_93201 = res_93193;
                                    }
                                    res_93079 = res_93154;
                                    res_93080 = res_93155;
                                    res_93081 = res_93182;
                                    res_93082 = res_93201;
                                    res_93083 = x_93153;
                                }
                                res_93074 = res_93079;
                                res_93075 = res_93080;
                                res_93076 = res_93081;
                                res_93077 = res_93082;
                                res_93078 = res_93083;
                            }
                            res_93051 = res_93074;
                            res_93052 = res_93075;
                            res_93053 = res_93076;
                            res_93054 = res_93077;
                            res_93055 = res_93078;
                            res_93056 = eq_93073;
                        } else {
                            char cond_93216;
                            char res_93217;
                            char x_93218;
                            double res_93219;
                            double res_93220;
                            double res_93221;
                            double res_93222;
                            char res_93223;
                            char res_93224;
                            
                            cond_93216 = 90.0 < eAngles_zzip_res_elem_93760;
                            res_93217 = eAngles_zzip_res_elem_93760 < 180.0;
                            x_93218 = cond_93216 && res_93217;
                            if (x_93218) {
                                char cond_93225;
                                char res_93226;
                                char x_93227;
                                char y_93228;
                                char cond_93229;
                                double res_93230;
                                double res_93231;
                                char cond_93239;
                                char cond_93240;
                                char eq_93241;
                                double res_93242;
                                double res_93243;
                                double res_93244;
                                double res_93245;
                                char res_93246;
                                
                                cond_93225 = gridHalfWidth_81564 < res_93031;
                                res_93226 = res_93031 < x_93032;
                                x_93227 = !cond_93225;
                                y_93228 = x_93227 && res_93226;
                                cond_93229 = cond_93225 || y_93228;
                                if (cond_93229) {
                                    char cond_93232;
                                    char res_93233;
                                    char x_93234;
                                    char y_93235;
                                    char cond_93236;
                                    double res_93237;
                                    double res_93238;
                                    
                                    cond_93232 = gridHalfWidth_81564 <
                                        res_93036;
                                    res_93233 = res_93036 < x_93032;
                                    x_93234 = !cond_93232;
                                    y_93235 = x_93234 && res_93233;
                                    cond_93236 = cond_93232 || y_93235;
                                    if (cond_93236) {
                                        res_93237 = 0.0;
                                    } else {
                                        res_93237 = gridHalfWidth_81564;
                                    }
                                    if (cond_93236) {
                                        res_93238 = 0.0;
                                    } else {
                                        res_93238 = res_93036;
                                    }
                                    res_93230 = res_93237;
                                    res_93231 = res_93238;
                                } else {
                                    res_93230 = res_93031;
                                    res_93231 = gridHalfWidth_81564;
                                }
                                cond_93239 = res_93230 == 0.0;
                                cond_93240 = res_93231 == 0.0;
                                eq_93241 = cond_93239 && cond_93240;
                                if (eq_93241) {
                                    res_93242 = 0.0;
                                    res_93243 = 0.0;
                                    res_93244 = 0.0;
                                    res_93245 = 0.0;
                                    res_93246 = 1;
                                } else {
                                    double res_93247;
                                    double res_93248;
                                    double res_93249;
                                    double res_93250;
                                    char res_93251;
                                    
                                    if (res_93047) {
                                        char cond_93252;
                                        char cond_93253;
                                        char eq_93254;
                                        char x_93255;
                                        double res_93256;
                                        double res_93257;
                                        double res_93281;
                                        int64_t res_93282;
                                        double res_93283;
                                        char cond_93284;
                                        double res_93285;
                                        char cond_93292;
                                        double res_93293;
                                        int64_t res_93308;
                                        double res_93309;
                                        char cond_93310;
                                        double res_93311;
                                        
                                        cond_93252 = res_93230 == res_93031;
                                        cond_93253 = res_93231 ==
                                            gridHalfWidth_81564;
                                        eq_93254 = cond_93252 && cond_93253;
                                        x_93255 = !eq_93254;
                                        if (eq_93254) {
                                            double arg_93258;
                                            int64_t res_93259;
                                            double res_93260;
                                            char cond_93261;
                                            double res_93262;
                                            double res_93269;
                                            double x_93276;
                                            double y_93277;
                                            double res_93278;
                                            
                                            arg_93258 = res_93230 / delta_81565;
                                            res_93259 =
                                                fptosi_f64_i64(arg_93258);
                                            res_93260 =
                                                sitofp_i64_f64(res_93259);
                                            cond_93261 = 0.0 <= arg_93258;
                                            if (cond_93261) {
                                                char cond_93263;
                                                double res_93264;
                                                
                                                cond_93263 = res_93260 <
                                                    arg_93258;
                                                if (cond_93263) {
                                                    int64_t res_93265;
                                                    double res_93266;
                                                    
                                                    res_93265 = res_93259 + 1;
                                                    res_93266 =
                                                        sitofp_i64_f64(res_93265);
                                                    res_93264 = res_93266;
                                                } else {
                                                    res_93264 = arg_93258;
                                                }
                                                res_93262 = res_93264;
                                            } else {
                                                char cond_93267;
                                                double res_93268;
                                                
                                                cond_93267 = arg_93258 <
                                                    res_93260;
                                                if (cond_93267) {
                                                    res_93268 = res_93260;
                                                } else {
                                                    res_93268 = arg_93258;
                                                }
                                                res_93262 = res_93268;
                                            }
                                            if (cond_93261) {
                                                char cond_93270;
                                                double res_93271;
                                                
                                                cond_93270 = res_93260 <
                                                    arg_93258;
                                                if (cond_93270) {
                                                    int64_t res_93272;
                                                    double res_93273;
                                                    
                                                    res_93272 = res_93259 + 1;
                                                    res_93273 =
                                                        sitofp_i64_f64(res_93272);
                                                    res_93271 = res_93273;
                                                } else {
                                                    res_93271 = arg_93258;
                                                }
                                                res_93269 = res_93271;
                                            } else {
                                                char cond_93274;
                                                double res_93275;
                                                
                                                cond_93274 = arg_93258 <
                                                    res_93260;
                                                if (cond_93274) {
                                                    res_93275 = res_93260;
                                                } else {
                                                    res_93275 = arg_93258;
                                                }
                                                res_93269 = res_93275;
                                            }
                                            x_93276 = res_93027 * res_93269;
                                            y_93277 = res_93029 / delta_81565;
                                            res_93278 = x_93276 + y_93277;
                                            res_93256 = res_93262;
                                            res_93257 = res_93278;
                                        } else {
                                            double res_93279;
                                            double res_93280;
                                            
                                            res_93279 = res_93230 / delta_81565;
                                            res_93280 = res_93231 / delta_81565;
                                            res_93256 = res_93279;
                                            res_93257 = res_93280;
                                        }
                                        res_93281 = res_93256 + 0.5;
                                        res_93282 = fptosi_f64_i64(res_93281);
                                        res_93283 = sitofp_i64_f64(res_93282);
                                        cond_93284 = 0.0 <= res_93281;
                                        if (cond_93284) {
                                            char cond_93286;
                                            double res_93287;
                                            
                                            cond_93286 = res_93283 < res_93281;
                                            if (cond_93286) {
                                                res_93287 = res_93283;
                                            } else {
                                                res_93287 = res_93281;
                                            }
                                            res_93285 = res_93287;
                                        } else {
                                            char cond_93288;
                                            double res_93289;
                                            
                                            cond_93288 = res_93281 < res_93283;
                                            if (cond_93288) {
                                                int64_t res_93290;
                                                double res_93291;
                                                
                                                res_93290 = res_93282 - 1;
                                                res_93291 =
                                                    sitofp_i64_f64(res_93290);
                                                res_93289 = res_93291;
                                            } else {
                                                res_93289 = res_93281;
                                            }
                                            res_93285 = res_93289;
                                        }
                                        cond_93292 = res_93285 == res_93281;
                                        if (cond_93292) {
                                            int64_t res_93294;
                                            double res_93295;
                                            char cond_93296;
                                            double res_93297;
                                            int64_t x_93304;
                                            int64_t cond_93305;
                                            char cond_93306;
                                            double res_93307;
                                            
                                            res_93294 =
                                                fptosi_f64_i64(res_93256);
                                            res_93295 =
                                                sitofp_i64_f64(res_93294);
                                            cond_93296 = 0.0 <= res_93256;
                                            if (cond_93296) {
                                                char cond_93298;
                                                double res_93299;
                                                
                                                cond_93298 = res_93295 <
                                                    res_93256;
                                                if (cond_93298) {
                                                    res_93299 = res_93295;
                                                } else {
                                                    res_93299 = res_93256;
                                                }
                                                res_93297 = res_93299;
                                            } else {
                                                char cond_93300;
                                                double res_93301;
                                                
                                                cond_93300 = res_93256 <
                                                    res_93295;
                                                if (cond_93300) {
                                                    int64_t res_93302;
                                                    double res_93303;
                                                    
                                                    res_93302 = res_93294 - 1;
                                                    res_93303 =
                                                        sitofp_i64_f64(res_93302);
                                                    res_93301 = res_93303;
                                                } else {
                                                    res_93301 = res_93256;
                                                }
                                                res_93297 = res_93301;
                                            }
                                            x_93304 = fptosi_f64_i64(res_93297);
                                            cond_93305 = smod64(x_93304, 2);
                                            cond_93306 = cond_93305 == 0;
                                            if (cond_93306) {
                                                res_93307 = res_93297;
                                            } else {
                                                res_93307 = res_93285;
                                            }
                                            res_93293 = res_93307;
                                        } else {
                                            res_93293 = res_93285;
                                        }
                                        res_93308 = fptosi_f64_i64(res_93257);
                                        res_93309 = sitofp_i64_f64(res_93308);
                                        cond_93310 = 0.0 <= res_93257;
                                        if (cond_93310) {
                                            char cond_93312;
                                            double res_93313;
                                            
                                            cond_93312 = res_93309 < res_93257;
                                            if (cond_93312) {
                                                int64_t res_93314;
                                                double res_93315;
                                                
                                                res_93314 = res_93308 + 1;
                                                res_93315 =
                                                    sitofp_i64_f64(res_93314);
                                                res_93313 = res_93315;
                                            } else {
                                                res_93313 = res_93257;
                                            }
                                            res_93311 = res_93313;
                                        } else {
                                            char cond_93316;
                                            double res_93317;
                                            
                                            cond_93316 = res_93257 < res_93309;
                                            if (cond_93316) {
                                                res_93317 = res_93309;
                                            } else {
                                                res_93317 = res_93257;
                                            }
                                            res_93311 = res_93317;
                                        }
                                        res_93247 = res_93256;
                                        res_93248 = res_93257;
                                        res_93249 = res_93293;
                                        res_93250 = res_93311;
                                        res_93251 = x_93255;
                                    } else {
                                        char cond_93318;
                                        char cond_93319;
                                        char eq_93320;
                                        char x_93321;
                                        double res_93322;
                                        double res_93323;
                                        int64_t res_93347;
                                        double res_93348;
                                        char cond_93349;
                                        double res_93350;
                                        double res_93357;
                                        int64_t res_93358;
                                        double res_93359;
                                        char cond_93360;
                                        double res_93361;
                                        char cond_93368;
                                        double res_93369;
                                        
                                        cond_93318 = res_93230 ==
                                            gridHalfWidth_81564;
                                        cond_93319 = res_93231 == res_93036;
                                        eq_93320 = cond_93318 && cond_93319;
                                        x_93321 = !eq_93320;
                                        if (eq_93320) {
                                            double arg_93324;
                                            int64_t res_93325;
                                            double res_93326;
                                            char cond_93327;
                                            double res_93328;
                                            double y_93335;
                                            double x_93336;
                                            double res_93337;
                                            double res_93338;
                                            
                                            arg_93324 = res_93231 / delta_81565;
                                            res_93325 =
                                                fptosi_f64_i64(arg_93324);
                                            res_93326 =
                                                sitofp_i64_f64(res_93325);
                                            cond_93327 = 0.0 <= arg_93324;
                                            if (cond_93327) {
                                                char cond_93329;
                                                double res_93330;
                                                
                                                cond_93329 = res_93326 <
                                                    arg_93324;
                                                if (cond_93329) {
                                                    int64_t res_93331;
                                                    double res_93332;
                                                    
                                                    res_93331 = res_93325 + 1;
                                                    res_93332 =
                                                        sitofp_i64_f64(res_93331);
                                                    res_93330 = res_93332;
                                                } else {
                                                    res_93330 = arg_93324;
                                                }
                                                res_93328 = res_93330;
                                            } else {
                                                char cond_93333;
                                                double res_93334;
                                                
                                                cond_93333 = arg_93324 <
                                                    res_93326;
                                                if (cond_93333) {
                                                    res_93334 = res_93326;
                                                } else {
                                                    res_93334 = arg_93324;
                                                }
                                                res_93328 = res_93334;
                                            }
                                            y_93335 = res_93029 / delta_81565;
                                            x_93336 = res_93328 - y_93335;
                                            res_93337 = x_93336 / res_93027;
                                            if (cond_93327) {
                                                char cond_93339;
                                                double res_93340;
                                                
                                                cond_93339 = res_93326 <
                                                    arg_93324;
                                                if (cond_93339) {
                                                    int64_t res_93341;
                                                    double res_93342;
                                                    
                                                    res_93341 = res_93325 + 1;
                                                    res_93342 =
                                                        sitofp_i64_f64(res_93341);
                                                    res_93340 = res_93342;
                                                } else {
                                                    res_93340 = arg_93324;
                                                }
                                                res_93338 = res_93340;
                                            } else {
                                                char cond_93343;
                                                double res_93344;
                                                
                                                cond_93343 = arg_93324 <
                                                    res_93326;
                                                if (cond_93343) {
                                                    res_93344 = res_93326;
                                                } else {
                                                    res_93344 = arg_93324;
                                                }
                                                res_93338 = res_93344;
                                            }
                                            res_93322 = res_93337;
                                            res_93323 = res_93338;
                                        } else {
                                            double res_93345;
                                            double res_93346;
                                            
                                            res_93345 = res_93230 / delta_81565;
                                            res_93346 = res_93231 / delta_81565;
                                            res_93322 = res_93345;
                                            res_93323 = res_93346;
                                        }
                                        res_93347 = fptosi_f64_i64(res_93322);
                                        res_93348 = sitofp_i64_f64(res_93347);
                                        cond_93349 = 0.0 <= res_93322;
                                        if (cond_93349) {
                                            char cond_93351;
                                            double res_93352;
                                            
                                            cond_93351 = res_93348 < res_93322;
                                            if (cond_93351) {
                                                int64_t res_93353;
                                                double res_93354;
                                                
                                                res_93353 = res_93347 + 1;
                                                res_93354 =
                                                    sitofp_i64_f64(res_93353);
                                                res_93352 = res_93354;
                                            } else {
                                                res_93352 = res_93322;
                                            }
                                            res_93350 = res_93352;
                                        } else {
                                            char cond_93355;
                                            double res_93356;
                                            
                                            cond_93355 = res_93322 < res_93348;
                                            if (cond_93355) {
                                                res_93356 = res_93348;
                                            } else {
                                                res_93356 = res_93322;
                                            }
                                            res_93350 = res_93356;
                                        }
                                        res_93357 = res_93323 + 0.5;
                                        res_93358 = fptosi_f64_i64(res_93357);
                                        res_93359 = sitofp_i64_f64(res_93358);
                                        cond_93360 = 0.0 <= res_93357;
                                        if (cond_93360) {
                                            char cond_93362;
                                            double res_93363;
                                            
                                            cond_93362 = res_93359 < res_93357;
                                            if (cond_93362) {
                                                res_93363 = res_93359;
                                            } else {
                                                res_93363 = res_93357;
                                            }
                                            res_93361 = res_93363;
                                        } else {
                                            char cond_93364;
                                            double res_93365;
                                            
                                            cond_93364 = res_93357 < res_93359;
                                            if (cond_93364) {
                                                int64_t res_93366;
                                                double res_93367;
                                                
                                                res_93366 = res_93358 - 1;
                                                res_93367 =
                                                    sitofp_i64_f64(res_93366);
                                                res_93365 = res_93367;
                                            } else {
                                                res_93365 = res_93357;
                                            }
                                            res_93361 = res_93365;
                                        }
                                        cond_93368 = res_93361 == res_93357;
                                        if (cond_93368) {
                                            int64_t res_93370;
                                            double res_93371;
                                            char cond_93372;
                                            double res_93373;
                                            int64_t x_93380;
                                            int64_t cond_93381;
                                            char cond_93382;
                                            double res_93383;
                                            
                                            res_93370 =
                                                fptosi_f64_i64(res_93323);
                                            res_93371 =
                                                sitofp_i64_f64(res_93370);
                                            cond_93372 = 0.0 <= res_93323;
                                            if (cond_93372) {
                                                char cond_93374;
                                                double res_93375;
                                                
                                                cond_93374 = res_93371 <
                                                    res_93323;
                                                if (cond_93374) {
                                                    res_93375 = res_93371;
                                                } else {
                                                    res_93375 = res_93323;
                                                }
                                                res_93373 = res_93375;
                                            } else {
                                                char cond_93376;
                                                double res_93377;
                                                
                                                cond_93376 = res_93323 <
                                                    res_93371;
                                                if (cond_93376) {
                                                    int64_t res_93378;
                                                    double res_93379;
                                                    
                                                    res_93378 = res_93370 - 1;
                                                    res_93379 =
                                                        sitofp_i64_f64(res_93378);
                                                    res_93377 = res_93379;
                                                } else {
                                                    res_93377 = res_93323;
                                                }
                                                res_93373 = res_93377;
                                            }
                                            x_93380 = fptosi_f64_i64(res_93373);
                                            cond_93381 = smod64(x_93380, 2);
                                            cond_93382 = cond_93381 == 0;
                                            if (cond_93382) {
                                                res_93383 = res_93373;
                                            } else {
                                                res_93383 = res_93361;
                                            }
                                            res_93369 = res_93383;
                                        } else {
                                            res_93369 = res_93361;
                                        }
                                        res_93247 = res_93322;
                                        res_93248 = res_93323;
                                        res_93249 = res_93350;
                                        res_93250 = res_93369;
                                        res_93251 = x_93321;
                                    }
                                    res_93242 = res_93247;
                                    res_93243 = res_93248;
                                    res_93244 = res_93249;
                                    res_93245 = res_93250;
                                    res_93246 = res_93251;
                                }
                                res_93219 = res_93242;
                                res_93220 = res_93243;
                                res_93221 = res_93244;
                                res_93222 = res_93245;
                                res_93223 = res_93246;
                                res_93224 = eq_93241;
                            } else {
                                char cond_93384;
                                char res_93385;
                                char x_93386;
                                double res_93387;
                                double res_93388;
                                double res_93389;
                                double res_93390;
                                char res_93391;
                                char res_93392;
                                
                                cond_93384 = 180.0 <
                                    eAngles_zzip_res_elem_93760;
                                res_93385 = eAngles_zzip_res_elem_93760 < 270.0;
                                x_93386 = cond_93384 && res_93385;
                                if (x_93386) {
                                    char cond_93393;
                                    char res_93394;
                                    char x_93395;
                                    char y_93396;
                                    char cond_93397;
                                    double res_93398;
                                    double res_93399;
                                    char cond_93407;
                                    char cond_93408;
                                    char eq_93409;
                                    double res_93410;
                                    double res_93411;
                                    double res_93412;
                                    double res_93413;
                                    char res_93414;
                                    
                                    cond_93393 = gridHalfWidth_81564 <
                                        res_93031;
                                    res_93394 = res_93031 < x_93032;
                                    x_93395 = !cond_93393;
                                    y_93396 = x_93395 && res_93394;
                                    cond_93397 = cond_93393 || y_93396;
                                    if (cond_93397) {
                                        char cond_93400;
                                        char res_93401;
                                        char x_93402;
                                        char y_93403;
                                        char cond_93404;
                                        double res_93405;
                                        double res_93406;
                                        
                                        cond_93400 = gridHalfWidth_81564 <
                                            res_93038;
                                        res_93401 = res_93038 < x_93032;
                                        x_93402 = !cond_93400;
                                        y_93403 = x_93402 && res_93401;
                                        cond_93404 = cond_93400 || y_93403;
                                        if (cond_93404) {
                                            res_93405 = 0.0;
                                        } else {
                                            res_93405 = x_93032;
                                        }
                                        if (cond_93404) {
                                            res_93406 = 0.0;
                                        } else {
                                            res_93406 = res_93038;
                                        }
                                        res_93398 = res_93405;
                                        res_93399 = res_93406;
                                    } else {
                                        res_93398 = res_93031;
                                        res_93399 = gridHalfWidth_81564;
                                    }
                                    cond_93407 = res_93398 == 0.0;
                                    cond_93408 = res_93399 == 0.0;
                                    eq_93409 = cond_93407 && cond_93408;
                                    if (eq_93409) {
                                        res_93410 = 0.0;
                                        res_93411 = 0.0;
                                        res_93412 = 0.0;
                                        res_93413 = 0.0;
                                        res_93414 = 1;
                                    } else {
                                        double res_93415;
                                        double res_93416;
                                        double res_93417;
                                        double res_93418;
                                        char res_93419;
                                        
                                        if (res_93047) {
                                            char cond_93420;
                                            char cond_93421;
                                            char eq_93422;
                                            char x_93423;
                                            double res_93424;
                                            double res_93425;
                                            double res_93449;
                                            int64_t res_93450;
                                            double res_93451;
                                            char cond_93452;
                                            double res_93453;
                                            char cond_93460;
                                            double res_93461;
                                            int64_t res_93476;
                                            double res_93477;
                                            char cond_93478;
                                            double res_93479;
                                            
                                            cond_93420 = res_93398 == res_93031;
                                            cond_93421 = res_93399 ==
                                                gridHalfWidth_81564;
                                            eq_93422 = cond_93420 && cond_93421;
                                            x_93423 = !eq_93422;
                                            if (eq_93422) {
                                                double arg_93426;
                                                int64_t res_93427;
                                                double res_93428;
                                                char cond_93429;
                                                double res_93430;
                                                double res_93437;
                                                double x_93444;
                                                double y_93445;
                                                double res_93446;
                                                
                                                arg_93426 = res_93398 /
                                                    delta_81565;
                                                res_93427 =
                                                    fptosi_f64_i64(arg_93426);
                                                res_93428 =
                                                    sitofp_i64_f64(res_93427);
                                                cond_93429 = 0.0 <= arg_93426;
                                                if (cond_93429) {
                                                    char cond_93431;
                                                    double res_93432;
                                                    
                                                    cond_93431 = res_93428 <
                                                        arg_93426;
                                                    if (cond_93431) {
                                                        res_93432 = res_93428;
                                                    } else {
                                                        res_93432 = arg_93426;
                                                    }
                                                    res_93430 = res_93432;
                                                } else {
                                                    char cond_93433;
                                                    double res_93434;
                                                    
                                                    cond_93433 = arg_93426 <
                                                        res_93428;
                                                    if (cond_93433) {
                                                        int64_t res_93435;
                                                        double res_93436;
                                                        
                                                        res_93435 = res_93427 -
                                                            1;
                                                        res_93436 =
                                                            sitofp_i64_f64(res_93435);
                                                        res_93434 = res_93436;
                                                    } else {
                                                        res_93434 = arg_93426;
                                                    }
                                                    res_93430 = res_93434;
                                                }
                                                if (cond_93429) {
                                                    char cond_93438;
                                                    double res_93439;
                                                    
                                                    cond_93438 = res_93428 <
                                                        arg_93426;
                                                    if (cond_93438) {
                                                        res_93439 = res_93428;
                                                    } else {
                                                        res_93439 = arg_93426;
                                                    }
                                                    res_93437 = res_93439;
                                                } else {
                                                    char cond_93440;
                                                    double res_93441;
                                                    
                                                    cond_93440 = arg_93426 <
                                                        res_93428;
                                                    if (cond_93440) {
                                                        int64_t res_93442;
                                                        double res_93443;
                                                        
                                                        res_93442 = res_93427 -
                                                            1;
                                                        res_93443 =
                                                            sitofp_i64_f64(res_93442);
                                                        res_93441 = res_93443;
                                                    } else {
                                                        res_93441 = arg_93426;
                                                    }
                                                    res_93437 = res_93441;
                                                }
                                                x_93444 = res_93027 * res_93437;
                                                y_93445 = res_93029 /
                                                    delta_81565;
                                                res_93446 = x_93444 + y_93445;
                                                res_93424 = res_93430;
                                                res_93425 = res_93446;
                                            } else {
                                                double res_93447;
                                                double res_93448;
                                                
                                                res_93447 = res_93398 /
                                                    delta_81565;
                                                res_93448 = res_93399 /
                                                    delta_81565;
                                                res_93424 = res_93447;
                                                res_93425 = res_93448;
                                            }
                                            res_93449 = res_93424 + 0.5;
                                            res_93450 =
                                                fptosi_f64_i64(res_93449);
                                            res_93451 =
                                                sitofp_i64_f64(res_93450);
                                            cond_93452 = 0.0 <= res_93449;
                                            if (cond_93452) {
                                                char cond_93454;
                                                double res_93455;
                                                
                                                cond_93454 = res_93451 <
                                                    res_93449;
                                                if (cond_93454) {
                                                    res_93455 = res_93451;
                                                } else {
                                                    res_93455 = res_93449;
                                                }
                                                res_93453 = res_93455;
                                            } else {
                                                char cond_93456;
                                                double res_93457;
                                                
                                                cond_93456 = res_93449 <
                                                    res_93451;
                                                if (cond_93456) {
                                                    int64_t res_93458;
                                                    double res_93459;
                                                    
                                                    res_93458 = res_93450 - 1;
                                                    res_93459 =
                                                        sitofp_i64_f64(res_93458);
                                                    res_93457 = res_93459;
                                                } else {
                                                    res_93457 = res_93449;
                                                }
                                                res_93453 = res_93457;
                                            }
                                            cond_93460 = res_93453 == res_93449;
                                            if (cond_93460) {
                                                int64_t res_93462;
                                                double res_93463;
                                                char cond_93464;
                                                double res_93465;
                                                int64_t x_93472;
                                                int64_t cond_93473;
                                                char cond_93474;
                                                double res_93475;
                                                
                                                res_93462 =
                                                    fptosi_f64_i64(res_93424);
                                                res_93463 =
                                                    sitofp_i64_f64(res_93462);
                                                cond_93464 = 0.0 <= res_93424;
                                                if (cond_93464) {
                                                    char cond_93466;
                                                    double res_93467;
                                                    
                                                    cond_93466 = res_93463 <
                                                        res_93424;
                                                    if (cond_93466) {
                                                        res_93467 = res_93463;
                                                    } else {
                                                        res_93467 = res_93424;
                                                    }
                                                    res_93465 = res_93467;
                                                } else {
                                                    char cond_93468;
                                                    double res_93469;
                                                    
                                                    cond_93468 = res_93424 <
                                                        res_93463;
                                                    if (cond_93468) {
                                                        int64_t res_93470;
                                                        double res_93471;
                                                        
                                                        res_93470 = res_93462 -
                                                            1;
                                                        res_93471 =
                                                            sitofp_i64_f64(res_93470);
                                                        res_93469 = res_93471;
                                                    } else {
                                                        res_93469 = res_93424;
                                                    }
                                                    res_93465 = res_93469;
                                                }
                                                x_93472 =
                                                    fptosi_f64_i64(res_93465);
                                                cond_93473 = smod64(x_93472, 2);
                                                cond_93474 = cond_93473 == 0;
                                                if (cond_93474) {
                                                    res_93475 = res_93465;
                                                } else {
                                                    res_93475 = res_93453;
                                                }
                                                res_93461 = res_93475;
                                            } else {
                                                res_93461 = res_93453;
                                            }
                                            res_93476 =
                                                fptosi_f64_i64(res_93425);
                                            res_93477 =
                                                sitofp_i64_f64(res_93476);
                                            cond_93478 = 0.0 <= res_93425;
                                            if (cond_93478) {
                                                char cond_93480;
                                                double res_93481;
                                                
                                                cond_93480 = res_93477 <
                                                    res_93425;
                                                if (cond_93480) {
                                                    int64_t res_93482;
                                                    double res_93483;
                                                    
                                                    res_93482 = res_93476 + 1;
                                                    res_93483 =
                                                        sitofp_i64_f64(res_93482);
                                                    res_93481 = res_93483;
                                                } else {
                                                    res_93481 = res_93425;
                                                }
                                                res_93479 = res_93481;
                                            } else {
                                                char cond_93484;
                                                double res_93485;
                                                
                                                cond_93484 = res_93425 <
                                                    res_93477;
                                                if (cond_93484) {
                                                    res_93485 = res_93477;
                                                } else {
                                                    res_93485 = res_93425;
                                                }
                                                res_93479 = res_93485;
                                            }
                                            res_93415 = res_93424;
                                            res_93416 = res_93425;
                                            res_93417 = res_93461;
                                            res_93418 = res_93479;
                                            res_93419 = x_93423;
                                        } else {
                                            char cond_93486;
                                            char cond_93487;
                                            char eq_93488;
                                            char x_93489;
                                            double res_93490;
                                            double res_93491;
                                            int64_t res_93515;
                                            double res_93516;
                                            char cond_93517;
                                            double res_93518;
                                            double res_93525;
                                            int64_t res_93526;
                                            double res_93527;
                                            char cond_93528;
                                            double res_93529;
                                            char cond_93536;
                                            double res_93537;
                                            
                                            cond_93486 = res_93398 == x_93032;
                                            cond_93487 = res_93399 == res_93038;
                                            eq_93488 = cond_93486 && cond_93487;
                                            x_93489 = !eq_93488;
                                            if (eq_93488) {
                                                double arg_93492;
                                                int64_t res_93493;
                                                double res_93494;
                                                char cond_93495;
                                                double res_93496;
                                                double y_93503;
                                                double x_93504;
                                                double res_93505;
                                                double res_93506;
                                                
                                                arg_93492 = res_93399 /
                                                    delta_81565;
                                                res_93493 =
                                                    fptosi_f64_i64(arg_93492);
                                                res_93494 =
                                                    sitofp_i64_f64(res_93493);
                                                cond_93495 = 0.0 <= arg_93492;
                                                if (cond_93495) {
                                                    char cond_93497;
                                                    double res_93498;
                                                    
                                                    cond_93497 = res_93494 <
                                                        arg_93492;
                                                    if (cond_93497) {
                                                        int64_t res_93499;
                                                        double res_93500;
                                                        
                                                        res_93499 = res_93493 +
                                                            1;
                                                        res_93500 =
                                                            sitofp_i64_f64(res_93499);
                                                        res_93498 = res_93500;
                                                    } else {
                                                        res_93498 = arg_93492;
                                                    }
                                                    res_93496 = res_93498;
                                                } else {
                                                    char cond_93501;
                                                    double res_93502;
                                                    
                                                    cond_93501 = arg_93492 <
                                                        res_93494;
                                                    if (cond_93501) {
                                                        res_93502 = res_93494;
                                                    } else {
                                                        res_93502 = arg_93492;
                                                    }
                                                    res_93496 = res_93502;
                                                }
                                                y_93503 = res_93029 /
                                                    delta_81565;
                                                x_93504 = res_93496 - y_93503;
                                                res_93505 = x_93504 / res_93027;
                                                if (cond_93495) {
                                                    char cond_93507;
                                                    double res_93508;
                                                    
                                                    cond_93507 = res_93494 <
                                                        arg_93492;
                                                    if (cond_93507) {
                                                        int64_t res_93509;
                                                        double res_93510;
                                                        
                                                        res_93509 = res_93493 +
                                                            1;
                                                        res_93510 =
                                                            sitofp_i64_f64(res_93509);
                                                        res_93508 = res_93510;
                                                    } else {
                                                        res_93508 = arg_93492;
                                                    }
                                                    res_93506 = res_93508;
                                                } else {
                                                    char cond_93511;
                                                    double res_93512;
                                                    
                                                    cond_93511 = arg_93492 <
                                                        res_93494;
                                                    if (cond_93511) {
                                                        res_93512 = res_93494;
                                                    } else {
                                                        res_93512 = arg_93492;
                                                    }
                                                    res_93506 = res_93512;
                                                }
                                                res_93490 = res_93505;
                                                res_93491 = res_93506;
                                            } else {
                                                double res_93513;
                                                double res_93514;
                                                
                                                res_93513 = res_93398 /
                                                    delta_81565;
                                                res_93514 = res_93399 /
                                                    delta_81565;
                                                res_93490 = res_93513;
                                                res_93491 = res_93514;
                                            }
                                            res_93515 =
                                                fptosi_f64_i64(res_93490);
                                            res_93516 =
                                                sitofp_i64_f64(res_93515);
                                            cond_93517 = 0.0 <= res_93490;
                                            if (cond_93517) {
                                                char cond_93519;
                                                double res_93520;
                                                
                                                cond_93519 = res_93516 <
                                                    res_93490;
                                                if (cond_93519) {
                                                    res_93520 = res_93516;
                                                } else {
                                                    res_93520 = res_93490;
                                                }
                                                res_93518 = res_93520;
                                            } else {
                                                char cond_93521;
                                                double res_93522;
                                                
                                                cond_93521 = res_93490 <
                                                    res_93516;
                                                if (cond_93521) {
                                                    int64_t res_93523;
                                                    double res_93524;
                                                    
                                                    res_93523 = res_93515 - 1;
                                                    res_93524 =
                                                        sitofp_i64_f64(res_93523);
                                                    res_93522 = res_93524;
                                                } else {
                                                    res_93522 = res_93490;
                                                }
                                                res_93518 = res_93522;
                                            }
                                            res_93525 = res_93491 + 0.5;
                                            res_93526 =
                                                fptosi_f64_i64(res_93525);
                                            res_93527 =
                                                sitofp_i64_f64(res_93526);
                                            cond_93528 = 0.0 <= res_93525;
                                            if (cond_93528) {
                                                char cond_93530;
                                                double res_93531;
                                                
                                                cond_93530 = res_93527 <
                                                    res_93525;
                                                if (cond_93530) {
                                                    res_93531 = res_93527;
                                                } else {
                                                    res_93531 = res_93525;
                                                }
                                                res_93529 = res_93531;
                                            } else {
                                                char cond_93532;
                                                double res_93533;
                                                
                                                cond_93532 = res_93525 <
                                                    res_93527;
                                                if (cond_93532) {
                                                    int64_t res_93534;
                                                    double res_93535;
                                                    
                                                    res_93534 = res_93526 - 1;
                                                    res_93535 =
                                                        sitofp_i64_f64(res_93534);
                                                    res_93533 = res_93535;
                                                } else {
                                                    res_93533 = res_93525;
                                                }
                                                res_93529 = res_93533;
                                            }
                                            cond_93536 = res_93529 == res_93525;
                                            if (cond_93536) {
                                                int64_t res_93538;
                                                double res_93539;
                                                char cond_93540;
                                                double res_93541;
                                                int64_t x_93548;
                                                int64_t cond_93549;
                                                char cond_93550;
                                                double res_93551;
                                                
                                                res_93538 =
                                                    fptosi_f64_i64(res_93491);
                                                res_93539 =
                                                    sitofp_i64_f64(res_93538);
                                                cond_93540 = 0.0 <= res_93491;
                                                if (cond_93540) {
                                                    char cond_93542;
                                                    double res_93543;
                                                    
                                                    cond_93542 = res_93539 <
                                                        res_93491;
                                                    if (cond_93542) {
                                                        res_93543 = res_93539;
                                                    } else {
                                                        res_93543 = res_93491;
                                                    }
                                                    res_93541 = res_93543;
                                                } else {
                                                    char cond_93544;
                                                    double res_93545;
                                                    
                                                    cond_93544 = res_93491 <
                                                        res_93539;
                                                    if (cond_93544) {
                                                        int64_t res_93546;
                                                        double res_93547;
                                                        
                                                        res_93546 = res_93538 -
                                                            1;
                                                        res_93547 =
                                                            sitofp_i64_f64(res_93546);
                                                        res_93545 = res_93547;
                                                    } else {
                                                        res_93545 = res_93491;
                                                    }
                                                    res_93541 = res_93545;
                                                }
                                                x_93548 =
                                                    fptosi_f64_i64(res_93541);
                                                cond_93549 = smod64(x_93548, 2);
                                                cond_93550 = cond_93549 == 0;
                                                if (cond_93550) {
                                                    res_93551 = res_93541;
                                                } else {
                                                    res_93551 = res_93529;
                                                }
                                                res_93537 = res_93551;
                                            } else {
                                                res_93537 = res_93529;
                                            }
                                            res_93415 = res_93490;
                                            res_93416 = res_93491;
                                            res_93417 = res_93518;
                                            res_93418 = res_93537;
                                            res_93419 = x_93489;
                                        }
                                        res_93410 = res_93415;
                                        res_93411 = res_93416;
                                        res_93412 = res_93417;
                                        res_93413 = res_93418;
                                        res_93414 = res_93419;
                                    }
                                    res_93387 = res_93410;
                                    res_93388 = res_93411;
                                    res_93389 = res_93412;
                                    res_93390 = res_93413;
                                    res_93391 = res_93414;
                                    res_93392 = eq_93409;
                                } else {
                                    char cond_93552;
                                    char res_93553;
                                    char x_93554;
                                    char y_93555;
                                    char cond_93556;
                                    double res_93557;
                                    double res_93558;
                                    char cond_93566;
                                    char cond_93567;
                                    char eq_93568;
                                    double res_93569;
                                    double res_93570;
                                    double res_93571;
                                    double res_93572;
                                    char res_93573;
                                    
                                    cond_93552 = gridHalfWidth_81564 <
                                        res_93034;
                                    res_93553 = res_93034 < x_93032;
                                    x_93554 = !cond_93552;
                                    y_93555 = x_93554 && res_93553;
                                    cond_93556 = cond_93552 || y_93555;
                                    if (cond_93556) {
                                        char cond_93559;
                                        char res_93560;
                                        char x_93561;
                                        char y_93562;
                                        char cond_93563;
                                        double res_93564;
                                        double res_93565;
                                        
                                        cond_93559 = gridHalfWidth_81564 <
                                            res_93038;
                                        res_93560 = res_93038 < x_93032;
                                        x_93561 = !cond_93559;
                                        y_93562 = x_93561 && res_93560;
                                        cond_93563 = cond_93559 || y_93562;
                                        if (cond_93563) {
                                            res_93564 = 0.0;
                                        } else {
                                            res_93564 = x_93032;
                                        }
                                        if (cond_93563) {
                                            res_93565 = 0.0;
                                        } else {
                                            res_93565 = res_93038;
                                        }
                                        res_93557 = res_93564;
                                        res_93558 = res_93565;
                                    } else {
                                        res_93557 = res_93034;
                                        res_93558 = x_93032;
                                    }
                                    cond_93566 = res_93557 == 0.0;
                                    cond_93567 = res_93558 == 0.0;
                                    eq_93568 = cond_93566 && cond_93567;
                                    if (eq_93568) {
                                        res_93569 = 0.0;
                                        res_93570 = 0.0;
                                        res_93571 = 0.0;
                                        res_93572 = 0.0;
                                        res_93573 = 1;
                                    } else {
                                        double res_93574;
                                        double res_93575;
                                        double res_93576;
                                        double res_93577;
                                        char res_93578;
                                        
                                        if (res_93047) {
                                            char cond_93579;
                                            char cond_93580;
                                            char eq_93581;
                                            char x_93582;
                                            double res_93583;
                                            double res_93584;
                                            double res_93608;
                                            int64_t res_93609;
                                            double res_93610;
                                            char cond_93611;
                                            double res_93612;
                                            char cond_93619;
                                            double res_93620;
                                            int64_t res_93635;
                                            double res_93636;
                                            char cond_93637;
                                            double res_93638;
                                            
                                            cond_93579 = res_93557 == res_93034;
                                            cond_93580 = res_93558 == x_93032;
                                            eq_93581 = cond_93579 && cond_93580;
                                            x_93582 = !eq_93581;
                                            if (eq_93581) {
                                                double arg_93585;
                                                int64_t res_93586;
                                                double res_93587;
                                                char cond_93588;
                                                double res_93589;
                                                double res_93596;
                                                double x_93603;
                                                double y_93604;
                                                double res_93605;
                                                
                                                arg_93585 = res_93557 /
                                                    delta_81565;
                                                res_93586 =
                                                    fptosi_f64_i64(arg_93585);
                                                res_93587 =
                                                    sitofp_i64_f64(res_93586);
                                                cond_93588 = 0.0 <= arg_93585;
                                                if (cond_93588) {
                                                    char cond_93590;
                                                    double res_93591;
                                                    
                                                    cond_93590 = res_93587 <
                                                        arg_93585;
                                                    if (cond_93590) {
                                                        res_93591 = res_93587;
                                                    } else {
                                                        res_93591 = arg_93585;
                                                    }
                                                    res_93589 = res_93591;
                                                } else {
                                                    char cond_93592;
                                                    double res_93593;
                                                    
                                                    cond_93592 = arg_93585 <
                                                        res_93587;
                                                    if (cond_93592) {
                                                        int64_t res_93594;
                                                        double res_93595;
                                                        
                                                        res_93594 = res_93586 -
                                                            1;
                                                        res_93595 =
                                                            sitofp_i64_f64(res_93594);
                                                        res_93593 = res_93595;
                                                    } else {
                                                        res_93593 = arg_93585;
                                                    }
                                                    res_93589 = res_93593;
                                                }
                                                if (cond_93588) {
                                                    char cond_93597;
                                                    double res_93598;
                                                    
                                                    cond_93597 = res_93587 <
                                                        arg_93585;
                                                    if (cond_93597) {
                                                        res_93598 = res_93587;
                                                    } else {
                                                        res_93598 = arg_93585;
                                                    }
                                                    res_93596 = res_93598;
                                                } else {
                                                    char cond_93599;
                                                    double res_93600;
                                                    
                                                    cond_93599 = arg_93585 <
                                                        res_93587;
                                                    if (cond_93599) {
                                                        int64_t res_93601;
                                                        double res_93602;
                                                        
                                                        res_93601 = res_93586 -
                                                            1;
                                                        res_93602 =
                                                            sitofp_i64_f64(res_93601);
                                                        res_93600 = res_93602;
                                                    } else {
                                                        res_93600 = arg_93585;
                                                    }
                                                    res_93596 = res_93600;
                                                }
                                                x_93603 = res_93027 * res_93596;
                                                y_93604 = res_93029 /
                                                    delta_81565;
                                                res_93605 = x_93603 + y_93604;
                                                res_93583 = res_93589;
                                                res_93584 = res_93605;
                                            } else {
                                                double res_93606;
                                                double res_93607;
                                                
                                                res_93606 = res_93557 /
                                                    delta_81565;
                                                res_93607 = res_93558 /
                                                    delta_81565;
                                                res_93583 = res_93606;
                                                res_93584 = res_93607;
                                            }
                                            res_93608 = res_93583 + 0.5;
                                            res_93609 =
                                                fptosi_f64_i64(res_93608);
                                            res_93610 =
                                                sitofp_i64_f64(res_93609);
                                            cond_93611 = 0.0 <= res_93608;
                                            if (cond_93611) {
                                                char cond_93613;
                                                double res_93614;
                                                
                                                cond_93613 = res_93610 <
                                                    res_93608;
                                                if (cond_93613) {
                                                    res_93614 = res_93610;
                                                } else {
                                                    res_93614 = res_93608;
                                                }
                                                res_93612 = res_93614;
                                            } else {
                                                char cond_93615;
                                                double res_93616;
                                                
                                                cond_93615 = res_93608 <
                                                    res_93610;
                                                if (cond_93615) {
                                                    int64_t res_93617;
                                                    double res_93618;
                                                    
                                                    res_93617 = res_93609 - 1;
                                                    res_93618 =
                                                        sitofp_i64_f64(res_93617);
                                                    res_93616 = res_93618;
                                                } else {
                                                    res_93616 = res_93608;
                                                }
                                                res_93612 = res_93616;
                                            }
                                            cond_93619 = res_93612 == res_93608;
                                            if (cond_93619) {
                                                int64_t res_93621;
                                                double res_93622;
                                                char cond_93623;
                                                double res_93624;
                                                int64_t x_93631;
                                                int64_t cond_93632;
                                                char cond_93633;
                                                double res_93634;
                                                
                                                res_93621 =
                                                    fptosi_f64_i64(res_93583);
                                                res_93622 =
                                                    sitofp_i64_f64(res_93621);
                                                cond_93623 = 0.0 <= res_93583;
                                                if (cond_93623) {
                                                    char cond_93625;
                                                    double res_93626;
                                                    
                                                    cond_93625 = res_93622 <
                                                        res_93583;
                                                    if (cond_93625) {
                                                        res_93626 = res_93622;
                                                    } else {
                                                        res_93626 = res_93583;
                                                    }
                                                    res_93624 = res_93626;
                                                } else {
                                                    char cond_93627;
                                                    double res_93628;
                                                    
                                                    cond_93627 = res_93583 <
                                                        res_93622;
                                                    if (cond_93627) {
                                                        int64_t res_93629;
                                                        double res_93630;
                                                        
                                                        res_93629 = res_93621 -
                                                            1;
                                                        res_93630 =
                                                            sitofp_i64_f64(res_93629);
                                                        res_93628 = res_93630;
                                                    } else {
                                                        res_93628 = res_93583;
                                                    }
                                                    res_93624 = res_93628;
                                                }
                                                x_93631 =
                                                    fptosi_f64_i64(res_93624);
                                                cond_93632 = smod64(x_93631, 2);
                                                cond_93633 = cond_93632 == 0;
                                                if (cond_93633) {
                                                    res_93634 = res_93624;
                                                } else {
                                                    res_93634 = res_93612;
                                                }
                                                res_93620 = res_93634;
                                            } else {
                                                res_93620 = res_93612;
                                            }
                                            res_93635 =
                                                fptosi_f64_i64(res_93584);
                                            res_93636 =
                                                sitofp_i64_f64(res_93635);
                                            cond_93637 = 0.0 <= res_93584;
                                            if (cond_93637) {
                                                char cond_93639;
                                                double res_93640;
                                                
                                                cond_93639 = res_93636 <
                                                    res_93584;
                                                if (cond_93639) {
                                                    res_93640 = res_93636;
                                                } else {
                                                    res_93640 = res_93584;
                                                }
                                                res_93638 = res_93640;
                                            } else {
                                                char cond_93641;
                                                double res_93642;
                                                
                                                cond_93641 = res_93584 <
                                                    res_93636;
                                                if (cond_93641) {
                                                    int64_t res_93643;
                                                    double res_93644;
                                                    
                                                    res_93643 = res_93635 - 1;
                                                    res_93644 =
                                                        sitofp_i64_f64(res_93643);
                                                    res_93642 = res_93644;
                                                } else {
                                                    res_93642 = res_93584;
                                                }
                                                res_93638 = res_93642;
                                            }
                                            res_93574 = res_93583;
                                            res_93575 = res_93584;
                                            res_93576 = res_93620;
                                            res_93577 = res_93638;
                                            res_93578 = x_93582;
                                        } else {
                                            char cond_93645;
                                            char cond_93646;
                                            char eq_93647;
                                            char x_93648;
                                            double res_93649;
                                            double res_93650;
                                            int64_t res_93674;
                                            double res_93675;
                                            char cond_93676;
                                            double res_93677;
                                            double res_93684;
                                            int64_t res_93685;
                                            double res_93686;
                                            char cond_93687;
                                            double res_93688;
                                            char cond_93695;
                                            double res_93696;
                                            
                                            cond_93645 = res_93557 == x_93032;
                                            cond_93646 = res_93558 == res_93038;
                                            eq_93647 = cond_93645 && cond_93646;
                                            x_93648 = !eq_93647;
                                            if (eq_93647) {
                                                double arg_93651;
                                                int64_t res_93652;
                                                double res_93653;
                                                char cond_93654;
                                                double res_93655;
                                                double y_93662;
                                                double x_93663;
                                                double res_93664;
                                                double res_93665;
                                                
                                                arg_93651 = res_93558 /
                                                    delta_81565;
                                                res_93652 =
                                                    fptosi_f64_i64(arg_93651);
                                                res_93653 =
                                                    sitofp_i64_f64(res_93652);
                                                cond_93654 = 0.0 <= arg_93651;
                                                if (cond_93654) {
                                                    char cond_93656;
                                                    double res_93657;
                                                    
                                                    cond_93656 = res_93653 <
                                                        arg_93651;
                                                    if (cond_93656) {
                                                        res_93657 = res_93653;
                                                    } else {
                                                        res_93657 = arg_93651;
                                                    }
                                                    res_93655 = res_93657;
                                                } else {
                                                    char cond_93658;
                                                    double res_93659;
                                                    
                                                    cond_93658 = arg_93651 <
                                                        res_93653;
                                                    if (cond_93658) {
                                                        int64_t res_93660;
                                                        double res_93661;
                                                        
                                                        res_93660 = res_93652 -
                                                            1;
                                                        res_93661 =
                                                            sitofp_i64_f64(res_93660);
                                                        res_93659 = res_93661;
                                                    } else {
                                                        res_93659 = arg_93651;
                                                    }
                                                    res_93655 = res_93659;
                                                }
                                                y_93662 = res_93029 /
                                                    delta_81565;
                                                x_93663 = res_93655 - y_93662;
                                                res_93664 = x_93663 / res_93027;
                                                if (cond_93654) {
                                                    char cond_93666;
                                                    double res_93667;
                                                    
                                                    cond_93666 = res_93653 <
                                                        arg_93651;
                                                    if (cond_93666) {
                                                        res_93667 = res_93653;
                                                    } else {
                                                        res_93667 = arg_93651;
                                                    }
                                                    res_93665 = res_93667;
                                                } else {
                                                    char cond_93668;
                                                    double res_93669;
                                                    
                                                    cond_93668 = arg_93651 <
                                                        res_93653;
                                                    if (cond_93668) {
                                                        int64_t res_93670;
                                                        double res_93671;
                                                        
                                                        res_93670 = res_93652 -
                                                            1;
                                                        res_93671 =
                                                            sitofp_i64_f64(res_93670);
                                                        res_93669 = res_93671;
                                                    } else {
                                                        res_93669 = arg_93651;
                                                    }
                                                    res_93665 = res_93669;
                                                }
                                                res_93649 = res_93664;
                                                res_93650 = res_93665;
                                            } else {
                                                double res_93672;
                                                double res_93673;
                                                
                                                res_93672 = res_93557 /
                                                    delta_81565;
                                                res_93673 = res_93558 /
                                                    delta_81565;
                                                res_93649 = res_93672;
                                                res_93650 = res_93673;
                                            }
                                            res_93674 =
                                                fptosi_f64_i64(res_93649);
                                            res_93675 =
                                                sitofp_i64_f64(res_93674);
                                            cond_93676 = 0.0 <= res_93649;
                                            if (cond_93676) {
                                                char cond_93678;
                                                double res_93679;
                                                
                                                cond_93678 = res_93675 <
                                                    res_93649;
                                                if (cond_93678) {
                                                    res_93679 = res_93675;
                                                } else {
                                                    res_93679 = res_93649;
                                                }
                                                res_93677 = res_93679;
                                            } else {
                                                char cond_93680;
                                                double res_93681;
                                                
                                                cond_93680 = res_93649 <
                                                    res_93675;
                                                if (cond_93680) {
                                                    int64_t res_93682;
                                                    double res_93683;
                                                    
                                                    res_93682 = res_93674 - 1;
                                                    res_93683 =
                                                        sitofp_i64_f64(res_93682);
                                                    res_93681 = res_93683;
                                                } else {
                                                    res_93681 = res_93649;
                                                }
                                                res_93677 = res_93681;
                                            }
                                            res_93684 = res_93650 + 0.5;
                                            res_93685 =
                                                fptosi_f64_i64(res_93684);
                                            res_93686 =
                                                sitofp_i64_f64(res_93685);
                                            cond_93687 = 0.0 <= res_93684;
                                            if (cond_93687) {
                                                char cond_93689;
                                                double res_93690;
                                                
                                                cond_93689 = res_93686 <
                                                    res_93684;
                                                if (cond_93689) {
                                                    res_93690 = res_93686;
                                                } else {
                                                    res_93690 = res_93684;
                                                }
                                                res_93688 = res_93690;
                                            } else {
                                                char cond_93691;
                                                double res_93692;
                                                
                                                cond_93691 = res_93684 <
                                                    res_93686;
                                                if (cond_93691) {
                                                    int64_t res_93693;
                                                    double res_93694;
                                                    
                                                    res_93693 = res_93685 - 1;
                                                    res_93694 =
                                                        sitofp_i64_f64(res_93693);
                                                    res_93692 = res_93694;
                                                } else {
                                                    res_93692 = res_93684;
                                                }
                                                res_93688 = res_93692;
                                            }
                                            cond_93695 = res_93688 == res_93684;
                                            if (cond_93695) {
                                                int64_t res_93697;
                                                double res_93698;
                                                char cond_93699;
                                                double res_93700;
                                                int64_t x_93707;
                                                int64_t cond_93708;
                                                char cond_93709;
                                                double res_93710;
                                                
                                                res_93697 =
                                                    fptosi_f64_i64(res_93650);
                                                res_93698 =
                                                    sitofp_i64_f64(res_93697);
                                                cond_93699 = 0.0 <= res_93650;
                                                if (cond_93699) {
                                                    char cond_93701;
                                                    double res_93702;
                                                    
                                                    cond_93701 = res_93698 <
                                                        res_93650;
                                                    if (cond_93701) {
                                                        res_93702 = res_93698;
                                                    } else {
                                                        res_93702 = res_93650;
                                                    }
                                                    res_93700 = res_93702;
                                                } else {
                                                    char cond_93703;
                                                    double res_93704;
                                                    
                                                    cond_93703 = res_93650 <
                                                        res_93698;
                                                    if (cond_93703) {
                                                        int64_t res_93705;
                                                        double res_93706;
                                                        
                                                        res_93705 = res_93697 -
                                                            1;
                                                        res_93706 =
                                                            sitofp_i64_f64(res_93705);
                                                        res_93704 = res_93706;
                                                    } else {
                                                        res_93704 = res_93650;
                                                    }
                                                    res_93700 = res_93704;
                                                }
                                                x_93707 =
                                                    fptosi_f64_i64(res_93700);
                                                cond_93708 = smod64(x_93707, 2);
                                                cond_93709 = cond_93708 == 0;
                                                if (cond_93709) {
                                                    res_93710 = res_93700;
                                                } else {
                                                    res_93710 = res_93688;
                                                }
                                                res_93696 = res_93710;
                                            } else {
                                                res_93696 = res_93688;
                                            }
                                            res_93574 = res_93649;
                                            res_93575 = res_93650;
                                            res_93576 = res_93677;
                                            res_93577 = res_93696;
                                            res_93578 = x_93648;
                                        }
                                        res_93569 = res_93574;
                                        res_93570 = res_93575;
                                        res_93571 = res_93576;
                                        res_93572 = res_93577;
                                        res_93573 = res_93578;
                                    }
                                    res_93387 = res_93569;
                                    res_93388 = res_93570;
                                    res_93389 = res_93571;
                                    res_93390 = res_93572;
                                    res_93391 = res_93573;
                                    res_93392 = eq_93568;
                                }
                                res_93219 = res_93387;
                                res_93220 = res_93388;
                                res_93221 = res_93389;
                                res_93222 = res_93390;
                                res_93223 = res_93391;
                                res_93224 = res_93392;
                            }
                            res_93051 = res_93219;
                            res_93052 = res_93220;
                            res_93053 = res_93221;
                            res_93054 = res_93222;
                            res_93055 = res_93223;
                            res_93056 = res_93224;
                        }
                        x_93711 = res_93053 - res_93051;
                        x_93712 = fpow64(x_93711, 2.0);
                        x_93713 = res_93054 - res_93052;
                        y_93714 = fpow64(x_93713, 2.0);
                        x_93715 = x_93712 + y_93714;
                        x_93716 = futrts_sqrt64(x_93715);
                        res_93717 = x_93716 * delta_81565;
                        res_92964 = res_93053;
                        res_92965 = res_93054;
                        res_92966 = res_93717;
                        res_92967 = res_93055;
                        res_92968 = res_93056;
                    }
                    res_92905 = res_92964;
                    res_92906 = res_92965;
                    res_92907 = res_92966;
                    res_92908 = res_92967;
                    res_92909 = res_92968;
                }
                res_93718 = fptosi_f64_i16(res_92905);
                res_93719 = fptosi_f64_i16(res_92906);
                cond_93720 = !res_92909;
                if (cond_93720) {
                    part_res_93721 = 0;
                } else {
                    part_res_93721 = 1;
                }
                if (cond_93720) {
                    part_res_93722 = 1;
                } else {
                    part_res_93722 = 0;
                }
                zz_93723 = x_merge_93752 + part_res_93722;
                *(__global int32_t *) &mem_97044[j_93758 * 4] = part_res_93721;
                *(__global int16_t *) &mem_97047[j_93758 * 2] = res_93718;
                *(__global int16_t *) &mem_97050[j_93758 * 2] = res_93719;
                *(__global double *) &mem_97053[j_93758 * 8] = res_92907;
                *(__global char *) &mem_97055[j_93758] = res_92908;
                *(__global char *) &mem_97057[j_93758] = res_92909;
                foldres_93768 = zz_93723;
            } else {
                foldres_93768 = x_merge_93752;
            }
            if (slt32(local_tid_93747, group_sizze_92872) && 1) {
                *(__local int32_t *) &mem_97072[local_tid_93747 * 4] =
                    foldres_93768;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int32_t my_index_93724;
            int32_t other_index_93725;
            int32_t x_93726;
            int32_t y_93727;
            int32_t my_index_98304;
            int32_t other_index_98305;
            int32_t x_98306;
            int32_t y_98307;
            
            my_index_93724 = local_tid_93747;
            if (slt32(local_tid_93747, group_sizze_92872)) {
                y_93727 = *(volatile __local
                            int32_t *) &mem_97072[local_tid_93747 *
                                                  sizeof(int32_t)];
            }
            // in-block scan (hopefully no barriers needed)
            {
                int32_t skip_threads_98309 = 1;
                
                while (slt32(skip_threads_98309, 32)) {
                    if (slt32(local_tid_93747, group_sizze_92872) &&
                        sle32(skip_threads_98309, local_tid_93747 -
                              squot32(local_tid_93747, 32) * 32)) {
                        // read operands
                        {
                            x_93726 = *(volatile __local
                                        int32_t *) &mem_97072[(local_tid_93747 -
                                                               skip_threads_98309) *
                                                              sizeof(int32_t)];
                        }
                        // perform operation
                        {
                            int32_t zz_93728 = x_93726 + y_93727;
                            
                            y_93727 = zz_93728;
                        }
                    }
                    if (sle32(wave_sizze_98293, skip_threads_98309)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (slt32(local_tid_93747, group_sizze_92872) &&
                        sle32(skip_threads_98309, local_tid_93747 -
                              squot32(local_tid_93747, 32) * 32)) {
                        // write result
                        {
                            *(volatile __local
                              int32_t *) &mem_97072[local_tid_93747 *
                                                    sizeof(int32_t)] = y_93727;
                        }
                    }
                    if (sle32(wave_sizze_98293, skip_threads_98309)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_98309 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_93747 - squot32(local_tid_93747, 32) * 32) ==
                    31 && slt32(local_tid_93747, group_sizze_92872)) {
                    *(volatile __local
                      int32_t *) &mem_97072[squot32(local_tid_93747, 32) *
                                            sizeof(int32_t)] = y_93727;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for warp 'i+1'
            {
                if (squot32(local_tid_93747, 32) == 0 && slt32(local_tid_93747,
                                                               group_sizze_92872)) {
                    y_98307 = *(volatile __local
                                int32_t *) &mem_97072[local_tid_93747 *
                                                      sizeof(int32_t)];
                }
                // in-block scan (hopefully no barriers needed)
                {
                    int32_t skip_threads_98310 = 1;
                    
                    while (slt32(skip_threads_98310, 32)) {
                        if ((squot32(local_tid_93747, 32) == 0 &&
                             slt32(local_tid_93747, group_sizze_92872)) &&
                            sle32(skip_threads_98310, local_tid_93747 -
                                  squot32(local_tid_93747, 32) * 32)) {
                            // read operands
                            {
                                x_98306 = *(volatile __local
                                            int32_t *) &mem_97072[(local_tid_93747 -
                                                                   skip_threads_98310) *
                                                                  sizeof(int32_t)];
                            }
                            // perform operation
                            {
                                int32_t zz_98308 = x_98306 + y_98307;
                                
                                y_98307 = zz_98308;
                            }
                        }
                        if (sle32(wave_sizze_98293, skip_threads_98310)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if ((squot32(local_tid_93747, 32) == 0 &&
                             slt32(local_tid_93747, group_sizze_92872)) &&
                            sle32(skip_threads_98310, local_tid_93747 -
                                  squot32(local_tid_93747, 32) * 32)) {
                            // write result
                            {
                                *(volatile __local
                                  int32_t *) &mem_97072[local_tid_93747 *
                                                        sizeof(int32_t)] =
                                    y_98307;
                            }
                        }
                        if (sle32(wave_sizze_98293, skip_threads_98310)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_98310 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_93747, 32) == 0 ||
                      !slt32(local_tid_93747, group_sizze_92872))) {
                    // read operands
                    {
                        x_93726 = *(volatile __local
                                    int32_t *) &mem_97072[(squot32(local_tid_93747,
                                                                   32) - 1) *
                                                          sizeof(int32_t)];
                    }
                    // perform operation
                    {
                        int32_t zz_93728 = x_93726 + y_93727;
                        
                        y_93727 = zz_93728;
                    }
                    // write final result
                    {
                        *(volatile __local
                          int32_t *) &mem_97072[local_tid_93747 *
                                                sizeof(int32_t)] = y_93727;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_93747, 32) == 0) {
                    *(volatile __local int32_t *) &mem_97072[local_tid_93747 *
                                                             sizeof(int32_t)] =
                        y_93727;
                }
            }
            if (cond_93759) {
                int32_t scanned_elem_93778 = *(__local
                                               int32_t *) &mem_97072[local_tid_93747 *
                                                                     4];
                
                *(__global int32_t *) &mem_97041[j_93758 * 4] =
                    scanned_elem_93778;
            }
            
            int32_t new_carry_93783;
            
            if (is_first_thread_93781) {
                int32_t carry_93782 = *(__local int32_t *) &mem_97072[y_92875 *
                                                                      4];
                
                new_carry_93783 = carry_93782;
            } else {
                new_carry_93783 = 0;
            }
            
            int32_t new_carry_sync_93784;
            
            new_carry_sync_93784 = new_carry_93783;
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int32_t x_merge_tmp_98303 = new_carry_sync_93784;
            
            x_merge_93752 = x_merge_tmp_98303;
        }
        result_93792 = x_merge_93752;
    }
    if (local_tid_93747 == 0) {
        *(__global int32_t *) &mem_97084[group_id_93748 * 4] = result_93792;
    }
}
__kernel void scan1_kernel_94698(__local volatile int64_t *mem_aligned_0,
                                 int32_t conc_tmp_81645,
                                 int32_t num_iterations_94703, int32_t y_94706,
                                 __global unsigned char *mem_97316, __global
                                 unsigned char *mem_97319, __global
                                 unsigned char *mem_97328)
{
    __local volatile char *restrict mem_97322 = mem_aligned_0;
    int32_t wave_sizze_98402;
    int32_t group_sizze_98403;
    char thread_active_98404;
    int32_t global_tid_94698;
    int32_t local_tid_94699;
    int32_t group_id_94700;
    
    global_tid_94698 = get_global_id(0);
    local_tid_94699 = get_local_id(0);
    group_sizze_98403 = get_local_size(0);
    wave_sizze_98402 = LOCKSTEP_WIDTH;
    group_id_94700 = get_group_id(0);
    thread_active_98404 = 1;
    
    int32_t x_94707;
    char is_first_thread_94720;
    int32_t result_94725;
    
    if (thread_active_98404) {
        x_94707 = group_id_94700 * y_94706;
        is_first_thread_94720 = local_tid_94699 == 0;
        
        int32_t x_merge_94704 = 0;
        
        for (int32_t i_94705 = 0; i_94705 < num_iterations_94703; i_94705++) {
            int32_t y_94708 = i_94705 * group_sizze_94670;
            int32_t offset_94709 = x_94707 + y_94708;
            int32_t j_94710 = offset_94709 + local_tid_94699;
            char cond_94711 = slt32(j_94710, conc_tmp_81645);
            int32_t foldres_94713;
            
            if (cond_94711) {
                char index_concat_cmp_96943;
                int32_t index_concat_branch_96947;
                int32_t res_94687;
                
                index_concat_cmp_96943 = sle32(1, j_94710);
                if (index_concat_cmp_96943) {
                    int32_t index_concat_i_96944;
                    int32_t index_concat_96945;
                    
                    index_concat_i_96944 = j_94710 - 1;
                    index_concat_96945 = *(__global
                                           int32_t *) &mem_97316[index_concat_i_96944 *
                                                                 4];
                    index_concat_branch_96947 = index_concat_96945;
                } else {
                    index_concat_branch_96947 = 0;
                }
                res_94687 = x_merge_94704 + index_concat_branch_96947;
                foldres_94713 = res_94687;
            } else {
                foldres_94713 = x_merge_94704;
            }
            if (slt32(local_tid_94699, group_sizze_94670) && 1) {
                *(__local int32_t *) &mem_97322[local_tid_94699 * 4] =
                    foldres_94713;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int32_t my_index_94688;
            int32_t other_index_94689;
            int32_t x_94690;
            int32_t x_94691;
            int32_t my_index_98407;
            int32_t other_index_98408;
            int32_t x_98409;
            int32_t x_98410;
            
            my_index_94688 = local_tid_94699;
            if (slt32(local_tid_94699, group_sizze_94670)) {
                x_94691 = *(volatile __local
                            int32_t *) &mem_97322[local_tid_94699 *
                                                  sizeof(int32_t)];
            }
            // in-block scan (hopefully no barriers needed)
            {
                int32_t skip_threads_98412 = 1;
                
                while (slt32(skip_threads_98412, 32)) {
                    if (slt32(local_tid_94699, group_sizze_94670) &&
                        sle32(skip_threads_98412, local_tid_94699 -
                              squot32(local_tid_94699, 32) * 32)) {
                        // read operands
                        {
                            x_94690 = *(volatile __local
                                        int32_t *) &mem_97322[(local_tid_94699 -
                                                               skip_threads_98412) *
                                                              sizeof(int32_t)];
                        }
                        // perform operation
                        {
                            int32_t res_94692 = x_94690 + x_94691;
                            
                            x_94691 = res_94692;
                        }
                    }
                    if (sle32(wave_sizze_98402, skip_threads_98412)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (slt32(local_tid_94699, group_sizze_94670) &&
                        sle32(skip_threads_98412, local_tid_94699 -
                              squot32(local_tid_94699, 32) * 32)) {
                        // write result
                        {
                            *(volatile __local
                              int32_t *) &mem_97322[local_tid_94699 *
                                                    sizeof(int32_t)] = x_94691;
                        }
                    }
                    if (sle32(wave_sizze_98402, skip_threads_98412)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_98412 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_94699 - squot32(local_tid_94699, 32) * 32) ==
                    31 && slt32(local_tid_94699, group_sizze_94670)) {
                    *(volatile __local
                      int32_t *) &mem_97322[squot32(local_tid_94699, 32) *
                                            sizeof(int32_t)] = x_94691;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for warp 'i+1'
            {
                if (squot32(local_tid_94699, 32) == 0 && slt32(local_tid_94699,
                                                               group_sizze_94670)) {
                    x_98410 = *(volatile __local
                                int32_t *) &mem_97322[local_tid_94699 *
                                                      sizeof(int32_t)];
                }
                // in-block scan (hopefully no barriers needed)
                {
                    int32_t skip_threads_98413 = 1;
                    
                    while (slt32(skip_threads_98413, 32)) {
                        if ((squot32(local_tid_94699, 32) == 0 &&
                             slt32(local_tid_94699, group_sizze_94670)) &&
                            sle32(skip_threads_98413, local_tid_94699 -
                                  squot32(local_tid_94699, 32) * 32)) {
                            // read operands
                            {
                                x_98409 = *(volatile __local
                                            int32_t *) &mem_97322[(local_tid_94699 -
                                                                   skip_threads_98413) *
                                                                  sizeof(int32_t)];
                            }
                            // perform operation
                            {
                                int32_t res_98411 = x_98409 + x_98410;
                                
                                x_98410 = res_98411;
                            }
                        }
                        if (sle32(wave_sizze_98402, skip_threads_98413)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if ((squot32(local_tid_94699, 32) == 0 &&
                             slt32(local_tid_94699, group_sizze_94670)) &&
                            sle32(skip_threads_98413, local_tid_94699 -
                                  squot32(local_tid_94699, 32) * 32)) {
                            // write result
                            {
                                *(volatile __local
                                  int32_t *) &mem_97322[local_tid_94699 *
                                                        sizeof(int32_t)] =
                                    x_98410;
                            }
                        }
                        if (sle32(wave_sizze_98402, skip_threads_98413)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_98413 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_94699, 32) == 0 ||
                      !slt32(local_tid_94699, group_sizze_94670))) {
                    // read operands
                    {
                        x_94690 = *(volatile __local
                                    int32_t *) &mem_97322[(squot32(local_tid_94699,
                                                                   32) - 1) *
                                                          sizeof(int32_t)];
                    }
                    // perform operation
                    {
                        int32_t res_94692 = x_94690 + x_94691;
                        
                        x_94691 = res_94692;
                    }
                    // write final result
                    {
                        *(volatile __local
                          int32_t *) &mem_97322[local_tid_94699 *
                                                sizeof(int32_t)] = x_94691;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_94699, 32) == 0) {
                    *(volatile __local int32_t *) &mem_97322[local_tid_94699 *
                                                             sizeof(int32_t)] =
                        x_94691;
                }
            }
            if (cond_94711) {
                int32_t scanned_elem_94717 = *(__local
                                               int32_t *) &mem_97322[local_tid_94699 *
                                                                     4];
                
                *(__global int32_t *) &mem_97319[j_94710 * 4] =
                    scanned_elem_94717;
            }
            
            int32_t new_carry_94722;
            
            if (is_first_thread_94720) {
                int32_t carry_94721 = *(__local int32_t *) &mem_97322[y_94673 *
                                                                      4];
                
                new_carry_94722 = carry_94721;
            } else {
                new_carry_94722 = 0;
            }
            
            int32_t new_carry_sync_94723;
            
            new_carry_sync_94723 = new_carry_94722;
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int32_t x_merge_tmp_98406 = new_carry_sync_94723;
            
            x_merge_94704 = x_merge_tmp_98406;
        }
        result_94725 = x_merge_94704;
    }
    if (local_tid_94699 == 0) {
        *(__global int32_t *) &mem_97328[group_id_94700 * 4] = result_94725;
    }
}
__kernel void scan1_kernel_94817(__local volatile int64_t *mem_aligned_0,
                                 int32_t num_elems_81642,
                                 int32_t num_iterations_94822, int32_t y_94825,
                                 int32_t convop_x_97339, __global
                                 unsigned char *mem_97352, __global
                                 unsigned char *mem_97355, __global
                                 unsigned char *mem_97359, __global
                                 unsigned char *mem_97371)
{
    __local volatile char *restrict mem_97364 = mem_aligned_0;
    int32_t wave_sizze_98431;
    int32_t group_sizze_98432;
    char thread_active_98433;
    int32_t global_tid_94817;
    int32_t local_tid_94818;
    int32_t group_id_94819;
    
    global_tid_94817 = get_global_id(0);
    local_tid_94818 = get_local_id(0);
    group_sizze_98432 = get_local_size(0);
    wave_sizze_98431 = LOCKSTEP_WIDTH;
    group_id_94819 = get_group_id(0);
    thread_active_98433 = 1;
    
    int32_t x_94826;
    char is_first_thread_94841;
    int32_t result_94847;
    
    if (thread_active_98433) {
        x_94826 = group_id_94819 * y_94825;
        is_first_thread_94841 = local_tid_94818 == 0;
        
        int32_t x_merge_94823 = 0;
        
        for (int32_t i_94824 = 0; i_94824 < num_iterations_94822; i_94824++) {
            int32_t y_94827 = i_94824 * group_sizze_94783;
            int32_t offset_94828 = x_94826 + y_94827;
            int32_t j_94829 = offset_94828 + local_tid_94818;
            char cond_94830 = slt32(j_94829, convop_x_97339);
            int32_t foldres_94833;
            
            if (cond_94830) {
                int32_t new_index_96948;
                int32_t binop_y_96950;
                int32_t new_index_96951;
                double reshape_elem_94831;
                char cond_94800;
                char cond_94801;
                int32_t part_res_94802;
                int32_t part_res_94803;
                int32_t zz_94804;
                
                new_index_96948 = squot32(j_94829, num_elems_81642);
                binop_y_96950 = new_index_96948 * num_elems_81642;
                new_index_96951 = j_94829 - binop_y_96950;
                reshape_elem_94831 = *(__global
                                       double *) &mem_97359[(new_index_96948 *
                                                             num_elems_81642 +
                                                             new_index_96951) *
                                                            8];
                cond_94800 = reshape_elem_94831 == -1.0;
                cond_94801 = !cond_94800;
                if (cond_94801) {
                    part_res_94802 = 0;
                } else {
                    part_res_94802 = 1;
                }
                if (cond_94801) {
                    part_res_94803 = 1;
                } else {
                    part_res_94803 = 0;
                }
                zz_94804 = x_merge_94823 + part_res_94803;
                *(__global int32_t *) &mem_97355[j_94829 * 4] = part_res_94802;
                foldres_94833 = zz_94804;
            } else {
                foldres_94833 = x_merge_94823;
            }
            if (slt32(local_tid_94818, group_sizze_94783) && 1) {
                *(__local int32_t *) &mem_97364[local_tid_94818 * 4] =
                    foldres_94833;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int32_t my_index_94805;
            int32_t other_index_94806;
            int32_t x_94807;
            int32_t y_94808;
            int32_t my_index_98437;
            int32_t other_index_98438;
            int32_t x_98439;
            int32_t y_98440;
            
            my_index_94805 = local_tid_94818;
            if (slt32(local_tid_94818, group_sizze_94783)) {
                y_94808 = *(volatile __local
                            int32_t *) &mem_97364[local_tid_94818 *
                                                  sizeof(int32_t)];
            }
            // in-block scan (hopefully no barriers needed)
            {
                int32_t skip_threads_98442 = 1;
                
                while (slt32(skip_threads_98442, 32)) {
                    if (slt32(local_tid_94818, group_sizze_94783) &&
                        sle32(skip_threads_98442, local_tid_94818 -
                              squot32(local_tid_94818, 32) * 32)) {
                        // read operands
                        {
                            x_94807 = *(volatile __local
                                        int32_t *) &mem_97364[(local_tid_94818 -
                                                               skip_threads_98442) *
                                                              sizeof(int32_t)];
                        }
                        // perform operation
                        {
                            int32_t zz_94809 = x_94807 + y_94808;
                            
                            y_94808 = zz_94809;
                        }
                    }
                    if (sle32(wave_sizze_98431, skip_threads_98442)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (slt32(local_tid_94818, group_sizze_94783) &&
                        sle32(skip_threads_98442, local_tid_94818 -
                              squot32(local_tid_94818, 32) * 32)) {
                        // write result
                        {
                            *(volatile __local
                              int32_t *) &mem_97364[local_tid_94818 *
                                                    sizeof(int32_t)] = y_94808;
                        }
                    }
                    if (sle32(wave_sizze_98431, skip_threads_98442)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_98442 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_94818 - squot32(local_tid_94818, 32) * 32) ==
                    31 && slt32(local_tid_94818, group_sizze_94783)) {
                    *(volatile __local
                      int32_t *) &mem_97364[squot32(local_tid_94818, 32) *
                                            sizeof(int32_t)] = y_94808;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for warp 'i+1'
            {
                if (squot32(local_tid_94818, 32) == 0 && slt32(local_tid_94818,
                                                               group_sizze_94783)) {
                    y_98440 = *(volatile __local
                                int32_t *) &mem_97364[local_tid_94818 *
                                                      sizeof(int32_t)];
                }
                // in-block scan (hopefully no barriers needed)
                {
                    int32_t skip_threads_98443 = 1;
                    
                    while (slt32(skip_threads_98443, 32)) {
                        if ((squot32(local_tid_94818, 32) == 0 &&
                             slt32(local_tid_94818, group_sizze_94783)) &&
                            sle32(skip_threads_98443, local_tid_94818 -
                                  squot32(local_tid_94818, 32) * 32)) {
                            // read operands
                            {
                                x_98439 = *(volatile __local
                                            int32_t *) &mem_97364[(local_tid_94818 -
                                                                   skip_threads_98443) *
                                                                  sizeof(int32_t)];
                            }
                            // perform operation
                            {
                                int32_t zz_98441 = x_98439 + y_98440;
                                
                                y_98440 = zz_98441;
                            }
                        }
                        if (sle32(wave_sizze_98431, skip_threads_98443)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if ((squot32(local_tid_94818, 32) == 0 &&
                             slt32(local_tid_94818, group_sizze_94783)) &&
                            sle32(skip_threads_98443, local_tid_94818 -
                                  squot32(local_tid_94818, 32) * 32)) {
                            // write result
                            {
                                *(volatile __local
                                  int32_t *) &mem_97364[local_tid_94818 *
                                                        sizeof(int32_t)] =
                                    y_98440;
                            }
                        }
                        if (sle32(wave_sizze_98431, skip_threads_98443)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_98443 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_94818, 32) == 0 ||
                      !slt32(local_tid_94818, group_sizze_94783))) {
                    // read operands
                    {
                        x_94807 = *(volatile __local
                                    int32_t *) &mem_97364[(squot32(local_tid_94818,
                                                                   32) - 1) *
                                                          sizeof(int32_t)];
                    }
                    // perform operation
                    {
                        int32_t zz_94809 = x_94807 + y_94808;
                        
                        y_94808 = zz_94809;
                    }
                    // write final result
                    {
                        *(volatile __local
                          int32_t *) &mem_97364[local_tid_94818 *
                                                sizeof(int32_t)] = y_94808;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_94818, 32) == 0) {
                    *(volatile __local int32_t *) &mem_97364[local_tid_94818 *
                                                             sizeof(int32_t)] =
                        y_94808;
                }
            }
            if (cond_94830) {
                int32_t scanned_elem_94838 = *(__local
                                               int32_t *) &mem_97364[local_tid_94818 *
                                                                     4];
                
                *(__global int32_t *) &mem_97352[j_94829 * 4] =
                    scanned_elem_94838;
            }
            
            int32_t new_carry_94843;
            
            if (is_first_thread_94841) {
                int32_t carry_94842 = *(__local int32_t *) &mem_97364[y_94786 *
                                                                      4];
                
                new_carry_94843 = carry_94842;
            } else {
                new_carry_94843 = 0;
            }
            
            int32_t new_carry_sync_94844;
            
            new_carry_sync_94844 = new_carry_94843;
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int32_t x_merge_tmp_98436 = new_carry_sync_94844;
            
            x_merge_94823 = x_merge_tmp_98436;
        }
        result_94847 = x_merge_94823;
    }
    if (local_tid_94818 == 0) {
        *(__global int32_t *) &mem_97371[group_id_94819 * 4] = result_94847;
    }
}
__kernel void scan1_kernel_95893(__local volatile int64_t *mem_aligned_0,
                                 int32_t sizze_84151,
                                 double gridHalfWidth_84155, double delta_84156,
                                 int32_t nesting_sizze_95006,
                                 int32_t num_iterations_95898, int32_t y_95901,
                                 __global
                                 unsigned char *detectorPositions_mem_97020,
                                 __global unsigned char *mem_97038, __global
                                 unsigned char *mem_97041, __global
                                 unsigned char *mem_97044, __global
                                 unsigned char *mem_97047, __global
                                 unsigned char *mem_97050, __global
                                 unsigned char *mem_97053, __global
                                 unsigned char *mem_97055, __global
                                 unsigned char *mem_97057, __global
                                 unsigned char *mem_97084)
{
    __local volatile char *restrict mem_97072 = mem_aligned_0;
    int32_t wave_sizze_98484;
    int32_t group_sizze_98485;
    char thread_active_98486;
    int32_t global_tid_95893;
    int32_t local_tid_95894;
    int32_t group_id_95895;
    
    global_tid_95893 = get_global_id(0);
    local_tid_95894 = get_local_id(0);
    group_sizze_98485 = get_local_size(0);
    wave_sizze_98484 = LOCKSTEP_WIDTH;
    group_id_95895 = get_group_id(0);
    thread_active_98486 = 1;
    
    int32_t x_95902;
    char is_first_thread_95928;
    int32_t result_95939;
    
    if (thread_active_98486) {
        x_95902 = group_id_95895 * y_95901;
        is_first_thread_95928 = local_tid_95894 == 0;
        
        int32_t x_merge_95899 = 0;
        
        for (int32_t i_95900 = 0; i_95900 < num_iterations_95898; i_95900++) {
            int32_t y_95903 = i_95900 * group_sizze_95019;
            int32_t offset_95904 = x_95902 + y_95903;
            int32_t j_95905 = offset_95904 + local_tid_95894;
            char cond_95906 = slt32(j_95905, nesting_sizze_95006);
            int32_t foldres_95915;
            
            if (cond_95906) {
                int32_t new_index_96911;
                int32_t binop_y_96913;
                int32_t new_index_96914;
                double eAngles_zzip_res_elem_95907;
                double reshape_elem_95908;
                double res_95037;
                double res_95038;
                double res_95039;
                double res_95040;
                double res_95041;
                char cond_95042;
                char res_95043;
                char x_95044;
                char y_95045;
                char res_95046;
                char cond_95047;
                char res_95048;
                char x_95049;
                char y_95050;
                char res_95051;
                double res_95052;
                double res_95053;
                double res_95054;
                char res_95055;
                char res_95056;
                int16_t res_95865;
                int16_t res_95866;
                char cond_95867;
                int32_t part_res_95868;
                int32_t part_res_95869;
                int32_t zz_95870;
                
                new_index_96911 = squot32(j_95905, sizze_84151);
                binop_y_96913 = new_index_96911 * sizze_84151;
                new_index_96914 = j_95905 - binop_y_96913;
                eAngles_zzip_res_elem_95907 = *(__global
                                                double *) &mem_97038[(new_index_96911 *
                                                                      sizze_84151 +
                                                                      new_index_96914) *
                                                                     8];
                reshape_elem_95908 = *(__global
                                       double *) &detectorPositions_mem_97020[new_index_96914 *
                                                                              8];
                res_95037 = 1.7453292519943295e-2 * eAngles_zzip_res_elem_95907;
                res_95038 = futrts_cos64(res_95037);
                res_95039 = futrts_sin64(res_95037);
                res_95040 = res_95038 * reshape_elem_95908;
                res_95041 = res_95039 * reshape_elem_95908;
                cond_95042 = eAngles_zzip_res_elem_95907 == 0.0;
                res_95043 = eAngles_zzip_res_elem_95907 == 180.0;
                x_95044 = !cond_95042;
                y_95045 = x_95044 && res_95043;
                res_95046 = cond_95042 || y_95045;
                cond_95047 = eAngles_zzip_res_elem_95907 == 90.0;
                res_95048 = eAngles_zzip_res_elem_95907 == 270.0;
                x_95049 = !cond_95047;
                y_95050 = x_95049 && res_95048;
                res_95051 = cond_95047 || y_95050;
                if (res_95046) {
                    double y_95057;
                    char cond_95058;
                    char res_95059;
                    char x_95060;
                    char cond_95061;
                    double res_95062;
                    double res_95063;
                    
                    y_95057 = 0.0 - gridHalfWidth_84155;
                    cond_95058 = y_95057 <= res_95040;
                    res_95059 = res_95040 < gridHalfWidth_84155;
                    x_95060 = cond_95058 && res_95059;
                    cond_95061 = !x_95060;
                    if (cond_95061) {
                        res_95062 = 0.0;
                        res_95063 = 0.0;
                    } else {
                        double res_95064;
                        double res_95065;
                        
                        if (cond_95042) {
                            double arg_95066;
                            int64_t res_95067;
                            double res_95068;
                            char cond_95069;
                            double res_95070;
                            double negate_arg_95077;
                            double arg_95078;
                            int64_t res_95079;
                            double res_95080;
                            char cond_95081;
                            double res_95082;
                            
                            arg_95066 = res_95040 / delta_84156;
                            res_95067 = fptosi_f64_i64(arg_95066);
                            res_95068 = sitofp_i64_f64(res_95067);
                            cond_95069 = 0.0 <= arg_95066;
                            if (cond_95069) {
                                char cond_95071;
                                double res_95072;
                                
                                cond_95071 = res_95068 < arg_95066;
                                if (cond_95071) {
                                    res_95072 = res_95068;
                                } else {
                                    res_95072 = arg_95066;
                                }
                                res_95070 = res_95072;
                            } else {
                                char cond_95073;
                                double res_95074;
                                
                                cond_95073 = arg_95066 < res_95068;
                                if (cond_95073) {
                                    int64_t res_95075;
                                    double res_95076;
                                    
                                    res_95075 = res_95067 - 1;
                                    res_95076 = sitofp_i64_f64(res_95075);
                                    res_95074 = res_95076;
                                } else {
                                    res_95074 = arg_95066;
                                }
                                res_95070 = res_95074;
                            }
                            negate_arg_95077 = gridHalfWidth_84155 /
                                delta_84156;
                            arg_95078 = 0.0 - negate_arg_95077;
                            res_95079 = fptosi_f64_i64(arg_95078);
                            res_95080 = sitofp_i64_f64(res_95079);
                            cond_95081 = 0.0 <= arg_95078;
                            if (cond_95081) {
                                char cond_95083;
                                double res_95084;
                                
                                cond_95083 = res_95080 < arg_95078;
                                if (cond_95083) {
                                    res_95084 = res_95080;
                                } else {
                                    res_95084 = arg_95078;
                                }
                                res_95082 = res_95084;
                            } else {
                                char cond_95085;
                                double res_95086;
                                
                                cond_95085 = arg_95078 < res_95080;
                                if (cond_95085) {
                                    int64_t res_95087;
                                    double res_95088;
                                    
                                    res_95087 = res_95079 - 1;
                                    res_95088 = sitofp_i64_f64(res_95087);
                                    res_95086 = res_95088;
                                } else {
                                    res_95086 = arg_95078;
                                }
                                res_95082 = res_95086;
                            }
                            res_95064 = res_95070;
                            res_95065 = res_95082;
                        } else {
                            double arg_95089;
                            int64_t res_95090;
                            double res_95091;
                            char cond_95092;
                            double res_95093;
                            double arg_95100;
                            int64_t res_95101;
                            double res_95102;
                            char cond_95103;
                            double res_95104;
                            
                            arg_95089 = res_95040 / delta_84156;
                            res_95090 = fptosi_f64_i64(arg_95089);
                            res_95091 = sitofp_i64_f64(res_95090);
                            cond_95092 = 0.0 <= arg_95089;
                            if (cond_95092) {
                                char cond_95094;
                                double res_95095;
                                
                                cond_95094 = res_95091 < arg_95089;
                                if (cond_95094) {
                                    res_95095 = res_95091;
                                } else {
                                    res_95095 = arg_95089;
                                }
                                res_95093 = res_95095;
                            } else {
                                char cond_95096;
                                double res_95097;
                                
                                cond_95096 = arg_95089 < res_95091;
                                if (cond_95096) {
                                    int64_t res_95098;
                                    double res_95099;
                                    
                                    res_95098 = res_95090 - 1;
                                    res_95099 = sitofp_i64_f64(res_95098);
                                    res_95097 = res_95099;
                                } else {
                                    res_95097 = arg_95089;
                                }
                                res_95093 = res_95097;
                            }
                            arg_95100 = gridHalfWidth_84155 / delta_84156;
                            res_95101 = fptosi_f64_i64(arg_95100);
                            res_95102 = sitofp_i64_f64(res_95101);
                            cond_95103 = 0.0 <= arg_95100;
                            if (cond_95103) {
                                char cond_95105;
                                double res_95106;
                                
                                cond_95105 = res_95102 < arg_95100;
                                if (cond_95105) {
                                    res_95106 = res_95102;
                                } else {
                                    res_95106 = arg_95100;
                                }
                                res_95104 = res_95106;
                            } else {
                                char cond_95107;
                                double res_95108;
                                
                                cond_95107 = arg_95100 < res_95102;
                                if (cond_95107) {
                                    int64_t res_95109;
                                    double res_95110;
                                    
                                    res_95109 = res_95101 - 1;
                                    res_95110 = sitofp_i64_f64(res_95109);
                                    res_95108 = res_95110;
                                } else {
                                    res_95108 = arg_95100;
                                }
                                res_95104 = res_95108;
                            }
                            res_95064 = res_95093;
                            res_95065 = res_95104;
                        }
                        res_95062 = res_95064;
                        res_95063 = res_95065;
                    }
                    res_95052 = res_95062;
                    res_95053 = res_95063;
                    res_95054 = 0.0;
                    res_95055 = x_95060;
                    res_95056 = cond_95061;
                } else {
                    double res_95111;
                    double res_95112;
                    double res_95113;
                    char res_95114;
                    char res_95115;
                    
                    if (res_95051) {
                        double y_95116;
                        char cond_95117;
                        char res_95118;
                        char x_95119;
                        char cond_95120;
                        double res_95121;
                        double res_95122;
                        
                        y_95116 = 0.0 - gridHalfWidth_84155;
                        cond_95117 = y_95116 <= res_95041;
                        res_95118 = res_95041 < gridHalfWidth_84155;
                        x_95119 = cond_95117 && res_95118;
                        cond_95120 = !x_95119;
                        if (cond_95120) {
                            res_95121 = 0.0;
                            res_95122 = 0.0;
                        } else {
                            double res_95123;
                            double res_95124;
                            
                            if (cond_95047) {
                                double arg_95125;
                                int64_t res_95126;
                                double res_95127;
                                char cond_95128;
                                double res_95129;
                                double arg_95136;
                                int64_t res_95137;
                                double res_95138;
                                char cond_95139;
                                double res_95140;
                                
                                arg_95125 = gridHalfWidth_84155 / delta_84156;
                                res_95126 = fptosi_f64_i64(arg_95125);
                                res_95127 = sitofp_i64_f64(res_95126);
                                cond_95128 = 0.0 <= arg_95125;
                                if (cond_95128) {
                                    char cond_95130;
                                    double res_95131;
                                    
                                    cond_95130 = res_95127 < arg_95125;
                                    if (cond_95130) {
                                        res_95131 = res_95127;
                                    } else {
                                        res_95131 = arg_95125;
                                    }
                                    res_95129 = res_95131;
                                } else {
                                    char cond_95132;
                                    double res_95133;
                                    
                                    cond_95132 = arg_95125 < res_95127;
                                    if (cond_95132) {
                                        int64_t res_95134;
                                        double res_95135;
                                        
                                        res_95134 = res_95126 - 1;
                                        res_95135 = sitofp_i64_f64(res_95134);
                                        res_95133 = res_95135;
                                    } else {
                                        res_95133 = arg_95125;
                                    }
                                    res_95129 = res_95133;
                                }
                                arg_95136 = res_95041 / delta_84156;
                                res_95137 = fptosi_f64_i64(arg_95136);
                                res_95138 = sitofp_i64_f64(res_95137);
                                cond_95139 = 0.0 <= arg_95136;
                                if (cond_95139) {
                                    char cond_95141;
                                    double res_95142;
                                    
                                    cond_95141 = res_95138 < arg_95136;
                                    if (cond_95141) {
                                        res_95142 = res_95138;
                                    } else {
                                        res_95142 = arg_95136;
                                    }
                                    res_95140 = res_95142;
                                } else {
                                    char cond_95143;
                                    double res_95144;
                                    
                                    cond_95143 = arg_95136 < res_95138;
                                    if (cond_95143) {
                                        int64_t res_95145;
                                        double res_95146;
                                        
                                        res_95145 = res_95137 - 1;
                                        res_95146 = sitofp_i64_f64(res_95145);
                                        res_95144 = res_95146;
                                    } else {
                                        res_95144 = arg_95136;
                                    }
                                    res_95140 = res_95144;
                                }
                                res_95123 = res_95129;
                                res_95124 = res_95140;
                            } else {
                                double negate_arg_95147;
                                double arg_95148;
                                int64_t res_95149;
                                double res_95150;
                                char cond_95151;
                                double res_95152;
                                double arg_95159;
                                int64_t res_95160;
                                double res_95161;
                                char cond_95162;
                                double res_95163;
                                
                                negate_arg_95147 = gridHalfWidth_84155 /
                                    delta_84156;
                                arg_95148 = 0.0 - negate_arg_95147;
                                res_95149 = fptosi_f64_i64(arg_95148);
                                res_95150 = sitofp_i64_f64(res_95149);
                                cond_95151 = 0.0 <= arg_95148;
                                if (cond_95151) {
                                    char cond_95153;
                                    double res_95154;
                                    
                                    cond_95153 = res_95150 < arg_95148;
                                    if (cond_95153) {
                                        res_95154 = res_95150;
                                    } else {
                                        res_95154 = arg_95148;
                                    }
                                    res_95152 = res_95154;
                                } else {
                                    char cond_95155;
                                    double res_95156;
                                    
                                    cond_95155 = arg_95148 < res_95150;
                                    if (cond_95155) {
                                        int64_t res_95157;
                                        double res_95158;
                                        
                                        res_95157 = res_95149 - 1;
                                        res_95158 = sitofp_i64_f64(res_95157);
                                        res_95156 = res_95158;
                                    } else {
                                        res_95156 = arg_95148;
                                    }
                                    res_95152 = res_95156;
                                }
                                arg_95159 = res_95041 / delta_84156;
                                res_95160 = fptosi_f64_i64(arg_95159);
                                res_95161 = sitofp_i64_f64(res_95160);
                                cond_95162 = 0.0 <= arg_95159;
                                if (cond_95162) {
                                    char cond_95164;
                                    double res_95165;
                                    
                                    cond_95164 = res_95161 < arg_95159;
                                    if (cond_95164) {
                                        res_95165 = res_95161;
                                    } else {
                                        res_95165 = arg_95159;
                                    }
                                    res_95163 = res_95165;
                                } else {
                                    char cond_95166;
                                    double res_95167;
                                    
                                    cond_95166 = arg_95159 < res_95161;
                                    if (cond_95166) {
                                        int64_t res_95168;
                                        double res_95169;
                                        
                                        res_95168 = res_95160 - 1;
                                        res_95169 = sitofp_i64_f64(res_95168);
                                        res_95167 = res_95169;
                                    } else {
                                        res_95167 = arg_95159;
                                    }
                                    res_95163 = res_95167;
                                }
                                res_95123 = res_95152;
                                res_95124 = res_95163;
                            }
                            res_95121 = res_95123;
                            res_95122 = res_95124;
                        }
                        res_95111 = res_95121;
                        res_95112 = res_95122;
                        res_95113 = 0.0;
                        res_95114 = x_95119;
                        res_95115 = cond_95120;
                    } else {
                        double arg_95170;
                        double arg_95171;
                        double x_95172;
                        double y_95173;
                        double res_95174;
                        double y_95175;
                        double res_95176;
                        double x_95177;
                        double res_95178;
                        double x_95179;
                        double x_95180;
                        double res_95181;
                        double x_95182;
                        double res_95183;
                        double x_95184;
                        double res_95185;
                        char cond_95186;
                        char res_95187;
                        char x_95188;
                        char cond_95189;
                        char res_95190;
                        char x_95191;
                        char x_95192;
                        char y_95193;
                        char res_95194;
                        char cond_95195;
                        char res_95196;
                        char x_95197;
                        double res_95198;
                        double res_95199;
                        double res_95200;
                        double res_95201;
                        char res_95202;
                        char res_95203;
                        double x_95858;
                        double x_95859;
                        double x_95860;
                        double y_95861;
                        double x_95862;
                        double x_95863;
                        double res_95864;
                        
                        arg_95170 = eAngles_zzip_res_elem_95907 + 270.0;
                        arg_95171 = 1.7453292519943295e-2 * arg_95170;
                        x_95172 = futrts_sin64(arg_95171);
                        y_95173 = futrts_cos64(arg_95171);
                        res_95174 = x_95172 / y_95173;
                        y_95175 = res_95040 * res_95174;
                        res_95176 = res_95041 - y_95175;
                        x_95177 = gridHalfWidth_84155 - res_95176;
                        res_95178 = x_95177 / res_95174;
                        x_95179 = 0.0 - gridHalfWidth_84155;
                        x_95180 = x_95179 - res_95176;
                        res_95181 = x_95180 / res_95174;
                        x_95182 = res_95174 * gridHalfWidth_84155;
                        res_95183 = x_95182 + res_95176;
                        x_95184 = res_95174 * x_95179;
                        res_95185 = x_95184 + res_95176;
                        cond_95186 = 45.0 < eAngles_zzip_res_elem_95907;
                        res_95187 = eAngles_zzip_res_elem_95907 <= 135.0;
                        x_95188 = cond_95186 && res_95187;
                        cond_95189 = 225.0 <= eAngles_zzip_res_elem_95907;
                        res_95190 = eAngles_zzip_res_elem_95907 <= 315.0;
                        x_95191 = cond_95189 && res_95190;
                        x_95192 = !x_95188;
                        y_95193 = x_95192 && x_95191;
                        res_95194 = x_95188 || y_95193;
                        cond_95195 = 0.0 < eAngles_zzip_res_elem_95907;
                        res_95196 = eAngles_zzip_res_elem_95907 < 90.0;
                        x_95197 = cond_95195 && res_95196;
                        if (x_95197) {
                            char cond_95204;
                            char res_95205;
                            char x_95206;
                            char y_95207;
                            char cond_95208;
                            double res_95209;
                            double res_95210;
                            char cond_95218;
                            char cond_95219;
                            char eq_95220;
                            double res_95221;
                            double res_95222;
                            double res_95223;
                            double res_95224;
                            char res_95225;
                            
                            cond_95204 = gridHalfWidth_84155 < res_95181;
                            res_95205 = res_95181 < x_95179;
                            x_95206 = !cond_95204;
                            y_95207 = x_95206 && res_95205;
                            cond_95208 = cond_95204 || y_95207;
                            if (cond_95208) {
                                char cond_95211;
                                char res_95212;
                                char x_95213;
                                char y_95214;
                                char cond_95215;
                                double res_95216;
                                double res_95217;
                                
                                cond_95211 = gridHalfWidth_84155 < res_95183;
                                res_95212 = res_95183 < x_95179;
                                x_95213 = !cond_95211;
                                y_95214 = x_95213 && res_95212;
                                cond_95215 = cond_95211 || y_95214;
                                if (cond_95215) {
                                    res_95216 = 0.0;
                                } else {
                                    res_95216 = gridHalfWidth_84155;
                                }
                                if (cond_95215) {
                                    res_95217 = 0.0;
                                } else {
                                    res_95217 = res_95183;
                                }
                                res_95209 = res_95216;
                                res_95210 = res_95217;
                            } else {
                                res_95209 = res_95181;
                                res_95210 = x_95179;
                            }
                            cond_95218 = res_95209 == 0.0;
                            cond_95219 = res_95210 == 0.0;
                            eq_95220 = cond_95218 && cond_95219;
                            if (eq_95220) {
                                res_95221 = 0.0;
                                res_95222 = 0.0;
                                res_95223 = 0.0;
                                res_95224 = 0.0;
                                res_95225 = 1;
                            } else {
                                double res_95226;
                                double res_95227;
                                double res_95228;
                                double res_95229;
                                char res_95230;
                                
                                if (res_95194) {
                                    char cond_95231;
                                    char cond_95232;
                                    char eq_95233;
                                    char x_95234;
                                    double res_95235;
                                    double res_95236;
                                    double res_95260;
                                    int64_t res_95261;
                                    double res_95262;
                                    char cond_95263;
                                    double res_95264;
                                    char cond_95271;
                                    double res_95272;
                                    int64_t res_95287;
                                    double res_95288;
                                    char cond_95289;
                                    double res_95290;
                                    
                                    cond_95231 = res_95209 == res_95181;
                                    cond_95232 = res_95210 == x_95179;
                                    eq_95233 = cond_95231 && cond_95232;
                                    x_95234 = !eq_95233;
                                    if (eq_95233) {
                                        double arg_95237;
                                        int64_t res_95238;
                                        double res_95239;
                                        char cond_95240;
                                        double res_95241;
                                        double res_95248;
                                        double x_95255;
                                        double y_95256;
                                        double res_95257;
                                        
                                        arg_95237 = res_95209 / delta_84156;
                                        res_95238 = fptosi_f64_i64(arg_95237);
                                        res_95239 = sitofp_i64_f64(res_95238);
                                        cond_95240 = 0.0 <= arg_95237;
                                        if (cond_95240) {
                                            char cond_95242;
                                            double res_95243;
                                            
                                            cond_95242 = res_95239 < arg_95237;
                                            if (cond_95242) {
                                                int64_t res_95244;
                                                double res_95245;
                                                
                                                res_95244 = res_95238 + 1;
                                                res_95245 =
                                                    sitofp_i64_f64(res_95244);
                                                res_95243 = res_95245;
                                            } else {
                                                res_95243 = arg_95237;
                                            }
                                            res_95241 = res_95243;
                                        } else {
                                            char cond_95246;
                                            double res_95247;
                                            
                                            cond_95246 = arg_95237 < res_95239;
                                            if (cond_95246) {
                                                res_95247 = res_95239;
                                            } else {
                                                res_95247 = arg_95237;
                                            }
                                            res_95241 = res_95247;
                                        }
                                        if (cond_95240) {
                                            char cond_95249;
                                            double res_95250;
                                            
                                            cond_95249 = res_95239 < arg_95237;
                                            if (cond_95249) {
                                                int64_t res_95251;
                                                double res_95252;
                                                
                                                res_95251 = res_95238 + 1;
                                                res_95252 =
                                                    sitofp_i64_f64(res_95251);
                                                res_95250 = res_95252;
                                            } else {
                                                res_95250 = arg_95237;
                                            }
                                            res_95248 = res_95250;
                                        } else {
                                            char cond_95253;
                                            double res_95254;
                                            
                                            cond_95253 = arg_95237 < res_95239;
                                            if (cond_95253) {
                                                res_95254 = res_95239;
                                            } else {
                                                res_95254 = arg_95237;
                                            }
                                            res_95248 = res_95254;
                                        }
                                        x_95255 = res_95174 * res_95248;
                                        y_95256 = res_95176 / delta_84156;
                                        res_95257 = x_95255 + y_95256;
                                        res_95235 = res_95241;
                                        res_95236 = res_95257;
                                    } else {
                                        double res_95258;
                                        double res_95259;
                                        
                                        res_95258 = res_95209 / delta_84156;
                                        res_95259 = res_95210 / delta_84156;
                                        res_95235 = res_95258;
                                        res_95236 = res_95259;
                                    }
                                    res_95260 = res_95235 + 0.5;
                                    res_95261 = fptosi_f64_i64(res_95260);
                                    res_95262 = sitofp_i64_f64(res_95261);
                                    cond_95263 = 0.0 <= res_95260;
                                    if (cond_95263) {
                                        char cond_95265;
                                        double res_95266;
                                        
                                        cond_95265 = res_95262 < res_95260;
                                        if (cond_95265) {
                                            res_95266 = res_95262;
                                        } else {
                                            res_95266 = res_95260;
                                        }
                                        res_95264 = res_95266;
                                    } else {
                                        char cond_95267;
                                        double res_95268;
                                        
                                        cond_95267 = res_95260 < res_95262;
                                        if (cond_95267) {
                                            int64_t res_95269;
                                            double res_95270;
                                            
                                            res_95269 = res_95261 - 1;
                                            res_95270 =
                                                sitofp_i64_f64(res_95269);
                                            res_95268 = res_95270;
                                        } else {
                                            res_95268 = res_95260;
                                        }
                                        res_95264 = res_95268;
                                    }
                                    cond_95271 = res_95264 == res_95260;
                                    if (cond_95271) {
                                        int64_t res_95273;
                                        double res_95274;
                                        char cond_95275;
                                        double res_95276;
                                        int64_t x_95283;
                                        int64_t cond_95284;
                                        char cond_95285;
                                        double res_95286;
                                        
                                        res_95273 = fptosi_f64_i64(res_95235);
                                        res_95274 = sitofp_i64_f64(res_95273);
                                        cond_95275 = 0.0 <= res_95235;
                                        if (cond_95275) {
                                            char cond_95277;
                                            double res_95278;
                                            
                                            cond_95277 = res_95274 < res_95235;
                                            if (cond_95277) {
                                                res_95278 = res_95274;
                                            } else {
                                                res_95278 = res_95235;
                                            }
                                            res_95276 = res_95278;
                                        } else {
                                            char cond_95279;
                                            double res_95280;
                                            
                                            cond_95279 = res_95235 < res_95274;
                                            if (cond_95279) {
                                                int64_t res_95281;
                                                double res_95282;
                                                
                                                res_95281 = res_95273 - 1;
                                                res_95282 =
                                                    sitofp_i64_f64(res_95281);
                                                res_95280 = res_95282;
                                            } else {
                                                res_95280 = res_95235;
                                            }
                                            res_95276 = res_95280;
                                        }
                                        x_95283 = fptosi_f64_i64(res_95276);
                                        cond_95284 = smod64(x_95283, 2);
                                        cond_95285 = cond_95284 == 0;
                                        if (cond_95285) {
                                            res_95286 = res_95276;
                                        } else {
                                            res_95286 = res_95264;
                                        }
                                        res_95272 = res_95286;
                                    } else {
                                        res_95272 = res_95264;
                                    }
                                    res_95287 = fptosi_f64_i64(res_95236);
                                    res_95288 = sitofp_i64_f64(res_95287);
                                    cond_95289 = 0.0 <= res_95236;
                                    if (cond_95289) {
                                        char cond_95291;
                                        double res_95292;
                                        
                                        cond_95291 = res_95288 < res_95236;
                                        if (cond_95291) {
                                            res_95292 = res_95288;
                                        } else {
                                            res_95292 = res_95236;
                                        }
                                        res_95290 = res_95292;
                                    } else {
                                        char cond_95293;
                                        double res_95294;
                                        
                                        cond_95293 = res_95236 < res_95288;
                                        if (cond_95293) {
                                            int64_t res_95295;
                                            double res_95296;
                                            
                                            res_95295 = res_95287 - 1;
                                            res_95296 =
                                                sitofp_i64_f64(res_95295);
                                            res_95294 = res_95296;
                                        } else {
                                            res_95294 = res_95236;
                                        }
                                        res_95290 = res_95294;
                                    }
                                    res_95226 = res_95235;
                                    res_95227 = res_95236;
                                    res_95228 = res_95272;
                                    res_95229 = res_95290;
                                    res_95230 = x_95234;
                                } else {
                                    char cond_95297;
                                    char cond_95298;
                                    char eq_95299;
                                    char x_95300;
                                    double res_95301;
                                    double res_95302;
                                    int64_t res_95326;
                                    double res_95327;
                                    char cond_95328;
                                    double res_95329;
                                    double res_95336;
                                    int64_t res_95337;
                                    double res_95338;
                                    char cond_95339;
                                    double res_95340;
                                    char cond_95347;
                                    double res_95348;
                                    
                                    cond_95297 = res_95209 ==
                                        gridHalfWidth_84155;
                                    cond_95298 = res_95210 == res_95183;
                                    eq_95299 = cond_95297 && cond_95298;
                                    x_95300 = !eq_95299;
                                    if (eq_95299) {
                                        double arg_95303;
                                        int64_t res_95304;
                                        double res_95305;
                                        char cond_95306;
                                        double res_95307;
                                        double y_95314;
                                        double x_95315;
                                        double res_95316;
                                        double res_95317;
                                        
                                        arg_95303 = res_95210 / delta_84156;
                                        res_95304 = fptosi_f64_i64(arg_95303);
                                        res_95305 = sitofp_i64_f64(res_95304);
                                        cond_95306 = 0.0 <= arg_95303;
                                        if (cond_95306) {
                                            char cond_95308;
                                            double res_95309;
                                            
                                            cond_95308 = res_95305 < arg_95303;
                                            if (cond_95308) {
                                                res_95309 = res_95305;
                                            } else {
                                                res_95309 = arg_95303;
                                            }
                                            res_95307 = res_95309;
                                        } else {
                                            char cond_95310;
                                            double res_95311;
                                            
                                            cond_95310 = arg_95303 < res_95305;
                                            if (cond_95310) {
                                                int64_t res_95312;
                                                double res_95313;
                                                
                                                res_95312 = res_95304 - 1;
                                                res_95313 =
                                                    sitofp_i64_f64(res_95312);
                                                res_95311 = res_95313;
                                            } else {
                                                res_95311 = arg_95303;
                                            }
                                            res_95307 = res_95311;
                                        }
                                        y_95314 = res_95176 / delta_84156;
                                        x_95315 = res_95307 - y_95314;
                                        res_95316 = x_95315 / res_95174;
                                        if (cond_95306) {
                                            char cond_95318;
                                            double res_95319;
                                            
                                            cond_95318 = res_95305 < arg_95303;
                                            if (cond_95318) {
                                                res_95319 = res_95305;
                                            } else {
                                                res_95319 = arg_95303;
                                            }
                                            res_95317 = res_95319;
                                        } else {
                                            char cond_95320;
                                            double res_95321;
                                            
                                            cond_95320 = arg_95303 < res_95305;
                                            if (cond_95320) {
                                                int64_t res_95322;
                                                double res_95323;
                                                
                                                res_95322 = res_95304 - 1;
                                                res_95323 =
                                                    sitofp_i64_f64(res_95322);
                                                res_95321 = res_95323;
                                            } else {
                                                res_95321 = arg_95303;
                                            }
                                            res_95317 = res_95321;
                                        }
                                        res_95301 = res_95316;
                                        res_95302 = res_95317;
                                    } else {
                                        double res_95324;
                                        double res_95325;
                                        
                                        res_95324 = res_95209 / delta_84156;
                                        res_95325 = res_95210 / delta_84156;
                                        res_95301 = res_95324;
                                        res_95302 = res_95325;
                                    }
                                    res_95326 = fptosi_f64_i64(res_95301);
                                    res_95327 = sitofp_i64_f64(res_95326);
                                    cond_95328 = 0.0 <= res_95301;
                                    if (cond_95328) {
                                        char cond_95330;
                                        double res_95331;
                                        
                                        cond_95330 = res_95327 < res_95301;
                                        if (cond_95330) {
                                            int64_t res_95332;
                                            double res_95333;
                                            
                                            res_95332 = res_95326 + 1;
                                            res_95333 =
                                                sitofp_i64_f64(res_95332);
                                            res_95331 = res_95333;
                                        } else {
                                            res_95331 = res_95301;
                                        }
                                        res_95329 = res_95331;
                                    } else {
                                        char cond_95334;
                                        double res_95335;
                                        
                                        cond_95334 = res_95301 < res_95327;
                                        if (cond_95334) {
                                            res_95335 = res_95327;
                                        } else {
                                            res_95335 = res_95301;
                                        }
                                        res_95329 = res_95335;
                                    }
                                    res_95336 = res_95302 + 0.5;
                                    res_95337 = fptosi_f64_i64(res_95336);
                                    res_95338 = sitofp_i64_f64(res_95337);
                                    cond_95339 = 0.0 <= res_95336;
                                    if (cond_95339) {
                                        char cond_95341;
                                        double res_95342;
                                        
                                        cond_95341 = res_95338 < res_95336;
                                        if (cond_95341) {
                                            res_95342 = res_95338;
                                        } else {
                                            res_95342 = res_95336;
                                        }
                                        res_95340 = res_95342;
                                    } else {
                                        char cond_95343;
                                        double res_95344;
                                        
                                        cond_95343 = res_95336 < res_95338;
                                        if (cond_95343) {
                                            int64_t res_95345;
                                            double res_95346;
                                            
                                            res_95345 = res_95337 - 1;
                                            res_95346 =
                                                sitofp_i64_f64(res_95345);
                                            res_95344 = res_95346;
                                        } else {
                                            res_95344 = res_95336;
                                        }
                                        res_95340 = res_95344;
                                    }
                                    cond_95347 = res_95340 == res_95336;
                                    if (cond_95347) {
                                        int64_t res_95349;
                                        double res_95350;
                                        char cond_95351;
                                        double res_95352;
                                        int64_t x_95359;
                                        int64_t cond_95360;
                                        char cond_95361;
                                        double res_95362;
                                        
                                        res_95349 = fptosi_f64_i64(res_95302);
                                        res_95350 = sitofp_i64_f64(res_95349);
                                        cond_95351 = 0.0 <= res_95302;
                                        if (cond_95351) {
                                            char cond_95353;
                                            double res_95354;
                                            
                                            cond_95353 = res_95350 < res_95302;
                                            if (cond_95353) {
                                                res_95354 = res_95350;
                                            } else {
                                                res_95354 = res_95302;
                                            }
                                            res_95352 = res_95354;
                                        } else {
                                            char cond_95355;
                                            double res_95356;
                                            
                                            cond_95355 = res_95302 < res_95350;
                                            if (cond_95355) {
                                                int64_t res_95357;
                                                double res_95358;
                                                
                                                res_95357 = res_95349 - 1;
                                                res_95358 =
                                                    sitofp_i64_f64(res_95357);
                                                res_95356 = res_95358;
                                            } else {
                                                res_95356 = res_95302;
                                            }
                                            res_95352 = res_95356;
                                        }
                                        x_95359 = fptosi_f64_i64(res_95352);
                                        cond_95360 = smod64(x_95359, 2);
                                        cond_95361 = cond_95360 == 0;
                                        if (cond_95361) {
                                            res_95362 = res_95352;
                                        } else {
                                            res_95362 = res_95340;
                                        }
                                        res_95348 = res_95362;
                                    } else {
                                        res_95348 = res_95340;
                                    }
                                    res_95226 = res_95301;
                                    res_95227 = res_95302;
                                    res_95228 = res_95329;
                                    res_95229 = res_95348;
                                    res_95230 = x_95300;
                                }
                                res_95221 = res_95226;
                                res_95222 = res_95227;
                                res_95223 = res_95228;
                                res_95224 = res_95229;
                                res_95225 = res_95230;
                            }
                            res_95198 = res_95221;
                            res_95199 = res_95222;
                            res_95200 = res_95223;
                            res_95201 = res_95224;
                            res_95202 = res_95225;
                            res_95203 = eq_95220;
                        } else {
                            char cond_95363;
                            char res_95364;
                            char x_95365;
                            double res_95366;
                            double res_95367;
                            double res_95368;
                            double res_95369;
                            char res_95370;
                            char res_95371;
                            
                            cond_95363 = 90.0 < eAngles_zzip_res_elem_95907;
                            res_95364 = eAngles_zzip_res_elem_95907 < 180.0;
                            x_95365 = cond_95363 && res_95364;
                            if (x_95365) {
                                char cond_95372;
                                char res_95373;
                                char x_95374;
                                char y_95375;
                                char cond_95376;
                                double res_95377;
                                double res_95378;
                                char cond_95386;
                                char cond_95387;
                                char eq_95388;
                                double res_95389;
                                double res_95390;
                                double res_95391;
                                double res_95392;
                                char res_95393;
                                
                                cond_95372 = gridHalfWidth_84155 < res_95178;
                                res_95373 = res_95178 < x_95179;
                                x_95374 = !cond_95372;
                                y_95375 = x_95374 && res_95373;
                                cond_95376 = cond_95372 || y_95375;
                                if (cond_95376) {
                                    char cond_95379;
                                    char res_95380;
                                    char x_95381;
                                    char y_95382;
                                    char cond_95383;
                                    double res_95384;
                                    double res_95385;
                                    
                                    cond_95379 = gridHalfWidth_84155 <
                                        res_95183;
                                    res_95380 = res_95183 < x_95179;
                                    x_95381 = !cond_95379;
                                    y_95382 = x_95381 && res_95380;
                                    cond_95383 = cond_95379 || y_95382;
                                    if (cond_95383) {
                                        res_95384 = 0.0;
                                    } else {
                                        res_95384 = gridHalfWidth_84155;
                                    }
                                    if (cond_95383) {
                                        res_95385 = 0.0;
                                    } else {
                                        res_95385 = res_95183;
                                    }
                                    res_95377 = res_95384;
                                    res_95378 = res_95385;
                                } else {
                                    res_95377 = res_95178;
                                    res_95378 = gridHalfWidth_84155;
                                }
                                cond_95386 = res_95377 == 0.0;
                                cond_95387 = res_95378 == 0.0;
                                eq_95388 = cond_95386 && cond_95387;
                                if (eq_95388) {
                                    res_95389 = 0.0;
                                    res_95390 = 0.0;
                                    res_95391 = 0.0;
                                    res_95392 = 0.0;
                                    res_95393 = 1;
                                } else {
                                    double res_95394;
                                    double res_95395;
                                    double res_95396;
                                    double res_95397;
                                    char res_95398;
                                    
                                    if (res_95194) {
                                        char cond_95399;
                                        char cond_95400;
                                        char eq_95401;
                                        char x_95402;
                                        double res_95403;
                                        double res_95404;
                                        double res_95428;
                                        int64_t res_95429;
                                        double res_95430;
                                        char cond_95431;
                                        double res_95432;
                                        char cond_95439;
                                        double res_95440;
                                        int64_t res_95455;
                                        double res_95456;
                                        char cond_95457;
                                        double res_95458;
                                        
                                        cond_95399 = res_95377 == res_95178;
                                        cond_95400 = res_95378 ==
                                            gridHalfWidth_84155;
                                        eq_95401 = cond_95399 && cond_95400;
                                        x_95402 = !eq_95401;
                                        if (eq_95401) {
                                            double arg_95405;
                                            int64_t res_95406;
                                            double res_95407;
                                            char cond_95408;
                                            double res_95409;
                                            double res_95416;
                                            double x_95423;
                                            double y_95424;
                                            double res_95425;
                                            
                                            arg_95405 = res_95377 / delta_84156;
                                            res_95406 =
                                                fptosi_f64_i64(arg_95405);
                                            res_95407 =
                                                sitofp_i64_f64(res_95406);
                                            cond_95408 = 0.0 <= arg_95405;
                                            if (cond_95408) {
                                                char cond_95410;
                                                double res_95411;
                                                
                                                cond_95410 = res_95407 <
                                                    arg_95405;
                                                if (cond_95410) {
                                                    int64_t res_95412;
                                                    double res_95413;
                                                    
                                                    res_95412 = res_95406 + 1;
                                                    res_95413 =
                                                        sitofp_i64_f64(res_95412);
                                                    res_95411 = res_95413;
                                                } else {
                                                    res_95411 = arg_95405;
                                                }
                                                res_95409 = res_95411;
                                            } else {
                                                char cond_95414;
                                                double res_95415;
                                                
                                                cond_95414 = arg_95405 <
                                                    res_95407;
                                                if (cond_95414) {
                                                    res_95415 = res_95407;
                                                } else {
                                                    res_95415 = arg_95405;
                                                }
                                                res_95409 = res_95415;
                                            }
                                            if (cond_95408) {
                                                char cond_95417;
                                                double res_95418;
                                                
                                                cond_95417 = res_95407 <
                                                    arg_95405;
                                                if (cond_95417) {
                                                    int64_t res_95419;
                                                    double res_95420;
                                                    
                                                    res_95419 = res_95406 + 1;
                                                    res_95420 =
                                                        sitofp_i64_f64(res_95419);
                                                    res_95418 = res_95420;
                                                } else {
                                                    res_95418 = arg_95405;
                                                }
                                                res_95416 = res_95418;
                                            } else {
                                                char cond_95421;
                                                double res_95422;
                                                
                                                cond_95421 = arg_95405 <
                                                    res_95407;
                                                if (cond_95421) {
                                                    res_95422 = res_95407;
                                                } else {
                                                    res_95422 = arg_95405;
                                                }
                                                res_95416 = res_95422;
                                            }
                                            x_95423 = res_95174 * res_95416;
                                            y_95424 = res_95176 / delta_84156;
                                            res_95425 = x_95423 + y_95424;
                                            res_95403 = res_95409;
                                            res_95404 = res_95425;
                                        } else {
                                            double res_95426;
                                            double res_95427;
                                            
                                            res_95426 = res_95377 / delta_84156;
                                            res_95427 = res_95378 / delta_84156;
                                            res_95403 = res_95426;
                                            res_95404 = res_95427;
                                        }
                                        res_95428 = res_95403 + 0.5;
                                        res_95429 = fptosi_f64_i64(res_95428);
                                        res_95430 = sitofp_i64_f64(res_95429);
                                        cond_95431 = 0.0 <= res_95428;
                                        if (cond_95431) {
                                            char cond_95433;
                                            double res_95434;
                                            
                                            cond_95433 = res_95430 < res_95428;
                                            if (cond_95433) {
                                                res_95434 = res_95430;
                                            } else {
                                                res_95434 = res_95428;
                                            }
                                            res_95432 = res_95434;
                                        } else {
                                            char cond_95435;
                                            double res_95436;
                                            
                                            cond_95435 = res_95428 < res_95430;
                                            if (cond_95435) {
                                                int64_t res_95437;
                                                double res_95438;
                                                
                                                res_95437 = res_95429 - 1;
                                                res_95438 =
                                                    sitofp_i64_f64(res_95437);
                                                res_95436 = res_95438;
                                            } else {
                                                res_95436 = res_95428;
                                            }
                                            res_95432 = res_95436;
                                        }
                                        cond_95439 = res_95432 == res_95428;
                                        if (cond_95439) {
                                            int64_t res_95441;
                                            double res_95442;
                                            char cond_95443;
                                            double res_95444;
                                            int64_t x_95451;
                                            int64_t cond_95452;
                                            char cond_95453;
                                            double res_95454;
                                            
                                            res_95441 =
                                                fptosi_f64_i64(res_95403);
                                            res_95442 =
                                                sitofp_i64_f64(res_95441);
                                            cond_95443 = 0.0 <= res_95403;
                                            if (cond_95443) {
                                                char cond_95445;
                                                double res_95446;
                                                
                                                cond_95445 = res_95442 <
                                                    res_95403;
                                                if (cond_95445) {
                                                    res_95446 = res_95442;
                                                } else {
                                                    res_95446 = res_95403;
                                                }
                                                res_95444 = res_95446;
                                            } else {
                                                char cond_95447;
                                                double res_95448;
                                                
                                                cond_95447 = res_95403 <
                                                    res_95442;
                                                if (cond_95447) {
                                                    int64_t res_95449;
                                                    double res_95450;
                                                    
                                                    res_95449 = res_95441 - 1;
                                                    res_95450 =
                                                        sitofp_i64_f64(res_95449);
                                                    res_95448 = res_95450;
                                                } else {
                                                    res_95448 = res_95403;
                                                }
                                                res_95444 = res_95448;
                                            }
                                            x_95451 = fptosi_f64_i64(res_95444);
                                            cond_95452 = smod64(x_95451, 2);
                                            cond_95453 = cond_95452 == 0;
                                            if (cond_95453) {
                                                res_95454 = res_95444;
                                            } else {
                                                res_95454 = res_95432;
                                            }
                                            res_95440 = res_95454;
                                        } else {
                                            res_95440 = res_95432;
                                        }
                                        res_95455 = fptosi_f64_i64(res_95404);
                                        res_95456 = sitofp_i64_f64(res_95455);
                                        cond_95457 = 0.0 <= res_95404;
                                        if (cond_95457) {
                                            char cond_95459;
                                            double res_95460;
                                            
                                            cond_95459 = res_95456 < res_95404;
                                            if (cond_95459) {
                                                int64_t res_95461;
                                                double res_95462;
                                                
                                                res_95461 = res_95455 + 1;
                                                res_95462 =
                                                    sitofp_i64_f64(res_95461);
                                                res_95460 = res_95462;
                                            } else {
                                                res_95460 = res_95404;
                                            }
                                            res_95458 = res_95460;
                                        } else {
                                            char cond_95463;
                                            double res_95464;
                                            
                                            cond_95463 = res_95404 < res_95456;
                                            if (cond_95463) {
                                                res_95464 = res_95456;
                                            } else {
                                                res_95464 = res_95404;
                                            }
                                            res_95458 = res_95464;
                                        }
                                        res_95394 = res_95403;
                                        res_95395 = res_95404;
                                        res_95396 = res_95440;
                                        res_95397 = res_95458;
                                        res_95398 = x_95402;
                                    } else {
                                        char cond_95465;
                                        char cond_95466;
                                        char eq_95467;
                                        char x_95468;
                                        double res_95469;
                                        double res_95470;
                                        int64_t res_95494;
                                        double res_95495;
                                        char cond_95496;
                                        double res_95497;
                                        double res_95504;
                                        int64_t res_95505;
                                        double res_95506;
                                        char cond_95507;
                                        double res_95508;
                                        char cond_95515;
                                        double res_95516;
                                        
                                        cond_95465 = res_95377 ==
                                            gridHalfWidth_84155;
                                        cond_95466 = res_95378 == res_95183;
                                        eq_95467 = cond_95465 && cond_95466;
                                        x_95468 = !eq_95467;
                                        if (eq_95467) {
                                            double arg_95471;
                                            int64_t res_95472;
                                            double res_95473;
                                            char cond_95474;
                                            double res_95475;
                                            double y_95482;
                                            double x_95483;
                                            double res_95484;
                                            double res_95485;
                                            
                                            arg_95471 = res_95378 / delta_84156;
                                            res_95472 =
                                                fptosi_f64_i64(arg_95471);
                                            res_95473 =
                                                sitofp_i64_f64(res_95472);
                                            cond_95474 = 0.0 <= arg_95471;
                                            if (cond_95474) {
                                                char cond_95476;
                                                double res_95477;
                                                
                                                cond_95476 = res_95473 <
                                                    arg_95471;
                                                if (cond_95476) {
                                                    int64_t res_95478;
                                                    double res_95479;
                                                    
                                                    res_95478 = res_95472 + 1;
                                                    res_95479 =
                                                        sitofp_i64_f64(res_95478);
                                                    res_95477 = res_95479;
                                                } else {
                                                    res_95477 = arg_95471;
                                                }
                                                res_95475 = res_95477;
                                            } else {
                                                char cond_95480;
                                                double res_95481;
                                                
                                                cond_95480 = arg_95471 <
                                                    res_95473;
                                                if (cond_95480) {
                                                    res_95481 = res_95473;
                                                } else {
                                                    res_95481 = arg_95471;
                                                }
                                                res_95475 = res_95481;
                                            }
                                            y_95482 = res_95176 / delta_84156;
                                            x_95483 = res_95475 - y_95482;
                                            res_95484 = x_95483 / res_95174;
                                            if (cond_95474) {
                                                char cond_95486;
                                                double res_95487;
                                                
                                                cond_95486 = res_95473 <
                                                    arg_95471;
                                                if (cond_95486) {
                                                    int64_t res_95488;
                                                    double res_95489;
                                                    
                                                    res_95488 = res_95472 + 1;
                                                    res_95489 =
                                                        sitofp_i64_f64(res_95488);
                                                    res_95487 = res_95489;
                                                } else {
                                                    res_95487 = arg_95471;
                                                }
                                                res_95485 = res_95487;
                                            } else {
                                                char cond_95490;
                                                double res_95491;
                                                
                                                cond_95490 = arg_95471 <
                                                    res_95473;
                                                if (cond_95490) {
                                                    res_95491 = res_95473;
                                                } else {
                                                    res_95491 = arg_95471;
                                                }
                                                res_95485 = res_95491;
                                            }
                                            res_95469 = res_95484;
                                            res_95470 = res_95485;
                                        } else {
                                            double res_95492;
                                            double res_95493;
                                            
                                            res_95492 = res_95377 / delta_84156;
                                            res_95493 = res_95378 / delta_84156;
                                            res_95469 = res_95492;
                                            res_95470 = res_95493;
                                        }
                                        res_95494 = fptosi_f64_i64(res_95469);
                                        res_95495 = sitofp_i64_f64(res_95494);
                                        cond_95496 = 0.0 <= res_95469;
                                        if (cond_95496) {
                                            char cond_95498;
                                            double res_95499;
                                            
                                            cond_95498 = res_95495 < res_95469;
                                            if (cond_95498) {
                                                int64_t res_95500;
                                                double res_95501;
                                                
                                                res_95500 = res_95494 + 1;
                                                res_95501 =
                                                    sitofp_i64_f64(res_95500);
                                                res_95499 = res_95501;
                                            } else {
                                                res_95499 = res_95469;
                                            }
                                            res_95497 = res_95499;
                                        } else {
                                            char cond_95502;
                                            double res_95503;
                                            
                                            cond_95502 = res_95469 < res_95495;
                                            if (cond_95502) {
                                                res_95503 = res_95495;
                                            } else {
                                                res_95503 = res_95469;
                                            }
                                            res_95497 = res_95503;
                                        }
                                        res_95504 = res_95470 + 0.5;
                                        res_95505 = fptosi_f64_i64(res_95504);
                                        res_95506 = sitofp_i64_f64(res_95505);
                                        cond_95507 = 0.0 <= res_95504;
                                        if (cond_95507) {
                                            char cond_95509;
                                            double res_95510;
                                            
                                            cond_95509 = res_95506 < res_95504;
                                            if (cond_95509) {
                                                res_95510 = res_95506;
                                            } else {
                                                res_95510 = res_95504;
                                            }
                                            res_95508 = res_95510;
                                        } else {
                                            char cond_95511;
                                            double res_95512;
                                            
                                            cond_95511 = res_95504 < res_95506;
                                            if (cond_95511) {
                                                int64_t res_95513;
                                                double res_95514;
                                                
                                                res_95513 = res_95505 - 1;
                                                res_95514 =
                                                    sitofp_i64_f64(res_95513);
                                                res_95512 = res_95514;
                                            } else {
                                                res_95512 = res_95504;
                                            }
                                            res_95508 = res_95512;
                                        }
                                        cond_95515 = res_95508 == res_95504;
                                        if (cond_95515) {
                                            int64_t res_95517;
                                            double res_95518;
                                            char cond_95519;
                                            double res_95520;
                                            int64_t x_95527;
                                            int64_t cond_95528;
                                            char cond_95529;
                                            double res_95530;
                                            
                                            res_95517 =
                                                fptosi_f64_i64(res_95470);
                                            res_95518 =
                                                sitofp_i64_f64(res_95517);
                                            cond_95519 = 0.0 <= res_95470;
                                            if (cond_95519) {
                                                char cond_95521;
                                                double res_95522;
                                                
                                                cond_95521 = res_95518 <
                                                    res_95470;
                                                if (cond_95521) {
                                                    res_95522 = res_95518;
                                                } else {
                                                    res_95522 = res_95470;
                                                }
                                                res_95520 = res_95522;
                                            } else {
                                                char cond_95523;
                                                double res_95524;
                                                
                                                cond_95523 = res_95470 <
                                                    res_95518;
                                                if (cond_95523) {
                                                    int64_t res_95525;
                                                    double res_95526;
                                                    
                                                    res_95525 = res_95517 - 1;
                                                    res_95526 =
                                                        sitofp_i64_f64(res_95525);
                                                    res_95524 = res_95526;
                                                } else {
                                                    res_95524 = res_95470;
                                                }
                                                res_95520 = res_95524;
                                            }
                                            x_95527 = fptosi_f64_i64(res_95520);
                                            cond_95528 = smod64(x_95527, 2);
                                            cond_95529 = cond_95528 == 0;
                                            if (cond_95529) {
                                                res_95530 = res_95520;
                                            } else {
                                                res_95530 = res_95508;
                                            }
                                            res_95516 = res_95530;
                                        } else {
                                            res_95516 = res_95508;
                                        }
                                        res_95394 = res_95469;
                                        res_95395 = res_95470;
                                        res_95396 = res_95497;
                                        res_95397 = res_95516;
                                        res_95398 = x_95468;
                                    }
                                    res_95389 = res_95394;
                                    res_95390 = res_95395;
                                    res_95391 = res_95396;
                                    res_95392 = res_95397;
                                    res_95393 = res_95398;
                                }
                                res_95366 = res_95389;
                                res_95367 = res_95390;
                                res_95368 = res_95391;
                                res_95369 = res_95392;
                                res_95370 = res_95393;
                                res_95371 = eq_95388;
                            } else {
                                char cond_95531;
                                char res_95532;
                                char x_95533;
                                double res_95534;
                                double res_95535;
                                double res_95536;
                                double res_95537;
                                char res_95538;
                                char res_95539;
                                
                                cond_95531 = 180.0 <
                                    eAngles_zzip_res_elem_95907;
                                res_95532 = eAngles_zzip_res_elem_95907 < 270.0;
                                x_95533 = cond_95531 && res_95532;
                                if (x_95533) {
                                    char cond_95540;
                                    char res_95541;
                                    char x_95542;
                                    char y_95543;
                                    char cond_95544;
                                    double res_95545;
                                    double res_95546;
                                    char cond_95554;
                                    char cond_95555;
                                    char eq_95556;
                                    double res_95557;
                                    double res_95558;
                                    double res_95559;
                                    double res_95560;
                                    char res_95561;
                                    
                                    cond_95540 = gridHalfWidth_84155 <
                                        res_95178;
                                    res_95541 = res_95178 < x_95179;
                                    x_95542 = !cond_95540;
                                    y_95543 = x_95542 && res_95541;
                                    cond_95544 = cond_95540 || y_95543;
                                    if (cond_95544) {
                                        char cond_95547;
                                        char res_95548;
                                        char x_95549;
                                        char y_95550;
                                        char cond_95551;
                                        double res_95552;
                                        double res_95553;
                                        
                                        cond_95547 = gridHalfWidth_84155 <
                                            res_95185;
                                        res_95548 = res_95185 < x_95179;
                                        x_95549 = !cond_95547;
                                        y_95550 = x_95549 && res_95548;
                                        cond_95551 = cond_95547 || y_95550;
                                        if (cond_95551) {
                                            res_95552 = 0.0;
                                        } else {
                                            res_95552 = x_95179;
                                        }
                                        if (cond_95551) {
                                            res_95553 = 0.0;
                                        } else {
                                            res_95553 = res_95185;
                                        }
                                        res_95545 = res_95552;
                                        res_95546 = res_95553;
                                    } else {
                                        res_95545 = res_95178;
                                        res_95546 = gridHalfWidth_84155;
                                    }
                                    cond_95554 = res_95545 == 0.0;
                                    cond_95555 = res_95546 == 0.0;
                                    eq_95556 = cond_95554 && cond_95555;
                                    if (eq_95556) {
                                        res_95557 = 0.0;
                                        res_95558 = 0.0;
                                        res_95559 = 0.0;
                                        res_95560 = 0.0;
                                        res_95561 = 1;
                                    } else {
                                        double res_95562;
                                        double res_95563;
                                        double res_95564;
                                        double res_95565;
                                        char res_95566;
                                        
                                        if (res_95194) {
                                            char cond_95567;
                                            char cond_95568;
                                            char eq_95569;
                                            char x_95570;
                                            double res_95571;
                                            double res_95572;
                                            double res_95596;
                                            int64_t res_95597;
                                            double res_95598;
                                            char cond_95599;
                                            double res_95600;
                                            char cond_95607;
                                            double res_95608;
                                            int64_t res_95623;
                                            double res_95624;
                                            char cond_95625;
                                            double res_95626;
                                            
                                            cond_95567 = res_95545 == res_95178;
                                            cond_95568 = res_95546 ==
                                                gridHalfWidth_84155;
                                            eq_95569 = cond_95567 && cond_95568;
                                            x_95570 = !eq_95569;
                                            if (eq_95569) {
                                                double arg_95573;
                                                int64_t res_95574;
                                                double res_95575;
                                                char cond_95576;
                                                double res_95577;
                                                double res_95584;
                                                double x_95591;
                                                double y_95592;
                                                double res_95593;
                                                
                                                arg_95573 = res_95545 /
                                                    delta_84156;
                                                res_95574 =
                                                    fptosi_f64_i64(arg_95573);
                                                res_95575 =
                                                    sitofp_i64_f64(res_95574);
                                                cond_95576 = 0.0 <= arg_95573;
                                                if (cond_95576) {
                                                    char cond_95578;
                                                    double res_95579;
                                                    
                                                    cond_95578 = res_95575 <
                                                        arg_95573;
                                                    if (cond_95578) {
                                                        res_95579 = res_95575;
                                                    } else {
                                                        res_95579 = arg_95573;
                                                    }
                                                    res_95577 = res_95579;
                                                } else {
                                                    char cond_95580;
                                                    double res_95581;
                                                    
                                                    cond_95580 = arg_95573 <
                                                        res_95575;
                                                    if (cond_95580) {
                                                        int64_t res_95582;
                                                        double res_95583;
                                                        
                                                        res_95582 = res_95574 -
                                                            1;
                                                        res_95583 =
                                                            sitofp_i64_f64(res_95582);
                                                        res_95581 = res_95583;
                                                    } else {
                                                        res_95581 = arg_95573;
                                                    }
                                                    res_95577 = res_95581;
                                                }
                                                if (cond_95576) {
                                                    char cond_95585;
                                                    double res_95586;
                                                    
                                                    cond_95585 = res_95575 <
                                                        arg_95573;
                                                    if (cond_95585) {
                                                        res_95586 = res_95575;
                                                    } else {
                                                        res_95586 = arg_95573;
                                                    }
                                                    res_95584 = res_95586;
                                                } else {
                                                    char cond_95587;
                                                    double res_95588;
                                                    
                                                    cond_95587 = arg_95573 <
                                                        res_95575;
                                                    if (cond_95587) {
                                                        int64_t res_95589;
                                                        double res_95590;
                                                        
                                                        res_95589 = res_95574 -
                                                            1;
                                                        res_95590 =
                                                            sitofp_i64_f64(res_95589);
                                                        res_95588 = res_95590;
                                                    } else {
                                                        res_95588 = arg_95573;
                                                    }
                                                    res_95584 = res_95588;
                                                }
                                                x_95591 = res_95174 * res_95584;
                                                y_95592 = res_95176 /
                                                    delta_84156;
                                                res_95593 = x_95591 + y_95592;
                                                res_95571 = res_95577;
                                                res_95572 = res_95593;
                                            } else {
                                                double res_95594;
                                                double res_95595;
                                                
                                                res_95594 = res_95545 /
                                                    delta_84156;
                                                res_95595 = res_95546 /
                                                    delta_84156;
                                                res_95571 = res_95594;
                                                res_95572 = res_95595;
                                            }
                                            res_95596 = res_95571 + 0.5;
                                            res_95597 =
                                                fptosi_f64_i64(res_95596);
                                            res_95598 =
                                                sitofp_i64_f64(res_95597);
                                            cond_95599 = 0.0 <= res_95596;
                                            if (cond_95599) {
                                                char cond_95601;
                                                double res_95602;
                                                
                                                cond_95601 = res_95598 <
                                                    res_95596;
                                                if (cond_95601) {
                                                    res_95602 = res_95598;
                                                } else {
                                                    res_95602 = res_95596;
                                                }
                                                res_95600 = res_95602;
                                            } else {
                                                char cond_95603;
                                                double res_95604;
                                                
                                                cond_95603 = res_95596 <
                                                    res_95598;
                                                if (cond_95603) {
                                                    int64_t res_95605;
                                                    double res_95606;
                                                    
                                                    res_95605 = res_95597 - 1;
                                                    res_95606 =
                                                        sitofp_i64_f64(res_95605);
                                                    res_95604 = res_95606;
                                                } else {
                                                    res_95604 = res_95596;
                                                }
                                                res_95600 = res_95604;
                                            }
                                            cond_95607 = res_95600 == res_95596;
                                            if (cond_95607) {
                                                int64_t res_95609;
                                                double res_95610;
                                                char cond_95611;
                                                double res_95612;
                                                int64_t x_95619;
                                                int64_t cond_95620;
                                                char cond_95621;
                                                double res_95622;
                                                
                                                res_95609 =
                                                    fptosi_f64_i64(res_95571);
                                                res_95610 =
                                                    sitofp_i64_f64(res_95609);
                                                cond_95611 = 0.0 <= res_95571;
                                                if (cond_95611) {
                                                    char cond_95613;
                                                    double res_95614;
                                                    
                                                    cond_95613 = res_95610 <
                                                        res_95571;
                                                    if (cond_95613) {
                                                        res_95614 = res_95610;
                                                    } else {
                                                        res_95614 = res_95571;
                                                    }
                                                    res_95612 = res_95614;
                                                } else {
                                                    char cond_95615;
                                                    double res_95616;
                                                    
                                                    cond_95615 = res_95571 <
                                                        res_95610;
                                                    if (cond_95615) {
                                                        int64_t res_95617;
                                                        double res_95618;
                                                        
                                                        res_95617 = res_95609 -
                                                            1;
                                                        res_95618 =
                                                            sitofp_i64_f64(res_95617);
                                                        res_95616 = res_95618;
                                                    } else {
                                                        res_95616 = res_95571;
                                                    }
                                                    res_95612 = res_95616;
                                                }
                                                x_95619 =
                                                    fptosi_f64_i64(res_95612);
                                                cond_95620 = smod64(x_95619, 2);
                                                cond_95621 = cond_95620 == 0;
                                                if (cond_95621) {
                                                    res_95622 = res_95612;
                                                } else {
                                                    res_95622 = res_95600;
                                                }
                                                res_95608 = res_95622;
                                            } else {
                                                res_95608 = res_95600;
                                            }
                                            res_95623 =
                                                fptosi_f64_i64(res_95572);
                                            res_95624 =
                                                sitofp_i64_f64(res_95623);
                                            cond_95625 = 0.0 <= res_95572;
                                            if (cond_95625) {
                                                char cond_95627;
                                                double res_95628;
                                                
                                                cond_95627 = res_95624 <
                                                    res_95572;
                                                if (cond_95627) {
                                                    int64_t res_95629;
                                                    double res_95630;
                                                    
                                                    res_95629 = res_95623 + 1;
                                                    res_95630 =
                                                        sitofp_i64_f64(res_95629);
                                                    res_95628 = res_95630;
                                                } else {
                                                    res_95628 = res_95572;
                                                }
                                                res_95626 = res_95628;
                                            } else {
                                                char cond_95631;
                                                double res_95632;
                                                
                                                cond_95631 = res_95572 <
                                                    res_95624;
                                                if (cond_95631) {
                                                    res_95632 = res_95624;
                                                } else {
                                                    res_95632 = res_95572;
                                                }
                                                res_95626 = res_95632;
                                            }
                                            res_95562 = res_95571;
                                            res_95563 = res_95572;
                                            res_95564 = res_95608;
                                            res_95565 = res_95626;
                                            res_95566 = x_95570;
                                        } else {
                                            char cond_95633;
                                            char cond_95634;
                                            char eq_95635;
                                            char x_95636;
                                            double res_95637;
                                            double res_95638;
                                            int64_t res_95662;
                                            double res_95663;
                                            char cond_95664;
                                            double res_95665;
                                            double res_95672;
                                            int64_t res_95673;
                                            double res_95674;
                                            char cond_95675;
                                            double res_95676;
                                            char cond_95683;
                                            double res_95684;
                                            
                                            cond_95633 = res_95545 == x_95179;
                                            cond_95634 = res_95546 == res_95185;
                                            eq_95635 = cond_95633 && cond_95634;
                                            x_95636 = !eq_95635;
                                            if (eq_95635) {
                                                double arg_95639;
                                                int64_t res_95640;
                                                double res_95641;
                                                char cond_95642;
                                                double res_95643;
                                                double y_95650;
                                                double x_95651;
                                                double res_95652;
                                                double res_95653;
                                                
                                                arg_95639 = res_95546 /
                                                    delta_84156;
                                                res_95640 =
                                                    fptosi_f64_i64(arg_95639);
                                                res_95641 =
                                                    sitofp_i64_f64(res_95640);
                                                cond_95642 = 0.0 <= arg_95639;
                                                if (cond_95642) {
                                                    char cond_95644;
                                                    double res_95645;
                                                    
                                                    cond_95644 = res_95641 <
                                                        arg_95639;
                                                    if (cond_95644) {
                                                        int64_t res_95646;
                                                        double res_95647;
                                                        
                                                        res_95646 = res_95640 +
                                                            1;
                                                        res_95647 =
                                                            sitofp_i64_f64(res_95646);
                                                        res_95645 = res_95647;
                                                    } else {
                                                        res_95645 = arg_95639;
                                                    }
                                                    res_95643 = res_95645;
                                                } else {
                                                    char cond_95648;
                                                    double res_95649;
                                                    
                                                    cond_95648 = arg_95639 <
                                                        res_95641;
                                                    if (cond_95648) {
                                                        res_95649 = res_95641;
                                                    } else {
                                                        res_95649 = arg_95639;
                                                    }
                                                    res_95643 = res_95649;
                                                }
                                                y_95650 = res_95176 /
                                                    delta_84156;
                                                x_95651 = res_95643 - y_95650;
                                                res_95652 = x_95651 / res_95174;
                                                if (cond_95642) {
                                                    char cond_95654;
                                                    double res_95655;
                                                    
                                                    cond_95654 = res_95641 <
                                                        arg_95639;
                                                    if (cond_95654) {
                                                        int64_t res_95656;
                                                        double res_95657;
                                                        
                                                        res_95656 = res_95640 +
                                                            1;
                                                        res_95657 =
                                                            sitofp_i64_f64(res_95656);
                                                        res_95655 = res_95657;
                                                    } else {
                                                        res_95655 = arg_95639;
                                                    }
                                                    res_95653 = res_95655;
                                                } else {
                                                    char cond_95658;
                                                    double res_95659;
                                                    
                                                    cond_95658 = arg_95639 <
                                                        res_95641;
                                                    if (cond_95658) {
                                                        res_95659 = res_95641;
                                                    } else {
                                                        res_95659 = arg_95639;
                                                    }
                                                    res_95653 = res_95659;
                                                }
                                                res_95637 = res_95652;
                                                res_95638 = res_95653;
                                            } else {
                                                double res_95660;
                                                double res_95661;
                                                
                                                res_95660 = res_95545 /
                                                    delta_84156;
                                                res_95661 = res_95546 /
                                                    delta_84156;
                                                res_95637 = res_95660;
                                                res_95638 = res_95661;
                                            }
                                            res_95662 =
                                                fptosi_f64_i64(res_95637);
                                            res_95663 =
                                                sitofp_i64_f64(res_95662);
                                            cond_95664 = 0.0 <= res_95637;
                                            if (cond_95664) {
                                                char cond_95666;
                                                double res_95667;
                                                
                                                cond_95666 = res_95663 <
                                                    res_95637;
                                                if (cond_95666) {
                                                    res_95667 = res_95663;
                                                } else {
                                                    res_95667 = res_95637;
                                                }
                                                res_95665 = res_95667;
                                            } else {
                                                char cond_95668;
                                                double res_95669;
                                                
                                                cond_95668 = res_95637 <
                                                    res_95663;
                                                if (cond_95668) {
                                                    int64_t res_95670;
                                                    double res_95671;
                                                    
                                                    res_95670 = res_95662 - 1;
                                                    res_95671 =
                                                        sitofp_i64_f64(res_95670);
                                                    res_95669 = res_95671;
                                                } else {
                                                    res_95669 = res_95637;
                                                }
                                                res_95665 = res_95669;
                                            }
                                            res_95672 = res_95638 + 0.5;
                                            res_95673 =
                                                fptosi_f64_i64(res_95672);
                                            res_95674 =
                                                sitofp_i64_f64(res_95673);
                                            cond_95675 = 0.0 <= res_95672;
                                            if (cond_95675) {
                                                char cond_95677;
                                                double res_95678;
                                                
                                                cond_95677 = res_95674 <
                                                    res_95672;
                                                if (cond_95677) {
                                                    res_95678 = res_95674;
                                                } else {
                                                    res_95678 = res_95672;
                                                }
                                                res_95676 = res_95678;
                                            } else {
                                                char cond_95679;
                                                double res_95680;
                                                
                                                cond_95679 = res_95672 <
                                                    res_95674;
                                                if (cond_95679) {
                                                    int64_t res_95681;
                                                    double res_95682;
                                                    
                                                    res_95681 = res_95673 - 1;
                                                    res_95682 =
                                                        sitofp_i64_f64(res_95681);
                                                    res_95680 = res_95682;
                                                } else {
                                                    res_95680 = res_95672;
                                                }
                                                res_95676 = res_95680;
                                            }
                                            cond_95683 = res_95676 == res_95672;
                                            if (cond_95683) {
                                                int64_t res_95685;
                                                double res_95686;
                                                char cond_95687;
                                                double res_95688;
                                                int64_t x_95695;
                                                int64_t cond_95696;
                                                char cond_95697;
                                                double res_95698;
                                                
                                                res_95685 =
                                                    fptosi_f64_i64(res_95638);
                                                res_95686 =
                                                    sitofp_i64_f64(res_95685);
                                                cond_95687 = 0.0 <= res_95638;
                                                if (cond_95687) {
                                                    char cond_95689;
                                                    double res_95690;
                                                    
                                                    cond_95689 = res_95686 <
                                                        res_95638;
                                                    if (cond_95689) {
                                                        res_95690 = res_95686;
                                                    } else {
                                                        res_95690 = res_95638;
                                                    }
                                                    res_95688 = res_95690;
                                                } else {
                                                    char cond_95691;
                                                    double res_95692;
                                                    
                                                    cond_95691 = res_95638 <
                                                        res_95686;
                                                    if (cond_95691) {
                                                        int64_t res_95693;
                                                        double res_95694;
                                                        
                                                        res_95693 = res_95685 -
                                                            1;
                                                        res_95694 =
                                                            sitofp_i64_f64(res_95693);
                                                        res_95692 = res_95694;
                                                    } else {
                                                        res_95692 = res_95638;
                                                    }
                                                    res_95688 = res_95692;
                                                }
                                                x_95695 =
                                                    fptosi_f64_i64(res_95688);
                                                cond_95696 = smod64(x_95695, 2);
                                                cond_95697 = cond_95696 == 0;
                                                if (cond_95697) {
                                                    res_95698 = res_95688;
                                                } else {
                                                    res_95698 = res_95676;
                                                }
                                                res_95684 = res_95698;
                                            } else {
                                                res_95684 = res_95676;
                                            }
                                            res_95562 = res_95637;
                                            res_95563 = res_95638;
                                            res_95564 = res_95665;
                                            res_95565 = res_95684;
                                            res_95566 = x_95636;
                                        }
                                        res_95557 = res_95562;
                                        res_95558 = res_95563;
                                        res_95559 = res_95564;
                                        res_95560 = res_95565;
                                        res_95561 = res_95566;
                                    }
                                    res_95534 = res_95557;
                                    res_95535 = res_95558;
                                    res_95536 = res_95559;
                                    res_95537 = res_95560;
                                    res_95538 = res_95561;
                                    res_95539 = eq_95556;
                                } else {
                                    char cond_95699;
                                    char res_95700;
                                    char x_95701;
                                    char y_95702;
                                    char cond_95703;
                                    double res_95704;
                                    double res_95705;
                                    char cond_95713;
                                    char cond_95714;
                                    char eq_95715;
                                    double res_95716;
                                    double res_95717;
                                    double res_95718;
                                    double res_95719;
                                    char res_95720;
                                    
                                    cond_95699 = gridHalfWidth_84155 <
                                        res_95181;
                                    res_95700 = res_95181 < x_95179;
                                    x_95701 = !cond_95699;
                                    y_95702 = x_95701 && res_95700;
                                    cond_95703 = cond_95699 || y_95702;
                                    if (cond_95703) {
                                        char cond_95706;
                                        char res_95707;
                                        char x_95708;
                                        char y_95709;
                                        char cond_95710;
                                        double res_95711;
                                        double res_95712;
                                        
                                        cond_95706 = gridHalfWidth_84155 <
                                            res_95185;
                                        res_95707 = res_95185 < x_95179;
                                        x_95708 = !cond_95706;
                                        y_95709 = x_95708 && res_95707;
                                        cond_95710 = cond_95706 || y_95709;
                                        if (cond_95710) {
                                            res_95711 = 0.0;
                                        } else {
                                            res_95711 = x_95179;
                                        }
                                        if (cond_95710) {
                                            res_95712 = 0.0;
                                        } else {
                                            res_95712 = res_95185;
                                        }
                                        res_95704 = res_95711;
                                        res_95705 = res_95712;
                                    } else {
                                        res_95704 = res_95181;
                                        res_95705 = x_95179;
                                    }
                                    cond_95713 = res_95704 == 0.0;
                                    cond_95714 = res_95705 == 0.0;
                                    eq_95715 = cond_95713 && cond_95714;
                                    if (eq_95715) {
                                        res_95716 = 0.0;
                                        res_95717 = 0.0;
                                        res_95718 = 0.0;
                                        res_95719 = 0.0;
                                        res_95720 = 1;
                                    } else {
                                        double res_95721;
                                        double res_95722;
                                        double res_95723;
                                        double res_95724;
                                        char res_95725;
                                        
                                        if (res_95194) {
                                            char cond_95726;
                                            char cond_95727;
                                            char eq_95728;
                                            char x_95729;
                                            double res_95730;
                                            double res_95731;
                                            double res_95755;
                                            int64_t res_95756;
                                            double res_95757;
                                            char cond_95758;
                                            double res_95759;
                                            char cond_95766;
                                            double res_95767;
                                            int64_t res_95782;
                                            double res_95783;
                                            char cond_95784;
                                            double res_95785;
                                            
                                            cond_95726 = res_95704 == res_95181;
                                            cond_95727 = res_95705 == x_95179;
                                            eq_95728 = cond_95726 && cond_95727;
                                            x_95729 = !eq_95728;
                                            if (eq_95728) {
                                                double arg_95732;
                                                int64_t res_95733;
                                                double res_95734;
                                                char cond_95735;
                                                double res_95736;
                                                double res_95743;
                                                double x_95750;
                                                double y_95751;
                                                double res_95752;
                                                
                                                arg_95732 = res_95704 /
                                                    delta_84156;
                                                res_95733 =
                                                    fptosi_f64_i64(arg_95732);
                                                res_95734 =
                                                    sitofp_i64_f64(res_95733);
                                                cond_95735 = 0.0 <= arg_95732;
                                                if (cond_95735) {
                                                    char cond_95737;
                                                    double res_95738;
                                                    
                                                    cond_95737 = res_95734 <
                                                        arg_95732;
                                                    if (cond_95737) {
                                                        res_95738 = res_95734;
                                                    } else {
                                                        res_95738 = arg_95732;
                                                    }
                                                    res_95736 = res_95738;
                                                } else {
                                                    char cond_95739;
                                                    double res_95740;
                                                    
                                                    cond_95739 = arg_95732 <
                                                        res_95734;
                                                    if (cond_95739) {
                                                        int64_t res_95741;
                                                        double res_95742;
                                                        
                                                        res_95741 = res_95733 -
                                                            1;
                                                        res_95742 =
                                                            sitofp_i64_f64(res_95741);
                                                        res_95740 = res_95742;
                                                    } else {
                                                        res_95740 = arg_95732;
                                                    }
                                                    res_95736 = res_95740;
                                                }
                                                if (cond_95735) {
                                                    char cond_95744;
                                                    double res_95745;
                                                    
                                                    cond_95744 = res_95734 <
                                                        arg_95732;
                                                    if (cond_95744) {
                                                        res_95745 = res_95734;
                                                    } else {
                                                        res_95745 = arg_95732;
                                                    }
                                                    res_95743 = res_95745;
                                                } else {
                                                    char cond_95746;
                                                    double res_95747;
                                                    
                                                    cond_95746 = arg_95732 <
                                                        res_95734;
                                                    if (cond_95746) {
                                                        int64_t res_95748;
                                                        double res_95749;
                                                        
                                                        res_95748 = res_95733 -
                                                            1;
                                                        res_95749 =
                                                            sitofp_i64_f64(res_95748);
                                                        res_95747 = res_95749;
                                                    } else {
                                                        res_95747 = arg_95732;
                                                    }
                                                    res_95743 = res_95747;
                                                }
                                                x_95750 = res_95174 * res_95743;
                                                y_95751 = res_95176 /
                                                    delta_84156;
                                                res_95752 = x_95750 + y_95751;
                                                res_95730 = res_95736;
                                                res_95731 = res_95752;
                                            } else {
                                                double res_95753;
                                                double res_95754;
                                                
                                                res_95753 = res_95704 /
                                                    delta_84156;
                                                res_95754 = res_95705 /
                                                    delta_84156;
                                                res_95730 = res_95753;
                                                res_95731 = res_95754;
                                            }
                                            res_95755 = res_95730 + 0.5;
                                            res_95756 =
                                                fptosi_f64_i64(res_95755);
                                            res_95757 =
                                                sitofp_i64_f64(res_95756);
                                            cond_95758 = 0.0 <= res_95755;
                                            if (cond_95758) {
                                                char cond_95760;
                                                double res_95761;
                                                
                                                cond_95760 = res_95757 <
                                                    res_95755;
                                                if (cond_95760) {
                                                    res_95761 = res_95757;
                                                } else {
                                                    res_95761 = res_95755;
                                                }
                                                res_95759 = res_95761;
                                            } else {
                                                char cond_95762;
                                                double res_95763;
                                                
                                                cond_95762 = res_95755 <
                                                    res_95757;
                                                if (cond_95762) {
                                                    int64_t res_95764;
                                                    double res_95765;
                                                    
                                                    res_95764 = res_95756 - 1;
                                                    res_95765 =
                                                        sitofp_i64_f64(res_95764);
                                                    res_95763 = res_95765;
                                                } else {
                                                    res_95763 = res_95755;
                                                }
                                                res_95759 = res_95763;
                                            }
                                            cond_95766 = res_95759 == res_95755;
                                            if (cond_95766) {
                                                int64_t res_95768;
                                                double res_95769;
                                                char cond_95770;
                                                double res_95771;
                                                int64_t x_95778;
                                                int64_t cond_95779;
                                                char cond_95780;
                                                double res_95781;
                                                
                                                res_95768 =
                                                    fptosi_f64_i64(res_95730);
                                                res_95769 =
                                                    sitofp_i64_f64(res_95768);
                                                cond_95770 = 0.0 <= res_95730;
                                                if (cond_95770) {
                                                    char cond_95772;
                                                    double res_95773;
                                                    
                                                    cond_95772 = res_95769 <
                                                        res_95730;
                                                    if (cond_95772) {
                                                        res_95773 = res_95769;
                                                    } else {
                                                        res_95773 = res_95730;
                                                    }
                                                    res_95771 = res_95773;
                                                } else {
                                                    char cond_95774;
                                                    double res_95775;
                                                    
                                                    cond_95774 = res_95730 <
                                                        res_95769;
                                                    if (cond_95774) {
                                                        int64_t res_95776;
                                                        double res_95777;
                                                        
                                                        res_95776 = res_95768 -
                                                            1;
                                                        res_95777 =
                                                            sitofp_i64_f64(res_95776);
                                                        res_95775 = res_95777;
                                                    } else {
                                                        res_95775 = res_95730;
                                                    }
                                                    res_95771 = res_95775;
                                                }
                                                x_95778 =
                                                    fptosi_f64_i64(res_95771);
                                                cond_95779 = smod64(x_95778, 2);
                                                cond_95780 = cond_95779 == 0;
                                                if (cond_95780) {
                                                    res_95781 = res_95771;
                                                } else {
                                                    res_95781 = res_95759;
                                                }
                                                res_95767 = res_95781;
                                            } else {
                                                res_95767 = res_95759;
                                            }
                                            res_95782 =
                                                fptosi_f64_i64(res_95731);
                                            res_95783 =
                                                sitofp_i64_f64(res_95782);
                                            cond_95784 = 0.0 <= res_95731;
                                            if (cond_95784) {
                                                char cond_95786;
                                                double res_95787;
                                                
                                                cond_95786 = res_95783 <
                                                    res_95731;
                                                if (cond_95786) {
                                                    res_95787 = res_95783;
                                                } else {
                                                    res_95787 = res_95731;
                                                }
                                                res_95785 = res_95787;
                                            } else {
                                                char cond_95788;
                                                double res_95789;
                                                
                                                cond_95788 = res_95731 <
                                                    res_95783;
                                                if (cond_95788) {
                                                    int64_t res_95790;
                                                    double res_95791;
                                                    
                                                    res_95790 = res_95782 - 1;
                                                    res_95791 =
                                                        sitofp_i64_f64(res_95790);
                                                    res_95789 = res_95791;
                                                } else {
                                                    res_95789 = res_95731;
                                                }
                                                res_95785 = res_95789;
                                            }
                                            res_95721 = res_95730;
                                            res_95722 = res_95731;
                                            res_95723 = res_95767;
                                            res_95724 = res_95785;
                                            res_95725 = x_95729;
                                        } else {
                                            char cond_95792;
                                            char cond_95793;
                                            char eq_95794;
                                            char x_95795;
                                            double res_95796;
                                            double res_95797;
                                            int64_t res_95821;
                                            double res_95822;
                                            char cond_95823;
                                            double res_95824;
                                            double res_95831;
                                            int64_t res_95832;
                                            double res_95833;
                                            char cond_95834;
                                            double res_95835;
                                            char cond_95842;
                                            double res_95843;
                                            
                                            cond_95792 = res_95704 == x_95179;
                                            cond_95793 = res_95705 == res_95185;
                                            eq_95794 = cond_95792 && cond_95793;
                                            x_95795 = !eq_95794;
                                            if (eq_95794) {
                                                double arg_95798;
                                                int64_t res_95799;
                                                double res_95800;
                                                char cond_95801;
                                                double res_95802;
                                                double y_95809;
                                                double x_95810;
                                                double res_95811;
                                                double res_95812;
                                                
                                                arg_95798 = res_95705 /
                                                    delta_84156;
                                                res_95799 =
                                                    fptosi_f64_i64(arg_95798);
                                                res_95800 =
                                                    sitofp_i64_f64(res_95799);
                                                cond_95801 = 0.0 <= arg_95798;
                                                if (cond_95801) {
                                                    char cond_95803;
                                                    double res_95804;
                                                    
                                                    cond_95803 = res_95800 <
                                                        arg_95798;
                                                    if (cond_95803) {
                                                        res_95804 = res_95800;
                                                    } else {
                                                        res_95804 = arg_95798;
                                                    }
                                                    res_95802 = res_95804;
                                                } else {
                                                    char cond_95805;
                                                    double res_95806;
                                                    
                                                    cond_95805 = arg_95798 <
                                                        res_95800;
                                                    if (cond_95805) {
                                                        int64_t res_95807;
                                                        double res_95808;
                                                        
                                                        res_95807 = res_95799 -
                                                            1;
                                                        res_95808 =
                                                            sitofp_i64_f64(res_95807);
                                                        res_95806 = res_95808;
                                                    } else {
                                                        res_95806 = arg_95798;
                                                    }
                                                    res_95802 = res_95806;
                                                }
                                                y_95809 = res_95176 /
                                                    delta_84156;
                                                x_95810 = res_95802 - y_95809;
                                                res_95811 = x_95810 / res_95174;
                                                if (cond_95801) {
                                                    char cond_95813;
                                                    double res_95814;
                                                    
                                                    cond_95813 = res_95800 <
                                                        arg_95798;
                                                    if (cond_95813) {
                                                        res_95814 = res_95800;
                                                    } else {
                                                        res_95814 = arg_95798;
                                                    }
                                                    res_95812 = res_95814;
                                                } else {
                                                    char cond_95815;
                                                    double res_95816;
                                                    
                                                    cond_95815 = arg_95798 <
                                                        res_95800;
                                                    if (cond_95815) {
                                                        int64_t res_95817;
                                                        double res_95818;
                                                        
                                                        res_95817 = res_95799 -
                                                            1;
                                                        res_95818 =
                                                            sitofp_i64_f64(res_95817);
                                                        res_95816 = res_95818;
                                                    } else {
                                                        res_95816 = arg_95798;
                                                    }
                                                    res_95812 = res_95816;
                                                }
                                                res_95796 = res_95811;
                                                res_95797 = res_95812;
                                            } else {
                                                double res_95819;
                                                double res_95820;
                                                
                                                res_95819 = res_95704 /
                                                    delta_84156;
                                                res_95820 = res_95705 /
                                                    delta_84156;
                                                res_95796 = res_95819;
                                                res_95797 = res_95820;
                                            }
                                            res_95821 =
                                                fptosi_f64_i64(res_95796);
                                            res_95822 =
                                                sitofp_i64_f64(res_95821);
                                            cond_95823 = 0.0 <= res_95796;
                                            if (cond_95823) {
                                                char cond_95825;
                                                double res_95826;
                                                
                                                cond_95825 = res_95822 <
                                                    res_95796;
                                                if (cond_95825) {
                                                    res_95826 = res_95822;
                                                } else {
                                                    res_95826 = res_95796;
                                                }
                                                res_95824 = res_95826;
                                            } else {
                                                char cond_95827;
                                                double res_95828;
                                                
                                                cond_95827 = res_95796 <
                                                    res_95822;
                                                if (cond_95827) {
                                                    int64_t res_95829;
                                                    double res_95830;
                                                    
                                                    res_95829 = res_95821 - 1;
                                                    res_95830 =
                                                        sitofp_i64_f64(res_95829);
                                                    res_95828 = res_95830;
                                                } else {
                                                    res_95828 = res_95796;
                                                }
                                                res_95824 = res_95828;
                                            }
                                            res_95831 = res_95797 + 0.5;
                                            res_95832 =
                                                fptosi_f64_i64(res_95831);
                                            res_95833 =
                                                sitofp_i64_f64(res_95832);
                                            cond_95834 = 0.0 <= res_95831;
                                            if (cond_95834) {
                                                char cond_95836;
                                                double res_95837;
                                                
                                                cond_95836 = res_95833 <
                                                    res_95831;
                                                if (cond_95836) {
                                                    res_95837 = res_95833;
                                                } else {
                                                    res_95837 = res_95831;
                                                }
                                                res_95835 = res_95837;
                                            } else {
                                                char cond_95838;
                                                double res_95839;
                                                
                                                cond_95838 = res_95831 <
                                                    res_95833;
                                                if (cond_95838) {
                                                    int64_t res_95840;
                                                    double res_95841;
                                                    
                                                    res_95840 = res_95832 - 1;
                                                    res_95841 =
                                                        sitofp_i64_f64(res_95840);
                                                    res_95839 = res_95841;
                                                } else {
                                                    res_95839 = res_95831;
                                                }
                                                res_95835 = res_95839;
                                            }
                                            cond_95842 = res_95835 == res_95831;
                                            if (cond_95842) {
                                                int64_t res_95844;
                                                double res_95845;
                                                char cond_95846;
                                                double res_95847;
                                                int64_t x_95854;
                                                int64_t cond_95855;
                                                char cond_95856;
                                                double res_95857;
                                                
                                                res_95844 =
                                                    fptosi_f64_i64(res_95797);
                                                res_95845 =
                                                    sitofp_i64_f64(res_95844);
                                                cond_95846 = 0.0 <= res_95797;
                                                if (cond_95846) {
                                                    char cond_95848;
                                                    double res_95849;
                                                    
                                                    cond_95848 = res_95845 <
                                                        res_95797;
                                                    if (cond_95848) {
                                                        res_95849 = res_95845;
                                                    } else {
                                                        res_95849 = res_95797;
                                                    }
                                                    res_95847 = res_95849;
                                                } else {
                                                    char cond_95850;
                                                    double res_95851;
                                                    
                                                    cond_95850 = res_95797 <
                                                        res_95845;
                                                    if (cond_95850) {
                                                        int64_t res_95852;
                                                        double res_95853;
                                                        
                                                        res_95852 = res_95844 -
                                                            1;
                                                        res_95853 =
                                                            sitofp_i64_f64(res_95852);
                                                        res_95851 = res_95853;
                                                    } else {
                                                        res_95851 = res_95797;
                                                    }
                                                    res_95847 = res_95851;
                                                }
                                                x_95854 =
                                                    fptosi_f64_i64(res_95847);
                                                cond_95855 = smod64(x_95854, 2);
                                                cond_95856 = cond_95855 == 0;
                                                if (cond_95856) {
                                                    res_95857 = res_95847;
                                                } else {
                                                    res_95857 = res_95835;
                                                }
                                                res_95843 = res_95857;
                                            } else {
                                                res_95843 = res_95835;
                                            }
                                            res_95721 = res_95796;
                                            res_95722 = res_95797;
                                            res_95723 = res_95824;
                                            res_95724 = res_95843;
                                            res_95725 = x_95795;
                                        }
                                        res_95716 = res_95721;
                                        res_95717 = res_95722;
                                        res_95718 = res_95723;
                                        res_95719 = res_95724;
                                        res_95720 = res_95725;
                                    }
                                    res_95534 = res_95716;
                                    res_95535 = res_95717;
                                    res_95536 = res_95718;
                                    res_95537 = res_95719;
                                    res_95538 = res_95720;
                                    res_95539 = eq_95715;
                                }
                                res_95366 = res_95534;
                                res_95367 = res_95535;
                                res_95368 = res_95536;
                                res_95369 = res_95537;
                                res_95370 = res_95538;
                                res_95371 = res_95539;
                            }
                            res_95198 = res_95366;
                            res_95199 = res_95367;
                            res_95200 = res_95368;
                            res_95201 = res_95369;
                            res_95202 = res_95370;
                            res_95203 = res_95371;
                        }
                        x_95858 = res_95200 - res_95198;
                        x_95859 = fpow64(x_95858, 2.0);
                        x_95860 = res_95201 - res_95199;
                        y_95861 = fpow64(x_95860, 2.0);
                        x_95862 = x_95859 + y_95861;
                        x_95863 = futrts_sqrt64(x_95862);
                        res_95864 = x_95863 * delta_84156;
                        res_95111 = res_95200;
                        res_95112 = res_95201;
                        res_95113 = res_95864;
                        res_95114 = res_95202;
                        res_95115 = res_95203;
                    }
                    res_95052 = res_95111;
                    res_95053 = res_95112;
                    res_95054 = res_95113;
                    res_95055 = res_95114;
                    res_95056 = res_95115;
                }
                res_95865 = fptosi_f64_i16(res_95052);
                res_95866 = fptosi_f64_i16(res_95053);
                cond_95867 = !res_95056;
                if (cond_95867) {
                    part_res_95868 = 0;
                } else {
                    part_res_95868 = 1;
                }
                if (cond_95867) {
                    part_res_95869 = 1;
                } else {
                    part_res_95869 = 0;
                }
                zz_95870 = x_merge_95899 + part_res_95869;
                *(__global int32_t *) &mem_97044[j_95905 * 4] = part_res_95868;
                *(__global int16_t *) &mem_97047[j_95905 * 2] = res_95865;
                *(__global int16_t *) &mem_97050[j_95905 * 2] = res_95866;
                *(__global double *) &mem_97053[j_95905 * 8] = res_95054;
                *(__global char *) &mem_97055[j_95905] = res_95055;
                *(__global char *) &mem_97057[j_95905] = res_95056;
                foldres_95915 = zz_95870;
            } else {
                foldres_95915 = x_merge_95899;
            }
            if (slt32(local_tid_95894, group_sizze_95019) && 1) {
                *(__local int32_t *) &mem_97072[local_tid_95894 * 4] =
                    foldres_95915;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int32_t my_index_95871;
            int32_t other_index_95872;
            int32_t x_95873;
            int32_t y_95874;
            int32_t my_index_98495;
            int32_t other_index_98496;
            int32_t x_98497;
            int32_t y_98498;
            
            my_index_95871 = local_tid_95894;
            if (slt32(local_tid_95894, group_sizze_95019)) {
                y_95874 = *(volatile __local
                            int32_t *) &mem_97072[local_tid_95894 *
                                                  sizeof(int32_t)];
            }
            // in-block scan (hopefully no barriers needed)
            {
                int32_t skip_threads_98500 = 1;
                
                while (slt32(skip_threads_98500, 32)) {
                    if (slt32(local_tid_95894, group_sizze_95019) &&
                        sle32(skip_threads_98500, local_tid_95894 -
                              squot32(local_tid_95894, 32) * 32)) {
                        // read operands
                        {
                            x_95873 = *(volatile __local
                                        int32_t *) &mem_97072[(local_tid_95894 -
                                                               skip_threads_98500) *
                                                              sizeof(int32_t)];
                        }
                        // perform operation
                        {
                            int32_t zz_95875 = x_95873 + y_95874;
                            
                            y_95874 = zz_95875;
                        }
                    }
                    if (sle32(wave_sizze_98484, skip_threads_98500)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (slt32(local_tid_95894, group_sizze_95019) &&
                        sle32(skip_threads_98500, local_tid_95894 -
                              squot32(local_tid_95894, 32) * 32)) {
                        // write result
                        {
                            *(volatile __local
                              int32_t *) &mem_97072[local_tid_95894 *
                                                    sizeof(int32_t)] = y_95874;
                        }
                    }
                    if (sle32(wave_sizze_98484, skip_threads_98500)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_98500 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_95894 - squot32(local_tid_95894, 32) * 32) ==
                    31 && slt32(local_tid_95894, group_sizze_95019)) {
                    *(volatile __local
                      int32_t *) &mem_97072[squot32(local_tid_95894, 32) *
                                            sizeof(int32_t)] = y_95874;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for warp 'i+1'
            {
                if (squot32(local_tid_95894, 32) == 0 && slt32(local_tid_95894,
                                                               group_sizze_95019)) {
                    y_98498 = *(volatile __local
                                int32_t *) &mem_97072[local_tid_95894 *
                                                      sizeof(int32_t)];
                }
                // in-block scan (hopefully no barriers needed)
                {
                    int32_t skip_threads_98501 = 1;
                    
                    while (slt32(skip_threads_98501, 32)) {
                        if ((squot32(local_tid_95894, 32) == 0 &&
                             slt32(local_tid_95894, group_sizze_95019)) &&
                            sle32(skip_threads_98501, local_tid_95894 -
                                  squot32(local_tid_95894, 32) * 32)) {
                            // read operands
                            {
                                x_98497 = *(volatile __local
                                            int32_t *) &mem_97072[(local_tid_95894 -
                                                                   skip_threads_98501) *
                                                                  sizeof(int32_t)];
                            }
                            // perform operation
                            {
                                int32_t zz_98499 = x_98497 + y_98498;
                                
                                y_98498 = zz_98499;
                            }
                        }
                        if (sle32(wave_sizze_98484, skip_threads_98501)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if ((squot32(local_tid_95894, 32) == 0 &&
                             slt32(local_tid_95894, group_sizze_95019)) &&
                            sle32(skip_threads_98501, local_tid_95894 -
                                  squot32(local_tid_95894, 32) * 32)) {
                            // write result
                            {
                                *(volatile __local
                                  int32_t *) &mem_97072[local_tid_95894 *
                                                        sizeof(int32_t)] =
                                    y_98498;
                            }
                        }
                        if (sle32(wave_sizze_98484, skip_threads_98501)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_98501 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_95894, 32) == 0 ||
                      !slt32(local_tid_95894, group_sizze_95019))) {
                    // read operands
                    {
                        x_95873 = *(volatile __local
                                    int32_t *) &mem_97072[(squot32(local_tid_95894,
                                                                   32) - 1) *
                                                          sizeof(int32_t)];
                    }
                    // perform operation
                    {
                        int32_t zz_95875 = x_95873 + y_95874;
                        
                        y_95874 = zz_95875;
                    }
                    // write final result
                    {
                        *(volatile __local
                          int32_t *) &mem_97072[local_tid_95894 *
                                                sizeof(int32_t)] = y_95874;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_95894, 32) == 0) {
                    *(volatile __local int32_t *) &mem_97072[local_tid_95894 *
                                                             sizeof(int32_t)] =
                        y_95874;
                }
            }
            if (cond_95906) {
                int32_t scanned_elem_95925 = *(__local
                                               int32_t *) &mem_97072[local_tid_95894 *
                                                                     4];
                
                *(__global int32_t *) &mem_97041[j_95905 * 4] =
                    scanned_elem_95925;
            }
            
            int32_t new_carry_95930;
            
            if (is_first_thread_95928) {
                int32_t carry_95929 = *(__local int32_t *) &mem_97072[y_95022 *
                                                                      4];
                
                new_carry_95930 = carry_95929;
            } else {
                new_carry_95930 = 0;
            }
            
            int32_t new_carry_sync_95931;
            
            new_carry_sync_95931 = new_carry_95930;
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int32_t x_merge_tmp_98494 = new_carry_sync_95931;
            
            x_merge_95899 = x_merge_tmp_98494;
        }
        result_95939 = x_merge_95899;
    }
    if (local_tid_95894 == 0) {
        *(__global int32_t *) &mem_97084[group_id_95895 * 4] = result_95939;
    }
}
__kernel void scan1_kernel_96834(__local volatile int64_t *mem_aligned_0,
                                 int32_t num_elems_84232,
                                 int32_t num_iterations_96839, int32_t y_96842,
                                 int32_t convop_x_97312, __global
                                 unsigned char *mem_97329, __global
                                 unsigned char *mem_97332, __global
                                 unsigned char *mem_97336, __global
                                 unsigned char *mem_97348)
{
    __local volatile char *restrict mem_97341 = mem_aligned_0;
    int32_t wave_sizze_98585;
    int32_t group_sizze_98586;
    char thread_active_98587;
    int32_t global_tid_96834;
    int32_t local_tid_96835;
    int32_t group_id_96836;
    
    global_tid_96834 = get_global_id(0);
    local_tid_96835 = get_local_id(0);
    group_sizze_98586 = get_local_size(0);
    wave_sizze_98585 = LOCKSTEP_WIDTH;
    group_id_96836 = get_group_id(0);
    thread_active_98587 = 1;
    
    int32_t x_96843;
    char is_first_thread_96858;
    int32_t result_96864;
    
    if (thread_active_98587) {
        x_96843 = group_id_96836 * y_96842;
        is_first_thread_96858 = local_tid_96835 == 0;
        
        int32_t x_merge_96840 = 0;
        
        for (int32_t i_96841 = 0; i_96841 < num_iterations_96839; i_96841++) {
            int32_t y_96844 = i_96841 * group_sizze_96800;
            int32_t offset_96845 = x_96843 + y_96844;
            int32_t j_96846 = offset_96845 + local_tid_96835;
            char cond_96847 = slt32(j_96846, convop_x_97312);
            int32_t foldres_96850;
            
            if (cond_96847) {
                int32_t new_index_96942;
                int32_t binop_y_96944;
                int32_t new_index_96945;
                double reshape_elem_96848;
                char cond_96817;
                char cond_96818;
                int32_t part_res_96819;
                int32_t part_res_96820;
                int32_t zz_96821;
                
                new_index_96942 = squot32(j_96846, num_elems_84232);
                binop_y_96944 = new_index_96942 * num_elems_84232;
                new_index_96945 = j_96846 - binop_y_96944;
                reshape_elem_96848 = *(__global
                                       double *) &mem_97336[(new_index_96942 *
                                                             num_elems_84232 +
                                                             new_index_96945) *
                                                            8];
                cond_96817 = reshape_elem_96848 == -1.0;
                cond_96818 = !cond_96817;
                if (cond_96818) {
                    part_res_96819 = 0;
                } else {
                    part_res_96819 = 1;
                }
                if (cond_96818) {
                    part_res_96820 = 1;
                } else {
                    part_res_96820 = 0;
                }
                zz_96821 = x_merge_96840 + part_res_96820;
                *(__global int32_t *) &mem_97332[j_96846 * 4] = part_res_96819;
                foldres_96850 = zz_96821;
            } else {
                foldres_96850 = x_merge_96840;
            }
            if (slt32(local_tid_96835, group_sizze_96800) && 1) {
                *(__local int32_t *) &mem_97341[local_tid_96835 * 4] =
                    foldres_96850;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int32_t my_index_96822;
            int32_t other_index_96823;
            int32_t x_96824;
            int32_t y_96825;
            int32_t my_index_98591;
            int32_t other_index_98592;
            int32_t x_98593;
            int32_t y_98594;
            
            my_index_96822 = local_tid_96835;
            if (slt32(local_tid_96835, group_sizze_96800)) {
                y_96825 = *(volatile __local
                            int32_t *) &mem_97341[local_tid_96835 *
                                                  sizeof(int32_t)];
            }
            // in-block scan (hopefully no barriers needed)
            {
                int32_t skip_threads_98596 = 1;
                
                while (slt32(skip_threads_98596, 32)) {
                    if (slt32(local_tid_96835, group_sizze_96800) &&
                        sle32(skip_threads_98596, local_tid_96835 -
                              squot32(local_tid_96835, 32) * 32)) {
                        // read operands
                        {
                            x_96824 = *(volatile __local
                                        int32_t *) &mem_97341[(local_tid_96835 -
                                                               skip_threads_98596) *
                                                              sizeof(int32_t)];
                        }
                        // perform operation
                        {
                            int32_t zz_96826 = x_96824 + y_96825;
                            
                            y_96825 = zz_96826;
                        }
                    }
                    if (sle32(wave_sizze_98585, skip_threads_98596)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (slt32(local_tid_96835, group_sizze_96800) &&
                        sle32(skip_threads_98596, local_tid_96835 -
                              squot32(local_tid_96835, 32) * 32)) {
                        // write result
                        {
                            *(volatile __local
                              int32_t *) &mem_97341[local_tid_96835 *
                                                    sizeof(int32_t)] = y_96825;
                        }
                    }
                    if (sle32(wave_sizze_98585, skip_threads_98596)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_98596 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_96835 - squot32(local_tid_96835, 32) * 32) ==
                    31 && slt32(local_tid_96835, group_sizze_96800)) {
                    *(volatile __local
                      int32_t *) &mem_97341[squot32(local_tid_96835, 32) *
                                            sizeof(int32_t)] = y_96825;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for warp 'i+1'
            {
                if (squot32(local_tid_96835, 32) == 0 && slt32(local_tid_96835,
                                                               group_sizze_96800)) {
                    y_98594 = *(volatile __local
                                int32_t *) &mem_97341[local_tid_96835 *
                                                      sizeof(int32_t)];
                }
                // in-block scan (hopefully no barriers needed)
                {
                    int32_t skip_threads_98597 = 1;
                    
                    while (slt32(skip_threads_98597, 32)) {
                        if ((squot32(local_tid_96835, 32) == 0 &&
                             slt32(local_tid_96835, group_sizze_96800)) &&
                            sle32(skip_threads_98597, local_tid_96835 -
                                  squot32(local_tid_96835, 32) * 32)) {
                            // read operands
                            {
                                x_98593 = *(volatile __local
                                            int32_t *) &mem_97341[(local_tid_96835 -
                                                                   skip_threads_98597) *
                                                                  sizeof(int32_t)];
                            }
                            // perform operation
                            {
                                int32_t zz_98595 = x_98593 + y_98594;
                                
                                y_98594 = zz_98595;
                            }
                        }
                        if (sle32(wave_sizze_98585, skip_threads_98597)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if ((squot32(local_tid_96835, 32) == 0 &&
                             slt32(local_tid_96835, group_sizze_96800)) &&
                            sle32(skip_threads_98597, local_tid_96835 -
                                  squot32(local_tid_96835, 32) * 32)) {
                            // write result
                            {
                                *(volatile __local
                                  int32_t *) &mem_97341[local_tid_96835 *
                                                        sizeof(int32_t)] =
                                    y_98594;
                            }
                        }
                        if (sle32(wave_sizze_98585, skip_threads_98597)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_98597 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_96835, 32) == 0 ||
                      !slt32(local_tid_96835, group_sizze_96800))) {
                    // read operands
                    {
                        x_96824 = *(volatile __local
                                    int32_t *) &mem_97341[(squot32(local_tid_96835,
                                                                   32) - 1) *
                                                          sizeof(int32_t)];
                    }
                    // perform operation
                    {
                        int32_t zz_96826 = x_96824 + y_96825;
                        
                        y_96825 = zz_96826;
                    }
                    // write final result
                    {
                        *(volatile __local
                          int32_t *) &mem_97341[local_tid_96835 *
                                                sizeof(int32_t)] = y_96825;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_96835, 32) == 0) {
                    *(volatile __local int32_t *) &mem_97341[local_tid_96835 *
                                                             sizeof(int32_t)] =
                        y_96825;
                }
            }
            if (cond_96847) {
                int32_t scanned_elem_96855 = *(__local
                                               int32_t *) &mem_97341[local_tid_96835 *
                                                                     4];
                
                *(__global int32_t *) &mem_97329[j_96846 * 4] =
                    scanned_elem_96855;
            }
            
            int32_t new_carry_96860;
            
            if (is_first_thread_96858) {
                int32_t carry_96859 = *(__local int32_t *) &mem_97341[y_96803 *
                                                                      4];
                
                new_carry_96860 = carry_96859;
            } else {
                new_carry_96860 = 0;
            }
            
            int32_t new_carry_sync_96861;
            
            new_carry_sync_96861 = new_carry_96860;
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int32_t x_merge_tmp_98590 = new_carry_sync_96861;
            
            x_merge_96840 = x_merge_tmp_98590;
        }
        result_96864 = x_merge_96840;
    }
    if (local_tid_96835 == 0) {
        *(__global int32_t *) &mem_97348[group_id_96836 * 4] = result_96864;
    }
}
__kernel void scan2_kernel_87741(__local volatile int64_t *mem_aligned_0,
                                 int32_t num_groups_86822, __global
                                 unsigned char *mem_97084, __global
                                 unsigned char *mem_97090)
{
    __local volatile char *restrict mem_97087 = mem_aligned_0;
    int32_t wave_sizze_97819;
    int32_t group_sizze_97820;
    char thread_active_97821;
    int32_t global_tid_87741;
    int32_t local_tid_87742;
    int32_t group_id_87743;
    
    global_tid_87741 = get_global_id(0);
    local_tid_87742 = get_local_id(0);
    group_sizze_97820 = get_local_size(0);
    wave_sizze_97819 = LOCKSTEP_WIDTH;
    group_id_87743 = get_group_id(0);
    thread_active_97821 = 1;
    if (slt32(local_tid_87742, num_groups_86822) && 1) {
        int32_t offsets_group_sums_elem_87744 = *(__global
                                                  int32_t *) &mem_97084[local_tid_87742 *
                                                                        4];
        
        *(__local int32_t *) &mem_97087[local_tid_87742 * 4] =
            offsets_group_sums_elem_87744;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t my_index_87736;
    int32_t other_index_87737;
    int32_t x_87738;
    int32_t y_87739;
    int32_t my_index_97822;
    int32_t other_index_97823;
    int32_t x_97824;
    int32_t y_97825;
    
    my_index_87736 = local_tid_87742;
    if (slt32(local_tid_87742, num_groups_86822)) {
        y_87739 = *(volatile __local int32_t *) &mem_97087[local_tid_87742 *
                                                           sizeof(int32_t)];
    }
    // in-block scan (hopefully no barriers needed)
    {
        int32_t skip_threads_97827 = 1;
        
        while (slt32(skip_threads_97827, 32)) {
            if (slt32(local_tid_87742, num_groups_86822) &&
                sle32(skip_threads_97827, local_tid_87742 -
                      squot32(local_tid_87742, 32) * 32)) {
                // read operands
                {
                    x_87738 = *(volatile __local
                                int32_t *) &mem_97087[(local_tid_87742 -
                                                       skip_threads_97827) *
                                                      sizeof(int32_t)];
                }
                // perform operation
                {
                    int32_t zz_87740;
                    
                    if (thread_active_97821) {
                        zz_87740 = x_87738 + y_87739;
                    }
                    y_87739 = zz_87740;
                }
            }
            if (sle32(wave_sizze_97819, skip_threads_97827)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (slt32(local_tid_87742, num_groups_86822) &&
                sle32(skip_threads_97827, local_tid_87742 -
                      squot32(local_tid_87742, 32) * 32)) {
                // write result
                {
                    *(volatile __local int32_t *) &mem_97087[local_tid_87742 *
                                                             sizeof(int32_t)] =
                        y_87739;
                }
            }
            if (sle32(wave_sizze_97819, skip_threads_97827)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_97827 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_87742 - squot32(local_tid_87742, 32) * 32) == 31 &&
            slt32(local_tid_87742, num_groups_86822)) {
            *(volatile __local int32_t *) &mem_97087[squot32(local_tid_87742,
                                                             32) *
                                                     sizeof(int32_t)] = y_87739;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for warp 'i+1'
    {
        if (squot32(local_tid_87742, 32) == 0 && slt32(local_tid_87742,
                                                       num_groups_86822)) {
            y_97825 = *(volatile __local int32_t *) &mem_97087[local_tid_87742 *
                                                               sizeof(int32_t)];
        }
        // in-block scan (hopefully no barriers needed)
        {
            int32_t skip_threads_97828 = 1;
            
            while (slt32(skip_threads_97828, 32)) {
                if ((squot32(local_tid_87742, 32) == 0 && slt32(local_tid_87742,
                                                                num_groups_86822)) &&
                    sle32(skip_threads_97828, local_tid_87742 -
                          squot32(local_tid_87742, 32) * 32)) {
                    // read operands
                    {
                        x_97824 = *(volatile __local
                                    int32_t *) &mem_97087[(local_tid_87742 -
                                                           skip_threads_97828) *
                                                          sizeof(int32_t)];
                    }
                    // perform operation
                    {
                        int32_t zz_97826;
                        
                        if (thread_active_97821) {
                            zz_97826 = x_97824 + y_97825;
                        }
                        y_97825 = zz_97826;
                    }
                }
                if (sle32(wave_sizze_97819, skip_threads_97828)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if ((squot32(local_tid_87742, 32) == 0 && slt32(local_tid_87742,
                                                                num_groups_86822)) &&
                    sle32(skip_threads_97828, local_tid_87742 -
                          squot32(local_tid_87742, 32) * 32)) {
                    // write result
                    {
                        *(volatile __local
                          int32_t *) &mem_97087[local_tid_87742 *
                                                sizeof(int32_t)] = y_97825;
                    }
                }
                if (sle32(wave_sizze_97819, skip_threads_97828)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_97828 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_87742, 32) == 0 || !slt32(local_tid_87742,
                                                          num_groups_86822))) {
            // read operands
            {
                x_87738 = *(volatile __local
                            int32_t *) &mem_97087[(squot32(local_tid_87742,
                                                           32) - 1) *
                                                  sizeof(int32_t)];
            }
            // perform operation
            {
                int32_t zz_87740;
                
                if (thread_active_97821) {
                    zz_87740 = x_87738 + y_87739;
                }
                y_87739 = zz_87740;
            }
            // write final result
            {
                *(volatile __local int32_t *) &mem_97087[local_tid_87742 *
                                                         sizeof(int32_t)] =
                    y_87739;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_87742, 32) == 0) {
            *(volatile __local int32_t *) &mem_97087[local_tid_87742 *
                                                     sizeof(int32_t)] = y_87739;
        }
    }
    
    int32_t scanned_elem_87747;
    
    if (thread_active_97821) {
        scanned_elem_87747 = *(__local int32_t *) &mem_97087[local_tid_87742 *
                                                             4];
    }
    *(__global int32_t *) &mem_97090[global_tid_87741 * 4] = scanned_elem_87747;
}
__kernel void scan2_kernel_88674(__local volatile int64_t *mem_aligned_0,
                                 int32_t num_groups_88620, __global
                                 unsigned char *mem_97328, __global
                                 unsigned char *mem_97334)
{
    __local volatile char *restrict mem_97331 = mem_aligned_0;
    int32_t wave_sizze_97922;
    int32_t group_sizze_97923;
    char thread_active_97924;
    int32_t global_tid_88674;
    int32_t local_tid_88675;
    int32_t group_id_88676;
    
    global_tid_88674 = get_global_id(0);
    local_tid_88675 = get_local_id(0);
    group_sizze_97923 = get_local_size(0);
    wave_sizze_97922 = LOCKSTEP_WIDTH;
    group_id_88676 = get_group_id(0);
    thread_active_97924 = 1;
    if (slt32(local_tid_88675, num_groups_88620) && 1) {
        int32_t res_group_sums_elem_88677 = *(__global
                                              int32_t *) &mem_97328[local_tid_88675 *
                                                                    4];
        
        *(__local int32_t *) &mem_97331[local_tid_88675 * 4] =
            res_group_sums_elem_88677;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t my_index_88669;
    int32_t other_index_88670;
    int32_t x_88671;
    int32_t x_88672;
    int32_t my_index_97925;
    int32_t other_index_97926;
    int32_t x_97927;
    int32_t x_97928;
    
    my_index_88669 = local_tid_88675;
    if (slt32(local_tid_88675, num_groups_88620)) {
        x_88672 = *(volatile __local int32_t *) &mem_97331[local_tid_88675 *
                                                           sizeof(int32_t)];
    }
    // in-block scan (hopefully no barriers needed)
    {
        int32_t skip_threads_97930 = 1;
        
        while (slt32(skip_threads_97930, 32)) {
            if (slt32(local_tid_88675, num_groups_88620) &&
                sle32(skip_threads_97930, local_tid_88675 -
                      squot32(local_tid_88675, 32) * 32)) {
                // read operands
                {
                    x_88671 = *(volatile __local
                                int32_t *) &mem_97331[(local_tid_88675 -
                                                       skip_threads_97930) *
                                                      sizeof(int32_t)];
                }
                // perform operation
                {
                    int32_t res_88673;
                    
                    if (thread_active_97924) {
                        res_88673 = x_88671 + x_88672;
                    }
                    x_88672 = res_88673;
                }
            }
            if (sle32(wave_sizze_97922, skip_threads_97930)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (slt32(local_tid_88675, num_groups_88620) &&
                sle32(skip_threads_97930, local_tid_88675 -
                      squot32(local_tid_88675, 32) * 32)) {
                // write result
                {
                    *(volatile __local int32_t *) &mem_97331[local_tid_88675 *
                                                             sizeof(int32_t)] =
                        x_88672;
                }
            }
            if (sle32(wave_sizze_97922, skip_threads_97930)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_97930 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_88675 - squot32(local_tid_88675, 32) * 32) == 31 &&
            slt32(local_tid_88675, num_groups_88620)) {
            *(volatile __local int32_t *) &mem_97331[squot32(local_tid_88675,
                                                             32) *
                                                     sizeof(int32_t)] = x_88672;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for warp 'i+1'
    {
        if (squot32(local_tid_88675, 32) == 0 && slt32(local_tid_88675,
                                                       num_groups_88620)) {
            x_97928 = *(volatile __local int32_t *) &mem_97331[local_tid_88675 *
                                                               sizeof(int32_t)];
        }
        // in-block scan (hopefully no barriers needed)
        {
            int32_t skip_threads_97931 = 1;
            
            while (slt32(skip_threads_97931, 32)) {
                if ((squot32(local_tid_88675, 32) == 0 && slt32(local_tid_88675,
                                                                num_groups_88620)) &&
                    sle32(skip_threads_97931, local_tid_88675 -
                          squot32(local_tid_88675, 32) * 32)) {
                    // read operands
                    {
                        x_97927 = *(volatile __local
                                    int32_t *) &mem_97331[(local_tid_88675 -
                                                           skip_threads_97931) *
                                                          sizeof(int32_t)];
                    }
                    // perform operation
                    {
                        int32_t res_97929;
                        
                        if (thread_active_97924) {
                            res_97929 = x_97927 + x_97928;
                        }
                        x_97928 = res_97929;
                    }
                }
                if (sle32(wave_sizze_97922, skip_threads_97931)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if ((squot32(local_tid_88675, 32) == 0 && slt32(local_tid_88675,
                                                                num_groups_88620)) &&
                    sle32(skip_threads_97931, local_tid_88675 -
                          squot32(local_tid_88675, 32) * 32)) {
                    // write result
                    {
                        *(volatile __local
                          int32_t *) &mem_97331[local_tid_88675 *
                                                sizeof(int32_t)] = x_97928;
                    }
                }
                if (sle32(wave_sizze_97922, skip_threads_97931)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_97931 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_88675, 32) == 0 || !slt32(local_tid_88675,
                                                          num_groups_88620))) {
            // read operands
            {
                x_88671 = *(volatile __local
                            int32_t *) &mem_97331[(squot32(local_tid_88675,
                                                           32) - 1) *
                                                  sizeof(int32_t)];
            }
            // perform operation
            {
                int32_t res_88673;
                
                if (thread_active_97924) {
                    res_88673 = x_88671 + x_88672;
                }
                x_88672 = res_88673;
            }
            // write final result
            {
                *(volatile __local int32_t *) &mem_97331[local_tid_88675 *
                                                         sizeof(int32_t)] =
                    x_88672;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_88675, 32) == 0) {
            *(volatile __local int32_t *) &mem_97331[local_tid_88675 *
                                                     sizeof(int32_t)] = x_88672;
        }
    }
    
    int32_t scanned_elem_88680;
    
    if (thread_active_97924) {
        scanned_elem_88680 = *(__local int32_t *) &mem_97331[local_tid_88675 *
                                                             4];
    }
    *(__global int32_t *) &mem_97334[global_tid_88674 * 4] = scanned_elem_88680;
}
__kernel void scan2_kernel_88796(__local volatile int64_t *mem_aligned_0,
                                 int32_t num_groups_88733, __global
                                 unsigned char *mem_97371, __global
                                 unsigned char *mem_97377)
{
    __local volatile char *restrict mem_97374 = mem_aligned_0;
    int32_t wave_sizze_97952;
    int32_t group_sizze_97953;
    char thread_active_97954;
    int32_t global_tid_88796;
    int32_t local_tid_88797;
    int32_t group_id_88798;
    
    global_tid_88796 = get_global_id(0);
    local_tid_88797 = get_local_id(0);
    group_sizze_97953 = get_local_size(0);
    wave_sizze_97952 = LOCKSTEP_WIDTH;
    group_id_88798 = get_group_id(0);
    thread_active_97954 = 1;
    if (slt32(local_tid_88797, num_groups_88733) && 1) {
        int32_t offsets_group_sums_elem_88799 = *(__global
                                                  int32_t *) &mem_97371[local_tid_88797 *
                                                                        4];
        
        *(__local int32_t *) &mem_97374[local_tid_88797 * 4] =
            offsets_group_sums_elem_88799;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t my_index_88791;
    int32_t other_index_88792;
    int32_t x_88793;
    int32_t y_88794;
    int32_t my_index_97955;
    int32_t other_index_97956;
    int32_t x_97957;
    int32_t y_97958;
    
    my_index_88791 = local_tid_88797;
    if (slt32(local_tid_88797, num_groups_88733)) {
        y_88794 = *(volatile __local int32_t *) &mem_97374[local_tid_88797 *
                                                           sizeof(int32_t)];
    }
    // in-block scan (hopefully no barriers needed)
    {
        int32_t skip_threads_97960 = 1;
        
        while (slt32(skip_threads_97960, 32)) {
            if (slt32(local_tid_88797, num_groups_88733) &&
                sle32(skip_threads_97960, local_tid_88797 -
                      squot32(local_tid_88797, 32) * 32)) {
                // read operands
                {
                    x_88793 = *(volatile __local
                                int32_t *) &mem_97374[(local_tid_88797 -
                                                       skip_threads_97960) *
                                                      sizeof(int32_t)];
                }
                // perform operation
                {
                    int32_t zz_88795;
                    
                    if (thread_active_97954) {
                        zz_88795 = x_88793 + y_88794;
                    }
                    y_88794 = zz_88795;
                }
            }
            if (sle32(wave_sizze_97952, skip_threads_97960)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (slt32(local_tid_88797, num_groups_88733) &&
                sle32(skip_threads_97960, local_tid_88797 -
                      squot32(local_tid_88797, 32) * 32)) {
                // write result
                {
                    *(volatile __local int32_t *) &mem_97374[local_tid_88797 *
                                                             sizeof(int32_t)] =
                        y_88794;
                }
            }
            if (sle32(wave_sizze_97952, skip_threads_97960)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_97960 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_88797 - squot32(local_tid_88797, 32) * 32) == 31 &&
            slt32(local_tid_88797, num_groups_88733)) {
            *(volatile __local int32_t *) &mem_97374[squot32(local_tid_88797,
                                                             32) *
                                                     sizeof(int32_t)] = y_88794;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for warp 'i+1'
    {
        if (squot32(local_tid_88797, 32) == 0 && slt32(local_tid_88797,
                                                       num_groups_88733)) {
            y_97958 = *(volatile __local int32_t *) &mem_97374[local_tid_88797 *
                                                               sizeof(int32_t)];
        }
        // in-block scan (hopefully no barriers needed)
        {
            int32_t skip_threads_97961 = 1;
            
            while (slt32(skip_threads_97961, 32)) {
                if ((squot32(local_tid_88797, 32) == 0 && slt32(local_tid_88797,
                                                                num_groups_88733)) &&
                    sle32(skip_threads_97961, local_tid_88797 -
                          squot32(local_tid_88797, 32) * 32)) {
                    // read operands
                    {
                        x_97957 = *(volatile __local
                                    int32_t *) &mem_97374[(local_tid_88797 -
                                                           skip_threads_97961) *
                                                          sizeof(int32_t)];
                    }
                    // perform operation
                    {
                        int32_t zz_97959;
                        
                        if (thread_active_97954) {
                            zz_97959 = x_97957 + y_97958;
                        }
                        y_97958 = zz_97959;
                    }
                }
                if (sle32(wave_sizze_97952, skip_threads_97961)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if ((squot32(local_tid_88797, 32) == 0 && slt32(local_tid_88797,
                                                                num_groups_88733)) &&
                    sle32(skip_threads_97961, local_tid_88797 -
                          squot32(local_tid_88797, 32) * 32)) {
                    // write result
                    {
                        *(volatile __local
                          int32_t *) &mem_97374[local_tid_88797 *
                                                sizeof(int32_t)] = y_97958;
                    }
                }
                if (sle32(wave_sizze_97952, skip_threads_97961)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_97961 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_88797, 32) == 0 || !slt32(local_tid_88797,
                                                          num_groups_88733))) {
            // read operands
            {
                x_88793 = *(volatile __local
                            int32_t *) &mem_97374[(squot32(local_tid_88797,
                                                           32) - 1) *
                                                  sizeof(int32_t)];
            }
            // perform operation
            {
                int32_t zz_88795;
                
                if (thread_active_97954) {
                    zz_88795 = x_88793 + y_88794;
                }
                y_88794 = zz_88795;
            }
            // write final result
            {
                *(volatile __local int32_t *) &mem_97374[local_tid_88797 *
                                                         sizeof(int32_t)] =
                    y_88794;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_88797, 32) == 0) {
            *(volatile __local int32_t *) &mem_97374[local_tid_88797 *
                                                     sizeof(int32_t)] = y_88794;
        }
    }
    
    int32_t scanned_elem_88802;
    
    if (thread_active_97954) {
        scanned_elem_88802 = *(__local int32_t *) &mem_97374[local_tid_88797 *
                                                             4];
    }
    *(__global int32_t *) &mem_97377[global_tid_88796 * 4] = scanned_elem_88802;
}
__kernel void scan2_kernel_89764(__local volatile int64_t *mem_aligned_0,
                                 int32_t num_groups_88845, __global
                                 unsigned char *mem_97440, __global
                                 unsigned char *mem_97446)
{
    __local volatile char *restrict mem_97443 = mem_aligned_0;
    int32_t wave_sizze_97987;
    int32_t group_sizze_97988;
    char thread_active_97989;
    int32_t global_tid_89764;
    int32_t local_tid_89765;
    int32_t group_id_89766;
    
    global_tid_89764 = get_global_id(0);
    local_tid_89765 = get_local_id(0);
    group_sizze_97988 = get_local_size(0);
    wave_sizze_97987 = LOCKSTEP_WIDTH;
    group_id_89766 = get_group_id(0);
    thread_active_97989 = 1;
    if (slt32(local_tid_89765, num_groups_88845) && 1) {
        int32_t offsets_group_sums_elem_89767 = *(__global
                                                  int32_t *) &mem_97440[local_tid_89765 *
                                                                        4];
        
        *(__local int32_t *) &mem_97443[local_tid_89765 * 4] =
            offsets_group_sums_elem_89767;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t my_index_89759;
    int32_t other_index_89760;
    int32_t x_89761;
    int32_t y_89762;
    int32_t my_index_97990;
    int32_t other_index_97991;
    int32_t x_97992;
    int32_t y_97993;
    
    my_index_89759 = local_tid_89765;
    if (slt32(local_tid_89765, num_groups_88845)) {
        y_89762 = *(volatile __local int32_t *) &mem_97443[local_tid_89765 *
                                                           sizeof(int32_t)];
    }
    // in-block scan (hopefully no barriers needed)
    {
        int32_t skip_threads_97995 = 1;
        
        while (slt32(skip_threads_97995, 32)) {
            if (slt32(local_tid_89765, num_groups_88845) &&
                sle32(skip_threads_97995, local_tid_89765 -
                      squot32(local_tid_89765, 32) * 32)) {
                // read operands
                {
                    x_89761 = *(volatile __local
                                int32_t *) &mem_97443[(local_tid_89765 -
                                                       skip_threads_97995) *
                                                      sizeof(int32_t)];
                }
                // perform operation
                {
                    int32_t zz_89763;
                    
                    if (thread_active_97989) {
                        zz_89763 = x_89761 + y_89762;
                    }
                    y_89762 = zz_89763;
                }
            }
            if (sle32(wave_sizze_97987, skip_threads_97995)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (slt32(local_tid_89765, num_groups_88845) &&
                sle32(skip_threads_97995, local_tid_89765 -
                      squot32(local_tid_89765, 32) * 32)) {
                // write result
                {
                    *(volatile __local int32_t *) &mem_97443[local_tid_89765 *
                                                             sizeof(int32_t)] =
                        y_89762;
                }
            }
            if (sle32(wave_sizze_97987, skip_threads_97995)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_97995 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_89765 - squot32(local_tid_89765, 32) * 32) == 31 &&
            slt32(local_tid_89765, num_groups_88845)) {
            *(volatile __local int32_t *) &mem_97443[squot32(local_tid_89765,
                                                             32) *
                                                     sizeof(int32_t)] = y_89762;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for warp 'i+1'
    {
        if (squot32(local_tid_89765, 32) == 0 && slt32(local_tid_89765,
                                                       num_groups_88845)) {
            y_97993 = *(volatile __local int32_t *) &mem_97443[local_tid_89765 *
                                                               sizeof(int32_t)];
        }
        // in-block scan (hopefully no barriers needed)
        {
            int32_t skip_threads_97996 = 1;
            
            while (slt32(skip_threads_97996, 32)) {
                if ((squot32(local_tid_89765, 32) == 0 && slt32(local_tid_89765,
                                                                num_groups_88845)) &&
                    sle32(skip_threads_97996, local_tid_89765 -
                          squot32(local_tid_89765, 32) * 32)) {
                    // read operands
                    {
                        x_97992 = *(volatile __local
                                    int32_t *) &mem_97443[(local_tid_89765 -
                                                           skip_threads_97996) *
                                                          sizeof(int32_t)];
                    }
                    // perform operation
                    {
                        int32_t zz_97994;
                        
                        if (thread_active_97989) {
                            zz_97994 = x_97992 + y_97993;
                        }
                        y_97993 = zz_97994;
                    }
                }
                if (sle32(wave_sizze_97987, skip_threads_97996)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if ((squot32(local_tid_89765, 32) == 0 && slt32(local_tid_89765,
                                                                num_groups_88845)) &&
                    sle32(skip_threads_97996, local_tid_89765 -
                          squot32(local_tid_89765, 32) * 32)) {
                    // write result
                    {
                        *(volatile __local
                          int32_t *) &mem_97443[local_tid_89765 *
                                                sizeof(int32_t)] = y_97993;
                    }
                }
                if (sle32(wave_sizze_97987, skip_threads_97996)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_97996 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_89765, 32) == 0 || !slt32(local_tid_89765,
                                                          num_groups_88845))) {
            // read operands
            {
                x_89761 = *(volatile __local
                            int32_t *) &mem_97443[(squot32(local_tid_89765,
                                                           32) - 1) *
                                                  sizeof(int32_t)];
            }
            // perform operation
            {
                int32_t zz_89763;
                
                if (thread_active_97989) {
                    zz_89763 = x_89761 + y_89762;
                }
                y_89762 = zz_89763;
            }
            // write final result
            {
                *(volatile __local int32_t *) &mem_97443[local_tid_89765 *
                                                         sizeof(int32_t)] =
                    y_89762;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_89765, 32) == 0) {
            *(volatile __local int32_t *) &mem_97443[local_tid_89765 *
                                                     sizeof(int32_t)] = y_89762;
        }
    }
    
    int32_t scanned_elem_89770;
    
    if (thread_active_97989) {
        scanned_elem_89770 = *(__local int32_t *) &mem_97443[local_tid_89765 *
                                                             4];
    }
    *(__global int32_t *) &mem_97446[global_tid_89764 * 4] = scanned_elem_89770;
}
__kernel void scan2_kernel_90689(__local volatile int64_t *mem_aligned_0,
                                 int32_t num_groups_90626, __global
                                 unsigned char *mem_97704, __global
                                 unsigned char *mem_97710)
{
    __local volatile char *restrict mem_97707 = mem_aligned_0;
    int32_t wave_sizze_98083;
    int32_t group_sizze_98084;
    char thread_active_98085;
    int32_t global_tid_90689;
    int32_t local_tid_90690;
    int32_t group_id_90691;
    
    global_tid_90689 = get_global_id(0);
    local_tid_90690 = get_local_id(0);
    group_sizze_98084 = get_local_size(0);
    wave_sizze_98083 = LOCKSTEP_WIDTH;
    group_id_90691 = get_group_id(0);
    thread_active_98085 = 1;
    if (slt32(local_tid_90690, num_groups_90626) && 1) {
        int32_t offsets_group_sums_elem_90692 = *(__global
                                                  int32_t *) &mem_97704[local_tid_90690 *
                                                                        4];
        
        *(__local int32_t *) &mem_97707[local_tid_90690 * 4] =
            offsets_group_sums_elem_90692;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t my_index_90684;
    int32_t other_index_90685;
    int32_t x_90686;
    int32_t y_90687;
    int32_t my_index_98086;
    int32_t other_index_98087;
    int32_t x_98088;
    int32_t y_98089;
    
    my_index_90684 = local_tid_90690;
    if (slt32(local_tid_90690, num_groups_90626)) {
        y_90687 = *(volatile __local int32_t *) &mem_97707[local_tid_90690 *
                                                           sizeof(int32_t)];
    }
    // in-block scan (hopefully no barriers needed)
    {
        int32_t skip_threads_98091 = 1;
        
        while (slt32(skip_threads_98091, 32)) {
            if (slt32(local_tid_90690, num_groups_90626) &&
                sle32(skip_threads_98091, local_tid_90690 -
                      squot32(local_tid_90690, 32) * 32)) {
                // read operands
                {
                    x_90686 = *(volatile __local
                                int32_t *) &mem_97707[(local_tid_90690 -
                                                       skip_threads_98091) *
                                                      sizeof(int32_t)];
                }
                // perform operation
                {
                    int32_t zz_90688;
                    
                    if (thread_active_98085) {
                        zz_90688 = x_90686 + y_90687;
                    }
                    y_90687 = zz_90688;
                }
            }
            if (sle32(wave_sizze_98083, skip_threads_98091)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (slt32(local_tid_90690, num_groups_90626) &&
                sle32(skip_threads_98091, local_tid_90690 -
                      squot32(local_tid_90690, 32) * 32)) {
                // write result
                {
                    *(volatile __local int32_t *) &mem_97707[local_tid_90690 *
                                                             sizeof(int32_t)] =
                        y_90687;
                }
            }
            if (sle32(wave_sizze_98083, skip_threads_98091)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_98091 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_90690 - squot32(local_tid_90690, 32) * 32) == 31 &&
            slt32(local_tid_90690, num_groups_90626)) {
            *(volatile __local int32_t *) &mem_97707[squot32(local_tid_90690,
                                                             32) *
                                                     sizeof(int32_t)] = y_90687;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for warp 'i+1'
    {
        if (squot32(local_tid_90690, 32) == 0 && slt32(local_tid_90690,
                                                       num_groups_90626)) {
            y_98089 = *(volatile __local int32_t *) &mem_97707[local_tid_90690 *
                                                               sizeof(int32_t)];
        }
        // in-block scan (hopefully no barriers needed)
        {
            int32_t skip_threads_98092 = 1;
            
            while (slt32(skip_threads_98092, 32)) {
                if ((squot32(local_tid_90690, 32) == 0 && slt32(local_tid_90690,
                                                                num_groups_90626)) &&
                    sle32(skip_threads_98092, local_tid_90690 -
                          squot32(local_tid_90690, 32) * 32)) {
                    // read operands
                    {
                        x_98088 = *(volatile __local
                                    int32_t *) &mem_97707[(local_tid_90690 -
                                                           skip_threads_98092) *
                                                          sizeof(int32_t)];
                    }
                    // perform operation
                    {
                        int32_t zz_98090;
                        
                        if (thread_active_98085) {
                            zz_98090 = x_98088 + y_98089;
                        }
                        y_98089 = zz_98090;
                    }
                }
                if (sle32(wave_sizze_98083, skip_threads_98092)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if ((squot32(local_tid_90690, 32) == 0 && slt32(local_tid_90690,
                                                                num_groups_90626)) &&
                    sle32(skip_threads_98092, local_tid_90690 -
                          squot32(local_tid_90690, 32) * 32)) {
                    // write result
                    {
                        *(volatile __local
                          int32_t *) &mem_97707[local_tid_90690 *
                                                sizeof(int32_t)] = y_98089;
                    }
                }
                if (sle32(wave_sizze_98083, skip_threads_98092)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_98092 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_90690, 32) == 0 || !slt32(local_tid_90690,
                                                          num_groups_90626))) {
            // read operands
            {
                x_90686 = *(volatile __local
                            int32_t *) &mem_97707[(squot32(local_tid_90690,
                                                           32) - 1) *
                                                  sizeof(int32_t)];
            }
            // perform operation
            {
                int32_t zz_90688;
                
                if (thread_active_98085) {
                    zz_90688 = x_90686 + y_90687;
                }
                y_90687 = zz_90688;
            }
            // write final result
            {
                *(volatile __local int32_t *) &mem_97707[local_tid_90690 *
                                                         sizeof(int32_t)] =
                    y_90687;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_90690, 32) == 0) {
            *(volatile __local int32_t *) &mem_97707[local_tid_90690 *
                                                     sizeof(int32_t)] = y_90687;
        }
    }
    
    int32_t scanned_elem_90695;
    
    if (thread_active_98085) {
        scanned_elem_90695 = *(__local int32_t *) &mem_97707[local_tid_90690 *
                                                             4];
    }
    *(__global int32_t *) &mem_97710[global_tid_90689 * 4] = scanned_elem_90695;
}
__kernel void scan2_kernel_91781(__local volatile int64_t *mem_aligned_0,
                                 int32_t num_groups_90862, __global
                                 unsigned char *mem_97096, __global
                                 unsigned char *mem_97102)
{
    __local volatile char *restrict mem_97099 = mem_aligned_0;
    int32_t wave_sizze_98155;
    int32_t group_sizze_98156;
    char thread_active_98157;
    int32_t global_tid_91781;
    int32_t local_tid_91782;
    int32_t group_id_91783;
    
    global_tid_91781 = get_global_id(0);
    local_tid_91782 = get_local_id(0);
    group_sizze_98156 = get_local_size(0);
    wave_sizze_98155 = LOCKSTEP_WIDTH;
    group_id_91783 = get_group_id(0);
    thread_active_98157 = 1;
    if (slt32(local_tid_91782, num_groups_90862) && 1) {
        int32_t offsets_group_sums_elem_91784 = *(__global
                                                  int32_t *) &mem_97096[local_tid_91782 *
                                                                        4];
        
        *(__local int32_t *) &mem_97099[local_tid_91782 * 4] =
            offsets_group_sums_elem_91784;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t my_index_91776;
    int32_t other_index_91777;
    int32_t x_91778;
    int32_t y_91779;
    int32_t my_index_98158;
    int32_t other_index_98159;
    int32_t x_98160;
    int32_t y_98161;
    
    my_index_91776 = local_tid_91782;
    if (slt32(local_tid_91782, num_groups_90862)) {
        y_91779 = *(volatile __local int32_t *) &mem_97099[local_tid_91782 *
                                                           sizeof(int32_t)];
    }
    // in-block scan (hopefully no barriers needed)
    {
        int32_t skip_threads_98163 = 1;
        
        while (slt32(skip_threads_98163, 32)) {
            if (slt32(local_tid_91782, num_groups_90862) &&
                sle32(skip_threads_98163, local_tid_91782 -
                      squot32(local_tid_91782, 32) * 32)) {
                // read operands
                {
                    x_91778 = *(volatile __local
                                int32_t *) &mem_97099[(local_tid_91782 -
                                                       skip_threads_98163) *
                                                      sizeof(int32_t)];
                }
                // perform operation
                {
                    int32_t zz_91780;
                    
                    if (thread_active_98157) {
                        zz_91780 = x_91778 + y_91779;
                    }
                    y_91779 = zz_91780;
                }
            }
            if (sle32(wave_sizze_98155, skip_threads_98163)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (slt32(local_tid_91782, num_groups_90862) &&
                sle32(skip_threads_98163, local_tid_91782 -
                      squot32(local_tid_91782, 32) * 32)) {
                // write result
                {
                    *(volatile __local int32_t *) &mem_97099[local_tid_91782 *
                                                             sizeof(int32_t)] =
                        y_91779;
                }
            }
            if (sle32(wave_sizze_98155, skip_threads_98163)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_98163 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_91782 - squot32(local_tid_91782, 32) * 32) == 31 &&
            slt32(local_tid_91782, num_groups_90862)) {
            *(volatile __local int32_t *) &mem_97099[squot32(local_tid_91782,
                                                             32) *
                                                     sizeof(int32_t)] = y_91779;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for warp 'i+1'
    {
        if (squot32(local_tid_91782, 32) == 0 && slt32(local_tid_91782,
                                                       num_groups_90862)) {
            y_98161 = *(volatile __local int32_t *) &mem_97099[local_tid_91782 *
                                                               sizeof(int32_t)];
        }
        // in-block scan (hopefully no barriers needed)
        {
            int32_t skip_threads_98164 = 1;
            
            while (slt32(skip_threads_98164, 32)) {
                if ((squot32(local_tid_91782, 32) == 0 && slt32(local_tid_91782,
                                                                num_groups_90862)) &&
                    sle32(skip_threads_98164, local_tid_91782 -
                          squot32(local_tid_91782, 32) * 32)) {
                    // read operands
                    {
                        x_98160 = *(volatile __local
                                    int32_t *) &mem_97099[(local_tid_91782 -
                                                           skip_threads_98164) *
                                                          sizeof(int32_t)];
                    }
                    // perform operation
                    {
                        int32_t zz_98162;
                        
                        if (thread_active_98157) {
                            zz_98162 = x_98160 + y_98161;
                        }
                        y_98161 = zz_98162;
                    }
                }
                if (sle32(wave_sizze_98155, skip_threads_98164)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if ((squot32(local_tid_91782, 32) == 0 && slt32(local_tid_91782,
                                                                num_groups_90862)) &&
                    sle32(skip_threads_98164, local_tid_91782 -
                          squot32(local_tid_91782, 32) * 32)) {
                    // write result
                    {
                        *(volatile __local
                          int32_t *) &mem_97099[local_tid_91782 *
                                                sizeof(int32_t)] = y_98161;
                    }
                }
                if (sle32(wave_sizze_98155, skip_threads_98164)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_98164 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_91782, 32) == 0 || !slt32(local_tid_91782,
                                                          num_groups_90862))) {
            // read operands
            {
                x_91778 = *(volatile __local
                            int32_t *) &mem_97099[(squot32(local_tid_91782,
                                                           32) - 1) *
                                                  sizeof(int32_t)];
            }
            // perform operation
            {
                int32_t zz_91780;
                
                if (thread_active_98157) {
                    zz_91780 = x_91778 + y_91779;
                }
                y_91779 = zz_91780;
            }
            // write final result
            {
                *(volatile __local int32_t *) &mem_97099[local_tid_91782 *
                                                         sizeof(int32_t)] =
                    y_91779;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_91782, 32) == 0) {
            *(volatile __local int32_t *) &mem_97099[local_tid_91782 *
                                                     sizeof(int32_t)] = y_91779;
        }
    }
    
    int32_t scanned_elem_91787;
    
    if (thread_active_98157) {
        scanned_elem_91787 = *(__local int32_t *) &mem_97099[local_tid_91782 *
                                                             4];
    }
    *(__global int32_t *) &mem_97102[global_tid_91781 * 4] = scanned_elem_91787;
}
__kernel void scan2_kernel_92706(__local volatile int64_t *mem_aligned_0,
                                 int32_t num_groups_92643, __global
                                 unsigned char *mem_97360, __global
                                 unsigned char *mem_97366)
{
    __local volatile char *restrict mem_97363 = mem_aligned_0;
    int32_t wave_sizze_98251;
    int32_t group_sizze_98252;
    char thread_active_98253;
    int32_t global_tid_92706;
    int32_t local_tid_92707;
    int32_t group_id_92708;
    
    global_tid_92706 = get_global_id(0);
    local_tid_92707 = get_local_id(0);
    group_sizze_98252 = get_local_size(0);
    wave_sizze_98251 = LOCKSTEP_WIDTH;
    group_id_92708 = get_group_id(0);
    thread_active_98253 = 1;
    if (slt32(local_tid_92707, num_groups_92643) && 1) {
        int32_t offsets_group_sums_elem_92709 = *(__global
                                                  int32_t *) &mem_97360[local_tid_92707 *
                                                                        4];
        
        *(__local int32_t *) &mem_97363[local_tid_92707 * 4] =
            offsets_group_sums_elem_92709;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t my_index_92701;
    int32_t other_index_92702;
    int32_t x_92703;
    int32_t y_92704;
    int32_t my_index_98254;
    int32_t other_index_98255;
    int32_t x_98256;
    int32_t y_98257;
    
    my_index_92701 = local_tid_92707;
    if (slt32(local_tid_92707, num_groups_92643)) {
        y_92704 = *(volatile __local int32_t *) &mem_97363[local_tid_92707 *
                                                           sizeof(int32_t)];
    }
    // in-block scan (hopefully no barriers needed)
    {
        int32_t skip_threads_98259 = 1;
        
        while (slt32(skip_threads_98259, 32)) {
            if (slt32(local_tid_92707, num_groups_92643) &&
                sle32(skip_threads_98259, local_tid_92707 -
                      squot32(local_tid_92707, 32) * 32)) {
                // read operands
                {
                    x_92703 = *(volatile __local
                                int32_t *) &mem_97363[(local_tid_92707 -
                                                       skip_threads_98259) *
                                                      sizeof(int32_t)];
                }
                // perform operation
                {
                    int32_t zz_92705;
                    
                    if (thread_active_98253) {
                        zz_92705 = x_92703 + y_92704;
                    }
                    y_92704 = zz_92705;
                }
            }
            if (sle32(wave_sizze_98251, skip_threads_98259)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (slt32(local_tid_92707, num_groups_92643) &&
                sle32(skip_threads_98259, local_tid_92707 -
                      squot32(local_tid_92707, 32) * 32)) {
                // write result
                {
                    *(volatile __local int32_t *) &mem_97363[local_tid_92707 *
                                                             sizeof(int32_t)] =
                        y_92704;
                }
            }
            if (sle32(wave_sizze_98251, skip_threads_98259)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_98259 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_92707 - squot32(local_tid_92707, 32) * 32) == 31 &&
            slt32(local_tid_92707, num_groups_92643)) {
            *(volatile __local int32_t *) &mem_97363[squot32(local_tid_92707,
                                                             32) *
                                                     sizeof(int32_t)] = y_92704;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for warp 'i+1'
    {
        if (squot32(local_tid_92707, 32) == 0 && slt32(local_tid_92707,
                                                       num_groups_92643)) {
            y_98257 = *(volatile __local int32_t *) &mem_97363[local_tid_92707 *
                                                               sizeof(int32_t)];
        }
        // in-block scan (hopefully no barriers needed)
        {
            int32_t skip_threads_98260 = 1;
            
            while (slt32(skip_threads_98260, 32)) {
                if ((squot32(local_tid_92707, 32) == 0 && slt32(local_tid_92707,
                                                                num_groups_92643)) &&
                    sle32(skip_threads_98260, local_tid_92707 -
                          squot32(local_tid_92707, 32) * 32)) {
                    // read operands
                    {
                        x_98256 = *(volatile __local
                                    int32_t *) &mem_97363[(local_tid_92707 -
                                                           skip_threads_98260) *
                                                          sizeof(int32_t)];
                    }
                    // perform operation
                    {
                        int32_t zz_98258;
                        
                        if (thread_active_98253) {
                            zz_98258 = x_98256 + y_98257;
                        }
                        y_98257 = zz_98258;
                    }
                }
                if (sle32(wave_sizze_98251, skip_threads_98260)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if ((squot32(local_tid_92707, 32) == 0 && slt32(local_tid_92707,
                                                                num_groups_92643)) &&
                    sle32(skip_threads_98260, local_tid_92707 -
                          squot32(local_tid_92707, 32) * 32)) {
                    // write result
                    {
                        *(volatile __local
                          int32_t *) &mem_97363[local_tid_92707 *
                                                sizeof(int32_t)] = y_98257;
                    }
                }
                if (sle32(wave_sizze_98251, skip_threads_98260)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_98260 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_92707, 32) == 0 || !slt32(local_tid_92707,
                                                          num_groups_92643))) {
            // read operands
            {
                x_92703 = *(volatile __local
                            int32_t *) &mem_97363[(squot32(local_tid_92707,
                                                           32) - 1) *
                                                  sizeof(int32_t)];
            }
            // perform operation
            {
                int32_t zz_92705;
                
                if (thread_active_98253) {
                    zz_92705 = x_92703 + y_92704;
                }
                y_92704 = zz_92705;
            }
            // write final result
            {
                *(volatile __local int32_t *) &mem_97363[local_tid_92707 *
                                                         sizeof(int32_t)] =
                    y_92704;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_92707, 32) == 0) {
            *(volatile __local int32_t *) &mem_97363[local_tid_92707 *
                                                     sizeof(int32_t)] = y_92704;
        }
    }
    
    int32_t scanned_elem_92712;
    
    if (thread_active_98253) {
        scanned_elem_92712 = *(__local int32_t *) &mem_97363[local_tid_92707 *
                                                             4];
    }
    *(__global int32_t *) &mem_97366[global_tid_92706 * 4] = scanned_elem_92712;
}
__kernel void scan2_kernel_93798(__local volatile int64_t *mem_aligned_0,
                                 int32_t num_groups_92879, __global
                                 unsigned char *mem_97084, __global
                                 unsigned char *mem_97090)
{
    __local volatile char *restrict mem_97087 = mem_aligned_0;
    int32_t wave_sizze_98312;
    int32_t group_sizze_98313;
    char thread_active_98314;
    int32_t global_tid_93798;
    int32_t local_tid_93799;
    int32_t group_id_93800;
    
    global_tid_93798 = get_global_id(0);
    local_tid_93799 = get_local_id(0);
    group_sizze_98313 = get_local_size(0);
    wave_sizze_98312 = LOCKSTEP_WIDTH;
    group_id_93800 = get_group_id(0);
    thread_active_98314 = 1;
    if (slt32(local_tid_93799, num_groups_92879) && 1) {
        int32_t offsets_group_sums_elem_93801 = *(__global
                                                  int32_t *) &mem_97084[local_tid_93799 *
                                                                        4];
        
        *(__local int32_t *) &mem_97087[local_tid_93799 * 4] =
            offsets_group_sums_elem_93801;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t my_index_93793;
    int32_t other_index_93794;
    int32_t x_93795;
    int32_t y_93796;
    int32_t my_index_98315;
    int32_t other_index_98316;
    int32_t x_98317;
    int32_t y_98318;
    
    my_index_93793 = local_tid_93799;
    if (slt32(local_tid_93799, num_groups_92879)) {
        y_93796 = *(volatile __local int32_t *) &mem_97087[local_tid_93799 *
                                                           sizeof(int32_t)];
    }
    // in-block scan (hopefully no barriers needed)
    {
        int32_t skip_threads_98320 = 1;
        
        while (slt32(skip_threads_98320, 32)) {
            if (slt32(local_tid_93799, num_groups_92879) &&
                sle32(skip_threads_98320, local_tid_93799 -
                      squot32(local_tid_93799, 32) * 32)) {
                // read operands
                {
                    x_93795 = *(volatile __local
                                int32_t *) &mem_97087[(local_tid_93799 -
                                                       skip_threads_98320) *
                                                      sizeof(int32_t)];
                }
                // perform operation
                {
                    int32_t zz_93797;
                    
                    if (thread_active_98314) {
                        zz_93797 = x_93795 + y_93796;
                    }
                    y_93796 = zz_93797;
                }
            }
            if (sle32(wave_sizze_98312, skip_threads_98320)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (slt32(local_tid_93799, num_groups_92879) &&
                sle32(skip_threads_98320, local_tid_93799 -
                      squot32(local_tid_93799, 32) * 32)) {
                // write result
                {
                    *(volatile __local int32_t *) &mem_97087[local_tid_93799 *
                                                             sizeof(int32_t)] =
                        y_93796;
                }
            }
            if (sle32(wave_sizze_98312, skip_threads_98320)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_98320 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_93799 - squot32(local_tid_93799, 32) * 32) == 31 &&
            slt32(local_tid_93799, num_groups_92879)) {
            *(volatile __local int32_t *) &mem_97087[squot32(local_tid_93799,
                                                             32) *
                                                     sizeof(int32_t)] = y_93796;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for warp 'i+1'
    {
        if (squot32(local_tid_93799, 32) == 0 && slt32(local_tid_93799,
                                                       num_groups_92879)) {
            y_98318 = *(volatile __local int32_t *) &mem_97087[local_tid_93799 *
                                                               sizeof(int32_t)];
        }
        // in-block scan (hopefully no barriers needed)
        {
            int32_t skip_threads_98321 = 1;
            
            while (slt32(skip_threads_98321, 32)) {
                if ((squot32(local_tid_93799, 32) == 0 && slt32(local_tid_93799,
                                                                num_groups_92879)) &&
                    sle32(skip_threads_98321, local_tid_93799 -
                          squot32(local_tid_93799, 32) * 32)) {
                    // read operands
                    {
                        x_98317 = *(volatile __local
                                    int32_t *) &mem_97087[(local_tid_93799 -
                                                           skip_threads_98321) *
                                                          sizeof(int32_t)];
                    }
                    // perform operation
                    {
                        int32_t zz_98319;
                        
                        if (thread_active_98314) {
                            zz_98319 = x_98317 + y_98318;
                        }
                        y_98318 = zz_98319;
                    }
                }
                if (sle32(wave_sizze_98312, skip_threads_98321)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if ((squot32(local_tid_93799, 32) == 0 && slt32(local_tid_93799,
                                                                num_groups_92879)) &&
                    sle32(skip_threads_98321, local_tid_93799 -
                          squot32(local_tid_93799, 32) * 32)) {
                    // write result
                    {
                        *(volatile __local
                          int32_t *) &mem_97087[local_tid_93799 *
                                                sizeof(int32_t)] = y_98318;
                    }
                }
                if (sle32(wave_sizze_98312, skip_threads_98321)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_98321 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_93799, 32) == 0 || !slt32(local_tid_93799,
                                                          num_groups_92879))) {
            // read operands
            {
                x_93795 = *(volatile __local
                            int32_t *) &mem_97087[(squot32(local_tid_93799,
                                                           32) - 1) *
                                                  sizeof(int32_t)];
            }
            // perform operation
            {
                int32_t zz_93797;
                
                if (thread_active_98314) {
                    zz_93797 = x_93795 + y_93796;
                }
                y_93796 = zz_93797;
            }
            // write final result
            {
                *(volatile __local int32_t *) &mem_97087[local_tid_93799 *
                                                         sizeof(int32_t)] =
                    y_93796;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_93799, 32) == 0) {
            *(volatile __local int32_t *) &mem_97087[local_tid_93799 *
                                                     sizeof(int32_t)] = y_93796;
        }
    }
    
    int32_t scanned_elem_93804;
    
    if (thread_active_98314) {
        scanned_elem_93804 = *(__local int32_t *) &mem_97087[local_tid_93799 *
                                                             4];
    }
    *(__global int32_t *) &mem_97090[global_tid_93798 * 4] = scanned_elem_93804;
}
__kernel void scan2_kernel_94731(__local volatile int64_t *mem_aligned_0,
                                 int32_t num_groups_94677, __global
                                 unsigned char *mem_97328, __global
                                 unsigned char *mem_97334)
{
    __local volatile char *restrict mem_97331 = mem_aligned_0;
    int32_t wave_sizze_98415;
    int32_t group_sizze_98416;
    char thread_active_98417;
    int32_t global_tid_94731;
    int32_t local_tid_94732;
    int32_t group_id_94733;
    
    global_tid_94731 = get_global_id(0);
    local_tid_94732 = get_local_id(0);
    group_sizze_98416 = get_local_size(0);
    wave_sizze_98415 = LOCKSTEP_WIDTH;
    group_id_94733 = get_group_id(0);
    thread_active_98417 = 1;
    if (slt32(local_tid_94732, num_groups_94677) && 1) {
        int32_t res_group_sums_elem_94734 = *(__global
                                              int32_t *) &mem_97328[local_tid_94732 *
                                                                    4];
        
        *(__local int32_t *) &mem_97331[local_tid_94732 * 4] =
            res_group_sums_elem_94734;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t my_index_94726;
    int32_t other_index_94727;
    int32_t x_94728;
    int32_t x_94729;
    int32_t my_index_98418;
    int32_t other_index_98419;
    int32_t x_98420;
    int32_t x_98421;
    
    my_index_94726 = local_tid_94732;
    if (slt32(local_tid_94732, num_groups_94677)) {
        x_94729 = *(volatile __local int32_t *) &mem_97331[local_tid_94732 *
                                                           sizeof(int32_t)];
    }
    // in-block scan (hopefully no barriers needed)
    {
        int32_t skip_threads_98423 = 1;
        
        while (slt32(skip_threads_98423, 32)) {
            if (slt32(local_tid_94732, num_groups_94677) &&
                sle32(skip_threads_98423, local_tid_94732 -
                      squot32(local_tid_94732, 32) * 32)) {
                // read operands
                {
                    x_94728 = *(volatile __local
                                int32_t *) &mem_97331[(local_tid_94732 -
                                                       skip_threads_98423) *
                                                      sizeof(int32_t)];
                }
                // perform operation
                {
                    int32_t res_94730;
                    
                    if (thread_active_98417) {
                        res_94730 = x_94728 + x_94729;
                    }
                    x_94729 = res_94730;
                }
            }
            if (sle32(wave_sizze_98415, skip_threads_98423)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (slt32(local_tid_94732, num_groups_94677) &&
                sle32(skip_threads_98423, local_tid_94732 -
                      squot32(local_tid_94732, 32) * 32)) {
                // write result
                {
                    *(volatile __local int32_t *) &mem_97331[local_tid_94732 *
                                                             sizeof(int32_t)] =
                        x_94729;
                }
            }
            if (sle32(wave_sizze_98415, skip_threads_98423)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_98423 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_94732 - squot32(local_tid_94732, 32) * 32) == 31 &&
            slt32(local_tid_94732, num_groups_94677)) {
            *(volatile __local int32_t *) &mem_97331[squot32(local_tid_94732,
                                                             32) *
                                                     sizeof(int32_t)] = x_94729;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for warp 'i+1'
    {
        if (squot32(local_tid_94732, 32) == 0 && slt32(local_tid_94732,
                                                       num_groups_94677)) {
            x_98421 = *(volatile __local int32_t *) &mem_97331[local_tid_94732 *
                                                               sizeof(int32_t)];
        }
        // in-block scan (hopefully no barriers needed)
        {
            int32_t skip_threads_98424 = 1;
            
            while (slt32(skip_threads_98424, 32)) {
                if ((squot32(local_tid_94732, 32) == 0 && slt32(local_tid_94732,
                                                                num_groups_94677)) &&
                    sle32(skip_threads_98424, local_tid_94732 -
                          squot32(local_tid_94732, 32) * 32)) {
                    // read operands
                    {
                        x_98420 = *(volatile __local
                                    int32_t *) &mem_97331[(local_tid_94732 -
                                                           skip_threads_98424) *
                                                          sizeof(int32_t)];
                    }
                    // perform operation
                    {
                        int32_t res_98422;
                        
                        if (thread_active_98417) {
                            res_98422 = x_98420 + x_98421;
                        }
                        x_98421 = res_98422;
                    }
                }
                if (sle32(wave_sizze_98415, skip_threads_98424)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if ((squot32(local_tid_94732, 32) == 0 && slt32(local_tid_94732,
                                                                num_groups_94677)) &&
                    sle32(skip_threads_98424, local_tid_94732 -
                          squot32(local_tid_94732, 32) * 32)) {
                    // write result
                    {
                        *(volatile __local
                          int32_t *) &mem_97331[local_tid_94732 *
                                                sizeof(int32_t)] = x_98421;
                    }
                }
                if (sle32(wave_sizze_98415, skip_threads_98424)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_98424 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_94732, 32) == 0 || !slt32(local_tid_94732,
                                                          num_groups_94677))) {
            // read operands
            {
                x_94728 = *(volatile __local
                            int32_t *) &mem_97331[(squot32(local_tid_94732,
                                                           32) - 1) *
                                                  sizeof(int32_t)];
            }
            // perform operation
            {
                int32_t res_94730;
                
                if (thread_active_98417) {
                    res_94730 = x_94728 + x_94729;
                }
                x_94729 = res_94730;
            }
            // write final result
            {
                *(volatile __local int32_t *) &mem_97331[local_tid_94732 *
                                                         sizeof(int32_t)] =
                    x_94729;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_94732, 32) == 0) {
            *(volatile __local int32_t *) &mem_97331[local_tid_94732 *
                                                     sizeof(int32_t)] = x_94729;
        }
    }
    
    int32_t scanned_elem_94737;
    
    if (thread_active_98417) {
        scanned_elem_94737 = *(__local int32_t *) &mem_97331[local_tid_94732 *
                                                             4];
    }
    *(__global int32_t *) &mem_97334[global_tid_94731 * 4] = scanned_elem_94737;
}
__kernel void scan2_kernel_94853(__local volatile int64_t *mem_aligned_0,
                                 int32_t num_groups_94790, __global
                                 unsigned char *mem_97371, __global
                                 unsigned char *mem_97377)
{
    __local volatile char *restrict mem_97374 = mem_aligned_0;
    int32_t wave_sizze_98445;
    int32_t group_sizze_98446;
    char thread_active_98447;
    int32_t global_tid_94853;
    int32_t local_tid_94854;
    int32_t group_id_94855;
    
    global_tid_94853 = get_global_id(0);
    local_tid_94854 = get_local_id(0);
    group_sizze_98446 = get_local_size(0);
    wave_sizze_98445 = LOCKSTEP_WIDTH;
    group_id_94855 = get_group_id(0);
    thread_active_98447 = 1;
    if (slt32(local_tid_94854, num_groups_94790) && 1) {
        int32_t offsets_group_sums_elem_94856 = *(__global
                                                  int32_t *) &mem_97371[local_tid_94854 *
                                                                        4];
        
        *(__local int32_t *) &mem_97374[local_tid_94854 * 4] =
            offsets_group_sums_elem_94856;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t my_index_94848;
    int32_t other_index_94849;
    int32_t x_94850;
    int32_t y_94851;
    int32_t my_index_98448;
    int32_t other_index_98449;
    int32_t x_98450;
    int32_t y_98451;
    
    my_index_94848 = local_tid_94854;
    if (slt32(local_tid_94854, num_groups_94790)) {
        y_94851 = *(volatile __local int32_t *) &mem_97374[local_tid_94854 *
                                                           sizeof(int32_t)];
    }
    // in-block scan (hopefully no barriers needed)
    {
        int32_t skip_threads_98453 = 1;
        
        while (slt32(skip_threads_98453, 32)) {
            if (slt32(local_tid_94854, num_groups_94790) &&
                sle32(skip_threads_98453, local_tid_94854 -
                      squot32(local_tid_94854, 32) * 32)) {
                // read operands
                {
                    x_94850 = *(volatile __local
                                int32_t *) &mem_97374[(local_tid_94854 -
                                                       skip_threads_98453) *
                                                      sizeof(int32_t)];
                }
                // perform operation
                {
                    int32_t zz_94852;
                    
                    if (thread_active_98447) {
                        zz_94852 = x_94850 + y_94851;
                    }
                    y_94851 = zz_94852;
                }
            }
            if (sle32(wave_sizze_98445, skip_threads_98453)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (slt32(local_tid_94854, num_groups_94790) &&
                sle32(skip_threads_98453, local_tid_94854 -
                      squot32(local_tid_94854, 32) * 32)) {
                // write result
                {
                    *(volatile __local int32_t *) &mem_97374[local_tid_94854 *
                                                             sizeof(int32_t)] =
                        y_94851;
                }
            }
            if (sle32(wave_sizze_98445, skip_threads_98453)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_98453 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_94854 - squot32(local_tid_94854, 32) * 32) == 31 &&
            slt32(local_tid_94854, num_groups_94790)) {
            *(volatile __local int32_t *) &mem_97374[squot32(local_tid_94854,
                                                             32) *
                                                     sizeof(int32_t)] = y_94851;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for warp 'i+1'
    {
        if (squot32(local_tid_94854, 32) == 0 && slt32(local_tid_94854,
                                                       num_groups_94790)) {
            y_98451 = *(volatile __local int32_t *) &mem_97374[local_tid_94854 *
                                                               sizeof(int32_t)];
        }
        // in-block scan (hopefully no barriers needed)
        {
            int32_t skip_threads_98454 = 1;
            
            while (slt32(skip_threads_98454, 32)) {
                if ((squot32(local_tid_94854, 32) == 0 && slt32(local_tid_94854,
                                                                num_groups_94790)) &&
                    sle32(skip_threads_98454, local_tid_94854 -
                          squot32(local_tid_94854, 32) * 32)) {
                    // read operands
                    {
                        x_98450 = *(volatile __local
                                    int32_t *) &mem_97374[(local_tid_94854 -
                                                           skip_threads_98454) *
                                                          sizeof(int32_t)];
                    }
                    // perform operation
                    {
                        int32_t zz_98452;
                        
                        if (thread_active_98447) {
                            zz_98452 = x_98450 + y_98451;
                        }
                        y_98451 = zz_98452;
                    }
                }
                if (sle32(wave_sizze_98445, skip_threads_98454)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if ((squot32(local_tid_94854, 32) == 0 && slt32(local_tid_94854,
                                                                num_groups_94790)) &&
                    sle32(skip_threads_98454, local_tid_94854 -
                          squot32(local_tid_94854, 32) * 32)) {
                    // write result
                    {
                        *(volatile __local
                          int32_t *) &mem_97374[local_tid_94854 *
                                                sizeof(int32_t)] = y_98451;
                    }
                }
                if (sle32(wave_sizze_98445, skip_threads_98454)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_98454 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_94854, 32) == 0 || !slt32(local_tid_94854,
                                                          num_groups_94790))) {
            // read operands
            {
                x_94850 = *(volatile __local
                            int32_t *) &mem_97374[(squot32(local_tid_94854,
                                                           32) - 1) *
                                                  sizeof(int32_t)];
            }
            // perform operation
            {
                int32_t zz_94852;
                
                if (thread_active_98447) {
                    zz_94852 = x_94850 + y_94851;
                }
                y_94851 = zz_94852;
            }
            // write final result
            {
                *(volatile __local int32_t *) &mem_97374[local_tid_94854 *
                                                         sizeof(int32_t)] =
                    y_94851;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_94854, 32) == 0) {
            *(volatile __local int32_t *) &mem_97374[local_tid_94854 *
                                                     sizeof(int32_t)] = y_94851;
        }
    }
    
    int32_t scanned_elem_94859;
    
    if (thread_active_98447) {
        scanned_elem_94859 = *(__local int32_t *) &mem_97374[local_tid_94854 *
                                                             4];
    }
    *(__global int32_t *) &mem_97377[global_tid_94853 * 4] = scanned_elem_94859;
}
__kernel void scan2_kernel_95945(__local volatile int64_t *mem_aligned_0,
                                 int32_t num_groups_95026, __global
                                 unsigned char *mem_97084, __global
                                 unsigned char *mem_97090)
{
    __local volatile char *restrict mem_97087 = mem_aligned_0;
    int32_t wave_sizze_98503;
    int32_t group_sizze_98504;
    char thread_active_98505;
    int32_t global_tid_95945;
    int32_t local_tid_95946;
    int32_t group_id_95947;
    
    global_tid_95945 = get_global_id(0);
    local_tid_95946 = get_local_id(0);
    group_sizze_98504 = get_local_size(0);
    wave_sizze_98503 = LOCKSTEP_WIDTH;
    group_id_95947 = get_group_id(0);
    thread_active_98505 = 1;
    if (slt32(local_tid_95946, num_groups_95026) && 1) {
        int32_t offsets_group_sums_elem_95948 = *(__global
                                                  int32_t *) &mem_97084[local_tid_95946 *
                                                                        4];
        
        *(__local int32_t *) &mem_97087[local_tid_95946 * 4] =
            offsets_group_sums_elem_95948;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t my_index_95940;
    int32_t other_index_95941;
    int32_t x_95942;
    int32_t y_95943;
    int32_t my_index_98506;
    int32_t other_index_98507;
    int32_t x_98508;
    int32_t y_98509;
    
    my_index_95940 = local_tid_95946;
    if (slt32(local_tid_95946, num_groups_95026)) {
        y_95943 = *(volatile __local int32_t *) &mem_97087[local_tid_95946 *
                                                           sizeof(int32_t)];
    }
    // in-block scan (hopefully no barriers needed)
    {
        int32_t skip_threads_98511 = 1;
        
        while (slt32(skip_threads_98511, 32)) {
            if (slt32(local_tid_95946, num_groups_95026) &&
                sle32(skip_threads_98511, local_tid_95946 -
                      squot32(local_tid_95946, 32) * 32)) {
                // read operands
                {
                    x_95942 = *(volatile __local
                                int32_t *) &mem_97087[(local_tid_95946 -
                                                       skip_threads_98511) *
                                                      sizeof(int32_t)];
                }
                // perform operation
                {
                    int32_t zz_95944;
                    
                    if (thread_active_98505) {
                        zz_95944 = x_95942 + y_95943;
                    }
                    y_95943 = zz_95944;
                }
            }
            if (sle32(wave_sizze_98503, skip_threads_98511)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (slt32(local_tid_95946, num_groups_95026) &&
                sle32(skip_threads_98511, local_tid_95946 -
                      squot32(local_tid_95946, 32) * 32)) {
                // write result
                {
                    *(volatile __local int32_t *) &mem_97087[local_tid_95946 *
                                                             sizeof(int32_t)] =
                        y_95943;
                }
            }
            if (sle32(wave_sizze_98503, skip_threads_98511)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_98511 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_95946 - squot32(local_tid_95946, 32) * 32) == 31 &&
            slt32(local_tid_95946, num_groups_95026)) {
            *(volatile __local int32_t *) &mem_97087[squot32(local_tid_95946,
                                                             32) *
                                                     sizeof(int32_t)] = y_95943;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for warp 'i+1'
    {
        if (squot32(local_tid_95946, 32) == 0 && slt32(local_tid_95946,
                                                       num_groups_95026)) {
            y_98509 = *(volatile __local int32_t *) &mem_97087[local_tid_95946 *
                                                               sizeof(int32_t)];
        }
        // in-block scan (hopefully no barriers needed)
        {
            int32_t skip_threads_98512 = 1;
            
            while (slt32(skip_threads_98512, 32)) {
                if ((squot32(local_tid_95946, 32) == 0 && slt32(local_tid_95946,
                                                                num_groups_95026)) &&
                    sle32(skip_threads_98512, local_tid_95946 -
                          squot32(local_tid_95946, 32) * 32)) {
                    // read operands
                    {
                        x_98508 = *(volatile __local
                                    int32_t *) &mem_97087[(local_tid_95946 -
                                                           skip_threads_98512) *
                                                          sizeof(int32_t)];
                    }
                    // perform operation
                    {
                        int32_t zz_98510;
                        
                        if (thread_active_98505) {
                            zz_98510 = x_98508 + y_98509;
                        }
                        y_98509 = zz_98510;
                    }
                }
                if (sle32(wave_sizze_98503, skip_threads_98512)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if ((squot32(local_tid_95946, 32) == 0 && slt32(local_tid_95946,
                                                                num_groups_95026)) &&
                    sle32(skip_threads_98512, local_tid_95946 -
                          squot32(local_tid_95946, 32) * 32)) {
                    // write result
                    {
                        *(volatile __local
                          int32_t *) &mem_97087[local_tid_95946 *
                                                sizeof(int32_t)] = y_98509;
                    }
                }
                if (sle32(wave_sizze_98503, skip_threads_98512)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_98512 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_95946, 32) == 0 || !slt32(local_tid_95946,
                                                          num_groups_95026))) {
            // read operands
            {
                x_95942 = *(volatile __local
                            int32_t *) &mem_97087[(squot32(local_tid_95946,
                                                           32) - 1) *
                                                  sizeof(int32_t)];
            }
            // perform operation
            {
                int32_t zz_95944;
                
                if (thread_active_98505) {
                    zz_95944 = x_95942 + y_95943;
                }
                y_95943 = zz_95944;
            }
            // write final result
            {
                *(volatile __local int32_t *) &mem_97087[local_tid_95946 *
                                                         sizeof(int32_t)] =
                    y_95943;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_95946, 32) == 0) {
            *(volatile __local int32_t *) &mem_97087[local_tid_95946 *
                                                     sizeof(int32_t)] = y_95943;
        }
    }
    
    int32_t scanned_elem_95951;
    
    if (thread_active_98505) {
        scanned_elem_95951 = *(__local int32_t *) &mem_97087[local_tid_95946 *
                                                             4];
    }
    *(__global int32_t *) &mem_97090[global_tid_95945 * 4] = scanned_elem_95951;
}
__kernel void scan2_kernel_96870(__local volatile int64_t *mem_aligned_0,
                                 int32_t num_groups_96807, __global
                                 unsigned char *mem_97348, __global
                                 unsigned char *mem_97354)
{
    __local volatile char *restrict mem_97351 = mem_aligned_0;
    int32_t wave_sizze_98599;
    int32_t group_sizze_98600;
    char thread_active_98601;
    int32_t global_tid_96870;
    int32_t local_tid_96871;
    int32_t group_id_96872;
    
    global_tid_96870 = get_global_id(0);
    local_tid_96871 = get_local_id(0);
    group_sizze_98600 = get_local_size(0);
    wave_sizze_98599 = LOCKSTEP_WIDTH;
    group_id_96872 = get_group_id(0);
    thread_active_98601 = 1;
    if (slt32(local_tid_96871, num_groups_96807) && 1) {
        int32_t offsets_group_sums_elem_96873 = *(__global
                                                  int32_t *) &mem_97348[local_tid_96871 *
                                                                        4];
        
        *(__local int32_t *) &mem_97351[local_tid_96871 * 4] =
            offsets_group_sums_elem_96873;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t my_index_96865;
    int32_t other_index_96866;
    int32_t x_96867;
    int32_t y_96868;
    int32_t my_index_98602;
    int32_t other_index_98603;
    int32_t x_98604;
    int32_t y_98605;
    
    my_index_96865 = local_tid_96871;
    if (slt32(local_tid_96871, num_groups_96807)) {
        y_96868 = *(volatile __local int32_t *) &mem_97351[local_tid_96871 *
                                                           sizeof(int32_t)];
    }
    // in-block scan (hopefully no barriers needed)
    {
        int32_t skip_threads_98607 = 1;
        
        while (slt32(skip_threads_98607, 32)) {
            if (slt32(local_tid_96871, num_groups_96807) &&
                sle32(skip_threads_98607, local_tid_96871 -
                      squot32(local_tid_96871, 32) * 32)) {
                // read operands
                {
                    x_96867 = *(volatile __local
                                int32_t *) &mem_97351[(local_tid_96871 -
                                                       skip_threads_98607) *
                                                      sizeof(int32_t)];
                }
                // perform operation
                {
                    int32_t zz_96869;
                    
                    if (thread_active_98601) {
                        zz_96869 = x_96867 + y_96868;
                    }
                    y_96868 = zz_96869;
                }
            }
            if (sle32(wave_sizze_98599, skip_threads_98607)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (slt32(local_tid_96871, num_groups_96807) &&
                sle32(skip_threads_98607, local_tid_96871 -
                      squot32(local_tid_96871, 32) * 32)) {
                // write result
                {
                    *(volatile __local int32_t *) &mem_97351[local_tid_96871 *
                                                             sizeof(int32_t)] =
                        y_96868;
                }
            }
            if (sle32(wave_sizze_98599, skip_threads_98607)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_98607 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_96871 - squot32(local_tid_96871, 32) * 32) == 31 &&
            slt32(local_tid_96871, num_groups_96807)) {
            *(volatile __local int32_t *) &mem_97351[squot32(local_tid_96871,
                                                             32) *
                                                     sizeof(int32_t)] = y_96868;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for warp 'i+1'
    {
        if (squot32(local_tid_96871, 32) == 0 && slt32(local_tid_96871,
                                                       num_groups_96807)) {
            y_98605 = *(volatile __local int32_t *) &mem_97351[local_tid_96871 *
                                                               sizeof(int32_t)];
        }
        // in-block scan (hopefully no barriers needed)
        {
            int32_t skip_threads_98608 = 1;
            
            while (slt32(skip_threads_98608, 32)) {
                if ((squot32(local_tid_96871, 32) == 0 && slt32(local_tid_96871,
                                                                num_groups_96807)) &&
                    sle32(skip_threads_98608, local_tid_96871 -
                          squot32(local_tid_96871, 32) * 32)) {
                    // read operands
                    {
                        x_98604 = *(volatile __local
                                    int32_t *) &mem_97351[(local_tid_96871 -
                                                           skip_threads_98608) *
                                                          sizeof(int32_t)];
                    }
                    // perform operation
                    {
                        int32_t zz_98606;
                        
                        if (thread_active_98601) {
                            zz_98606 = x_98604 + y_98605;
                        }
                        y_98605 = zz_98606;
                    }
                }
                if (sle32(wave_sizze_98599, skip_threads_98608)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if ((squot32(local_tid_96871, 32) == 0 && slt32(local_tid_96871,
                                                                num_groups_96807)) &&
                    sle32(skip_threads_98608, local_tid_96871 -
                          squot32(local_tid_96871, 32) * 32)) {
                    // write result
                    {
                        *(volatile __local
                          int32_t *) &mem_97351[local_tid_96871 *
                                                sizeof(int32_t)] = y_98605;
                    }
                }
                if (sle32(wave_sizze_98599, skip_threads_98608)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_98608 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_96871, 32) == 0 || !slt32(local_tid_96871,
                                                          num_groups_96807))) {
            // read operands
            {
                x_96867 = *(volatile __local
                            int32_t *) &mem_97351[(squot32(local_tid_96871,
                                                           32) - 1) *
                                                  sizeof(int32_t)];
            }
            // perform operation
            {
                int32_t zz_96869;
                
                if (thread_active_98601) {
                    zz_96869 = x_96867 + y_96868;
                }
                y_96868 = zz_96869;
            }
            // write final result
            {
                *(volatile __local int32_t *) &mem_97351[local_tid_96871 *
                                                         sizeof(int32_t)] =
                    y_96868;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_96871, 32) == 0) {
            *(volatile __local int32_t *) &mem_97351[local_tid_96871 *
                                                     sizeof(int32_t)] = y_96868;
        }
    }
    
    int32_t scanned_elem_96876;
    
    if (thread_active_98601) {
        scanned_elem_96876 = *(__local int32_t *) &mem_97351[local_tid_96871 *
                                                             4];
    }
    *(__global int32_t *) &mem_97354[global_tid_96870 * 4] = scanned_elem_96876;
}
"""
# Hacky parser/reader/writer for values written in Futhark syntax.
# Used for reading stdin when compiling standalone programs with the
# Python code generator.

import numpy as np
import string
import struct
import sys

class ReaderInput:
    def __init__(self, f):
        self.f = f
        self.lookahead_buffer = []

    def get_char(self):
        if len(self.lookahead_buffer) == 0:
            return self.f.read(1)
        else:
            c = self.lookahead_buffer[0]
            self.lookahead_buffer = self.lookahead_buffer[1:]
            return c

    def unget_char(self, c):
        self.lookahead_buffer = [c] + self.lookahead_buffer

    def get_chars(self, n):
        s = b''
        for _ in range(n):
            s += self.get_char()
        return s

    def peek_char(self):
        c = self.get_char()
        if c:
            self.unget_char(c)
        return c

def skip_spaces(f):
    c = f.get_char()
    while c != None:
        if c.isspace():
            c = f.get_char()
        elif c == b'-':
          # May be line comment.
          if f.peek_char() == b'-':
            # Yes, line comment. Skip to end of line.
            while (c != b'\n' and c != None):
              c = f.get_char()
          else:
            break
        else:
          break
    if c:
        f.unget_char(c)

def parse_specific_char(f, expected):
    got = f.get_char()
    if got != expected:
        f.unget_char(got)
        raise ValueError
    return True

def parse_specific_string(f, s):
    # This funky mess is intended, and is caused by the fact that if `type(b) ==
    # bytes` then `type(b[0]) == int`, but we need to match each element with a
    # `bytes`, so therefore we make each character an array element
    b = s.encode('utf8')
    bs = [b[i:i+1] for i in range(len(b))]
    for c in bs:
        parse_specific_char(f, c)
    return True

def optional(p, *args):
    try:
        return p(*args)
    except ValueError:
        return None

def optional_specific_string(f, s):
    c = f.peek_char()
    # This funky mess is intended, and is caused by the fact that if `type(b) ==
    # bytes` then `type(b[0]) == int`, but we need to match each element with a
    # `bytes`, so therefore we make each character an array element
    b = s.encode('utf8')
    bs = [b[i:i+1] for i in range(len(b))]
    if c == bs[0]:
        return parse_specific_string(f, s)
    else:
        return False

def sepBy(p, sep, *args):
    elems = []
    x = optional(p, *args)
    if x != None:
        elems += [x]
        while optional(sep, *args) != None:
            x = p(*args)
            elems += [x]
    return elems

# Assumes '0x' has already been read
def parse_hex_int(f):
    s = b''
    c = f.get_char()
    while c != None:
        if c in string.hexdigits:
            s += c
            c = f.get_char()
        elif c == '_':
            c = f.get_char() # skip _
        else:
            f.unget_char(c)
            break
    return str(int(s, 16))


def parse_int(f):
    s = b''
    c = f.get_char()
    if c == b'0' and f.peek_char() in [b'x', b'X']:
        c = f.get_char() # skip X
        s += parse_hex_int(f)
    else:
        while c != None:
            if c.isdigit():
                s += c
                c = f.get_char()
            elif c == '_':
                c = f.get_char() # skip _
            else:
                f.unget_char(c)
                break
    if len(s) == 0:
        raise ValueError
    return s

def parse_int_signed(f):
    s = b''
    c = f.get_char()

    if c == b'-' and f.peek_char().isdigit():
      s = c + parse_int(f)
    else:
      if c != b'+':
          f.unget_char(c)
      s = parse_int(f)

    return s

def read_str_comma(f):
    skip_spaces(f)
    parse_specific_char(f, b',')
    return b','

def read_str_int(f, s):
    skip_spaces(f)
    x = int(parse_int_signed(f))
    optional_specific_string(f, s)
    return x

def read_str_uint(f, s):
    skip_spaces(f)
    x = int(parse_int(f))
    optional_specific_string(f, s)
    return x

def read_str_i8(f):
    return np.int8(read_str_int(f, 'i8'))
def read_str_i16(f):
    return np.int16(read_str_int(f, 'i16'))
def read_str_i32(f):
    return np.int32(read_str_int(f, 'i32'))
def read_str_i64(f):
    return np.int64(read_str_int(f, 'i64'))

def read_str_u8(f):
    return np.uint8(read_str_int(f, 'u8'))
def read_str_u16(f):
    return np.uint16(read_str_int(f, 'u16'))
def read_str_u32(f):
    return np.uint32(read_str_int(f, 'u32'))
def read_str_u64(f):
    return np.uint64(read_str_int(f, 'u64'))

def read_char(f):
    skip_spaces(f)
    parse_specific_char(f, b'\'')
    c = f.get_char()
    parse_specific_char(f, b'\'')
    return c

def read_str_hex_float(f, sign):
    int_part = parse_hex_int(f)
    parse_specific_char(f, b'.')
    frac_part = parse_hex_int(f)
    parse_specific_char(f, b'p')
    exponent = parse_int(f)

    int_val = int(int_part, 16)
    frac_val = float(int(frac_part, 16)) / (16 ** len(frac_part))
    exp_val = int(exponent)

    total_val = (int_val + frac_val) * (2.0 ** exp_val)
    if sign == b'-':
        total_val = -1 * total_val

    return float(total_val)


def read_str_decimal(f):
    skip_spaces(f)
    c = f.get_char()
    if (c == b'-'):
      sign = b'-'
    else:
      f.unget_char(c)
      sign = b''

    # Check for hexadecimal float
    c = f.get_char()
    if (c == '0' and (f.peek_char() in ['x', 'X'])):
        f.get_char()
        return read_str_hex_float(f, sign)
    else:
        f.unget_char(c)

    bef = optional(parse_int, f)
    if bef == None:
        bef = b'0'
        parse_specific_char(f, b'.')
        aft = parse_int(f)
    elif optional(parse_specific_char, f, b'.'):
        aft = parse_int(f)
    else:
        aft = b'0'
    if (optional(parse_specific_char, f, b'E') or
        optional(parse_specific_char, f, b'e')):
        expt = parse_int_signed(f)
    else:
        expt = b'0'
    return float(sign + bef + b'.' + aft + b'E' + expt)

def read_str_f32(f):
    x = read_str_decimal(f)
    optional_specific_string(f, 'f32')
    return x

def read_str_f64(f):
    x = read_str_decimal(f)
    optional_specific_string(f, 'f64')
    return x

def read_str_bool(f):
    skip_spaces(f)
    if f.peek_char() == b't':
        parse_specific_string(f, 'true')
        return True
    elif f.peek_char() == b'f':
        parse_specific_string(f, 'false')
        return False
    else:
        raise ValueError

def read_str_empty_array(f, type_name, rank):
    parse_specific_string(f, 'empty')
    parse_specific_char(f, b'(')
    for i in range(rank):
        parse_specific_string(f, '[]')
    parse_specific_string(f, type_name)
    parse_specific_char(f, b')')

    return None

def read_str_array_elems(f, elem_reader, type_name, rank):
    skip_spaces(f)
    try:
        parse_specific_char(f, b'[')
    except ValueError:
        return read_str_empty_array(f, type_name, rank)
    else:
        xs = sepBy(elem_reader, read_str_comma, f)
        skip_spaces(f)
        parse_specific_char(f, b']')
        return xs

def read_str_array_helper(f, elem_reader, type_name, rank):
    def nested_row_reader(_):
        return read_str_array_helper(f, elem_reader, type_name, rank-1)
    if rank == 1:
        row_reader = elem_reader
    else:
        row_reader = nested_row_reader
    return read_str_array_elems(f, row_reader, type_name, rank-1)

def expected_array_dims(l, rank):
  if rank > 1:
      n = len(l)
      if n == 0:
          elem = []
      else:
          elem = l[0]
      return [n] + expected_array_dims(elem, rank-1)
  else:
      return [len(l)]

def verify_array_dims(l, dims):
    if dims[0] != len(l):
        raise ValueError
    if len(dims) > 1:
        for x in l:
            verify_array_dims(x, dims[1:])

def read_str_array(f, elem_reader, type_name, rank, bt):
    elems = read_str_array_helper(f, elem_reader, type_name, rank)
    if elems == None:
        # Empty array
        return np.empty([0]*rank, dtype=bt)
    else:
        dims = expected_array_dims(elems, rank)
        verify_array_dims(elems, dims)
        return np.array(elems, dtype=bt)

################################################################################

READ_BINARY_VERSION = 2

# struct format specified at
# https://docs.python.org/2/library/struct.html#format-characters

def mk_bin_scalar_reader(t):
    def bin_reader(f):
        fmt = FUTHARK_PRIMTYPES[t]['bin_format']
        size = FUTHARK_PRIMTYPES[t]['size']
        return struct.unpack('<' + fmt, f.get_chars(size))[0]
    return bin_reader

read_bin_i8 = mk_bin_scalar_reader('i8')
read_bin_i16 = mk_bin_scalar_reader('i16')
read_bin_i32 = mk_bin_scalar_reader('i32')
read_bin_i64 = mk_bin_scalar_reader('i64')

read_bin_u8 = mk_bin_scalar_reader('u8')
read_bin_u16 = mk_bin_scalar_reader('u16')
read_bin_u32 = mk_bin_scalar_reader('u32')
read_bin_u64 = mk_bin_scalar_reader('u64')

read_bin_f32 = mk_bin_scalar_reader('f32')
read_bin_f64 = mk_bin_scalar_reader('f64')

read_bin_bool = mk_bin_scalar_reader('bool')

def read_is_binary(f):
    skip_spaces(f)
    c = f.get_char()
    if c == b'b':
        bin_version = read_bin_u8(f)
        if bin_version != READ_BINARY_VERSION:
            panic(1, "binary-input: File uses version %i, but I only understand version %i.\n",
                  bin_version, READ_BINARY_VERSION)
        return True
    else:
        f.unget_char(c)
        return False

FUTHARK_PRIMTYPES = {
    'i8':  {'binname' : b"  i8",
            'size' : 1,
            'bin_reader': read_bin_i8,
            'str_reader': read_str_i8,
            'bin_format': 'b',
            'numpy_type': np.int8 },

    'i16': {'binname' : b" i16",
            'size' : 2,
            'bin_reader': read_bin_i16,
            'str_reader': read_str_i16,
            'bin_format': 'h',
            'numpy_type': np.int16 },

    'i32': {'binname' : b" i32",
            'size' : 4,
            'bin_reader': read_bin_i32,
            'str_reader': read_str_i32,
            'bin_format': 'i',
            'numpy_type': np.int32 },

    'i64': {'binname' : b" i64",
            'size' : 8,
            'bin_reader': read_bin_i64,
            'str_reader': read_str_i64,
            'bin_format': 'q',
            'numpy_type': np.int64},

    'u8':  {'binname' : b"  u8",
            'size' : 1,
            'bin_reader': read_bin_u8,
            'str_reader': read_str_u8,
            'bin_format': 'B',
            'numpy_type': np.uint8 },

    'u16': {'binname' : b" u16",
            'size' : 2,
            'bin_reader': read_bin_u16,
            'str_reader': read_str_u16,
            'bin_format': 'H',
            'numpy_type': np.uint16 },

    'u32': {'binname' : b" u32",
            'size' : 4,
            'bin_reader': read_bin_u32,
            'str_reader': read_str_u32,
            'bin_format': 'I',
            'numpy_type': np.uint32 },

    'u64': {'binname' : b" u64",
            'size' : 8,
            'bin_reader': read_bin_u64,
            'str_reader': read_str_u64,
            'bin_format': 'Q',
            'numpy_type': np.uint64 },

    'f32': {'binname' : b" f32",
            'size' : 4,
            'bin_reader': read_bin_f32,
            'str_reader': read_str_f32,
            'bin_format': 'f',
            'numpy_type': np.float32 },

    'f64': {'binname' : b" f64",
            'size' : 8,
            'bin_reader': read_bin_f64,
            'str_reader': read_str_f64,
            'bin_format': 'd',
            'numpy_type': np.float64 },

    'bool': {'binname' : b"bool",
             'size' : 1,
             'bin_reader': read_bin_bool,
             'str_reader': read_str_bool,
             'bin_format': 'b',
             'numpy_type': np.bool }
}

def read_bin_read_type(f):
    read_binname = f.get_chars(4)

    for (k,v) in FUTHARK_PRIMTYPES.items():
        if v['binname'] == read_binname:
            return k
    panic(1, "binary-input: Did not recognize the type '%s'.\n", read_binname)

def numpy_type_to_type_name(t):
    for (k,v) in FUTHARK_PRIMTYPES.items():
        if v['numpy_type'] == t:
            return k
    raise Exception('Unknown Numpy type: {}'.format(t))

def read_bin_ensure_scalar(f, expected_type):
  dims = read_bin_i8(f)

  if dims != 0:
      panic(1, "binary-input: Expected scalar (0 dimensions), but got array with %i dimensions.\n", dims)

  bin_type = read_bin_read_type(f)
  if bin_type != expected_type:
      panic(1, "binary-input: Expected scalar of type %s but got scalar of type %s.\n",
            expected_type, bin_type)

# ------------------------------------------------------------------------------
# General interface for reading Primitive Futhark Values
# ------------------------------------------------------------------------------

def read_scalar(f, ty):
    if read_is_binary(f):
        read_bin_ensure_scalar(f, ty)
        return FUTHARK_PRIMTYPES[ty]['bin_reader'](f)
    return FUTHARK_PRIMTYPES[ty]['str_reader'](f)

def read_array(f, expected_type, rank):
    if not read_is_binary(f):
        str_reader = FUTHARK_PRIMTYPES[expected_type]['str_reader']
        return read_str_array(f, str_reader, expected_type, rank,
                              FUTHARK_PRIMTYPES[expected_type]['numpy_type'])

    bin_rank = read_bin_u8(f)

    if bin_rank != rank:
        panic(1, "binary-input: Expected %i dimensions, but got array with %i dimensions.\n",
              rank, bin_rank)

    bin_type_enum = read_bin_read_type(f)
    if expected_type != bin_type_enum:
        panic(1, "binary-input: Expected %iD-array with element type '%s' but got %iD-array with element type '%s'.\n",
              rank, expected_type, bin_rank, bin_type_enum)

    shape = []
    elem_count = 1
    for i in range(rank):
        bin_size = read_bin_u64(f)
        elem_count *= bin_size
        shape.append(bin_size)

    bin_fmt = FUTHARK_PRIMTYPES[bin_type_enum]['bin_format']

    # We first read the expected number of types into a bytestring,
    # then use np.fromstring.  This is because np.fromfile does not
    # work on things that are insufficiently file-like, like a network
    # stream.
    bytes = f.get_chars(elem_count * FUTHARK_PRIMTYPES[expected_type]['size'])
    arr = np.fromstring(bytes, dtype='<'+bin_fmt)
    arr.shape = shape

    return arr

if sys.version_info >= (3,0):
    input_reader = ReaderInput(sys.stdin.buffer)
else:
    input_reader = ReaderInput(sys.stdin)

import re

def read_value(type_desc, reader=input_reader):
    """Read a value of the given type.  The type is a string
representation of the Futhark type."""
    m = re.match(r'((?:\[\])*)([a-z0-9]+)$', type_desc)
    if m:
        dims = int(len(m.group(1))/2)
        basetype = m.group(2)
        assert basetype in FUTHARK_PRIMTYPES, "Unknown type: {}".format(type_desc)
        if dims > 0:
            return read_array(reader, basetype, dims)
        else:
            return read_scalar(reader, basetype)
        return (dims, basetype)

def write_value(v, out=sys.stdout):
    if type(v) == np.uint8:
        out.write("%uu8" % v)
    elif type(v) == np.uint16:
        out.write("%uu16" % v)
    elif type(v) == np.uint32:
        out.write("%uu32" % v)
    elif type(v) == np.uint64:
        out.write("%uu64" % v)
    elif type(v) == np.int8:
        out.write("%di8" % v)
    elif type(v) == np.int16:
        out.write("%di16" % v)
    elif type(v) == np.int32:
        out.write("%di32" % v)
    elif type(v) == np.int64:
        out.write("%di64" % v)
    elif type(v) in [np.bool, np.bool_]:
        if v:
            out.write("true")
        else:
            out.write("false")
    elif type(v) == np.float32:
        out.write("%.6ff32" % v)
    elif type(v) == np.float64:
        out.write("%.6ff64" % v)
    elif type(v) == np.ndarray:
        if np.product(v.shape) == 0:
            tname = numpy_type_to_type_name(v.dtype)
            out.write('empty({}{})'.format(''.join(['[]' for _ in v.shape[1:]]), tname))
        else:
            first = True
            out.write('[')
            for x in v:
                if not first: out.write(', ')
                first = False
                write_value(x, out=out)
            out.write(']')
    else:
        raise Exception("Cannot print value of type {}: {}".format(type(v), v))

################################################################################
### end of values.py
################################################################################
# Helper functions dealing with memory blocks.

import ctypes as ct

def addressOffset(x, offset, bt):
  return ct.cast(ct.addressof(x.contents)+int(offset), ct.POINTER(bt))

def allocateMem(size):
  return ct.cast((ct.c_byte * max(0,size))(), ct.POINTER(ct.c_byte))

# Copy an array if its is not-None.  This is important for treating
# Numpy arrays as flat memory, but has some overhead.
def normaliseArray(x):
  if (x.base is x) or (x.base is None):
    return x
  else:
    return x.copy()

def unwrapArray(x):
  return normaliseArray(x).ctypes.data_as(ct.POINTER(ct.c_byte))

def createArray(x, dim):
  return np.ctypeslib.as_array(x, shape=dim)

def indexArray(x, offset, bt, nptype):
  return nptype(addressOffset(x, offset, bt)[0])

def writeScalarArray(x, offset, v):
  ct.memmove(ct.addressof(x.contents)+int(offset), ct.addressof(v), ct.sizeof(v))

# An opaque Futhark value.
class opaque(object):
  def __init__(self, desc, *payload):
    self.data = payload
    self.desc = desc

  def __repr__(self):
    return "<opaque Futhark value of type {}>".format(self.desc)
def panic(exitcode, fmt, *args):
    sys.stderr.write('%s: ' % sys.argv[0])
    sys.stderr.write(fmt % args)
    sys.exit(exitcode)
# Scalar functions.

import numpy as np
import struct

def signed(x):
  if type(x) == np.uint8:
    return np.int8(x)
  elif type(x) == np.uint16:
    return np.int16(x)
  elif type(x) == np.uint32:
    return np.int32(x)
  else:
    return np.int64(x)

def unsigned(x):
  if type(x) == np.int8:
    return np.uint8(x)
  elif type(x) == np.int16:
    return np.uint16(x)
  elif type(x) == np.int32:
    return np.uint32(x)
  else:
    return np.uint64(x)

def shlN(x,y):
  return x << y

def ashrN(x,y):
  return x >> y

def sdivN(x,y):
  return x // y

def smodN(x,y):
  return x % y

def udivN(x,y):
  return signed(unsigned(x) // unsigned(y))

def umodN(x,y):
  return signed(unsigned(x) % unsigned(y))

def squotN(x,y):
  return np.floor_divide(np.abs(x), np.abs(y)) * np.sign(x) * np.sign(y)

def sremN(x,y):
  return np.remainder(np.abs(x), np.abs(y)) * np.sign(x)

def sminN(x,y):
  return min(x,y)

def smaxN(x,y):
  return max(x,y)

def uminN(x,y):
  return signed(min(unsigned(x),unsigned(y)))

def umaxN(x,y):
  return signed(max(unsigned(x),unsigned(y)))

def fminN(x,y):
  return min(x,y)

def fmaxN(x,y):
  return max(x,y)

def powN(x,y):
  return x ** y

def fpowN(x,y):
  return x ** y

def sleN(x,y):
  return x <= y

def sltN(x,y):
  return x < y

def uleN(x,y):
  return unsigned(x) <= unsigned(y)

def ultN(x,y):
  return unsigned(x) < unsigned(y)

def lshr8(x,y):
  return np.int8(np.uint8(x) >> np.uint8(y))

def lshr16(x,y):
  return np.int16(np.uint16(x) >> np.uint16(y))

def lshr32(x,y):
  return np.int32(np.uint32(x) >> np.uint32(y))

def lshr64(x,y):
  return np.int64(np.uint64(x) >> np.uint64(y))

def sext_T_i8(x):
  return np.int8(x)

def sext_T_i16(x):
  return np.int16(x)

def sext_T_i32(x):
  return np.int32(x)

def sext_T_i64(x):
  return np.int64(x)

def zext_i8_i8(x):
  return np.int8(np.uint8(x))

def zext_i8_i16(x):
  return np.int16(np.uint8(x))

def zext_i8_i32(x):
  return np.int32(np.uint8(x))

def zext_i8_i64(x):
  return np.int64(np.uint8(x))

def zext_i16_i8(x):
  return np.int8(np.uint16(x))

def zext_i16_i16(x):
  return np.int16(np.uint16(x))

def zext_i16_i32(x):
  return np.int32(np.uint16(x))

def zext_i16_i64(x):
  return np.int64(np.uint16(x))

def zext_i32_i8(x):
  return np.int8(np.uint32(x))

def zext_i32_i16(x):
  return np.int16(np.uint32(x))

def zext_i32_i32(x):
  return np.int32(np.uint32(x))

def zext_i32_i64(x):
  return np.int64(np.uint32(x))

def zext_i64_i8(x):
  return np.int8(np.uint64(x))

def zext_i64_i16(x):
  return np.int16(np.uint64(x))

def zext_i64_i32(x):
  return np.int32(np.uint64(x))

def zext_i64_i64(x):
  return np.int64(np.uint64(x))

shl8 = shl16 = shl32 = shl64 = shlN
ashr8 = ashr16 = ashr32 = ashr64 = ashrN
sdiv8 = sdiv16 = sdiv32 = sdiv64 = sdivN
smod8 = smod16 = smod32 = smod64 = smodN
udiv8 = udiv16 = udiv32 = udiv64 = udivN
umod8 = umod16 = umod32 = umod64 = umodN
squot8 = squot16 = squot32 = squot64 = squotN
srem8 = srem16 = srem32 = srem64 = sremN
smax8 = smax16 = smax32 = smax64 = smaxN
smin8 = smin16 = smin32 = smin64 = sminN
umax8 = umax16 = umax32 = umax64 = umaxN
umin8 = umin16 = umin32 = umin64 = uminN
pow8 = pow16 = pow32 = pow64 = powN
fpow32 = fpow64 = fpowN
fmax32 = fmax64 = fmaxN
fmin32 = fmin64 = fminN
sle8 = sle16 = sle32 = sle64 = sleN
slt8 = slt16 = slt32 = slt64 = sltN
ule8 = ule16 = ule32 = ule64 = uleN
ult8 = ult16 = ult32 = ult64 = ultN
sext_i8_i8 = sext_i16_i8 = sext_i32_i8 = sext_i64_i8 = sext_T_i8
sext_i8_i16 = sext_i16_i16 = sext_i32_i16 = sext_i64_i16 = sext_T_i16
sext_i8_i32 = sext_i16_i32 = sext_i32_i32 = sext_i64_i32 = sext_T_i32
sext_i8_i64 = sext_i16_i64 = sext_i32_i64 = sext_i64_i64 = sext_T_i64

def ssignum(x):
  return np.sign(x)

def usignum(x):
  if x < 0:
    return ssignum(-x)
  else:
    return ssignum(x)

def sitofp_T_f32(x):
  return np.float32(x)
sitofp_i8_f32 = sitofp_i16_f32 = sitofp_i32_f32 = sitofp_i64_f32 = sitofp_T_f32

def sitofp_T_f64(x):
  return np.float64(x)
sitofp_i8_f64 = sitofp_i16_f64 = sitofp_i32_f64 = sitofp_i64_f64 = sitofp_T_f64

def uitofp_T_f32(x):
  return np.float32(unsigned(x))
uitofp_i8_f32 = uitofp_i16_f32 = uitofp_i32_f32 = uitofp_i64_f32 = uitofp_T_f32

def uitofp_T_f64(x):
  return np.float64(unsigned(x))
uitofp_i8_f64 = uitofp_i16_f64 = uitofp_i32_f64 = uitofp_i64_f64 = uitofp_T_f64

def fptosi_T_i8(x):
  return np.int8(np.trunc(x))
fptosi_f32_i8 = fptosi_f64_i8 = fptosi_T_i8

def fptosi_T_i16(x):
  return np.int16(np.trunc(x))
fptosi_f32_i16 = fptosi_f64_i16 = fptosi_T_i16

def fptosi_T_i32(x):
  return np.int32(np.trunc(x))
fptosi_f32_i32 = fptosi_f64_i32 = fptosi_T_i32

def fptosi_T_i64(x):
  return np.int64(np.trunc(x))
fptosi_f32_i64 = fptosi_f64_i64 = fptosi_T_i64

def fptoui_T_i8(x):
  return np.uint8(np.trunc(x))
fptoui_f32_i8 = fptoui_f64_i8 = fptoui_T_i8

def fptoui_T_i16(x):
  return np.uint16(np.trunc(x))
fptoui_f32_i16 = fptoui_f64_i16 = fptoui_T_i16

def fptoui_T_i32(x):
  return np.uint32(np.trunc(x))
fptoui_f32_i32 = fptoui_f64_i32 = fptoui_T_i32

def fptoui_T_i64(x):
  return np.uint64(np.trunc(x))
fptoui_f32_i64 = fptoui_f64_i64 = fptoui_T_i64

def fpconv_f32_f64(x):
  return np.float64(x)

def fpconv_f64_f32(x):
  return np.float32(x)

def futhark_log64(x):
  return np.float64(np.log(x))

def futhark_sqrt64(x):
  return np.sqrt(x)

def futhark_exp64(x):
  return np.exp(x)

def futhark_cos64(x):
  return np.cos(x)

def futhark_sin64(x):
  return np.sin(x)

def futhark_acos64(x):
  return np.arccos(x)

def futhark_asin64(x):
  return np.arcsin(x)

def futhark_atan64(x):
  return np.arctan(x)

def futhark_atan2_64(x, y):
  return np.arctan2(x, y)

def futhark_isnan64(x):
  return np.isnan(x)

def futhark_isinf64(x):
  return np.isinf(x)

def futhark_to_bits64(x):
  s = struct.pack('>d', x)
  return np.int64(struct.unpack('>q', s)[0])

def futhark_from_bits64(x):
  s = struct.pack('>q', x)
  return np.float64(struct.unpack('>d', s)[0])

def futhark_log32(x):
  return np.float32(np.log(x))

def futhark_sqrt32(x):
  return np.float32(np.sqrt(x))

def futhark_exp32(x):
  return np.exp(x)

def futhark_cos32(x):
  return np.cos(x)

def futhark_sin32(x):
  return np.sin(x)

def futhark_acos32(x):
  return np.arccos(x)

def futhark_asin32(x):
  return np.arcsin(x)

def futhark_atan32(x):
  return np.arctan(x)

def futhark_atan2_32(x, y):
  return np.arctan2(x, y)

def futhark_isnan32(x):
  return np.isnan(x)

def futhark_isinf32(x):
  return np.isinf(x)

def futhark_to_bits32(x):
  s = struct.pack('>f', x)
  return np.int32(struct.unpack('>l', s)[0])

def futhark_from_bits32(x):
  s = struct.pack('>l', x)
  return np.float32(struct.unpack('>f', s)[0])
class algorithm:
  entry_points = {"main": (["[]f64", "[]f64", "f64", "f64", "i32", "i16",
                            "i32"], ["[]i32", "[]i32", "[]f64"]),
                  "inParts": (["[]f64", "[]f64", "f64", "f64", "i32"], ["[]i32",
                                                                        "[]i32",
                                                                        "[]f64"]),
                  "calculateCSR": (["[]f64", "[]f64", "f64", "f64", "i32",
                                    "i32"], ["[]i32", "[]i32", "[]f64"]),
                  "calculateCOO": (["[]f64", "[]f64", "f64", "f64", "i32"],
                                   ["[]i32", "[]i32", "[]f64"])}
  def __init__(self, command_queue=None, interactive=False,
               platform_pref=preferred_platform, device_pref=preferred_device,
               default_group_size=None, default_num_groups=None,
               default_tile_size=None, sizes={}):
    size_heuristics=[("NVIDIA CUDA", cl.device_type.GPU, "lockstep_width", 32),
     ("AMD Accelerated Parallel Processing", cl.device_type.GPU, "lockstep_width",
      64), ("", cl.device_type.GPU, "lockstep_width", 1), ("", cl.device_type.GPU,
                                                           "num_groups", 128), ("",
                                                                                cl.device_type.GPU,
                                                                                "group_size",
                                                                                256),
     ("", cl.device_type.GPU, "tile_size", 32), ("", cl.device_type.CPU,
                                                 "lockstep_width", 1), ("",
                                                                        cl.device_type.CPU,
                                                                        "num_groups",
                                                                        "MAX_COMPUTE_UNITS"),
     ("", cl.device_type.CPU, "group_size", 32), ("", cl.device_type.CPU,
                                                  "tile_size", 4)]
    program = initialise_opencl_object(self,
                                       program_src=fut_opencl_src,
                                       command_queue=command_queue,
                                       interactive=interactive,
                                       platform_pref=platform_pref,
                                       device_pref=device_pref,
                                       default_group_size=default_group_size,
                                       default_num_groups=default_num_groups,
                                       default_tile_size=default_tile_size,
                                       size_heuristics=size_heuristics,
                                       required_types=["i16", "i32", "i64", "f64", "bool"],
                                       user_sizes=sizes,
                                       all_sizes={"group_size_86697": {"class": "group_size", "value": None},
                                        "max_num_groups_86699": {"class": "num_groups", "value": None},
                                        "group_size_86803": {"class": "group_size", "value": None},
                                        "group_size_86814": {"class": "group_size", "value": None},
                                        "max_num_groups_86816": {"class": "num_groups", "value": None},
                                        "group_size_87763": {"class": "group_size", "value": None},
                                        "group_size_87773": {"class": "group_size", "value": None},
                                        "group_size_87815": {"class": "group_size", "value": None},
                                        "group_size_88503": {"class": "group_size", "value": None},
                                        "group_size_88600": {"class": "group_size", "value": None},
                                        "group_size_88612": {"class": "group_size", "value": None},
                                        "max_num_groups_88614": {"class": "num_groups", "value": None},
                                        "group_size_88696": {"class": "group_size", "value": None},
                                        "group_size_88708": {"class": "group_size", "value": None},
                                        "group_size_88725": {"class": "group_size", "value": None},
                                        "max_num_groups_88727": {"class": "num_groups", "value": None},
                                        "group_size_88818": {"class": "group_size", "value": None},
                                        "group_size_88828": {"class": "group_size", "value": None},
                                        "group_size_88837": {"class": "group_size", "value": None},
                                        "max_num_groups_88839": {"class": "num_groups", "value": None},
                                        "group_size_89786": {"class": "group_size", "value": None},
                                        "group_size_89796": {"class": "group_size", "value": None},
                                        "group_size_89810": {"class": "group_size", "value": None},
                                        "group_size_89831": {"class": "group_size", "value": None},
                                        "group_size_89875": {"class": "group_size", "value": None},
                                        "group_size_90522": {"class": "group_size", "value": None},
                                        "group_size_90618": {"class": "group_size", "value": None},
                                        "max_num_groups_90620": {"class": "num_groups", "value": None},
                                        "group_size_90711": {"class": "group_size", "value": None},
                                        "group_size_90721": {"class": "group_size", "value": None},
                                        "group_size_90737": {"class": "group_size", "value": None},
                                        "max_num_groups_90739": {"class": "num_groups", "value": None},
                                        "group_size_90843": {"class": "group_size", "value": None},
                                        "group_size_90854": {"class": "group_size", "value": None},
                                        "max_num_groups_90856": {"class": "num_groups", "value": None},
                                        "group_size_91803": {"class": "group_size", "value": None},
                                        "group_size_91813": {"class": "group_size", "value": None},
                                        "group_size_91827": {"class": "group_size", "value": None},
                                        "group_size_91848": {"class": "group_size", "value": None},
                                        "group_size_91892": {"class": "group_size", "value": None},
                                        "group_size_92539": {"class": "group_size", "value": None},
                                        "group_size_92635": {"class": "group_size", "value": None},
                                        "max_num_groups_92637": {"class": "num_groups", "value": None},
                                        "group_size_92728": {"class": "group_size", "value": None},
                                        "group_size_92738": {"class": "group_size", "value": None},
                                        "group_size_92754": {"class": "group_size", "value": None},
                                        "max_num_groups_92756": {"class": "num_groups", "value": None},
                                        "group_size_92860": {"class": "group_size", "value": None},
                                        "group_size_92871": {"class": "group_size", "value": None},
                                        "max_num_groups_92873": {"class": "num_groups", "value": None},
                                        "group_size_93820": {"class": "group_size", "value": None},
                                        "group_size_93830": {"class": "group_size", "value": None},
                                        "group_size_93872": {"class": "group_size", "value": None},
                                        "group_size_94560": {"class": "group_size", "value": None},
                                        "group_size_94657": {"class": "group_size", "value": None},
                                        "group_size_94669": {"class": "group_size", "value": None},
                                        "max_num_groups_94671": {"class": "num_groups", "value": None},
                                        "group_size_94753": {"class": "group_size", "value": None},
                                        "group_size_94765": {"class": "group_size", "value": None},
                                        "group_size_94782": {"class": "group_size", "value": None},
                                        "max_num_groups_94784": {"class": "num_groups", "value": None},
                                        "group_size_94875": {"class": "group_size", "value": None},
                                        "group_size_94885": {"class": "group_size", "value": None},
                                        "group_size_94901": {"class": "group_size", "value": None},
                                        "max_num_groups_94903": {"class": "num_groups", "value": None},
                                        "group_size_95007": {"class": "group_size", "value": None},
                                        "group_size_95018": {"class": "group_size", "value": None},
                                        "max_num_groups_95020": {"class": "num_groups", "value": None},
                                        "group_size_95967": {"class": "group_size", "value": None},
                                        "group_size_95977": {"class": "group_size", "value": None},
                                        "group_size_95991": {"class": "group_size", "value": None},
                                        "group_size_96012": {"class": "group_size", "value": None},
                                        "group_size_96056": {"class": "group_size", "value": None},
                                        "group_size_96703": {"class": "group_size", "value": None},
                                        "group_size_96799": {"class": "group_size", "value": None},
                                        "max_num_groups_96801": {"class": "num_groups", "value": None},
                                        "group_size_96892": {"class": "group_size", "value": None},
                                        "group_size_96902": {"class": "group_size", "value": None},
                                        "group_size_97904": {"class": "group_size", "value": None},
                                        "group_size_98397": {"class": "group_size", "value": None}})
    self.chunked_reduce_kernel_86714_var = program.chunked_reduce_kernel_86714
    self.chunked_reduce_kernel_90754_var = program.chunked_reduce_kernel_90754
    self.chunked_reduce_kernel_92771_var = program.chunked_reduce_kernel_92771
    self.chunked_reduce_kernel_94918_var = program.chunked_reduce_kernel_94918
    self.fut_kernel_map_transpose_f64_var = program.fut_kernel_map_transpose_f64
    self.fut_kernel_map_transpose_i16_var = program.fut_kernel_map_transpose_i16
    self.fut_kernel_map_transpose_lowheight_f64_var = program.fut_kernel_map_transpose_lowheight_f64
    self.fut_kernel_map_transpose_lowheight_i16_var = program.fut_kernel_map_transpose_lowheight_i16
    self.fut_kernel_map_transpose_lowwidth_f64_var = program.fut_kernel_map_transpose_lowwidth_f64
    self.fut_kernel_map_transpose_lowwidth_i16_var = program.fut_kernel_map_transpose_lowwidth_i16
    self.fut_kernel_map_transpose_small_f64_var = program.fut_kernel_map_transpose_small_f64
    self.fut_kernel_map_transpose_small_i16_var = program.fut_kernel_map_transpose_small_i16
    self.kernel_replicate_97901_var = program.kernel_replicate_97901
    self.kernel_replicate_98394_var = program.kernel_replicate_98394
    self.map_kernel_86809_var = program.map_kernel_86809
    self.map_kernel_87769_var = program.map_kernel_87769
    self.map_kernel_87779_var = program.map_kernel_87779
    self.map_kernel_87821_var = program.map_kernel_87821
    self.map_kernel_88509_var = program.map_kernel_88509
    self.map_kernel_88606_var = program.map_kernel_88606
    self.map_kernel_88702_var = program.map_kernel_88702
    self.map_kernel_88714_var = program.map_kernel_88714
    self.map_kernel_88824_var = program.map_kernel_88824
    self.map_kernel_88834_var = program.map_kernel_88834
    self.map_kernel_89792_var = program.map_kernel_89792
    self.map_kernel_89802_var = program.map_kernel_89802
    self.map_kernel_89816_var = program.map_kernel_89816
    self.map_kernel_89837_var = program.map_kernel_89837
    self.map_kernel_89881_var = program.map_kernel_89881
    self.map_kernel_90528_var = program.map_kernel_90528
    self.map_kernel_90717_var = program.map_kernel_90717
    self.map_kernel_90727_var = program.map_kernel_90727
    self.map_kernel_90849_var = program.map_kernel_90849
    self.map_kernel_91809_var = program.map_kernel_91809
    self.map_kernel_91819_var = program.map_kernel_91819
    self.map_kernel_91833_var = program.map_kernel_91833
    self.map_kernel_91854_var = program.map_kernel_91854
    self.map_kernel_91898_var = program.map_kernel_91898
    self.map_kernel_92545_var = program.map_kernel_92545
    self.map_kernel_92734_var = program.map_kernel_92734
    self.map_kernel_92744_var = program.map_kernel_92744
    self.map_kernel_92866_var = program.map_kernel_92866
    self.map_kernel_93826_var = program.map_kernel_93826
    self.map_kernel_93836_var = program.map_kernel_93836
    self.map_kernel_93878_var = program.map_kernel_93878
    self.map_kernel_94566_var = program.map_kernel_94566
    self.map_kernel_94663_var = program.map_kernel_94663
    self.map_kernel_94759_var = program.map_kernel_94759
    self.map_kernel_94771_var = program.map_kernel_94771
    self.map_kernel_94881_var = program.map_kernel_94881
    self.map_kernel_94891_var = program.map_kernel_94891
    self.map_kernel_95013_var = program.map_kernel_95013
    self.map_kernel_95973_var = program.map_kernel_95973
    self.map_kernel_95983_var = program.map_kernel_95983
    self.map_kernel_95997_var = program.map_kernel_95997
    self.map_kernel_96018_var = program.map_kernel_96018
    self.map_kernel_96062_var = program.map_kernel_96062
    self.map_kernel_96709_var = program.map_kernel_96709
    self.map_kernel_96898_var = program.map_kernel_96898
    self.map_kernel_96908_var = program.map_kernel_96908
    self.reduce_kernel_86791_var = program.reduce_kernel_86791
    self.reduce_kernel_90831_var = program.reduce_kernel_90831
    self.reduce_kernel_92848_var = program.reduce_kernel_92848
    self.reduce_kernel_94995_var = program.reduce_kernel_94995
    self.scan1_kernel_87689_var = program.scan1_kernel_87689
    self.scan1_kernel_88641_var = program.scan1_kernel_88641
    self.scan1_kernel_88760_var = program.scan1_kernel_88760
    self.scan1_kernel_89712_var = program.scan1_kernel_89712
    self.scan1_kernel_90653_var = program.scan1_kernel_90653
    self.scan1_kernel_91729_var = program.scan1_kernel_91729
    self.scan1_kernel_92670_var = program.scan1_kernel_92670
    self.scan1_kernel_93746_var = program.scan1_kernel_93746
    self.scan1_kernel_94698_var = program.scan1_kernel_94698
    self.scan1_kernel_94817_var = program.scan1_kernel_94817
    self.scan1_kernel_95893_var = program.scan1_kernel_95893
    self.scan1_kernel_96834_var = program.scan1_kernel_96834
    self.scan2_kernel_87741_var = program.scan2_kernel_87741
    self.scan2_kernel_88674_var = program.scan2_kernel_88674
    self.scan2_kernel_88796_var = program.scan2_kernel_88796
    self.scan2_kernel_89764_var = program.scan2_kernel_89764
    self.scan2_kernel_90689_var = program.scan2_kernel_90689
    self.scan2_kernel_91781_var = program.scan2_kernel_91781
    self.scan2_kernel_92706_var = program.scan2_kernel_92706
    self.scan2_kernel_93798_var = program.scan2_kernel_93798
    self.scan2_kernel_94731_var = program.scan2_kernel_94731
    self.scan2_kernel_94853_var = program.scan2_kernel_94853
    self.scan2_kernel_95945_var = program.scan2_kernel_95945
    self.scan2_kernel_96870_var = program.scan2_kernel_96870
  def futhark_map_transpose_opencl_f64(self, destmem_0, destoffset_1, srcmem_2,
                                       srcoffset_3, num_arrays_4, x_elems_5,
                                       y_elems_6, in_elems_7, out_elems_8):
    if (((num_arrays_4 * x_elems_5) * y_elems_6) == np.int32(0)):
      pass
    else:
      if ((in_elems_7 == out_elems_8) and (((num_arrays_4 == np.int32(1)) or ((x_elems_5 * y_elems_6) == in_elems_7)) and ((x_elems_5 == np.int32(1)) or (y_elems_6 == np.int32(1))))):
        if ((in_elems_7 * np.int32(8)) != 0):
          cl.enqueue_copy(self.queue, destmem_0, srcmem_2,
                          dest_offset=np.long(destoffset_1),
                          src_offset=np.long(srcoffset_3),
                          byte_count=np.long((in_elems_7 * np.int32(8))))
        if synchronous:
          self.queue.finish()
      else:
        if (sle32(x_elems_5, squot32(np.int32(16),
                                     np.int32(2))) and slt32(np.int32(16),
                                                             y_elems_6)):
          muly_9 = squot32(np.int32(16), x_elems_5)
          new_height_10 = squot32(((y_elems_6 + muly_9) - np.int32(1)), muly_9)
          if ((((1 * (x_elems_5 + srem32((np.int32(16) - srem32(x_elems_5,
                                                                np.int32(16))),
                                         np.int32(16)))) * (new_height_10 + srem32((np.int32(16) - srem32(new_height_10,
                                                                                                          np.int32(16))),
                                                                                   np.int32(16)))) * num_arrays_4) != 0):
            self.fut_kernel_map_transpose_lowwidth_f64_var.set_args(destmem_0,
                                                                    np.int32(destoffset_1),
                                                                    srcmem_2,
                                                                    np.int32(srcoffset_3),
                                                                    np.int32(x_elems_5),
                                                                    np.int32(y_elems_6),
                                                                    np.int32(in_elems_7),
                                                                    np.int32(out_elems_8),
                                                                    np.int32(muly_9),
                                                                    cl.LocalMemory(np.long((np.int32(272) * np.int32(8)))))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.fut_kernel_map_transpose_lowwidth_f64_var,
                                       (np.long((x_elems_5 + srem32((np.int32(16) - srem32(x_elems_5,
                                                                                           np.int32(16))),
                                                                    np.int32(16)))),
                                        np.long((new_height_10 + srem32((np.int32(16) - srem32(new_height_10,
                                                                                               np.int32(16))),
                                                                        np.int32(16)))),
                                        np.long(num_arrays_4)),
                                       (np.long(np.int32(16)),
                                        np.long(np.int32(16)),
                                        np.long(np.int32(1))))
            if synchronous:
              self.queue.finish()
        else:
          if (sle32(y_elems_6, squot32(np.int32(16),
                                       np.int32(2))) and slt32(np.int32(16),
                                                               x_elems_5)):
            mulx_11 = squot32(np.int32(16), y_elems_6)
            new_width_12 = squot32(((x_elems_5 + mulx_11) - np.int32(1)),
                                   mulx_11)
            if ((((1 * (new_width_12 + srem32((np.int32(16) - srem32(new_width_12,
                                                                     np.int32(16))),
                                              np.int32(16)))) * (y_elems_6 + srem32((np.int32(16) - srem32(y_elems_6,
                                                                                                           np.int32(16))),
                                                                                    np.int32(16)))) * num_arrays_4) != 0):
              self.fut_kernel_map_transpose_lowheight_f64_var.set_args(destmem_0,
                                                                       np.int32(destoffset_1),
                                                                       srcmem_2,
                                                                       np.int32(srcoffset_3),
                                                                       np.int32(x_elems_5),
                                                                       np.int32(y_elems_6),
                                                                       np.int32(in_elems_7),
                                                                       np.int32(out_elems_8),
                                                                       np.int32(mulx_11),
                                                                       cl.LocalMemory(np.long((np.int32(272) * np.int32(8)))))
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.fut_kernel_map_transpose_lowheight_f64_var,
                                         (np.long((new_width_12 + srem32((np.int32(16) - srem32(new_width_12,
                                                                                                np.int32(16))),
                                                                         np.int32(16)))),
                                          np.long((y_elems_6 + srem32((np.int32(16) - srem32(y_elems_6,
                                                                                             np.int32(16))),
                                                                      np.int32(16)))),
                                          np.long(num_arrays_4)),
                                         (np.long(np.int32(16)),
                                          np.long(np.int32(16)),
                                          np.long(np.int32(1))))
              if synchronous:
                self.queue.finish()
          else:
            if (sle32(x_elems_5, squot32(np.int32(16),
                                         np.int32(2))) and sle32(y_elems_6,
                                                                 squot32(np.int32(16),
                                                                         np.int32(2)))):
              if ((1 * (((num_arrays_4 * x_elems_5) * y_elems_6) + srem32((np.int32(256) - srem32(((num_arrays_4 * x_elems_5) * y_elems_6),
                                                                                                  np.int32(256))),
                                                                          np.int32(256)))) != 0):
                self.fut_kernel_map_transpose_small_f64_var.set_args(destmem_0,
                                                                     np.int32(destoffset_1),
                                                                     srcmem_2,
                                                                     np.int32(srcoffset_3),
                                                                     np.int32(num_arrays_4),
                                                                     np.int32(x_elems_5),
                                                                     np.int32(y_elems_6),
                                                                     np.int32(in_elems_7),
                                                                     np.int32(out_elems_8))
                cl.enqueue_nd_range_kernel(self.queue,
                                           self.fut_kernel_map_transpose_small_f64_var,
                                           (np.long((((num_arrays_4 * x_elems_5) * y_elems_6) + srem32((np.int32(256) - srem32(((num_arrays_4 * x_elems_5) * y_elems_6),
                                                                                                                               np.int32(256))),
                                                                                                       np.int32(256)))),),
                                           (np.long(np.int32(256)),))
                if synchronous:
                  self.queue.finish()
            else:
              if ((((1 * (x_elems_5 + srem32((np.int32(16) - srem32(x_elems_5,
                                                                    np.int32(16))),
                                             np.int32(16)))) * (y_elems_6 + srem32((np.int32(16) - srem32(y_elems_6,
                                                                                                          np.int32(16))),
                                                                                   np.int32(16)))) * num_arrays_4) != 0):
                self.fut_kernel_map_transpose_f64_var.set_args(destmem_0,
                                                               np.int32(destoffset_1),
                                                               srcmem_2,
                                                               np.int32(srcoffset_3),
                                                               np.int32(x_elems_5),
                                                               np.int32(y_elems_6),
                                                               np.int32(in_elems_7),
                                                               np.int32(out_elems_8),
                                                               cl.LocalMemory(np.long((np.int32(272) * np.int32(8)))))
                cl.enqueue_nd_range_kernel(self.queue,
                                           self.fut_kernel_map_transpose_f64_var,
                                           (np.long((x_elems_5 + srem32((np.int32(16) - srem32(x_elems_5,
                                                                                               np.int32(16))),
                                                                        np.int32(16)))),
                                            np.long((y_elems_6 + srem32((np.int32(16) - srem32(y_elems_6,
                                                                                               np.int32(16))),
                                                                        np.int32(16)))),
                                            np.long(num_arrays_4)),
                                           (np.long(np.int32(16)),
                                            np.long(np.int32(16)),
                                            np.long(np.int32(1))))
                if synchronous:
                  self.queue.finish()
    return ()
  def futhark_map_transpose_opencl_i16(self, destmem_0, destoffset_1, srcmem_2,
                                       srcoffset_3, num_arrays_4, x_elems_5,
                                       y_elems_6, in_elems_7, out_elems_8):
    if (((num_arrays_4 * x_elems_5) * y_elems_6) == np.int32(0)):
      pass
    else:
      if ((in_elems_7 == out_elems_8) and (((num_arrays_4 == np.int32(1)) or ((x_elems_5 * y_elems_6) == in_elems_7)) and ((x_elems_5 == np.int32(1)) or (y_elems_6 == np.int32(1))))):
        if ((in_elems_7 * np.int32(2)) != 0):
          cl.enqueue_copy(self.queue, destmem_0, srcmem_2,
                          dest_offset=np.long(destoffset_1),
                          src_offset=np.long(srcoffset_3),
                          byte_count=np.long((in_elems_7 * np.int32(2))))
        if synchronous:
          self.queue.finish()
      else:
        if (sle32(x_elems_5, squot32(np.int32(16),
                                     np.int32(2))) and slt32(np.int32(16),
                                                             y_elems_6)):
          muly_9 = squot32(np.int32(16), x_elems_5)
          new_height_10 = squot32(((y_elems_6 + muly_9) - np.int32(1)), muly_9)
          if ((((1 * (x_elems_5 + srem32((np.int32(16) - srem32(x_elems_5,
                                                                np.int32(16))),
                                         np.int32(16)))) * (new_height_10 + srem32((np.int32(16) - srem32(new_height_10,
                                                                                                          np.int32(16))),
                                                                                   np.int32(16)))) * num_arrays_4) != 0):
            self.fut_kernel_map_transpose_lowwidth_i16_var.set_args(destmem_0,
                                                                    np.int32(destoffset_1),
                                                                    srcmem_2,
                                                                    np.int32(srcoffset_3),
                                                                    np.int32(x_elems_5),
                                                                    np.int32(y_elems_6),
                                                                    np.int32(in_elems_7),
                                                                    np.int32(out_elems_8),
                                                                    np.int32(muly_9),
                                                                    cl.LocalMemory(np.long((np.int32(272) * np.int32(2)))))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.fut_kernel_map_transpose_lowwidth_i16_var,
                                       (np.long((x_elems_5 + srem32((np.int32(16) - srem32(x_elems_5,
                                                                                           np.int32(16))),
                                                                    np.int32(16)))),
                                        np.long((new_height_10 + srem32((np.int32(16) - srem32(new_height_10,
                                                                                               np.int32(16))),
                                                                        np.int32(16)))),
                                        np.long(num_arrays_4)),
                                       (np.long(np.int32(16)),
                                        np.long(np.int32(16)),
                                        np.long(np.int32(1))))
            if synchronous:
              self.queue.finish()
        else:
          if (sle32(y_elems_6, squot32(np.int32(16),
                                       np.int32(2))) and slt32(np.int32(16),
                                                               x_elems_5)):
            mulx_11 = squot32(np.int32(16), y_elems_6)
            new_width_12 = squot32(((x_elems_5 + mulx_11) - np.int32(1)),
                                   mulx_11)
            if ((((1 * (new_width_12 + srem32((np.int32(16) - srem32(new_width_12,
                                                                     np.int32(16))),
                                              np.int32(16)))) * (y_elems_6 + srem32((np.int32(16) - srem32(y_elems_6,
                                                                                                           np.int32(16))),
                                                                                    np.int32(16)))) * num_arrays_4) != 0):
              self.fut_kernel_map_transpose_lowheight_i16_var.set_args(destmem_0,
                                                                       np.int32(destoffset_1),
                                                                       srcmem_2,
                                                                       np.int32(srcoffset_3),
                                                                       np.int32(x_elems_5),
                                                                       np.int32(y_elems_6),
                                                                       np.int32(in_elems_7),
                                                                       np.int32(out_elems_8),
                                                                       np.int32(mulx_11),
                                                                       cl.LocalMemory(np.long((np.int32(272) * np.int32(2)))))
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.fut_kernel_map_transpose_lowheight_i16_var,
                                         (np.long((new_width_12 + srem32((np.int32(16) - srem32(new_width_12,
                                                                                                np.int32(16))),
                                                                         np.int32(16)))),
                                          np.long((y_elems_6 + srem32((np.int32(16) - srem32(y_elems_6,
                                                                                             np.int32(16))),
                                                                      np.int32(16)))),
                                          np.long(num_arrays_4)),
                                         (np.long(np.int32(16)),
                                          np.long(np.int32(16)),
                                          np.long(np.int32(1))))
              if synchronous:
                self.queue.finish()
          else:
            if (sle32(x_elems_5, squot32(np.int32(16),
                                         np.int32(2))) and sle32(y_elems_6,
                                                                 squot32(np.int32(16),
                                                                         np.int32(2)))):
              if ((1 * (((num_arrays_4 * x_elems_5) * y_elems_6) + srem32((np.int32(256) - srem32(((num_arrays_4 * x_elems_5) * y_elems_6),
                                                                                                  np.int32(256))),
                                                                          np.int32(256)))) != 0):
                self.fut_kernel_map_transpose_small_i16_var.set_args(destmem_0,
                                                                     np.int32(destoffset_1),
                                                                     srcmem_2,
                                                                     np.int32(srcoffset_3),
                                                                     np.int32(num_arrays_4),
                                                                     np.int32(x_elems_5),
                                                                     np.int32(y_elems_6),
                                                                     np.int32(in_elems_7),
                                                                     np.int32(out_elems_8))
                cl.enqueue_nd_range_kernel(self.queue,
                                           self.fut_kernel_map_transpose_small_i16_var,
                                           (np.long((((num_arrays_4 * x_elems_5) * y_elems_6) + srem32((np.int32(256) - srem32(((num_arrays_4 * x_elems_5) * y_elems_6),
                                                                                                                               np.int32(256))),
                                                                                                       np.int32(256)))),),
                                           (np.long(np.int32(256)),))
                if synchronous:
                  self.queue.finish()
            else:
              if ((((1 * (x_elems_5 + srem32((np.int32(16) - srem32(x_elems_5,
                                                                    np.int32(16))),
                                             np.int32(16)))) * (y_elems_6 + srem32((np.int32(16) - srem32(y_elems_6,
                                                                                                          np.int32(16))),
                                                                                   np.int32(16)))) * num_arrays_4) != 0):
                self.fut_kernel_map_transpose_i16_var.set_args(destmem_0,
                                                               np.int32(destoffset_1),
                                                               srcmem_2,
                                                               np.int32(srcoffset_3),
                                                               np.int32(x_elems_5),
                                                               np.int32(y_elems_6),
                                                               np.int32(in_elems_7),
                                                               np.int32(out_elems_8),
                                                               cl.LocalMemory(np.long((np.int32(272) * np.int32(2)))))
                cl.enqueue_nd_range_kernel(self.queue,
                                           self.fut_kernel_map_transpose_i16_var,
                                           (np.long((x_elems_5 + srem32((np.int32(16) - srem32(x_elems_5,
                                                                                               np.int32(16))),
                                                                        np.int32(16)))),
                                            np.long((y_elems_6 + srem32((np.int32(16) - srem32(y_elems_6,
                                                                                               np.int32(16))),
                                                                        np.int32(16)))),
                                            np.long(num_arrays_4)),
                                           (np.long(np.int32(16)),
                                            np.long(np.int32(16)),
                                            np.long(np.int32(1))))
                if synchronous:
                  self.queue.finish()
    return ()
  def futhark_main(self, detectorPositions_mem_sizze_97019,
                   detectorPositions_mem_97020, angles_mem_sizze_97021,
                   angles_mem_97022, sizze_73917, sizze_73918,
                   gridHalfWidth_73921, delta_73922, rowOffset_73923,
                   inMode_73924, numRows_73925):
    x_73926 = (np.float64(2.0) * gridHalfWidth_73921)
    x_73927 = (x_73926 / delta_73922)
    group_sizze_86698 = self.sizes["group_size_86697"]
    max_num_groups_86700 = self.sizes["max_num_groups_86699"]
    y_86701 = (group_sizze_86698 - np.int32(1))
    x_86702 = (sizze_73918 + y_86701)
    w_div_group_sizze_86703 = squot32(x_86702, group_sizze_86698)
    num_groups_maybe_zzero_86704 = smin32(w_div_group_sizze_86703,
                                          max_num_groups_86700)
    num_groups_86705 = smax32(np.int32(1), num_groups_maybe_zzero_86704)
    num_threads_86706 = (num_groups_86705 * group_sizze_86698)
    y_86707 = (num_threads_86706 - np.int32(1))
    x_86708 = (sizze_73918 + y_86707)
    per_thread_elements_86709 = squot32(x_86708, num_threads_86706)
    binop_x_97027 = sext_i32_i64(num_groups_86705)
    bytes_97026 = (binop_x_97027 * np.int64(8))
    mem_97028 = opencl_alloc(self, bytes_97026, "mem_97028")
    binop_x_97024 = sext_i32_i64(group_sizze_86698)
    bytes_97023 = (binop_x_97024 * np.int64(8))
    if ((1 * (num_groups_86705 * group_sizze_86698)) != 0):
      self.chunked_reduce_kernel_86714_var.set_args(cl.LocalMemory(np.long(bytes_97023)),
                                                    np.int32(sizze_73918),
                                                    np.float64(x_73927),
                                                    np.int32(num_threads_86706),
                                                    np.int32(per_thread_elements_86709),
                                                    angles_mem_97022, mem_97028)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.chunked_reduce_kernel_86714_var,
                                 (np.long((num_groups_86705 * group_sizze_86698)),),
                                 (np.long(group_sizze_86698),))
      if synchronous:
        self.queue.finish()
    mem_97034 = opencl_alloc(self, np.int64(8), "mem_97034")
    binop_x_97030 = sext_i32_i64(max_num_groups_86700)
    bytes_97029 = (binop_x_97030 * np.int64(8))
    if ((1 * max_num_groups_86700) != 0):
      self.reduce_kernel_86791_var.set_args(cl.LocalMemory(np.long(bytes_97029)),
                                            np.int32(num_groups_86705),
                                            mem_97028, mem_97034)
      cl.enqueue_nd_range_kernel(self.queue, self.reduce_kernel_86791_var,
                                 (np.long(max_num_groups_86700),),
                                 (np.long(max_num_groups_86700),))
      if synchronous:
        self.queue.finish()
    read_res_98615 = np.empty(1, dtype=ct.c_double)
    cl.enqueue_copy(self.queue, read_res_98615, mem_97034,
                    device_offset=np.long(np.int32(0)), is_blocking=True)
    res_73928 = read_res_98615[0]
    res_73986 = fptosi_f64_i32(res_73928)
    arg_73987 = (gridHalfWidth_73921 / delta_73922)
    res_73988 = fptosi_f64_i16(arg_73987)
    nesting_sizze_86802 = (sizze_73917 * sizze_73918)
    group_sizze_86804 = self.sizes["group_size_86803"]
    y_86805 = (group_sizze_86804 - np.int32(1))
    x_86806 = (nesting_sizze_86802 + y_86805)
    num_groups_86807 = squot32(x_86806, group_sizze_86804)
    num_threads_86808 = (num_groups_86807 * group_sizze_86804)
    convop_x_97036 = (sizze_73918 * sizze_73917)
    binop_x_97037 = sext_i32_i64(convop_x_97036)
    bytes_97035 = (binop_x_97037 * np.int64(8))
    mem_97038 = opencl_alloc(self, bytes_97035, "mem_97038")
    if ((1 * (num_groups_86807 * group_sizze_86804)) != 0):
      self.map_kernel_86809_var.set_args(np.int32(sizze_73917),
                                         np.int32(sizze_73918),
                                         angles_mem_97022, mem_97038)
      cl.enqueue_nd_range_kernel(self.queue, self.map_kernel_86809_var,
                                 (np.long((num_groups_86807 * group_sizze_86804)),),
                                 (np.long(group_sizze_86804),))
      if synchronous:
        self.queue.finish()
    cond_73997 = (inMode_73924 == np.int16(1))
    last_index_73998 = (nesting_sizze_86802 - np.int32(1))
    is_empty_73999 = (nesting_sizze_86802 == np.int32(0))
    bounds_invalid_upwards_74000 = slt32(res_73986, np.int32(0))
    if bounds_invalid_upwards_74000:
      num_elems_74001 = np.int32(0)
    else:
      num_elems_74001 = res_73986
    bounds_invalid_upwards_74002 = slt32(numRows_73925, np.int32(0))
    if bounds_invalid_upwards_74002:
      num_elems_74003 = np.int32(0)
    else:
      num_elems_74003 = numRows_73925
    conc_tmp_74004 = (np.int32(1) + num_elems_74003)
    res_74005 = fptosi_f64_i32(arg_73987)
    y_74006 = (res_74005 * np.int32(2))
    group_sizze_86815 = self.sizes["group_size_86814"]
    max_num_groups_86817 = self.sizes["max_num_groups_86816"]
    y_86818 = (group_sizze_86815 - np.int32(1))
    x_86819 = (nesting_sizze_86802 + y_86818)
    binop_x_97040 = sext_i32_i64(nesting_sizze_86802)
    bytes_97039 = (binop_x_97040 * np.int64(4))
    bytes_97045 = (binop_x_97040 * np.int64(2))
    bytes_97051 = (binop_x_97040 * np.int64(8))
    binop_x_97071 = sext_i32_i64(group_sizze_86815)
    bytes_97070 = (binop_x_97071 * np.int64(4))
    group_sizze_87764 = self.sizes["group_size_87763"]
    y_87765 = (group_sizze_87764 - np.int32(1))
    x_87766 = (nesting_sizze_86802 + y_87765)
    group_sizze_87774 = self.sizes["group_size_87773"]
    y_87775 = (group_sizze_87774 - np.int32(1))
    x_87776 = (nesting_sizze_86802 + y_87775)
    group_sizze_88504 = self.sizes["group_size_88503"]
    y_88505 = (group_sizze_88504 - np.int32(1))
    group_sizze_87816 = self.sizes["group_size_87815"]
    y_87817 = (group_sizze_87816 - np.int32(1))
    binop_x_97135 = sext_i32_i64(num_elems_74001)
    bytes_97134 = (binop_x_97135 * np.int64(2))
    bytes_97140 = (binop_x_97135 * np.int64(8))
    binop_x_97315 = sext_i32_i64(num_elems_74003)
    bytes_97314 = (binop_x_97315 * np.int64(4))
    group_sizze_88613 = self.sizes["group_size_88612"]
    max_num_groups_88615 = self.sizes["max_num_groups_88614"]
    y_88616 = (group_sizze_88613 - np.int32(1))
    x_88617 = (conc_tmp_74004 + y_88616)
    binop_x_97318 = sext_i32_i64(conc_tmp_74004)
    bytes_97317 = (binop_x_97318 * np.int64(4))
    group_sizze_88726 = self.sizes["group_size_88725"]
    max_num_groups_88728 = self.sizes["max_num_groups_88727"]
    y_88729 = (group_sizze_88726 - np.int32(1))
    binop_x_97363 = sext_i32_i64(group_sizze_88726)
    bytes_97362 = (binop_x_97363 * np.int64(4))
    group_sizze_88819 = self.sizes["group_size_88818"]
    y_88820 = (group_sizze_88819 - np.int32(1))
    group_sizze_88838 = self.sizes["group_size_88837"]
    max_num_groups_88840 = self.sizes["max_num_groups_88839"]
    y_88841 = (group_sizze_88838 - np.int32(1))
    x_88842 = (nesting_sizze_86802 + y_88841)
    binop_x_97427 = sext_i32_i64(group_sizze_88838)
    bytes_97426 = (binop_x_97427 * np.int64(4))
    group_sizze_89787 = self.sizes["group_size_89786"]
    y_89788 = (group_sizze_89787 - np.int32(1))
    x_89789 = (nesting_sizze_86802 + y_89788)
    group_sizze_89797 = self.sizes["group_size_89796"]
    y_89798 = (group_sizze_89797 - np.int32(1))
    x_89799 = (nesting_sizze_86802 + y_89798)
    group_sizze_90523 = self.sizes["group_size_90522"]
    y_90524 = (group_sizze_90523 - np.int32(1))
    group_sizze_89876 = self.sizes["group_size_89875"]
    y_89877 = (group_sizze_89876 - np.int32(1))
    group_sizze_90619 = self.sizes["group_size_90618"]
    max_num_groups_90621 = self.sizes["max_num_groups_90620"]
    y_90622 = (group_sizze_90619 - np.int32(1))
    binop_x_97696 = sext_i32_i64(group_sizze_90619)
    bytes_97695 = (binop_x_97696 * np.int64(4))
    group_sizze_90712 = self.sizes["group_size_90711"]
    y_90713 = (group_sizze_90712 - np.int32(1))
    binop_x_97321 = sext_i32_i64(group_sizze_88613)
    bytes_97320 = (binop_x_97321 * np.int64(4))
    if cond_73997:
      w_div_group_sizze_86820 = squot32(x_86819, group_sizze_86815)
      num_groups_maybe_zzero_86821 = smin32(w_div_group_sizze_86820,
                                            max_num_groups_86817)
      num_groups_86822 = smax32(np.int32(1), num_groups_maybe_zzero_86821)
      num_threads_86823 = (num_groups_86822 * group_sizze_86815)
      mem_97041 = opencl_alloc(self, bytes_97039, "mem_97041")
      mem_97044 = opencl_alloc(self, bytes_97039, "mem_97044")
      mem_97047 = opencl_alloc(self, bytes_97045, "mem_97047")
      mem_97050 = opencl_alloc(self, bytes_97045, "mem_97050")
      mem_97053 = opencl_alloc(self, bytes_97051, "mem_97053")
      mem_97055 = opencl_alloc(self, binop_x_97040, "mem_97055")
      mem_97057 = opencl_alloc(self, binop_x_97040, "mem_97057")
      y_87692 = (num_threads_86823 - np.int32(1))
      x_87693 = (nesting_sizze_86802 + y_87692)
      num_iterations_87694 = squot32(x_87693, num_threads_86823)
      y_87697 = (num_iterations_87694 * group_sizze_86815)
      binop_x_97083 = sext_i32_i64(num_groups_86822)
      bytes_97082 = (binop_x_97083 * np.int64(4))
      mem_97084 = opencl_alloc(self, bytes_97082, "mem_97084")
      if ((1 * (num_groups_86822 * group_sizze_86815)) != 0):
        self.scan1_kernel_87689_var.set_args(cl.LocalMemory(np.long(bytes_97070)),
                                             np.int32(sizze_73917),
                                             np.float64(gridHalfWidth_73921),
                                             np.float64(delta_73922),
                                             np.int32(nesting_sizze_86802),
                                             np.int32(num_iterations_87694),
                                             np.int32(y_87697),
                                             detectorPositions_mem_97020,
                                             mem_97038, mem_97041, mem_97044,
                                             mem_97047, mem_97050, mem_97053,
                                             mem_97055, mem_97057, mem_97084)
        cl.enqueue_nd_range_kernel(self.queue, self.scan1_kernel_87689_var,
                                   (np.long((num_groups_86822 * group_sizze_86815)),),
                                   (np.long(group_sizze_86815),))
        if synchronous:
          self.queue.finish()
      mem_97090 = opencl_alloc(self, bytes_97082, "mem_97090")
      if ((1 * num_groups_86822) != 0):
        self.scan2_kernel_87741_var.set_args(cl.LocalMemory(np.long(bytes_97082)),
                                             np.int32(num_groups_86822),
                                             mem_97084, mem_97090)
        cl.enqueue_nd_range_kernel(self.queue, self.scan2_kernel_87741_var,
                                   (np.long(num_groups_86822),),
                                   (np.long(num_groups_86822),))
        if synchronous:
          self.queue.finish()
      num_groups_87767 = squot32(x_87766, group_sizze_87764)
      num_threads_87768 = (num_groups_87767 * group_sizze_87764)
      mem_97093 = opencl_alloc(self, bytes_97039, "mem_97093")
      if ((1 * (num_groups_87767 * group_sizze_87764)) != 0):
        self.map_kernel_87769_var.set_args(np.int32(nesting_sizze_86802),
                                           np.int32(y_87697), mem_97041,
                                           mem_97090, mem_97093)
        cl.enqueue_nd_range_kernel(self.queue, self.map_kernel_87769_var,
                                   (np.long((num_groups_87767 * group_sizze_87764)),),
                                   (np.long(group_sizze_87764),))
        if synchronous:
          self.queue.finish()
      if is_empty_73999:
        partition_sizze_75707 = np.int32(0)
      else:
        read_res_98616 = np.empty(1, dtype=ct.c_int32)
        cl.enqueue_copy(self.queue, read_res_98616, mem_97093,
                        device_offset=np.long((last_index_73998 * np.int32(4))),
                        is_blocking=True)
        last_offset_75708 = read_res_98616[0]
        partition_sizze_75707 = last_offset_75708
      binop_x_97095 = sext_i32_i64(partition_sizze_75707)
      bytes_97094 = (binop_x_97095 * np.int64(8))
      mem_97096 = opencl_alloc(self, bytes_97094, "mem_97096")
      bytes_97097 = (binop_x_97095 * np.int64(2))
      mem_97099 = opencl_alloc(self, bytes_97097, "mem_97099")
      mem_97102 = opencl_alloc(self, bytes_97097, "mem_97102")
      mem_97105 = opencl_alloc(self, bytes_97094, "mem_97105")
      mem_97107 = opencl_alloc(self, binop_x_97095, "mem_97107")
      bytes_97108 = (binop_x_97095 * np.int64(4))
      mem_97110 = opencl_alloc(self, bytes_97108, "mem_97110")
      num_groups_87777 = squot32(x_87776, group_sizze_87774)
      num_threads_87778 = (num_groups_87777 * group_sizze_87774)
      if ((1 * (num_groups_87777 * group_sizze_87774)) != 0):
        self.map_kernel_87779_var.set_args(np.int32(sizze_73917),
                                           np.int32(rowOffset_73923),
                                           np.int32(partition_sizze_75707),
                                           np.int32(nesting_sizze_86802),
                                           mem_97038, mem_97044, mem_97047,
                                           mem_97050, mem_97053, mem_97055,
                                           mem_97093, mem_97096, mem_97099,
                                           mem_97102, mem_97105, mem_97107,
                                           mem_97110)
        cl.enqueue_nd_range_kernel(self.queue, self.map_kernel_87779_var,
                                   (np.long((num_groups_87777 * group_sizze_87774)),),
                                   (np.long(group_sizze_87774),))
        if synchronous:
          self.queue.finish()
      x_75734 = abs(partition_sizze_75707)
      x_88506 = (x_75734 + y_88505)
      num_groups_88507 = squot32(x_88506, group_sizze_88504)
      num_threads_88508 = (num_groups_88507 * group_sizze_88504)
      binop_x_97112 = sext_i32_i64(x_75734)
      bytes_97111 = (binop_x_97112 * np.int64(2))
      mem_97113 = opencl_alloc(self, bytes_97111, "mem_97113")
      mem_97116 = opencl_alloc(self, bytes_97111, "mem_97116")
      mem_97118 = opencl_alloc(self, binop_x_97112, "mem_97118")
      mem_97121 = opencl_alloc(self, bytes_97111, "mem_97121")
      mem_97124 = opencl_alloc(self, bytes_97111, "mem_97124")
      mem_97127 = opencl_alloc(self, bytes_97111, "mem_97127")
      mem_97130 = opencl_alloc(self, bytes_97111, "mem_97130")
      bytes_97131 = (binop_x_97112 * np.int64(8))
      mem_97133 = opencl_alloc(self, bytes_97131, "mem_97133")
      if ((1 * (num_groups_88507 * group_sizze_88504)) != 0):
        self.map_kernel_88509_var.set_args(np.int16(res_73988),
                                           np.int32(x_75734), mem_97096,
                                           mem_97099, mem_97102, mem_97113,
                                           mem_97116, mem_97118, mem_97121,
                                           mem_97124, mem_97127, mem_97130,
                                           mem_97133)
        cl.enqueue_nd_range_kernel(self.queue, self.map_kernel_88509_var,
                                   (np.long((num_groups_88507 * group_sizze_88504)),),
                                   (np.long(group_sizze_88504),))
        if synchronous:
          self.queue.finish()
      x_87818 = (x_75734 + y_87817)
      num_groups_87819 = squot32(x_87818, group_sizze_87816)
      num_threads_87820 = (num_groups_87819 * group_sizze_87816)
      bytes_97299 = (binop_x_97112 * np.int64(4))
      mem_97301 = opencl_alloc(self, bytes_97299, "mem_97301")
      convop_x_97303 = (num_elems_74001 * x_75734)
      binop_x_97304 = sext_i32_i64(convop_x_97303)
      bytes_97302 = (binop_x_97304 * np.int64(2))
      mem_97305 = opencl_alloc(self, bytes_97302, "mem_97305")
      mem_97309 = opencl_alloc(self, bytes_97302, "mem_97309")
      bytes_97310 = (binop_x_97304 * np.int64(8))
      mem_97313 = opencl_alloc(self, bytes_97310, "mem_97313")
      num_threads64_97749 = sext_i32_i64(num_threads_87820)
      total_sizze_97750 = (num_threads64_97749 * bytes_97134)
      mem_97136 = opencl_alloc(self, total_sizze_97750, "mem_97136")
      total_sizze_97751 = (num_threads64_97749 * bytes_97134)
      mem_97139 = opencl_alloc(self, total_sizze_97751, "mem_97139")
      total_sizze_97752 = (num_threads64_97749 * bytes_97140)
      mem_97142 = opencl_alloc(self, total_sizze_97752, "mem_97142")
      if ((1 * (num_groups_87819 * group_sizze_87816)) != 0):
        self.map_kernel_87821_var.set_args(np.float64(delta_73922),
                                           np.int32(num_elems_74001),
                                           np.int32(x_75734), mem_97105,
                                           mem_97107, mem_97113, mem_97116,
                                           mem_97118, mem_97121, mem_97124,
                                           mem_97127, mem_97130, mem_97133,
                                           mem_97136, mem_97139, mem_97142,
                                           mem_97301, mem_97305, mem_97309,
                                           mem_97313)
        cl.enqueue_nd_range_kernel(self.queue, self.map_kernel_87821_var,
                                   (np.long((num_groups_87819 * group_sizze_87816)),),
                                   (np.long(group_sizze_87816),))
        if synchronous:
          self.queue.finish()
      mem_97316 = opencl_alloc(self, bytes_97314, "mem_97316")
      group_sizze_97904 = self.sizes["group_size_97904"]
      num_groups_97905 = squot32(((num_elems_74003 + sext_i32_i32(group_sizze_97904)) - np.int32(1)),
                                 sext_i32_i32(group_sizze_97904))
      if ((1 * (num_groups_97905 * group_sizze_97904)) != 0):
        self.kernel_replicate_97901_var.set_args(np.int32(num_elems_74003),
                                                 mem_97316)
        cl.enqueue_nd_range_kernel(self.queue, self.kernel_replicate_97901_var,
                                   (np.long((num_groups_97905 * group_sizze_97904)),),
                                   (np.long(group_sizze_97904),))
        if synchronous:
          self.queue.finish()
      group_sizze_88601 = self.sizes["group_size_88600"]
      y_88602 = (group_sizze_88601 - np.int32(1))
      x_88603 = (x_75734 + y_88602)
      num_groups_88604 = squot32(x_88603, group_sizze_88601)
      num_threads_88605 = (num_groups_88604 * group_sizze_88601)
      if ((1 * (num_groups_88604 * group_sizze_88601)) != 0):
        self.map_kernel_88606_var.set_args(np.int32(num_elems_74003),
                                           np.int32(x_75734), mem_97110,
                                           mem_97301, mem_97316)
        cl.enqueue_nd_range_kernel(self.queue, self.map_kernel_88606_var,
                                   (np.long((num_groups_88604 * group_sizze_88601)),),
                                   (np.long(group_sizze_88601),))
        if synchronous:
          self.queue.finish()
      w_div_group_sizze_88618 = squot32(x_88617, group_sizze_88613)
      num_groups_maybe_zzero_88619 = smin32(w_div_group_sizze_88618,
                                            max_num_groups_88615)
      num_groups_88620 = smax32(np.int32(1), num_groups_maybe_zzero_88619)
      num_threads_88621 = (num_groups_88620 * group_sizze_88613)
      mem_97319 = opencl_alloc(self, bytes_97317, "mem_97319")
      y_88644 = (num_threads_88621 - np.int32(1))
      x_88645 = (conc_tmp_74004 + y_88644)
      num_iterations_88646 = squot32(x_88645, num_threads_88621)
      y_88649 = (num_iterations_88646 * group_sizze_88613)
      binop_x_97327 = sext_i32_i64(num_groups_88620)
      bytes_97326 = (binop_x_97327 * np.int64(4))
      mem_97328 = opencl_alloc(self, bytes_97326, "mem_97328")
      if ((1 * (num_groups_88620 * group_sizze_88613)) != 0):
        self.scan1_kernel_88641_var.set_args(cl.LocalMemory(np.long(bytes_97320)),
                                             np.int32(conc_tmp_74004),
                                             np.int32(num_iterations_88646),
                                             np.int32(y_88649), mem_97316,
                                             mem_97319, mem_97328)
        cl.enqueue_nd_range_kernel(self.queue, self.scan1_kernel_88641_var,
                                   (np.long((num_groups_88620 * group_sizze_88613)),),
                                   (np.long(group_sizze_88613),))
        if synchronous:
          self.queue.finish()
      mem_97334 = opencl_alloc(self, bytes_97326, "mem_97334")
      if ((1 * num_groups_88620) != 0):
        self.scan2_kernel_88674_var.set_args(cl.LocalMemory(np.long(bytes_97326)),
                                             np.int32(num_groups_88620),
                                             mem_97328, mem_97334)
        cl.enqueue_nd_range_kernel(self.queue, self.scan2_kernel_88674_var,
                                   (np.long(num_groups_88620),),
                                   (np.long(num_groups_88620),))
        if synchronous:
          self.queue.finish()
      group_sizze_88697 = self.sizes["group_size_88696"]
      y_88698 = (group_sizze_88697 - np.int32(1))
      x_88699 = (conc_tmp_74004 + y_88698)
      num_groups_88700 = squot32(x_88699, group_sizze_88697)
      num_threads_88701 = (num_groups_88700 * group_sizze_88697)
      mem_97337 = opencl_alloc(self, bytes_97317, "mem_97337")
      if ((1 * (num_groups_88700 * group_sizze_88697)) != 0):
        self.map_kernel_88702_var.set_args(np.int32(conc_tmp_74004),
                                           np.int32(y_88649), mem_97319,
                                           mem_97334, mem_97337)
        cl.enqueue_nd_range_kernel(self.queue, self.map_kernel_88702_var,
                                   (np.long((num_groups_88700 * group_sizze_88697)),),
                                   (np.long(group_sizze_88697),))
        if synchronous:
          self.queue.finish()
      group_sizze_88709 = self.sizes["group_size_88708"]
      y_88710 = (group_sizze_88709 - np.int32(1))
      x_88711 = (convop_x_97303 + y_88710)
      num_groups_88712 = squot32(x_88711, group_sizze_88709)
      num_threads_88713 = (num_groups_88712 * group_sizze_88709)
      convop_x_97339 = (x_75734 * num_elems_74001)
      binop_x_97340 = sext_i32_i64(convop_x_97339)
      bytes_97338 = (binop_x_97340 * np.int64(2))
      mem_97341 = opencl_alloc(self, bytes_97338, "mem_97341")
      self.futhark_map_transpose_opencl_i16(mem_97341, np.int32(0), mem_97305,
                                            np.int32(0), np.int32(1), x_75734,
                                            num_elems_74001,
                                            (x_75734 * num_elems_74001),
                                            (x_75734 * num_elems_74001))
      mem_97345 = opencl_alloc(self, bytes_97338, "mem_97345")
      self.futhark_map_transpose_opencl_i16(mem_97345, np.int32(0), mem_97309,
                                            np.int32(0), np.int32(1), x_75734,
                                            num_elems_74001,
                                            (x_75734 * num_elems_74001),
                                            (x_75734 * num_elems_74001))
      bytes_97346 = (binop_x_97340 * np.int64(4))
      mem_97349 = opencl_alloc(self, bytes_97346, "mem_97349")
      if ((1 * (num_groups_88712 * group_sizze_88709)) != 0):
        self.map_kernel_88714_var.set_args(np.int32(num_elems_74001),
                                           np.int32(res_74005),
                                           np.int32(y_74006), np.int32(x_75734),
                                           mem_97341, mem_97345, mem_97349)
        cl.enqueue_nd_range_kernel(self.queue, self.map_kernel_88714_var,
                                   (np.long((num_groups_88712 * group_sizze_88709)),),
                                   (np.long(group_sizze_88709),))
        if synchronous:
          self.queue.finish()
      x_88730 = (convop_x_97339 + y_88729)
      w_div_group_sizze_88731 = squot32(x_88730, group_sizze_88726)
      num_groups_maybe_zzero_88732 = smin32(w_div_group_sizze_88731,
                                            max_num_groups_88728)
      num_groups_88733 = smax32(np.int32(1), num_groups_maybe_zzero_88732)
      num_threads_88734 = (num_groups_88733 * group_sizze_88726)
      mem_97352 = opencl_alloc(self, bytes_97346, "mem_97352")
      mem_97355 = opencl_alloc(self, bytes_97346, "mem_97355")
      y_88763 = (num_threads_88734 - np.int32(1))
      x_88764 = (convop_x_97339 + y_88763)
      num_iterations_88765 = squot32(x_88764, num_threads_88734)
      y_88768 = (num_iterations_88765 * group_sizze_88726)
      bytes_97356 = (binop_x_97340 * np.int64(8))
      mem_97359 = opencl_alloc(self, bytes_97356, "mem_97359")
      self.futhark_map_transpose_opencl_f64(mem_97359, np.int32(0), mem_97313,
                                            np.int32(0), np.int32(1), x_75734,
                                            num_elems_74001,
                                            (x_75734 * num_elems_74001),
                                            (x_75734 * num_elems_74001))
      binop_x_97370 = sext_i32_i64(num_groups_88733)
      bytes_97369 = (binop_x_97370 * np.int64(4))
      mem_97371 = opencl_alloc(self, bytes_97369, "mem_97371")
      if ((1 * (num_groups_88733 * group_sizze_88726)) != 0):
        self.scan1_kernel_88760_var.set_args(cl.LocalMemory(np.long(bytes_97362)),
                                             np.int32(num_elems_74001),
                                             np.int32(num_iterations_88765),
                                             np.int32(y_88768),
                                             np.int32(convop_x_97339),
                                             mem_97352, mem_97355, mem_97359,
                                             mem_97371)
        cl.enqueue_nd_range_kernel(self.queue, self.scan1_kernel_88760_var,
                                   (np.long((num_groups_88733 * group_sizze_88726)),),
                                   (np.long(group_sizze_88726),))
        if synchronous:
          self.queue.finish()
      mem_97377 = opencl_alloc(self, bytes_97369, "mem_97377")
      if ((1 * num_groups_88733) != 0):
        self.scan2_kernel_88796_var.set_args(cl.LocalMemory(np.long(bytes_97369)),
                                             np.int32(num_groups_88733),
                                             mem_97371, mem_97377)
        cl.enqueue_nd_range_kernel(self.queue, self.scan2_kernel_88796_var,
                                   (np.long(num_groups_88733),),
                                   (np.long(num_groups_88733),))
        if synchronous:
          self.queue.finish()
      x_88821 = (convop_x_97339 + y_88820)
      num_groups_88822 = squot32(x_88821, group_sizze_88819)
      num_threads_88823 = (num_groups_88822 * group_sizze_88819)
      mem_97380 = opencl_alloc(self, bytes_97346, "mem_97380")
      if ((1 * (num_groups_88822 * group_sizze_88819)) != 0):
        self.map_kernel_88824_var.set_args(np.int32(y_88768),
                                           np.int32(convop_x_97339), mem_97352,
                                           mem_97377, mem_97380)
        cl.enqueue_nd_range_kernel(self.queue, self.map_kernel_88824_var,
                                   (np.long((num_groups_88822 * group_sizze_88819)),),
                                   (np.long(group_sizze_88819),))
        if synchronous:
          self.queue.finish()
      last_index_76498 = (convop_x_97339 - np.int32(1))
      is_empty_76499 = (convop_x_97339 == np.int32(0))
      if is_empty_76499:
        partition_sizze_76500 = np.int32(0)
      else:
        read_res_98617 = np.empty(1, dtype=ct.c_int32)
        cl.enqueue_copy(self.queue, read_res_98617, mem_97380,
                        device_offset=np.long((last_index_76498 * np.int32(4))),
                        is_blocking=True)
        last_offset_76501 = read_res_98617[0]
        partition_sizze_76500 = last_offset_76501
      binop_x_97382 = sext_i32_i64(partition_sizze_76500)
      bytes_97381 = (binop_x_97382 * np.int64(4))
      mem_97383 = opencl_alloc(self, bytes_97381, "mem_97383")
      bytes_97384 = (binop_x_97382 * np.int64(8))
      mem_97386 = opencl_alloc(self, bytes_97384, "mem_97386")
      group_sizze_88829 = self.sizes["group_size_88828"]
      y_88830 = (group_sizze_88829 - np.int32(1))
      x_88831 = (convop_x_97339 + y_88830)
      num_groups_88832 = squot32(x_88831, group_sizze_88829)
      num_threads_88833 = (num_groups_88832 * group_sizze_88829)
      if ((1 * (num_groups_88832 * group_sizze_88829)) != 0):
        self.map_kernel_88834_var.set_args(np.int32(num_elems_74001),
                                           np.int32(partition_sizze_76500),
                                           np.int32(convop_x_97339), mem_97349,
                                           mem_97355, mem_97359, mem_97380,
                                           mem_97383, mem_97386)
        cl.enqueue_nd_range_kernel(self.queue, self.map_kernel_88834_var,
                                   (np.long((num_groups_88832 * group_sizze_88829)),),
                                   (np.long(group_sizze_88829),))
        if synchronous:
          self.queue.finish()
      x_76513 = abs(partition_sizze_76500)
      binop_x_97388 = sext_i32_i64(x_76513)
      bytes_97387 = (binop_x_97388 * np.int64(4))
      mem_97389 = opencl_alloc(self, bytes_97387, "mem_97389")
      if ((x_76513 * np.int32(4)) != 0):
        cl.enqueue_copy(self.queue, mem_97389, mem_97383,
                        dest_offset=np.long(np.int32(0)),
                        src_offset=np.long(np.int32(0)),
                        byte_count=np.long((x_76513 * np.int32(4))))
      if synchronous:
        self.queue.finish()
      bytes_97391 = (binop_x_97388 * np.int64(8))
      mem_97393 = opencl_alloc(self, bytes_97391, "mem_97393")
      if ((x_76513 * np.int32(8)) != 0):
        cl.enqueue_copy(self.queue, mem_97393, mem_97386,
                        dest_offset=np.long(np.int32(0)),
                        src_offset=np.long(np.int32(0)),
                        byte_count=np.long((x_76513 * np.int32(8))))
      if synchronous:
        self.queue.finish()
      sizze_74007 = conc_tmp_74004
      sizze_74008 = x_76513
      sizze_74009 = x_76513
      res_mem_sizze_97735 = bytes_97317
      res_mem_97736 = mem_97337
      res_mem_sizze_97737 = bytes_97387
      res_mem_97738 = mem_97389
      res_mem_sizze_97739 = bytes_97391
      res_mem_97740 = mem_97393
    else:
      w_div_group_sizze_88843 = squot32(x_88842, group_sizze_88838)
      num_groups_maybe_zzero_88844 = smin32(w_div_group_sizze_88843,
                                            max_num_groups_88840)
      num_groups_88845 = smax32(np.int32(1), num_groups_maybe_zzero_88844)
      num_threads_88846 = (num_groups_88845 * group_sizze_88838)
      mem_97397 = opencl_alloc(self, bytes_97039, "mem_97397")
      mem_97400 = opencl_alloc(self, bytes_97039, "mem_97400")
      mem_97403 = opencl_alloc(self, bytes_97045, "mem_97403")
      mem_97406 = opencl_alloc(self, bytes_97045, "mem_97406")
      mem_97409 = opencl_alloc(self, bytes_97051, "mem_97409")
      mem_97411 = opencl_alloc(self, binop_x_97040, "mem_97411")
      mem_97413 = opencl_alloc(self, binop_x_97040, "mem_97413")
      y_89715 = (num_threads_88846 - np.int32(1))
      x_89716 = (nesting_sizze_86802 + y_89715)
      num_iterations_89717 = squot32(x_89716, num_threads_88846)
      y_89720 = (num_iterations_89717 * group_sizze_88838)
      binop_x_97439 = sext_i32_i64(num_groups_88845)
      bytes_97438 = (binop_x_97439 * np.int64(4))
      mem_97440 = opencl_alloc(self, bytes_97438, "mem_97440")
      if ((1 * (num_groups_88845 * group_sizze_88838)) != 0):
        self.scan1_kernel_89712_var.set_args(cl.LocalMemory(np.long(bytes_97426)),
                                             np.int32(sizze_73917),
                                             np.float64(gridHalfWidth_73921),
                                             np.float64(delta_73922),
                                             np.int32(nesting_sizze_86802),
                                             np.int32(num_iterations_89717),
                                             np.int32(y_89720),
                                             detectorPositions_mem_97020,
                                             mem_97038, mem_97397, mem_97400,
                                             mem_97403, mem_97406, mem_97409,
                                             mem_97411, mem_97413, mem_97440)
        cl.enqueue_nd_range_kernel(self.queue, self.scan1_kernel_89712_var,
                                   (np.long((num_groups_88845 * group_sizze_88838)),),
                                   (np.long(group_sizze_88838),))
        if synchronous:
          self.queue.finish()
      mem_97446 = opencl_alloc(self, bytes_97438, "mem_97446")
      if ((1 * num_groups_88845) != 0):
        self.scan2_kernel_89764_var.set_args(cl.LocalMemory(np.long(bytes_97438)),
                                             np.int32(num_groups_88845),
                                             mem_97440, mem_97446)
        cl.enqueue_nd_range_kernel(self.queue, self.scan2_kernel_89764_var,
                                   (np.long(num_groups_88845),),
                                   (np.long(num_groups_88845),))
        if synchronous:
          self.queue.finish()
      num_groups_89790 = squot32(x_89789, group_sizze_89787)
      num_threads_89791 = (num_groups_89790 * group_sizze_89787)
      mem_97449 = opencl_alloc(self, bytes_97039, "mem_97449")
      if ((1 * (num_groups_89790 * group_sizze_89787)) != 0):
        self.map_kernel_89792_var.set_args(np.int32(nesting_sizze_86802),
                                           np.int32(y_89720), mem_97397,
                                           mem_97446, mem_97449)
        cl.enqueue_nd_range_kernel(self.queue, self.map_kernel_89792_var,
                                   (np.long((num_groups_89790 * group_sizze_89787)),),
                                   (np.long(group_sizze_89787),))
        if synchronous:
          self.queue.finish()
      if is_empty_73999:
        partition_sizze_78210 = np.int32(0)
      else:
        read_res_98618 = np.empty(1, dtype=ct.c_int32)
        cl.enqueue_copy(self.queue, read_res_98618, mem_97449,
                        device_offset=np.long((last_index_73998 * np.int32(4))),
                        is_blocking=True)
        last_offset_78211 = read_res_98618[0]
        partition_sizze_78210 = last_offset_78211
      binop_x_97451 = sext_i32_i64(partition_sizze_78210)
      bytes_97450 = (binop_x_97451 * np.int64(8))
      mem_97452 = opencl_alloc(self, bytes_97450, "mem_97452")
      bytes_97453 = (binop_x_97451 * np.int64(2))
      mem_97455 = opencl_alloc(self, bytes_97453, "mem_97455")
      mem_97458 = opencl_alloc(self, bytes_97453, "mem_97458")
      mem_97461 = opencl_alloc(self, bytes_97450, "mem_97461")
      mem_97463 = opencl_alloc(self, binop_x_97451, "mem_97463")
      bytes_97464 = (binop_x_97451 * np.int64(4))
      mem_97466 = opencl_alloc(self, bytes_97464, "mem_97466")
      num_groups_89800 = squot32(x_89799, group_sizze_89797)
      num_threads_89801 = (num_groups_89800 * group_sizze_89797)
      if ((1 * (num_groups_89800 * group_sizze_89797)) != 0):
        self.map_kernel_89802_var.set_args(np.int32(sizze_73917),
                                           np.int32(rowOffset_73923),
                                           np.int32(partition_sizze_78210),
                                           np.int32(nesting_sizze_86802),
                                           mem_97038, mem_97400, mem_97403,
                                           mem_97406, mem_97409, mem_97411,
                                           mem_97449, mem_97452, mem_97455,
                                           mem_97458, mem_97461, mem_97463,
                                           mem_97466)
        cl.enqueue_nd_range_kernel(self.queue, self.map_kernel_89802_var,
                                   (np.long((num_groups_89800 * group_sizze_89797)),),
                                   (np.long(group_sizze_89797),))
        if synchronous:
          self.queue.finish()
      x_78237 = abs(partition_sizze_78210)
      x_90525 = (x_78237 + y_90524)
      num_groups_90526 = squot32(x_90525, group_sizze_90523)
      num_threads_90527 = (num_groups_90526 * group_sizze_90523)
      binop_x_97468 = sext_i32_i64(x_78237)
      bytes_97467 = (binop_x_97468 * np.int64(2))
      mem_97469 = opencl_alloc(self, bytes_97467, "mem_97469")
      mem_97472 = opencl_alloc(self, bytes_97467, "mem_97472")
      mem_97474 = opencl_alloc(self, binop_x_97468, "mem_97474")
      mem_97477 = opencl_alloc(self, bytes_97467, "mem_97477")
      mem_97480 = opencl_alloc(self, bytes_97467, "mem_97480")
      mem_97483 = opencl_alloc(self, bytes_97467, "mem_97483")
      mem_97486 = opencl_alloc(self, bytes_97467, "mem_97486")
      bytes_97487 = (binop_x_97468 * np.int64(8))
      mem_97489 = opencl_alloc(self, bytes_97487, "mem_97489")
      if ((1 * (num_groups_90526 * group_sizze_90523)) != 0):
        self.map_kernel_90528_var.set_args(np.int16(res_73988),
                                           np.int32(x_78237), mem_97452,
                                           mem_97455, mem_97458, mem_97469,
                                           mem_97472, mem_97474, mem_97477,
                                           mem_97480, mem_97483, mem_97486,
                                           mem_97489)
        cl.enqueue_nd_range_kernel(self.queue, self.map_kernel_90528_var,
                                   (np.long((num_groups_90526 * group_sizze_90523)),),
                                   (np.long(group_sizze_90523),))
        if synchronous:
          self.queue.finish()
      x_89878 = (x_78237 + y_89877)
      num_groups_89879 = squot32(x_89878, group_sizze_89876)
      num_threads_89880 = (num_groups_89879 * group_sizze_89876)
      convop_x_97656 = (num_elems_74001 * x_78237)
      binop_x_97657 = sext_i32_i64(convop_x_97656)
      bytes_97655 = (binop_x_97657 * np.int64(2))
      mem_97658 = opencl_alloc(self, bytes_97655, "mem_97658")
      mem_97662 = opencl_alloc(self, bytes_97655, "mem_97662")
      bytes_97663 = (binop_x_97657 * np.int64(8))
      mem_97666 = opencl_alloc(self, bytes_97663, "mem_97666")
      num_threads64_97767 = sext_i32_i64(num_threads_89880)
      total_sizze_97768 = (num_threads64_97767 * bytes_97134)
      mem_97492 = opencl_alloc(self, total_sizze_97768, "mem_97492")
      total_sizze_97769 = (num_threads64_97767 * bytes_97134)
      mem_97495 = opencl_alloc(self, total_sizze_97769, "mem_97495")
      total_sizze_97770 = (num_threads64_97767 * bytes_97140)
      mem_97498 = opencl_alloc(self, total_sizze_97770, "mem_97498")
      if ((1 * (num_groups_89879 * group_sizze_89876)) != 0):
        self.map_kernel_89881_var.set_args(np.float64(delta_73922),
                                           np.int32(num_elems_74001),
                                           np.int32(x_78237), mem_97461,
                                           mem_97463, mem_97469, mem_97472,
                                           mem_97474, mem_97477, mem_97480,
                                           mem_97483, mem_97486, mem_97489,
                                           mem_97492, mem_97495, mem_97498,
                                           mem_97658, mem_97662, mem_97666)
        cl.enqueue_nd_range_kernel(self.queue, self.map_kernel_89881_var,
                                   (np.long((num_groups_89879 * group_sizze_89876)),),
                                   (np.long(group_sizze_89876),))
        if synchronous:
          self.queue.finish()
      group_sizze_89832 = self.sizes["group_size_89831"]
      y_89833 = (group_sizze_89832 - np.int32(1))
      x_89834 = (convop_x_97656 + y_89833)
      num_groups_89835 = squot32(x_89834, group_sizze_89832)
      num_threads_89836 = (num_groups_89835 * group_sizze_89832)
      convop_x_97668 = (x_78237 * num_elems_74001)
      binop_x_97669 = sext_i32_i64(convop_x_97668)
      bytes_97667 = (binop_x_97669 * np.int64(4))
      mem_97670 = opencl_alloc(self, bytes_97667, "mem_97670")
      if ((1 * (num_groups_89835 * group_sizze_89832)) != 0):
        self.map_kernel_89837_var.set_args(np.int32(num_elems_74001),
                                           np.int32(x_78237), mem_97466,
                                           mem_97670)
        cl.enqueue_nd_range_kernel(self.queue, self.map_kernel_89837_var,
                                   (np.long((num_groups_89835 * group_sizze_89832)),),
                                   (np.long(group_sizze_89832),))
        if synchronous:
          self.queue.finish()
      group_sizze_89811 = self.sizes["group_size_89810"]
      y_89812 = (group_sizze_89811 - np.int32(1))
      x_89813 = (convop_x_97656 + y_89812)
      num_groups_89814 = squot32(x_89813, group_sizze_89811)
      num_threads_89815 = (num_groups_89814 * group_sizze_89811)
      bytes_97671 = (binop_x_97669 * np.int64(2))
      mem_97674 = opencl_alloc(self, bytes_97671, "mem_97674")
      self.futhark_map_transpose_opencl_i16(mem_97674, np.int32(0), mem_97658,
                                            np.int32(0), np.int32(1), x_78237,
                                            num_elems_74001,
                                            (x_78237 * num_elems_74001),
                                            (x_78237 * num_elems_74001))
      mem_97678 = opencl_alloc(self, bytes_97671, "mem_97678")
      self.futhark_map_transpose_opencl_i16(mem_97678, np.int32(0), mem_97662,
                                            np.int32(0), np.int32(1), x_78237,
                                            num_elems_74001,
                                            (x_78237 * num_elems_74001),
                                            (x_78237 * num_elems_74001))
      mem_97682 = opencl_alloc(self, bytes_97667, "mem_97682")
      if ((1 * (num_groups_89814 * group_sizze_89811)) != 0):
        self.map_kernel_89816_var.set_args(np.int32(num_elems_74001),
                                           np.int32(res_74005),
                                           np.int32(y_74006), np.int32(x_78237),
                                           mem_97674, mem_97678, mem_97682)
        cl.enqueue_nd_range_kernel(self.queue, self.map_kernel_89816_var,
                                   (np.long((num_groups_89814 * group_sizze_89811)),),
                                   (np.long(group_sizze_89811),))
        if synchronous:
          self.queue.finish()
      x_90623 = (convop_x_97668 + y_90622)
      w_div_group_sizze_90624 = squot32(x_90623, group_sizze_90619)
      num_groups_maybe_zzero_90625 = smin32(w_div_group_sizze_90624,
                                            max_num_groups_90621)
      num_groups_90626 = smax32(np.int32(1), num_groups_maybe_zzero_90625)
      num_threads_90627 = (num_groups_90626 * group_sizze_90619)
      mem_97685 = opencl_alloc(self, bytes_97667, "mem_97685")
      mem_97688 = opencl_alloc(self, bytes_97667, "mem_97688")
      y_90656 = (num_threads_90627 - np.int32(1))
      x_90657 = (convop_x_97668 + y_90656)
      num_iterations_90658 = squot32(x_90657, num_threads_90627)
      y_90661 = (num_iterations_90658 * group_sizze_90619)
      bytes_97689 = (binop_x_97669 * np.int64(8))
      mem_97692 = opencl_alloc(self, bytes_97689, "mem_97692")
      self.futhark_map_transpose_opencl_f64(mem_97692, np.int32(0), mem_97666,
                                            np.int32(0), np.int32(1), x_78237,
                                            num_elems_74001,
                                            (x_78237 * num_elems_74001),
                                            (x_78237 * num_elems_74001))
      binop_x_97703 = sext_i32_i64(num_groups_90626)
      bytes_97702 = (binop_x_97703 * np.int64(4))
      mem_97704 = opencl_alloc(self, bytes_97702, "mem_97704")
      if ((1 * (num_groups_90626 * group_sizze_90619)) != 0):
        self.scan1_kernel_90653_var.set_args(cl.LocalMemory(np.long(bytes_97695)),
                                             np.int32(num_elems_74001),
                                             np.int32(num_iterations_90658),
                                             np.int32(y_90661),
                                             np.int32(convop_x_97668),
                                             mem_97685, mem_97688, mem_97692,
                                             mem_97704)
        cl.enqueue_nd_range_kernel(self.queue, self.scan1_kernel_90653_var,
                                   (np.long((num_groups_90626 * group_sizze_90619)),),
                                   (np.long(group_sizze_90619),))
        if synchronous:
          self.queue.finish()
      mem_97710 = opencl_alloc(self, bytes_97702, "mem_97710")
      if ((1 * num_groups_90626) != 0):
        self.scan2_kernel_90689_var.set_args(cl.LocalMemory(np.long(bytes_97702)),
                                             np.int32(num_groups_90626),
                                             mem_97704, mem_97710)
        cl.enqueue_nd_range_kernel(self.queue, self.scan2_kernel_90689_var,
                                   (np.long(num_groups_90626),),
                                   (np.long(num_groups_90626),))
        if synchronous:
          self.queue.finish()
      x_90714 = (convop_x_97668 + y_90713)
      num_groups_90715 = squot32(x_90714, group_sizze_90712)
      num_threads_90716 = (num_groups_90715 * group_sizze_90712)
      mem_97713 = opencl_alloc(self, bytes_97667, "mem_97713")
      if ((1 * (num_groups_90715 * group_sizze_90712)) != 0):
        self.map_kernel_90717_var.set_args(np.int32(y_90661),
                                           np.int32(convop_x_97668), mem_97685,
                                           mem_97710, mem_97713)
        cl.enqueue_nd_range_kernel(self.queue, self.map_kernel_90717_var,
                                   (np.long((num_groups_90715 * group_sizze_90712)),),
                                   (np.long(group_sizze_90712),))
        if synchronous:
          self.queue.finish()
      last_index_78949 = (convop_x_97668 - np.int32(1))
      is_empty_78950 = (convop_x_97668 == np.int32(0))
      if is_empty_78950:
        partition_sizze_78951 = np.int32(0)
      else:
        read_res_98619 = np.empty(1, dtype=ct.c_int32)
        cl.enqueue_copy(self.queue, read_res_98619, mem_97713,
                        device_offset=np.long((last_index_78949 * np.int32(4))),
                        is_blocking=True)
        last_offset_78952 = read_res_98619[0]
        partition_sizze_78951 = last_offset_78952
      binop_x_97715 = sext_i32_i64(partition_sizze_78951)
      bytes_97714 = (binop_x_97715 * np.int64(4))
      mem_97716 = opencl_alloc(self, bytes_97714, "mem_97716")
      mem_97719 = opencl_alloc(self, bytes_97714, "mem_97719")
      bytes_97720 = (binop_x_97715 * np.int64(8))
      mem_97722 = opencl_alloc(self, bytes_97720, "mem_97722")
      group_sizze_90722 = self.sizes["group_size_90721"]
      y_90723 = (group_sizze_90722 - np.int32(1))
      x_90724 = (convop_x_97668 + y_90723)
      num_groups_90725 = squot32(x_90724, group_sizze_90722)
      num_threads_90726 = (num_groups_90725 * group_sizze_90722)
      if ((1 * (num_groups_90725 * group_sizze_90722)) != 0):
        self.map_kernel_90727_var.set_args(np.int32(num_elems_74001),
                                           np.int32(partition_sizze_78951),
                                           np.int32(convop_x_97668), mem_97670,
                                           mem_97682, mem_97688, mem_97692,
                                           mem_97713, mem_97716, mem_97719,
                                           mem_97722)
        cl.enqueue_nd_range_kernel(self.queue, self.map_kernel_90727_var,
                                   (np.long((num_groups_90725 * group_sizze_90722)),),
                                   (np.long(group_sizze_90722),))
        if synchronous:
          self.queue.finish()
      x_78967 = abs(partition_sizze_78951)
      binop_x_97724 = sext_i32_i64(x_78967)
      bytes_97723 = (binop_x_97724 * np.int64(4))
      mem_97725 = opencl_alloc(self, bytes_97723, "mem_97725")
      if ((x_78967 * np.int32(4)) != 0):
        cl.enqueue_copy(self.queue, mem_97725, mem_97716,
                        dest_offset=np.long(np.int32(0)),
                        src_offset=np.long(np.int32(0)),
                        byte_count=np.long((x_78967 * np.int32(4))))
      if synchronous:
        self.queue.finish()
      mem_97729 = opencl_alloc(self, bytes_97723, "mem_97729")
      if ((x_78967 * np.int32(4)) != 0):
        cl.enqueue_copy(self.queue, mem_97729, mem_97719,
                        dest_offset=np.long(np.int32(0)),
                        src_offset=np.long(np.int32(0)),
                        byte_count=np.long((x_78967 * np.int32(4))))
      if synchronous:
        self.queue.finish()
      bytes_97731 = (binop_x_97724 * np.int64(8))
      mem_97733 = opencl_alloc(self, bytes_97731, "mem_97733")
      if ((x_78967 * np.int32(8)) != 0):
        cl.enqueue_copy(self.queue, mem_97733, mem_97722,
                        dest_offset=np.long(np.int32(0)),
                        src_offset=np.long(np.int32(0)),
                        byte_count=np.long((x_78967 * np.int32(8))))
      if synchronous:
        self.queue.finish()
      sizze_74007 = x_78967
      sizze_74008 = x_78967
      sizze_74009 = x_78967
      res_mem_sizze_97735 = bytes_97723
      res_mem_97736 = mem_97725
      res_mem_sizze_97737 = bytes_97723
      res_mem_97738 = mem_97729
      res_mem_sizze_97739 = bytes_97731
      res_mem_97740 = mem_97733
    out_arrsizze_97779 = sizze_74007
    out_arrsizze_97782 = sizze_74008
    out_arrsizze_97785 = sizze_74009
    out_memsizze_97778 = res_mem_sizze_97735
    out_mem_97777 = res_mem_97736
    out_memsizze_97781 = res_mem_sizze_97737
    out_mem_97780 = res_mem_97738
    out_memsizze_97784 = res_mem_sizze_97739
    out_mem_97783 = res_mem_97740
    return (out_memsizze_97778, out_mem_97777, out_arrsizze_97779,
            out_memsizze_97781, out_mem_97780, out_arrsizze_97782,
            out_memsizze_97784, out_mem_97783, out_arrsizze_97785)
  def futhark_inParts(self, detectorPositions_mem_sizze_97019,
                      detectorPositions_mem_97020, angles_mem_sizze_97021,
                      angles_mem_97022, sizze_78971, sizze_78972,
                      gridHalfWidth_78975, delta_78976, parts_78977):
    res_78978 = sdiv32(sizze_78972, parts_78977)
    mem_97025 = opencl_alloc(self, np.int64(0), "mem_97025")
    mem_97028 = opencl_alloc(self, np.int64(0), "mem_97028")
    x_78981 = (np.float64(2.0) * gridHalfWidth_78975)
    x_78982 = (x_78981 / delta_78976)
    arg_78983 = (gridHalfWidth_78975 / delta_78976)
    res_78984 = fptosi_f64_i16(arg_78983)
    res_78985 = fptosi_f64_i32(arg_78983)
    y_78986 = (res_78985 * np.int32(2))
    group_sizze_90738 = self.sizes["group_size_90737"]
    max_num_groups_90740 = self.sizes["max_num_groups_90739"]
    y_90741 = (group_sizze_90738 - np.int32(1))
    group_sizze_90844 = self.sizes["group_size_90843"]
    y_90845 = (group_sizze_90844 - np.int32(1))
    group_sizze_90855 = self.sizes["group_size_90854"]
    max_num_groups_90857 = self.sizes["max_num_groups_90856"]
    y_90858 = (group_sizze_90855 - np.int32(1))
    group_sizze_91804 = self.sizes["group_size_91803"]
    y_91805 = (group_sizze_91804 - np.int32(1))
    group_sizze_91814 = self.sizes["group_size_91813"]
    y_91815 = (group_sizze_91814 - np.int32(1))
    group_sizze_92540 = self.sizes["group_size_92539"]
    y_92541 = (group_sizze_92540 - np.int32(1))
    group_sizze_91893 = self.sizes["group_size_91892"]
    y_91894 = (group_sizze_91893 - np.int32(1))
    group_sizze_91849 = self.sizes["group_size_91848"]
    y_91850 = (group_sizze_91849 - np.int32(1))
    group_sizze_91828 = self.sizes["group_size_91827"]
    y_91829 = (group_sizze_91828 - np.int32(1))
    group_sizze_92636 = self.sizes["group_size_92635"]
    max_num_groups_92638 = self.sizes["max_num_groups_92637"]
    y_92639 = (group_sizze_92636 - np.int32(1))
    group_sizze_92729 = self.sizes["group_size_92728"]
    y_92730 = (group_sizze_92729 - np.int32(1))
    group_sizze_92739 = self.sizes["group_size_92738"]
    y_92740 = (group_sizze_92739 - np.int32(1))
    binop_x_97036 = sext_i32_i64(group_sizze_90738)
    bytes_97035 = (binop_x_97036 * np.int64(8))
    mem_97046 = opencl_alloc(self, np.int64(8), "mem_97046")
    binop_x_97042 = sext_i32_i64(max_num_groups_90740)
    bytes_97041 = (binop_x_97042 * np.int64(8))
    binop_x_97083 = sext_i32_i64(group_sizze_90855)
    bytes_97082 = (binop_x_97083 * np.int64(4))
    binop_x_97352 = sext_i32_i64(group_sizze_92636)
    bytes_97351 = (binop_x_97352 * np.int64(4))
    sizze_78995 = np.int32(0)
    sizze_78996 = np.int32(0)
    sizze_78997 = np.int32(0)
    rowsRes_mem_sizze_97029 = np.int64(0)
    rowsRes_mem_97030 = mem_97025
    colsRes_mem_sizze_97031 = np.int64(0)
    colsRes_mem_97032 = mem_97025
    distsRes_mem_sizze_97033 = np.int64(0)
    distsRes_mem_97034 = mem_97028
    i_78998 = np.int32(0)
    rowOffset_79002 = np.int32(0)
    i_79003 = np.int32(0)
    one_98625 = np.int32(1)
    for counter_98624 in range(parts_78977):
      y_79004 = (i_78998 + np.int32(1))
      x_79005 = (res_78978 * y_79004)
      i_79006 = (res_78978 * i_78998)
      j_m_i_79007 = (x_79005 - i_79006)
      x_79008 = abs(j_m_i_79007)
      empty_slice_79009 = (x_79008 == np.int32(0))
      m_79010 = (x_79008 - np.int32(1))
      i_p_m_t_s_79011 = (i_79006 + m_79010)
      zzero_leq_i_p_m_t_s_79012 = sle32(np.int32(0), i_p_m_t_s_79011)
      i_p_m_t_s_leq_w_79013 = slt32(i_p_m_t_s_79011, sizze_78972)
      zzero_lte_i_79014 = sle32(np.int32(0), i_79006)
      i_lte_j_79015 = sle32(i_79006, x_79005)
      y_79016 = (i_p_m_t_s_leq_w_79013 and zzero_lte_i_79014)
      y_79017 = (zzero_leq_i_p_m_t_s_79012 and y_79016)
      y_79018 = (i_lte_j_79015 and y_79017)
      forwards_ok_79019 = (zzero_lte_i_79014 and y_79018)
      ok_or_empty_79020 = (empty_slice_79009 or forwards_ok_79019)
      slice_cert_79021 = True
      assert ok_or_empty_79020, 'At algorithm.fut:124:1-139:22 -> algorithm.fut:134:75-134:117: slice out of bounds'
      x_90742 = (x_79008 + y_90741)
      w_div_group_sizze_90743 = squot32(x_90742, group_sizze_90738)
      num_groups_maybe_zzero_90744 = smin32(w_div_group_sizze_90743,
                                            max_num_groups_90740)
      num_groups_90745 = smax32(np.int32(1), num_groups_maybe_zzero_90744)
      num_threads_90746 = (num_groups_90745 * group_sizze_90738)
      y_90747 = (num_threads_90746 - np.int32(1))
      x_90748 = (x_79008 + y_90747)
      per_thread_elements_90749 = squot32(x_90748, num_threads_90746)
      binop_x_97039 = sext_i32_i64(num_groups_90745)
      bytes_97038 = (binop_x_97039 * np.int64(8))
      mem_97040 = opencl_alloc(self, bytes_97038, "mem_97040")
      if ((1 * (num_groups_90745 * group_sizze_90738)) != 0):
        self.chunked_reduce_kernel_90754_var.set_args(cl.LocalMemory(np.long(bytes_97035)),
                                                      np.float64(x_78982),
                                                      np.int32(i_79006),
                                                      np.int32(x_79008),
                                                      np.int32(num_threads_90746),
                                                      np.int32(per_thread_elements_90749),
                                                      angles_mem_97022,
                                                      mem_97040)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.chunked_reduce_kernel_90754_var,
                                   (np.long((num_groups_90745 * group_sizze_90738)),),
                                   (np.long(group_sizze_90738),))
        if synchronous:
          self.queue.finish()
      if ((1 * max_num_groups_90740) != 0):
        self.reduce_kernel_90831_var.set_args(cl.LocalMemory(np.long(bytes_97041)),
                                              np.int32(num_groups_90745),
                                              mem_97040, mem_97046)
        cl.enqueue_nd_range_kernel(self.queue, self.reduce_kernel_90831_var,
                                   (np.long(max_num_groups_90740),),
                                   (np.long(max_num_groups_90740),))
        if synchronous:
          self.queue.finish()
      read_res_98620 = np.empty(1, dtype=ct.c_double)
      cl.enqueue_copy(self.queue, read_res_98620, mem_97046,
                      device_offset=np.long(np.int32(0)), is_blocking=True)
      res_79023 = read_res_98620[0]
      res_79081 = fptosi_f64_i32(res_79023)
      nesting_sizze_90842 = (sizze_78971 * x_79008)
      x_90846 = (nesting_sizze_90842 + y_90845)
      num_groups_90847 = squot32(x_90846, group_sizze_90844)
      num_threads_90848 = (num_groups_90847 * group_sizze_90844)
      convop_x_97048 = (x_79008 * sizze_78971)
      binop_x_97049 = sext_i32_i64(convop_x_97048)
      bytes_97047 = (binop_x_97049 * np.int64(8))
      mem_97050 = opencl_alloc(self, bytes_97047, "mem_97050")
      if ((1 * (num_groups_90847 * group_sizze_90844)) != 0):
        self.map_kernel_90849_var.set_args(np.int32(sizze_78971),
                                           np.int32(i_79006), np.int32(x_79008),
                                           angles_mem_97022, mem_97050)
        cl.enqueue_nd_range_kernel(self.queue, self.map_kernel_90849_var,
                                   (np.long((num_groups_90847 * group_sizze_90844)),),
                                   (np.long(group_sizze_90844),))
        if synchronous:
          self.queue.finish()
      last_index_79090 = (nesting_sizze_90842 - np.int32(1))
      is_empty_79091 = (nesting_sizze_90842 == np.int32(0))
      bounds_invalid_upwards_79092 = slt32(res_79081, np.int32(0))
      if bounds_invalid_upwards_79092:
        num_elems_79093 = np.int32(0)
      else:
        num_elems_79093 = res_79081
      x_90859 = (nesting_sizze_90842 + y_90858)
      w_div_group_sizze_90860 = squot32(x_90859, group_sizze_90855)
      num_groups_maybe_zzero_90861 = smin32(w_div_group_sizze_90860,
                                            max_num_groups_90857)
      num_groups_90862 = smax32(np.int32(1), num_groups_maybe_zzero_90861)
      num_threads_90863 = (num_groups_90862 * group_sizze_90855)
      binop_x_97052 = sext_i32_i64(nesting_sizze_90842)
      bytes_97051 = (binop_x_97052 * np.int64(4))
      mem_97053 = opencl_alloc(self, bytes_97051, "mem_97053")
      mem_97056 = opencl_alloc(self, bytes_97051, "mem_97056")
      bytes_97057 = (binop_x_97052 * np.int64(2))
      mem_97059 = opencl_alloc(self, bytes_97057, "mem_97059")
      mem_97062 = opencl_alloc(self, bytes_97057, "mem_97062")
      bytes_97063 = (binop_x_97052 * np.int64(8))
      mem_97065 = opencl_alloc(self, bytes_97063, "mem_97065")
      mem_97067 = opencl_alloc(self, binop_x_97052, "mem_97067")
      mem_97069 = opencl_alloc(self, binop_x_97052, "mem_97069")
      y_91732 = (num_threads_90863 - np.int32(1))
      x_91733 = (nesting_sizze_90842 + y_91732)
      num_iterations_91734 = squot32(x_91733, num_threads_90863)
      y_91737 = (num_iterations_91734 * group_sizze_90855)
      binop_x_97095 = sext_i32_i64(num_groups_90862)
      bytes_97094 = (binop_x_97095 * np.int64(4))
      mem_97096 = opencl_alloc(self, bytes_97094, "mem_97096")
      if ((1 * (num_groups_90862 * group_sizze_90855)) != 0):
        self.scan1_kernel_91729_var.set_args(cl.LocalMemory(np.long(bytes_97082)),
                                             np.int32(sizze_78971),
                                             np.float64(gridHalfWidth_78975),
                                             np.float64(delta_78976),
                                             np.int32(nesting_sizze_90842),
                                             np.int32(num_iterations_91734),
                                             np.int32(y_91737),
                                             detectorPositions_mem_97020,
                                             mem_97050, mem_97053, mem_97056,
                                             mem_97059, mem_97062, mem_97065,
                                             mem_97067, mem_97069, mem_97096)
        cl.enqueue_nd_range_kernel(self.queue, self.scan1_kernel_91729_var,
                                   (np.long((num_groups_90862 * group_sizze_90855)),),
                                   (np.long(group_sizze_90855),))
        if synchronous:
          self.queue.finish()
      mem_97102 = opencl_alloc(self, bytes_97094, "mem_97102")
      if ((1 * num_groups_90862) != 0):
        self.scan2_kernel_91781_var.set_args(cl.LocalMemory(np.long(bytes_97094)),
                                             np.int32(num_groups_90862),
                                             mem_97096, mem_97102)
        cl.enqueue_nd_range_kernel(self.queue, self.scan2_kernel_91781_var,
                                   (np.long(num_groups_90862),),
                                   (np.long(num_groups_90862),))
        if synchronous:
          self.queue.finish()
      x_91806 = (nesting_sizze_90842 + y_91805)
      num_groups_91807 = squot32(x_91806, group_sizze_91804)
      num_threads_91808 = (num_groups_91807 * group_sizze_91804)
      mem_97105 = opencl_alloc(self, bytes_97051, "mem_97105")
      if ((1 * (num_groups_91807 * group_sizze_91804)) != 0):
        self.map_kernel_91809_var.set_args(np.int32(nesting_sizze_90842),
                                           np.int32(y_91737), mem_97053,
                                           mem_97102, mem_97105)
        cl.enqueue_nd_range_kernel(self.queue, self.map_kernel_91809_var,
                                   (np.long((num_groups_91807 * group_sizze_91804)),),
                                   (np.long(group_sizze_91804),))
        if synchronous:
          self.queue.finish()
      if is_empty_79091:
        partition_sizze_80788 = np.int32(0)
      else:
        read_res_98621 = np.empty(1, dtype=ct.c_int32)
        cl.enqueue_copy(self.queue, read_res_98621, mem_97105,
                        device_offset=np.long((last_index_79090 * np.int32(4))),
                        is_blocking=True)
        last_offset_80789 = read_res_98621[0]
        partition_sizze_80788 = last_offset_80789
      binop_x_97107 = sext_i32_i64(partition_sizze_80788)
      bytes_97106 = (binop_x_97107 * np.int64(8))
      mem_97108 = opencl_alloc(self, bytes_97106, "mem_97108")
      bytes_97109 = (binop_x_97107 * np.int64(2))
      mem_97111 = opencl_alloc(self, bytes_97109, "mem_97111")
      mem_97114 = opencl_alloc(self, bytes_97109, "mem_97114")
      mem_97117 = opencl_alloc(self, bytes_97106, "mem_97117")
      mem_97119 = opencl_alloc(self, binop_x_97107, "mem_97119")
      bytes_97120 = (binop_x_97107 * np.int64(4))
      mem_97122 = opencl_alloc(self, bytes_97120, "mem_97122")
      x_91816 = (nesting_sizze_90842 + y_91815)
      num_groups_91817 = squot32(x_91816, group_sizze_91814)
      num_threads_91818 = (num_groups_91817 * group_sizze_91814)
      if ((1 * (num_groups_91817 * group_sizze_91814)) != 0):
        self.map_kernel_91819_var.set_args(np.int32(sizze_78971),
                                           np.int32(rowOffset_79002),
                                           np.int32(partition_sizze_80788),
                                           np.int32(nesting_sizze_90842),
                                           mem_97050, mem_97056, mem_97059,
                                           mem_97062, mem_97065, mem_97067,
                                           mem_97105, mem_97108, mem_97111,
                                           mem_97114, mem_97117, mem_97119,
                                           mem_97122)
        cl.enqueue_nd_range_kernel(self.queue, self.map_kernel_91819_var,
                                   (np.long((num_groups_91817 * group_sizze_91814)),),
                                   (np.long(group_sizze_91814),))
        if synchronous:
          self.queue.finish()
      x_80815 = abs(partition_sizze_80788)
      x_92542 = (x_80815 + y_92541)
      num_groups_92543 = squot32(x_92542, group_sizze_92540)
      num_threads_92544 = (num_groups_92543 * group_sizze_92540)
      binop_x_97124 = sext_i32_i64(x_80815)
      bytes_97123 = (binop_x_97124 * np.int64(2))
      mem_97125 = opencl_alloc(self, bytes_97123, "mem_97125")
      mem_97128 = opencl_alloc(self, bytes_97123, "mem_97128")
      mem_97130 = opencl_alloc(self, binop_x_97124, "mem_97130")
      mem_97133 = opencl_alloc(self, bytes_97123, "mem_97133")
      mem_97136 = opencl_alloc(self, bytes_97123, "mem_97136")
      mem_97139 = opencl_alloc(self, bytes_97123, "mem_97139")
      mem_97142 = opencl_alloc(self, bytes_97123, "mem_97142")
      bytes_97143 = (binop_x_97124 * np.int64(8))
      mem_97145 = opencl_alloc(self, bytes_97143, "mem_97145")
      if ((1 * (num_groups_92543 * group_sizze_92540)) != 0):
        self.map_kernel_92545_var.set_args(np.int16(res_78984),
                                           np.int32(x_80815), mem_97108,
                                           mem_97111, mem_97114, mem_97125,
                                           mem_97128, mem_97130, mem_97133,
                                           mem_97136, mem_97139, mem_97142,
                                           mem_97145)
        cl.enqueue_nd_range_kernel(self.queue, self.map_kernel_92545_var,
                                   (np.long((num_groups_92543 * group_sizze_92540)),),
                                   (np.long(group_sizze_92540),))
        if synchronous:
          self.queue.finish()
      x_91895 = (x_80815 + y_91894)
      num_groups_91896 = squot32(x_91895, group_sizze_91893)
      num_threads_91897 = (num_groups_91896 * group_sizze_91893)
      convop_x_97312 = (num_elems_79093 * x_80815)
      binop_x_97313 = sext_i32_i64(convop_x_97312)
      bytes_97311 = (binop_x_97313 * np.int64(2))
      mem_97314 = opencl_alloc(self, bytes_97311, "mem_97314")
      mem_97318 = opencl_alloc(self, bytes_97311, "mem_97318")
      bytes_97319 = (binop_x_97313 * np.int64(8))
      mem_97322 = opencl_alloc(self, bytes_97319, "mem_97322")
      binop_x_97147 = sext_i32_i64(num_elems_79093)
      bytes_97146 = (binop_x_97147 * np.int64(2))
      bytes_97152 = (binop_x_97147 * np.int64(8))
      num_threads64_97749 = sext_i32_i64(num_threads_91897)
      total_sizze_97750 = (num_threads64_97749 * bytes_97146)
      mem_97148 = opencl_alloc(self, total_sizze_97750, "mem_97148")
      total_sizze_97751 = (num_threads64_97749 * bytes_97146)
      mem_97151 = opencl_alloc(self, total_sizze_97751, "mem_97151")
      total_sizze_97752 = (num_threads64_97749 * bytes_97152)
      mem_97154 = opencl_alloc(self, total_sizze_97752, "mem_97154")
      if ((1 * (num_groups_91896 * group_sizze_91893)) != 0):
        self.map_kernel_91898_var.set_args(np.float64(delta_78976),
                                           np.int32(num_elems_79093),
                                           np.int32(x_80815), mem_97117,
                                           mem_97119, mem_97125, mem_97128,
                                           mem_97130, mem_97133, mem_97136,
                                           mem_97139, mem_97142, mem_97145,
                                           mem_97148, mem_97151, mem_97154,
                                           mem_97314, mem_97318, mem_97322)
        cl.enqueue_nd_range_kernel(self.queue, self.map_kernel_91898_var,
                                   (np.long((num_groups_91896 * group_sizze_91893)),),
                                   (np.long(group_sizze_91893),))
        if synchronous:
          self.queue.finish()
      x_91851 = (convop_x_97312 + y_91850)
      num_groups_91852 = squot32(x_91851, group_sizze_91849)
      num_threads_91853 = (num_groups_91852 * group_sizze_91849)
      convop_x_97324 = (x_80815 * num_elems_79093)
      binop_x_97325 = sext_i32_i64(convop_x_97324)
      bytes_97323 = (binop_x_97325 * np.int64(4))
      mem_97326 = opencl_alloc(self, bytes_97323, "mem_97326")
      if ((1 * (num_groups_91852 * group_sizze_91849)) != 0):
        self.map_kernel_91854_var.set_args(np.int32(num_elems_79093),
                                           np.int32(x_80815), mem_97122,
                                           mem_97326)
        cl.enqueue_nd_range_kernel(self.queue, self.map_kernel_91854_var,
                                   (np.long((num_groups_91852 * group_sizze_91849)),),
                                   (np.long(group_sizze_91849),))
        if synchronous:
          self.queue.finish()
      x_91830 = (convop_x_97312 + y_91829)
      num_groups_91831 = squot32(x_91830, group_sizze_91828)
      num_threads_91832 = (num_groups_91831 * group_sizze_91828)
      bytes_97327 = (binop_x_97325 * np.int64(2))
      mem_97330 = opencl_alloc(self, bytes_97327, "mem_97330")
      self.futhark_map_transpose_opencl_i16(mem_97330, np.int32(0), mem_97314,
                                            np.int32(0), np.int32(1), x_80815,
                                            num_elems_79093,
                                            (x_80815 * num_elems_79093),
                                            (x_80815 * num_elems_79093))
      mem_97334 = opencl_alloc(self, bytes_97327, "mem_97334")
      self.futhark_map_transpose_opencl_i16(mem_97334, np.int32(0), mem_97318,
                                            np.int32(0), np.int32(1), x_80815,
                                            num_elems_79093,
                                            (x_80815 * num_elems_79093),
                                            (x_80815 * num_elems_79093))
      mem_97338 = opencl_alloc(self, bytes_97323, "mem_97338")
      if ((1 * (num_groups_91831 * group_sizze_91828)) != 0):
        self.map_kernel_91833_var.set_args(np.int32(res_78985),
                                           np.int32(y_78986),
                                           np.int32(num_elems_79093),
                                           np.int32(x_80815), mem_97330,
                                           mem_97334, mem_97338)
        cl.enqueue_nd_range_kernel(self.queue, self.map_kernel_91833_var,
                                   (np.long((num_groups_91831 * group_sizze_91828)),),
                                   (np.long(group_sizze_91828),))
        if synchronous:
          self.queue.finish()
      x_92640 = (convop_x_97324 + y_92639)
      w_div_group_sizze_92641 = squot32(x_92640, group_sizze_92636)
      num_groups_maybe_zzero_92642 = smin32(w_div_group_sizze_92641,
                                            max_num_groups_92638)
      num_groups_92643 = smax32(np.int32(1), num_groups_maybe_zzero_92642)
      num_threads_92644 = (num_groups_92643 * group_sizze_92636)
      mem_97341 = opencl_alloc(self, bytes_97323, "mem_97341")
      mem_97344 = opencl_alloc(self, bytes_97323, "mem_97344")
      y_92673 = (num_threads_92644 - np.int32(1))
      x_92674 = (convop_x_97324 + y_92673)
      num_iterations_92675 = squot32(x_92674, num_threads_92644)
      y_92678 = (num_iterations_92675 * group_sizze_92636)
      bytes_97345 = (binop_x_97325 * np.int64(8))
      mem_97348 = opencl_alloc(self, bytes_97345, "mem_97348")
      self.futhark_map_transpose_opencl_f64(mem_97348, np.int32(0), mem_97322,
                                            np.int32(0), np.int32(1), x_80815,
                                            num_elems_79093,
                                            (x_80815 * num_elems_79093),
                                            (x_80815 * num_elems_79093))
      binop_x_97359 = sext_i32_i64(num_groups_92643)
      bytes_97358 = (binop_x_97359 * np.int64(4))
      mem_97360 = opencl_alloc(self, bytes_97358, "mem_97360")
      if ((1 * (num_groups_92643 * group_sizze_92636)) != 0):
        self.scan1_kernel_92670_var.set_args(cl.LocalMemory(np.long(bytes_97351)),
                                             np.int32(num_elems_79093),
                                             np.int32(num_iterations_92675),
                                             np.int32(y_92678),
                                             np.int32(convop_x_97324),
                                             mem_97341, mem_97344, mem_97348,
                                             mem_97360)
        cl.enqueue_nd_range_kernel(self.queue, self.scan1_kernel_92670_var,
                                   (np.long((num_groups_92643 * group_sizze_92636)),),
                                   (np.long(group_sizze_92636),))
        if synchronous:
          self.queue.finish()
      mem_97366 = opencl_alloc(self, bytes_97358, "mem_97366")
      if ((1 * num_groups_92643) != 0):
        self.scan2_kernel_92706_var.set_args(cl.LocalMemory(np.long(bytes_97358)),
                                             np.int32(num_groups_92643),
                                             mem_97360, mem_97366)
        cl.enqueue_nd_range_kernel(self.queue, self.scan2_kernel_92706_var,
                                   (np.long(num_groups_92643),),
                                   (np.long(num_groups_92643),))
        if synchronous:
          self.queue.finish()
      x_92731 = (convop_x_97324 + y_92730)
      num_groups_92732 = squot32(x_92731, group_sizze_92729)
      num_threads_92733 = (num_groups_92732 * group_sizze_92729)
      mem_97369 = opencl_alloc(self, bytes_97323, "mem_97369")
      if ((1 * (num_groups_92732 * group_sizze_92729)) != 0):
        self.map_kernel_92734_var.set_args(np.int32(y_92678),
                                           np.int32(convop_x_97324), mem_97341,
                                           mem_97366, mem_97369)
        cl.enqueue_nd_range_kernel(self.queue, self.map_kernel_92734_var,
                                   (np.long((num_groups_92732 * group_sizze_92729)),),
                                   (np.long(group_sizze_92729),))
        if synchronous:
          self.queue.finish()
      last_index_81527 = (convop_x_97324 - np.int32(1))
      is_empty_81528 = (convop_x_97324 == np.int32(0))
      if is_empty_81528:
        partition_sizze_81529 = np.int32(0)
      else:
        read_res_98622 = np.empty(1, dtype=ct.c_int32)
        cl.enqueue_copy(self.queue, read_res_98622, mem_97369,
                        device_offset=np.long((last_index_81527 * np.int32(4))),
                        is_blocking=True)
        last_offset_81530 = read_res_98622[0]
        partition_sizze_81529 = last_offset_81530
      binop_x_97371 = sext_i32_i64(partition_sizze_81529)
      bytes_97370 = (binop_x_97371 * np.int64(4))
      mem_97372 = opencl_alloc(self, bytes_97370, "mem_97372")
      mem_97375 = opencl_alloc(self, bytes_97370, "mem_97375")
      bytes_97376 = (binop_x_97371 * np.int64(8))
      mem_97378 = opencl_alloc(self, bytes_97376, "mem_97378")
      x_92741 = (convop_x_97324 + y_92740)
      num_groups_92742 = squot32(x_92741, group_sizze_92739)
      num_threads_92743 = (num_groups_92742 * group_sizze_92739)
      if ((1 * (num_groups_92742 * group_sizze_92739)) != 0):
        self.map_kernel_92744_var.set_args(np.int32(num_elems_79093),
                                           np.int32(partition_sizze_81529),
                                           np.int32(convop_x_97324), mem_97326,
                                           mem_97338, mem_97344, mem_97348,
                                           mem_97369, mem_97372, mem_97375,
                                           mem_97378)
        cl.enqueue_nd_range_kernel(self.queue, self.map_kernel_92744_var,
                                   (np.long((num_groups_92742 * group_sizze_92739)),),
                                   (np.long(group_sizze_92739),))
        if synchronous:
          self.queue.finish()
      x_81545 = abs(partition_sizze_81529)
      conc_tmp_81549 = (sizze_78995 + x_81545)
      binop_x_97380 = sext_i32_i64(conc_tmp_81549)
      bytes_97379 = (binop_x_97380 * np.int64(4))
      mem_97381 = opencl_alloc(self, bytes_97379, "mem_97381")
      tmp_offs_98267 = np.int32(0)
      if ((sizze_78995 * np.int32(4)) != 0):
        cl.enqueue_copy(self.queue, mem_97381, rowsRes_mem_97030,
                        dest_offset=np.long((tmp_offs_98267 * np.int32(4))),
                        src_offset=np.long(np.int32(0)),
                        byte_count=np.long((sizze_78995 * np.int32(4))))
      if synchronous:
        self.queue.finish()
      tmp_offs_98267 = (tmp_offs_98267 + sizze_78995)
      if ((x_81545 * np.int32(4)) != 0):
        cl.enqueue_copy(self.queue, mem_97381, mem_97372,
                        dest_offset=np.long((tmp_offs_98267 * np.int32(4))),
                        src_offset=np.long(np.int32(0)),
                        byte_count=np.long((x_81545 * np.int32(4))))
      if synchronous:
        self.queue.finish()
      tmp_offs_98267 = (tmp_offs_98267 + x_81545)
      conc_tmp_81551 = (sizze_78996 + x_81545)
      binop_x_97383 = sext_i32_i64(conc_tmp_81551)
      bytes_97382 = (binop_x_97383 * np.int64(4))
      mem_97384 = opencl_alloc(self, bytes_97382, "mem_97384")
      tmp_offs_98268 = np.int32(0)
      if ((sizze_78996 * np.int32(4)) != 0):
        cl.enqueue_copy(self.queue, mem_97384, colsRes_mem_97032,
                        dest_offset=np.long((tmp_offs_98268 * np.int32(4))),
                        src_offset=np.long(np.int32(0)),
                        byte_count=np.long((sizze_78996 * np.int32(4))))
      if synchronous:
        self.queue.finish()
      tmp_offs_98268 = (tmp_offs_98268 + sizze_78996)
      if ((x_81545 * np.int32(4)) != 0):
        cl.enqueue_copy(self.queue, mem_97384, mem_97375,
                        dest_offset=np.long((tmp_offs_98268 * np.int32(4))),
                        src_offset=np.long(np.int32(0)),
                        byte_count=np.long((x_81545 * np.int32(4))))
      if synchronous:
        self.queue.finish()
      tmp_offs_98268 = (tmp_offs_98268 + x_81545)
      conc_tmp_81553 = (sizze_78997 + x_81545)
      binop_x_97386 = sext_i32_i64(conc_tmp_81553)
      bytes_97385 = (binop_x_97386 * np.int64(8))
      mem_97387 = opencl_alloc(self, bytes_97385, "mem_97387")
      tmp_offs_98269 = np.int32(0)
      if ((sizze_78997 * np.int32(8)) != 0):
        cl.enqueue_copy(self.queue, mem_97387, distsRes_mem_97034,
                        dest_offset=np.long((tmp_offs_98269 * np.int32(8))),
                        src_offset=np.long(np.int32(0)),
                        byte_count=np.long((sizze_78997 * np.int32(8))))
      if synchronous:
        self.queue.finish()
      tmp_offs_98269 = (tmp_offs_98269 + sizze_78997)
      if ((x_81545 * np.int32(8)) != 0):
        cl.enqueue_copy(self.queue, mem_97387, mem_97378,
                        dest_offset=np.long((tmp_offs_98269 * np.int32(8))),
                        src_offset=np.long(np.int32(0)),
                        byte_count=np.long((x_81545 * np.int32(8))))
      if synchronous:
        self.queue.finish()
      tmp_offs_98269 = (tmp_offs_98269 + x_81545)
      i_81555 = (x_81545 - np.int32(1))
      x_81556 = sle32(np.int32(0), i_81555)
      bounds_check_81557 = True
      assert x_81556, 'At algorithm.fut:124:1-139:22 -> algorithm.fut:138:65-138:84: index out of bounds'
      read_res_98623 = np.empty(1, dtype=ct.c_int32)
      cl.enqueue_copy(self.queue, read_res_98623, mem_97372,
                      device_offset=np.long((i_81555 * np.int32(4))),
                      is_blocking=True)
      x_81558 = read_res_98623[0]
      res_81559 = (x_81558 + np.int32(1))
      sizze_tmp_98108 = conc_tmp_81549
      sizze_tmp_98109 = conc_tmp_81551
      sizze_tmp_98110 = conc_tmp_81553
      rowsRes_mem_sizze_tmp_98111 = bytes_97379
      rowsRes_mem_tmp_98112 = mem_97381
      colsRes_mem_sizze_tmp_98113 = bytes_97382
      colsRes_mem_tmp_98114 = mem_97384
      distsRes_mem_sizze_tmp_98115 = bytes_97385
      distsRes_mem_tmp_98116 = mem_97387
      i_tmp_98117 = y_79004
      rowOffset_tmp_98121 = res_81559
      sizze_78995 = sizze_tmp_98108
      sizze_78996 = sizze_tmp_98109
      sizze_78997 = sizze_tmp_98110
      rowsRes_mem_sizze_97029 = rowsRes_mem_sizze_tmp_98111
      rowsRes_mem_97030 = rowsRes_mem_tmp_98112
      colsRes_mem_sizze_97031 = colsRes_mem_sizze_tmp_98113
      colsRes_mem_97032 = colsRes_mem_tmp_98114
      distsRes_mem_sizze_97033 = distsRes_mem_sizze_tmp_98115
      distsRes_mem_97034 = distsRes_mem_tmp_98116
      i_78998 = i_tmp_98117
      rowOffset_79002 = rowOffset_tmp_98121
      i_79003 += one_98625
    sizze_78987 = sizze_78995
    sizze_78988 = sizze_78996
    sizze_78989 = sizze_78997
    res_mem_sizze_97388 = rowsRes_mem_sizze_97029
    res_mem_97389 = rowsRes_mem_97030
    res_mem_sizze_97390 = colsRes_mem_sizze_97031
    res_mem_97391 = colsRes_mem_97032
    res_mem_sizze_97392 = distsRes_mem_sizze_97033
    res_mem_97393 = distsRes_mem_97034
    res_78990 = i_78998
    res_78994 = rowOffset_79002
    out_arrsizze_98101 = sizze_78987
    out_arrsizze_98104 = sizze_78988
    out_arrsizze_98107 = sizze_78989
    out_memsizze_98100 = res_mem_sizze_97388
    out_mem_98099 = res_mem_97389
    out_memsizze_98103 = res_mem_sizze_97390
    out_mem_98102 = res_mem_97391
    out_memsizze_98106 = res_mem_sizze_97392
    out_mem_98105 = res_mem_97393
    return (out_memsizze_98100, out_mem_98099, out_arrsizze_98101,
            out_memsizze_98103, out_mem_98102, out_arrsizze_98104,
            out_memsizze_98106, out_mem_98105, out_arrsizze_98107)
  def futhark_calculateCSR(self, detectorPositions_mem_sizze_97019,
                           detectorPositions_mem_97020, angles_mem_sizze_97021,
                           angles_mem_97022, sizze_81560, sizze_81561,
                           gridHalfWidth_81564, delta_81565, rowOffset_81566,
                           numRows_81567):
    x_81568 = (np.float64(2.0) * gridHalfWidth_81564)
    x_81569 = (x_81568 / delta_81565)
    group_sizze_92755 = self.sizes["group_size_92754"]
    max_num_groups_92757 = self.sizes["max_num_groups_92756"]
    y_92758 = (group_sizze_92755 - np.int32(1))
    x_92759 = (sizze_81561 + y_92758)
    w_div_group_sizze_92760 = squot32(x_92759, group_sizze_92755)
    num_groups_maybe_zzero_92761 = smin32(w_div_group_sizze_92760,
                                          max_num_groups_92757)
    num_groups_92762 = smax32(np.int32(1), num_groups_maybe_zzero_92761)
    num_threads_92763 = (num_groups_92762 * group_sizze_92755)
    y_92764 = (num_threads_92763 - np.int32(1))
    x_92765 = (sizze_81561 + y_92764)
    per_thread_elements_92766 = squot32(x_92765, num_threads_92763)
    binop_x_97027 = sext_i32_i64(num_groups_92762)
    bytes_97026 = (binop_x_97027 * np.int64(8))
    mem_97028 = opencl_alloc(self, bytes_97026, "mem_97028")
    binop_x_97024 = sext_i32_i64(group_sizze_92755)
    bytes_97023 = (binop_x_97024 * np.int64(8))
    if ((1 * (num_groups_92762 * group_sizze_92755)) != 0):
      self.chunked_reduce_kernel_92771_var.set_args(cl.LocalMemory(np.long(bytes_97023)),
                                                    np.int32(sizze_81561),
                                                    np.float64(x_81569),
                                                    np.int32(num_threads_92763),
                                                    np.int32(per_thread_elements_92766),
                                                    angles_mem_97022, mem_97028)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.chunked_reduce_kernel_92771_var,
                                 (np.long((num_groups_92762 * group_sizze_92755)),),
                                 (np.long(group_sizze_92755),))
      if synchronous:
        self.queue.finish()
    mem_97034 = opencl_alloc(self, np.int64(8), "mem_97034")
    binop_x_97030 = sext_i32_i64(max_num_groups_92757)
    bytes_97029 = (binop_x_97030 * np.int64(8))
    if ((1 * max_num_groups_92757) != 0):
      self.reduce_kernel_92848_var.set_args(cl.LocalMemory(np.long(bytes_97029)),
                                            np.int32(num_groups_92762),
                                            mem_97028, mem_97034)
      cl.enqueue_nd_range_kernel(self.queue, self.reduce_kernel_92848_var,
                                 (np.long(max_num_groups_92757),),
                                 (np.long(max_num_groups_92757),))
      if synchronous:
        self.queue.finish()
    read_res_98626 = np.empty(1, dtype=ct.c_double)
    cl.enqueue_copy(self.queue, read_res_98626, mem_97034,
                    device_offset=np.long(np.int32(0)), is_blocking=True)
    res_81570 = read_res_98626[0]
    res_81628 = fptosi_f64_i32(res_81570)
    arg_81629 = (gridHalfWidth_81564 / delta_81565)
    res_81630 = fptosi_f64_i16(arg_81629)
    nesting_sizze_92859 = (sizze_81560 * sizze_81561)
    group_sizze_92861 = self.sizes["group_size_92860"]
    y_92862 = (group_sizze_92861 - np.int32(1))
    x_92863 = (nesting_sizze_92859 + y_92862)
    num_groups_92864 = squot32(x_92863, group_sizze_92861)
    num_threads_92865 = (num_groups_92864 * group_sizze_92861)
    convop_x_97036 = (sizze_81561 * sizze_81560)
    binop_x_97037 = sext_i32_i64(convop_x_97036)
    bytes_97035 = (binop_x_97037 * np.int64(8))
    mem_97038 = opencl_alloc(self, bytes_97035, "mem_97038")
    if ((1 * (num_groups_92864 * group_sizze_92861)) != 0):
      self.map_kernel_92866_var.set_args(np.int32(sizze_81560),
                                         np.int32(sizze_81561),
                                         angles_mem_97022, mem_97038)
      cl.enqueue_nd_range_kernel(self.queue, self.map_kernel_92866_var,
                                 (np.long((num_groups_92864 * group_sizze_92861)),),
                                 (np.long(group_sizze_92861),))
      if synchronous:
        self.queue.finish()
    last_index_81639 = (nesting_sizze_92859 - np.int32(1))
    is_empty_81640 = (nesting_sizze_92859 == np.int32(0))
    bounds_invalid_upwards_81641 = slt32(res_81628, np.int32(0))
    if bounds_invalid_upwards_81641:
      num_elems_81642 = np.int32(0)
    else:
      num_elems_81642 = res_81628
    bounds_invalid_upwards_81643 = slt32(numRows_81567, np.int32(0))
    if bounds_invalid_upwards_81643:
      num_elems_81644 = np.int32(0)
    else:
      num_elems_81644 = numRows_81567
    conc_tmp_81645 = (np.int32(1) + num_elems_81644)
    res_81646 = fptosi_f64_i32(arg_81629)
    y_81647 = (res_81646 * np.int32(2))
    group_sizze_92872 = self.sizes["group_size_92871"]
    max_num_groups_92874 = self.sizes["max_num_groups_92873"]
    y_92875 = (group_sizze_92872 - np.int32(1))
    x_92876 = (nesting_sizze_92859 + y_92875)
    w_div_group_sizze_92877 = squot32(x_92876, group_sizze_92872)
    num_groups_maybe_zzero_92878 = smin32(w_div_group_sizze_92877,
                                          max_num_groups_92874)
    num_groups_92879 = smax32(np.int32(1), num_groups_maybe_zzero_92878)
    num_threads_92880 = (num_groups_92879 * group_sizze_92872)
    binop_x_97040 = sext_i32_i64(nesting_sizze_92859)
    bytes_97039 = (binop_x_97040 * np.int64(4))
    mem_97041 = opencl_alloc(self, bytes_97039, "mem_97041")
    mem_97044 = opencl_alloc(self, bytes_97039, "mem_97044")
    bytes_97045 = (binop_x_97040 * np.int64(2))
    mem_97047 = opencl_alloc(self, bytes_97045, "mem_97047")
    mem_97050 = opencl_alloc(self, bytes_97045, "mem_97050")
    bytes_97051 = (binop_x_97040 * np.int64(8))
    mem_97053 = opencl_alloc(self, bytes_97051, "mem_97053")
    mem_97055 = opencl_alloc(self, binop_x_97040, "mem_97055")
    mem_97057 = opencl_alloc(self, binop_x_97040, "mem_97057")
    y_93749 = (num_threads_92880 - np.int32(1))
    x_93750 = (nesting_sizze_92859 + y_93749)
    num_iterations_93751 = squot32(x_93750, num_threads_92880)
    y_93754 = (num_iterations_93751 * group_sizze_92872)
    binop_x_97083 = sext_i32_i64(num_groups_92879)
    bytes_97082 = (binop_x_97083 * np.int64(4))
    mem_97084 = opencl_alloc(self, bytes_97082, "mem_97084")
    binop_x_97071 = sext_i32_i64(group_sizze_92872)
    bytes_97070 = (binop_x_97071 * np.int64(4))
    if ((1 * (num_groups_92879 * group_sizze_92872)) != 0):
      self.scan1_kernel_93746_var.set_args(cl.LocalMemory(np.long(bytes_97070)),
                                           np.int32(sizze_81560),
                                           np.float64(gridHalfWidth_81564),
                                           np.float64(delta_81565),
                                           np.int32(nesting_sizze_92859),
                                           np.int32(num_iterations_93751),
                                           np.int32(y_93754),
                                           detectorPositions_mem_97020,
                                           mem_97038, mem_97041, mem_97044,
                                           mem_97047, mem_97050, mem_97053,
                                           mem_97055, mem_97057, mem_97084)
      cl.enqueue_nd_range_kernel(self.queue, self.scan1_kernel_93746_var,
                                 (np.long((num_groups_92879 * group_sizze_92872)),),
                                 (np.long(group_sizze_92872),))
      if synchronous:
        self.queue.finish()
    mem_97090 = opencl_alloc(self, bytes_97082, "mem_97090")
    if ((1 * num_groups_92879) != 0):
      self.scan2_kernel_93798_var.set_args(cl.LocalMemory(np.long(bytes_97082)),
                                           np.int32(num_groups_92879),
                                           mem_97084, mem_97090)
      cl.enqueue_nd_range_kernel(self.queue, self.scan2_kernel_93798_var,
                                 (np.long(num_groups_92879),),
                                 (np.long(num_groups_92879),))
      if synchronous:
        self.queue.finish()
    group_sizze_93821 = self.sizes["group_size_93820"]
    y_93822 = (group_sizze_93821 - np.int32(1))
    x_93823 = (nesting_sizze_92859 + y_93822)
    num_groups_93824 = squot32(x_93823, group_sizze_93821)
    num_threads_93825 = (num_groups_93824 * group_sizze_93821)
    mem_97093 = opencl_alloc(self, bytes_97039, "mem_97093")
    if ((1 * (num_groups_93824 * group_sizze_93821)) != 0):
      self.map_kernel_93826_var.set_args(np.int32(nesting_sizze_92859),
                                         np.int32(y_93754), mem_97041,
                                         mem_97090, mem_97093)
      cl.enqueue_nd_range_kernel(self.queue, self.map_kernel_93826_var,
                                 (np.long((num_groups_93824 * group_sizze_93821)),),
                                 (np.long(group_sizze_93821),))
      if synchronous:
        self.queue.finish()
    if is_empty_81640:
      partition_sizze_83342 = np.int32(0)
    else:
      read_res_98627 = np.empty(1, dtype=ct.c_int32)
      cl.enqueue_copy(self.queue, read_res_98627, mem_97093,
                      device_offset=np.long((last_index_81639 * np.int32(4))),
                      is_blocking=True)
      last_offset_83343 = read_res_98627[0]
      partition_sizze_83342 = last_offset_83343
    binop_x_97095 = sext_i32_i64(partition_sizze_83342)
    bytes_97094 = (binop_x_97095 * np.int64(8))
    mem_97096 = opencl_alloc(self, bytes_97094, "mem_97096")
    bytes_97097 = (binop_x_97095 * np.int64(2))
    mem_97099 = opencl_alloc(self, bytes_97097, "mem_97099")
    mem_97102 = opencl_alloc(self, bytes_97097, "mem_97102")
    mem_97105 = opencl_alloc(self, bytes_97094, "mem_97105")
    mem_97107 = opencl_alloc(self, binop_x_97095, "mem_97107")
    bytes_97108 = (binop_x_97095 * np.int64(4))
    mem_97110 = opencl_alloc(self, bytes_97108, "mem_97110")
    group_sizze_93831 = self.sizes["group_size_93830"]
    y_93832 = (group_sizze_93831 - np.int32(1))
    x_93833 = (nesting_sizze_92859 + y_93832)
    num_groups_93834 = squot32(x_93833, group_sizze_93831)
    num_threads_93835 = (num_groups_93834 * group_sizze_93831)
    if ((1 * (num_groups_93834 * group_sizze_93831)) != 0):
      self.map_kernel_93836_var.set_args(np.int32(sizze_81560),
                                         np.int32(rowOffset_81566),
                                         np.int32(partition_sizze_83342),
                                         np.int32(nesting_sizze_92859),
                                         mem_97038, mem_97044, mem_97047,
                                         mem_97050, mem_97053, mem_97055,
                                         mem_97093, mem_97096, mem_97099,
                                         mem_97102, mem_97105, mem_97107,
                                         mem_97110)
      cl.enqueue_nd_range_kernel(self.queue, self.map_kernel_93836_var,
                                 (np.long((num_groups_93834 * group_sizze_93831)),),
                                 (np.long(group_sizze_93831),))
      if synchronous:
        self.queue.finish()
    x_83369 = abs(partition_sizze_83342)
    group_sizze_94561 = self.sizes["group_size_94560"]
    y_94562 = (group_sizze_94561 - np.int32(1))
    x_94563 = (x_83369 + y_94562)
    num_groups_94564 = squot32(x_94563, group_sizze_94561)
    num_threads_94565 = (num_groups_94564 * group_sizze_94561)
    binop_x_97112 = sext_i32_i64(x_83369)
    bytes_97111 = (binop_x_97112 * np.int64(2))
    mem_97113 = opencl_alloc(self, bytes_97111, "mem_97113")
    mem_97116 = opencl_alloc(self, bytes_97111, "mem_97116")
    mem_97118 = opencl_alloc(self, binop_x_97112, "mem_97118")
    mem_97121 = opencl_alloc(self, bytes_97111, "mem_97121")
    mem_97124 = opencl_alloc(self, bytes_97111, "mem_97124")
    mem_97127 = opencl_alloc(self, bytes_97111, "mem_97127")
    mem_97130 = opencl_alloc(self, bytes_97111, "mem_97130")
    bytes_97131 = (binop_x_97112 * np.int64(8))
    mem_97133 = opencl_alloc(self, bytes_97131, "mem_97133")
    if ((1 * (num_groups_94564 * group_sizze_94561)) != 0):
      self.map_kernel_94566_var.set_args(np.int16(res_81630), np.int32(x_83369),
                                         mem_97096, mem_97099, mem_97102,
                                         mem_97113, mem_97116, mem_97118,
                                         mem_97121, mem_97124, mem_97127,
                                         mem_97130, mem_97133)
      cl.enqueue_nd_range_kernel(self.queue, self.map_kernel_94566_var,
                                 (np.long((num_groups_94564 * group_sizze_94561)),),
                                 (np.long(group_sizze_94561),))
      if synchronous:
        self.queue.finish()
    group_sizze_93873 = self.sizes["group_size_93872"]
    y_93874 = (group_sizze_93873 - np.int32(1))
    x_93875 = (x_83369 + y_93874)
    num_groups_93876 = squot32(x_93875, group_sizze_93873)
    num_threads_93877 = (num_groups_93876 * group_sizze_93873)
    bytes_97299 = (binop_x_97112 * np.int64(4))
    mem_97301 = opencl_alloc(self, bytes_97299, "mem_97301")
    convop_x_97303 = (num_elems_81642 * x_83369)
    binop_x_97304 = sext_i32_i64(convop_x_97303)
    bytes_97302 = (binop_x_97304 * np.int64(2))
    mem_97305 = opencl_alloc(self, bytes_97302, "mem_97305")
    mem_97309 = opencl_alloc(self, bytes_97302, "mem_97309")
    bytes_97310 = (binop_x_97304 * np.int64(8))
    mem_97313 = opencl_alloc(self, bytes_97310, "mem_97313")
    binop_x_97135 = sext_i32_i64(num_elems_81642)
    bytes_97134 = (binop_x_97135 * np.int64(2))
    bytes_97140 = (binop_x_97135 * np.int64(8))
    num_threads64_97749 = sext_i32_i64(num_threads_93877)
    total_sizze_97750 = (num_threads64_97749 * bytes_97134)
    mem_97136 = opencl_alloc(self, total_sizze_97750, "mem_97136")
    total_sizze_97751 = (num_threads64_97749 * bytes_97134)
    mem_97139 = opencl_alloc(self, total_sizze_97751, "mem_97139")
    total_sizze_97752 = (num_threads64_97749 * bytes_97140)
    mem_97142 = opencl_alloc(self, total_sizze_97752, "mem_97142")
    if ((1 * (num_groups_93876 * group_sizze_93873)) != 0):
      self.map_kernel_93878_var.set_args(np.float64(delta_81565),
                                         np.int32(num_elems_81642),
                                         np.int32(x_83369), mem_97105,
                                         mem_97107, mem_97113, mem_97116,
                                         mem_97118, mem_97121, mem_97124,
                                         mem_97127, mem_97130, mem_97133,
                                         mem_97136, mem_97139, mem_97142,
                                         mem_97301, mem_97305, mem_97309,
                                         mem_97313)
      cl.enqueue_nd_range_kernel(self.queue, self.map_kernel_93878_var,
                                 (np.long((num_groups_93876 * group_sizze_93873)),),
                                 (np.long(group_sizze_93873),))
      if synchronous:
        self.queue.finish()
    binop_x_97315 = sext_i32_i64(num_elems_81644)
    bytes_97314 = (binop_x_97315 * np.int64(4))
    mem_97316 = opencl_alloc(self, bytes_97314, "mem_97316")
    group_sizze_98397 = self.sizes["group_size_98397"]
    num_groups_98398 = squot32(((num_elems_81644 + sext_i32_i32(group_sizze_98397)) - np.int32(1)),
                               sext_i32_i32(group_sizze_98397))
    if ((1 * (num_groups_98398 * group_sizze_98397)) != 0):
      self.kernel_replicate_98394_var.set_args(np.int32(num_elems_81644),
                                               mem_97316)
      cl.enqueue_nd_range_kernel(self.queue, self.kernel_replicate_98394_var,
                                 (np.long((num_groups_98398 * group_sizze_98397)),),
                                 (np.long(group_sizze_98397),))
      if synchronous:
        self.queue.finish()
    group_sizze_94658 = self.sizes["group_size_94657"]
    y_94659 = (group_sizze_94658 - np.int32(1))
    x_94660 = (x_83369 + y_94659)
    num_groups_94661 = squot32(x_94660, group_sizze_94658)
    num_threads_94662 = (num_groups_94661 * group_sizze_94658)
    if ((1 * (num_groups_94661 * group_sizze_94658)) != 0):
      self.map_kernel_94663_var.set_args(np.int32(num_elems_81644),
                                         np.int32(x_83369), mem_97110,
                                         mem_97301, mem_97316)
      cl.enqueue_nd_range_kernel(self.queue, self.map_kernel_94663_var,
                                 (np.long((num_groups_94661 * group_sizze_94658)),),
                                 (np.long(group_sizze_94658),))
      if synchronous:
        self.queue.finish()
    group_sizze_94670 = self.sizes["group_size_94669"]
    max_num_groups_94672 = self.sizes["max_num_groups_94671"]
    y_94673 = (group_sizze_94670 - np.int32(1))
    x_94674 = (conc_tmp_81645 + y_94673)
    w_div_group_sizze_94675 = squot32(x_94674, group_sizze_94670)
    num_groups_maybe_zzero_94676 = smin32(w_div_group_sizze_94675,
                                          max_num_groups_94672)
    num_groups_94677 = smax32(np.int32(1), num_groups_maybe_zzero_94676)
    num_threads_94678 = (num_groups_94677 * group_sizze_94670)
    binop_x_97318 = sext_i32_i64(conc_tmp_81645)
    bytes_97317 = (binop_x_97318 * np.int64(4))
    mem_97319 = opencl_alloc(self, bytes_97317, "mem_97319")
    y_94701 = (num_threads_94678 - np.int32(1))
    x_94702 = (conc_tmp_81645 + y_94701)
    num_iterations_94703 = squot32(x_94702, num_threads_94678)
    y_94706 = (num_iterations_94703 * group_sizze_94670)
    binop_x_97327 = sext_i32_i64(num_groups_94677)
    bytes_97326 = (binop_x_97327 * np.int64(4))
    mem_97328 = opencl_alloc(self, bytes_97326, "mem_97328")
    binop_x_97321 = sext_i32_i64(group_sizze_94670)
    bytes_97320 = (binop_x_97321 * np.int64(4))
    if ((1 * (num_groups_94677 * group_sizze_94670)) != 0):
      self.scan1_kernel_94698_var.set_args(cl.LocalMemory(np.long(bytes_97320)),
                                           np.int32(conc_tmp_81645),
                                           np.int32(num_iterations_94703),
                                           np.int32(y_94706), mem_97316,
                                           mem_97319, mem_97328)
      cl.enqueue_nd_range_kernel(self.queue, self.scan1_kernel_94698_var,
                                 (np.long((num_groups_94677 * group_sizze_94670)),),
                                 (np.long(group_sizze_94670),))
      if synchronous:
        self.queue.finish()
    mem_97334 = opencl_alloc(self, bytes_97326, "mem_97334")
    if ((1 * num_groups_94677) != 0):
      self.scan2_kernel_94731_var.set_args(cl.LocalMemory(np.long(bytes_97326)),
                                           np.int32(num_groups_94677),
                                           mem_97328, mem_97334)
      cl.enqueue_nd_range_kernel(self.queue, self.scan2_kernel_94731_var,
                                 (np.long(num_groups_94677),),
                                 (np.long(num_groups_94677),))
      if synchronous:
        self.queue.finish()
    group_sizze_94754 = self.sizes["group_size_94753"]
    y_94755 = (group_sizze_94754 - np.int32(1))
    x_94756 = (conc_tmp_81645 + y_94755)
    num_groups_94757 = squot32(x_94756, group_sizze_94754)
    num_threads_94758 = (num_groups_94757 * group_sizze_94754)
    mem_97337 = opencl_alloc(self, bytes_97317, "mem_97337")
    if ((1 * (num_groups_94757 * group_sizze_94754)) != 0):
      self.map_kernel_94759_var.set_args(np.int32(conc_tmp_81645),
                                         np.int32(y_94706), mem_97319,
                                         mem_97334, mem_97337)
      cl.enqueue_nd_range_kernel(self.queue, self.map_kernel_94759_var,
                                 (np.long((num_groups_94757 * group_sizze_94754)),),
                                 (np.long(group_sizze_94754),))
      if synchronous:
        self.queue.finish()
    group_sizze_94766 = self.sizes["group_size_94765"]
    y_94767 = (group_sizze_94766 - np.int32(1))
    x_94768 = (convop_x_97303 + y_94767)
    num_groups_94769 = squot32(x_94768, group_sizze_94766)
    num_threads_94770 = (num_groups_94769 * group_sizze_94766)
    convop_x_97339 = (x_83369 * num_elems_81642)
    binop_x_97340 = sext_i32_i64(convop_x_97339)
    bytes_97338 = (binop_x_97340 * np.int64(2))
    mem_97341 = opencl_alloc(self, bytes_97338, "mem_97341")
    self.futhark_map_transpose_opencl_i16(mem_97341, np.int32(0), mem_97305,
                                          np.int32(0), np.int32(1), x_83369,
                                          num_elems_81642,
                                          (x_83369 * num_elems_81642),
                                          (x_83369 * num_elems_81642))
    mem_97345 = opencl_alloc(self, bytes_97338, "mem_97345")
    self.futhark_map_transpose_opencl_i16(mem_97345, np.int32(0), mem_97309,
                                          np.int32(0), np.int32(1), x_83369,
                                          num_elems_81642,
                                          (x_83369 * num_elems_81642),
                                          (x_83369 * num_elems_81642))
    bytes_97346 = (binop_x_97340 * np.int64(4))
    mem_97349 = opencl_alloc(self, bytes_97346, "mem_97349")
    if ((1 * (num_groups_94769 * group_sizze_94766)) != 0):
      self.map_kernel_94771_var.set_args(np.int32(num_elems_81642),
                                         np.int32(res_81646), np.int32(y_81647),
                                         np.int32(x_83369), mem_97341,
                                         mem_97345, mem_97349)
      cl.enqueue_nd_range_kernel(self.queue, self.map_kernel_94771_var,
                                 (np.long((num_groups_94769 * group_sizze_94766)),),
                                 (np.long(group_sizze_94766),))
      if synchronous:
        self.queue.finish()
    group_sizze_94783 = self.sizes["group_size_94782"]
    max_num_groups_94785 = self.sizes["max_num_groups_94784"]
    y_94786 = (group_sizze_94783 - np.int32(1))
    x_94787 = (convop_x_97339 + y_94786)
    w_div_group_sizze_94788 = squot32(x_94787, group_sizze_94783)
    num_groups_maybe_zzero_94789 = smin32(w_div_group_sizze_94788,
                                          max_num_groups_94785)
    num_groups_94790 = smax32(np.int32(1), num_groups_maybe_zzero_94789)
    num_threads_94791 = (num_groups_94790 * group_sizze_94783)
    mem_97352 = opencl_alloc(self, bytes_97346, "mem_97352")
    mem_97355 = opencl_alloc(self, bytes_97346, "mem_97355")
    y_94820 = (num_threads_94791 - np.int32(1))
    x_94821 = (convop_x_97339 + y_94820)
    num_iterations_94822 = squot32(x_94821, num_threads_94791)
    y_94825 = (num_iterations_94822 * group_sizze_94783)
    bytes_97356 = (binop_x_97340 * np.int64(8))
    mem_97359 = opencl_alloc(self, bytes_97356, "mem_97359")
    self.futhark_map_transpose_opencl_f64(mem_97359, np.int32(0), mem_97313,
                                          np.int32(0), np.int32(1), x_83369,
                                          num_elems_81642,
                                          (x_83369 * num_elems_81642),
                                          (x_83369 * num_elems_81642))
    binop_x_97370 = sext_i32_i64(num_groups_94790)
    bytes_97369 = (binop_x_97370 * np.int64(4))
    mem_97371 = opencl_alloc(self, bytes_97369, "mem_97371")
    binop_x_97363 = sext_i32_i64(group_sizze_94783)
    bytes_97362 = (binop_x_97363 * np.int64(4))
    if ((1 * (num_groups_94790 * group_sizze_94783)) != 0):
      self.scan1_kernel_94817_var.set_args(cl.LocalMemory(np.long(bytes_97362)),
                                           np.int32(num_elems_81642),
                                           np.int32(num_iterations_94822),
                                           np.int32(y_94825),
                                           np.int32(convop_x_97339), mem_97352,
                                           mem_97355, mem_97359, mem_97371)
      cl.enqueue_nd_range_kernel(self.queue, self.scan1_kernel_94817_var,
                                 (np.long((num_groups_94790 * group_sizze_94783)),),
                                 (np.long(group_sizze_94783),))
      if synchronous:
        self.queue.finish()
    mem_97377 = opencl_alloc(self, bytes_97369, "mem_97377")
    if ((1 * num_groups_94790) != 0):
      self.scan2_kernel_94853_var.set_args(cl.LocalMemory(np.long(bytes_97369)),
                                           np.int32(num_groups_94790),
                                           mem_97371, mem_97377)
      cl.enqueue_nd_range_kernel(self.queue, self.scan2_kernel_94853_var,
                                 (np.long(num_groups_94790),),
                                 (np.long(num_groups_94790),))
      if synchronous:
        self.queue.finish()
    group_sizze_94876 = self.sizes["group_size_94875"]
    y_94877 = (group_sizze_94876 - np.int32(1))
    x_94878 = (convop_x_97339 + y_94877)
    num_groups_94879 = squot32(x_94878, group_sizze_94876)
    num_threads_94880 = (num_groups_94879 * group_sizze_94876)
    mem_97380 = opencl_alloc(self, bytes_97346, "mem_97380")
    if ((1 * (num_groups_94879 * group_sizze_94876)) != 0):
      self.map_kernel_94881_var.set_args(np.int32(y_94825),
                                         np.int32(convop_x_97339), mem_97352,
                                         mem_97377, mem_97380)
      cl.enqueue_nd_range_kernel(self.queue, self.map_kernel_94881_var,
                                 (np.long((num_groups_94879 * group_sizze_94876)),),
                                 (np.long(group_sizze_94876),))
      if synchronous:
        self.queue.finish()
    last_index_84133 = (convop_x_97339 - np.int32(1))
    is_empty_84134 = (convop_x_97339 == np.int32(0))
    if is_empty_84134:
      partition_sizze_84135 = np.int32(0)
    else:
      read_res_98628 = np.empty(1, dtype=ct.c_int32)
      cl.enqueue_copy(self.queue, read_res_98628, mem_97380,
                      device_offset=np.long((last_index_84133 * np.int32(4))),
                      is_blocking=True)
      last_offset_84136 = read_res_98628[0]
      partition_sizze_84135 = last_offset_84136
    binop_x_97382 = sext_i32_i64(partition_sizze_84135)
    bytes_97381 = (binop_x_97382 * np.int64(4))
    mem_97383 = opencl_alloc(self, bytes_97381, "mem_97383")
    bytes_97384 = (binop_x_97382 * np.int64(8))
    mem_97386 = opencl_alloc(self, bytes_97384, "mem_97386")
    group_sizze_94886 = self.sizes["group_size_94885"]
    y_94887 = (group_sizze_94886 - np.int32(1))
    x_94888 = (convop_x_97339 + y_94887)
    num_groups_94889 = squot32(x_94888, group_sizze_94886)
    num_threads_94890 = (num_groups_94889 * group_sizze_94886)
    if ((1 * (num_groups_94889 * group_sizze_94886)) != 0):
      self.map_kernel_94891_var.set_args(np.int32(num_elems_81642),
                                         np.int32(partition_sizze_84135),
                                         np.int32(convop_x_97339), mem_97349,
                                         mem_97355, mem_97359, mem_97380,
                                         mem_97383, mem_97386)
      cl.enqueue_nd_range_kernel(self.queue, self.map_kernel_94891_var,
                                 (np.long((num_groups_94889 * group_sizze_94886)),),
                                 (np.long(group_sizze_94886),))
      if synchronous:
        self.queue.finish()
    x_84148 = abs(partition_sizze_84135)
    binop_x_97388 = sext_i32_i64(x_84148)
    bytes_97387 = (binop_x_97388 * np.int64(4))
    mem_97389 = opencl_alloc(self, bytes_97387, "mem_97389")
    if ((x_84148 * np.int32(4)) != 0):
      cl.enqueue_copy(self.queue, mem_97389, mem_97383,
                      dest_offset=np.long(np.int32(0)),
                      src_offset=np.long(np.int32(0)),
                      byte_count=np.long((x_84148 * np.int32(4))))
    if synchronous:
      self.queue.finish()
    bytes_97391 = (binop_x_97388 * np.int64(8))
    mem_97393 = opencl_alloc(self, bytes_97391, "mem_97393")
    if ((x_84148 * np.int32(8)) != 0):
      cl.enqueue_copy(self.queue, mem_97393, mem_97386,
                      dest_offset=np.long(np.int32(0)),
                      src_offset=np.long(np.int32(0)),
                      byte_count=np.long((x_84148 * np.int32(8))))
    if synchronous:
      self.queue.finish()
    out_arrsizze_98272 = conc_tmp_81645
    out_arrsizze_98275 = x_84148
    out_arrsizze_98278 = x_84148
    out_memsizze_98271 = bytes_97317
    out_mem_98270 = mem_97337
    out_memsizze_98274 = bytes_97387
    out_mem_98273 = mem_97389
    out_memsizze_98277 = bytes_97391
    out_mem_98276 = mem_97393
    return (out_memsizze_98271, out_mem_98270, out_arrsizze_98272,
            out_memsizze_98274, out_mem_98273, out_arrsizze_98275,
            out_memsizze_98277, out_mem_98276, out_arrsizze_98278)
  def futhark_calculateCOO(self, detectorPositions_mem_sizze_97019,
                           detectorPositions_mem_97020, angles_mem_sizze_97021,
                           angles_mem_97022, sizze_84151, sizze_84152,
                           gridHalfWidth_84155, delta_84156, rowOffset_84157):
    x_84158 = (np.float64(2.0) * gridHalfWidth_84155)
    x_84159 = (x_84158 / delta_84156)
    group_sizze_94902 = self.sizes["group_size_94901"]
    max_num_groups_94904 = self.sizes["max_num_groups_94903"]
    y_94905 = (group_sizze_94902 - np.int32(1))
    x_94906 = (sizze_84152 + y_94905)
    w_div_group_sizze_94907 = squot32(x_94906, group_sizze_94902)
    num_groups_maybe_zzero_94908 = smin32(w_div_group_sizze_94907,
                                          max_num_groups_94904)
    num_groups_94909 = smax32(np.int32(1), num_groups_maybe_zzero_94908)
    num_threads_94910 = (num_groups_94909 * group_sizze_94902)
    y_94911 = (num_threads_94910 - np.int32(1))
    x_94912 = (sizze_84152 + y_94911)
    per_thread_elements_94913 = squot32(x_94912, num_threads_94910)
    binop_x_97027 = sext_i32_i64(num_groups_94909)
    bytes_97026 = (binop_x_97027 * np.int64(8))
    mem_97028 = opencl_alloc(self, bytes_97026, "mem_97028")
    binop_x_97024 = sext_i32_i64(group_sizze_94902)
    bytes_97023 = (binop_x_97024 * np.int64(8))
    if ((1 * (num_groups_94909 * group_sizze_94902)) != 0):
      self.chunked_reduce_kernel_94918_var.set_args(cl.LocalMemory(np.long(bytes_97023)),
                                                    np.int32(sizze_84152),
                                                    np.float64(x_84159),
                                                    np.int32(num_threads_94910),
                                                    np.int32(per_thread_elements_94913),
                                                    angles_mem_97022, mem_97028)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.chunked_reduce_kernel_94918_var,
                                 (np.long((num_groups_94909 * group_sizze_94902)),),
                                 (np.long(group_sizze_94902),))
      if synchronous:
        self.queue.finish()
    mem_97034 = opencl_alloc(self, np.int64(8), "mem_97034")
    binop_x_97030 = sext_i32_i64(max_num_groups_94904)
    bytes_97029 = (binop_x_97030 * np.int64(8))
    if ((1 * max_num_groups_94904) != 0):
      self.reduce_kernel_94995_var.set_args(cl.LocalMemory(np.long(bytes_97029)),
                                            np.int32(num_groups_94909),
                                            mem_97028, mem_97034)
      cl.enqueue_nd_range_kernel(self.queue, self.reduce_kernel_94995_var,
                                 (np.long(max_num_groups_94904),),
                                 (np.long(max_num_groups_94904),))
      if synchronous:
        self.queue.finish()
    read_res_98629 = np.empty(1, dtype=ct.c_double)
    cl.enqueue_copy(self.queue, read_res_98629, mem_97034,
                    device_offset=np.long(np.int32(0)), is_blocking=True)
    res_84160 = read_res_98629[0]
    res_84218 = fptosi_f64_i32(res_84160)
    arg_84219 = (gridHalfWidth_84155 / delta_84156)
    res_84220 = fptosi_f64_i16(arg_84219)
    nesting_sizze_95006 = (sizze_84151 * sizze_84152)
    group_sizze_95008 = self.sizes["group_size_95007"]
    y_95009 = (group_sizze_95008 - np.int32(1))
    x_95010 = (nesting_sizze_95006 + y_95009)
    num_groups_95011 = squot32(x_95010, group_sizze_95008)
    num_threads_95012 = (num_groups_95011 * group_sizze_95008)
    convop_x_97036 = (sizze_84152 * sizze_84151)
    binop_x_97037 = sext_i32_i64(convop_x_97036)
    bytes_97035 = (binop_x_97037 * np.int64(8))
    mem_97038 = opencl_alloc(self, bytes_97035, "mem_97038")
    if ((1 * (num_groups_95011 * group_sizze_95008)) != 0):
      self.map_kernel_95013_var.set_args(np.int32(sizze_84151),
                                         np.int32(sizze_84152),
                                         angles_mem_97022, mem_97038)
      cl.enqueue_nd_range_kernel(self.queue, self.map_kernel_95013_var,
                                 (np.long((num_groups_95011 * group_sizze_95008)),),
                                 (np.long(group_sizze_95008),))
      if synchronous:
        self.queue.finish()
    last_index_84229 = (nesting_sizze_95006 - np.int32(1))
    is_empty_84230 = (nesting_sizze_95006 == np.int32(0))
    bounds_invalid_upwards_84231 = slt32(res_84218, np.int32(0))
    if bounds_invalid_upwards_84231:
      num_elems_84232 = np.int32(0)
    else:
      num_elems_84232 = res_84218
    res_84233 = fptosi_f64_i32(arg_84219)
    y_84234 = (res_84233 * np.int32(2))
    group_sizze_95019 = self.sizes["group_size_95018"]
    max_num_groups_95021 = self.sizes["max_num_groups_95020"]
    y_95022 = (group_sizze_95019 - np.int32(1))
    x_95023 = (nesting_sizze_95006 + y_95022)
    w_div_group_sizze_95024 = squot32(x_95023, group_sizze_95019)
    num_groups_maybe_zzero_95025 = smin32(w_div_group_sizze_95024,
                                          max_num_groups_95021)
    num_groups_95026 = smax32(np.int32(1), num_groups_maybe_zzero_95025)
    num_threads_95027 = (num_groups_95026 * group_sizze_95019)
    binop_x_97040 = sext_i32_i64(nesting_sizze_95006)
    bytes_97039 = (binop_x_97040 * np.int64(4))
    mem_97041 = opencl_alloc(self, bytes_97039, "mem_97041")
    mem_97044 = opencl_alloc(self, bytes_97039, "mem_97044")
    bytes_97045 = (binop_x_97040 * np.int64(2))
    mem_97047 = opencl_alloc(self, bytes_97045, "mem_97047")
    mem_97050 = opencl_alloc(self, bytes_97045, "mem_97050")
    bytes_97051 = (binop_x_97040 * np.int64(8))
    mem_97053 = opencl_alloc(self, bytes_97051, "mem_97053")
    mem_97055 = opencl_alloc(self, binop_x_97040, "mem_97055")
    mem_97057 = opencl_alloc(self, binop_x_97040, "mem_97057")
    y_95896 = (num_threads_95027 - np.int32(1))
    x_95897 = (nesting_sizze_95006 + y_95896)
    num_iterations_95898 = squot32(x_95897, num_threads_95027)
    y_95901 = (num_iterations_95898 * group_sizze_95019)
    binop_x_97083 = sext_i32_i64(num_groups_95026)
    bytes_97082 = (binop_x_97083 * np.int64(4))
    mem_97084 = opencl_alloc(self, bytes_97082, "mem_97084")
    binop_x_97071 = sext_i32_i64(group_sizze_95019)
    bytes_97070 = (binop_x_97071 * np.int64(4))
    if ((1 * (num_groups_95026 * group_sizze_95019)) != 0):
      self.scan1_kernel_95893_var.set_args(cl.LocalMemory(np.long(bytes_97070)),
                                           np.int32(sizze_84151),
                                           np.float64(gridHalfWidth_84155),
                                           np.float64(delta_84156),
                                           np.int32(nesting_sizze_95006),
                                           np.int32(num_iterations_95898),
                                           np.int32(y_95901),
                                           detectorPositions_mem_97020,
                                           mem_97038, mem_97041, mem_97044,
                                           mem_97047, mem_97050, mem_97053,
                                           mem_97055, mem_97057, mem_97084)
      cl.enqueue_nd_range_kernel(self.queue, self.scan1_kernel_95893_var,
                                 (np.long((num_groups_95026 * group_sizze_95019)),),
                                 (np.long(group_sizze_95019),))
      if synchronous:
        self.queue.finish()
    mem_97090 = opencl_alloc(self, bytes_97082, "mem_97090")
    if ((1 * num_groups_95026) != 0):
      self.scan2_kernel_95945_var.set_args(cl.LocalMemory(np.long(bytes_97082)),
                                           np.int32(num_groups_95026),
                                           mem_97084, mem_97090)
      cl.enqueue_nd_range_kernel(self.queue, self.scan2_kernel_95945_var,
                                 (np.long(num_groups_95026),),
                                 (np.long(num_groups_95026),))
      if synchronous:
        self.queue.finish()
    group_sizze_95968 = self.sizes["group_size_95967"]
    y_95969 = (group_sizze_95968 - np.int32(1))
    x_95970 = (nesting_sizze_95006 + y_95969)
    num_groups_95971 = squot32(x_95970, group_sizze_95968)
    num_threads_95972 = (num_groups_95971 * group_sizze_95968)
    mem_97093 = opencl_alloc(self, bytes_97039, "mem_97093")
    if ((1 * (num_groups_95971 * group_sizze_95968)) != 0):
      self.map_kernel_95973_var.set_args(np.int32(nesting_sizze_95006),
                                         np.int32(y_95901), mem_97041,
                                         mem_97090, mem_97093)
      cl.enqueue_nd_range_kernel(self.queue, self.map_kernel_95973_var,
                                 (np.long((num_groups_95971 * group_sizze_95968)),),
                                 (np.long(group_sizze_95968),))
      if synchronous:
        self.queue.finish()
    if is_empty_84230:
      partition_sizze_85929 = np.int32(0)
    else:
      read_res_98630 = np.empty(1, dtype=ct.c_int32)
      cl.enqueue_copy(self.queue, read_res_98630, mem_97093,
                      device_offset=np.long((last_index_84229 * np.int32(4))),
                      is_blocking=True)
      last_offset_85930 = read_res_98630[0]
      partition_sizze_85929 = last_offset_85930
    binop_x_97095 = sext_i32_i64(partition_sizze_85929)
    bytes_97094 = (binop_x_97095 * np.int64(8))
    mem_97096 = opencl_alloc(self, bytes_97094, "mem_97096")
    bytes_97097 = (binop_x_97095 * np.int64(2))
    mem_97099 = opencl_alloc(self, bytes_97097, "mem_97099")
    mem_97102 = opencl_alloc(self, bytes_97097, "mem_97102")
    mem_97105 = opencl_alloc(self, bytes_97094, "mem_97105")
    mem_97107 = opencl_alloc(self, binop_x_97095, "mem_97107")
    bytes_97108 = (binop_x_97095 * np.int64(4))
    mem_97110 = opencl_alloc(self, bytes_97108, "mem_97110")
    group_sizze_95978 = self.sizes["group_size_95977"]
    y_95979 = (group_sizze_95978 - np.int32(1))
    x_95980 = (nesting_sizze_95006 + y_95979)
    num_groups_95981 = squot32(x_95980, group_sizze_95978)
    num_threads_95982 = (num_groups_95981 * group_sizze_95978)
    if ((1 * (num_groups_95981 * group_sizze_95978)) != 0):
      self.map_kernel_95983_var.set_args(np.int32(sizze_84151),
                                         np.int32(rowOffset_84157),
                                         np.int32(partition_sizze_85929),
                                         np.int32(nesting_sizze_95006),
                                         mem_97038, mem_97044, mem_97047,
                                         mem_97050, mem_97053, mem_97055,
                                         mem_97093, mem_97096, mem_97099,
                                         mem_97102, mem_97105, mem_97107,
                                         mem_97110)
      cl.enqueue_nd_range_kernel(self.queue, self.map_kernel_95983_var,
                                 (np.long((num_groups_95981 * group_sizze_95978)),),
                                 (np.long(group_sizze_95978),))
      if synchronous:
        self.queue.finish()
    x_85956 = abs(partition_sizze_85929)
    group_sizze_96704 = self.sizes["group_size_96703"]
    y_96705 = (group_sizze_96704 - np.int32(1))
    x_96706 = (x_85956 + y_96705)
    num_groups_96707 = squot32(x_96706, group_sizze_96704)
    num_threads_96708 = (num_groups_96707 * group_sizze_96704)
    binop_x_97112 = sext_i32_i64(x_85956)
    bytes_97111 = (binop_x_97112 * np.int64(2))
    mem_97113 = opencl_alloc(self, bytes_97111, "mem_97113")
    mem_97116 = opencl_alloc(self, bytes_97111, "mem_97116")
    mem_97118 = opencl_alloc(self, binop_x_97112, "mem_97118")
    mem_97121 = opencl_alloc(self, bytes_97111, "mem_97121")
    mem_97124 = opencl_alloc(self, bytes_97111, "mem_97124")
    mem_97127 = opencl_alloc(self, bytes_97111, "mem_97127")
    mem_97130 = opencl_alloc(self, bytes_97111, "mem_97130")
    bytes_97131 = (binop_x_97112 * np.int64(8))
    mem_97133 = opencl_alloc(self, bytes_97131, "mem_97133")
    if ((1 * (num_groups_96707 * group_sizze_96704)) != 0):
      self.map_kernel_96709_var.set_args(np.int16(res_84220), np.int32(x_85956),
                                         mem_97096, mem_97099, mem_97102,
                                         mem_97113, mem_97116, mem_97118,
                                         mem_97121, mem_97124, mem_97127,
                                         mem_97130, mem_97133)
      cl.enqueue_nd_range_kernel(self.queue, self.map_kernel_96709_var,
                                 (np.long((num_groups_96707 * group_sizze_96704)),),
                                 (np.long(group_sizze_96704),))
      if synchronous:
        self.queue.finish()
    group_sizze_96057 = self.sizes["group_size_96056"]
    y_96058 = (group_sizze_96057 - np.int32(1))
    x_96059 = (x_85956 + y_96058)
    num_groups_96060 = squot32(x_96059, group_sizze_96057)
    num_threads_96061 = (num_groups_96060 * group_sizze_96057)
    convop_x_97300 = (num_elems_84232 * x_85956)
    binop_x_97301 = sext_i32_i64(convop_x_97300)
    bytes_97299 = (binop_x_97301 * np.int64(2))
    mem_97302 = opencl_alloc(self, bytes_97299, "mem_97302")
    mem_97306 = opencl_alloc(self, bytes_97299, "mem_97306")
    bytes_97307 = (binop_x_97301 * np.int64(8))
    mem_97310 = opencl_alloc(self, bytes_97307, "mem_97310")
    binop_x_97135 = sext_i32_i64(num_elems_84232)
    bytes_97134 = (binop_x_97135 * np.int64(2))
    bytes_97140 = (binop_x_97135 * np.int64(8))
    num_threads64_97749 = sext_i32_i64(num_threads_96061)
    total_sizze_97750 = (num_threads64_97749 * bytes_97134)
    mem_97136 = opencl_alloc(self, total_sizze_97750, "mem_97136")
    total_sizze_97751 = (num_threads64_97749 * bytes_97134)
    mem_97139 = opencl_alloc(self, total_sizze_97751, "mem_97139")
    total_sizze_97752 = (num_threads64_97749 * bytes_97140)
    mem_97142 = opencl_alloc(self, total_sizze_97752, "mem_97142")
    if ((1 * (num_groups_96060 * group_sizze_96057)) != 0):
      self.map_kernel_96062_var.set_args(np.float64(delta_84156),
                                         np.int32(num_elems_84232),
                                         np.int32(x_85956), mem_97105,
                                         mem_97107, mem_97113, mem_97116,
                                         mem_97118, mem_97121, mem_97124,
                                         mem_97127, mem_97130, mem_97133,
                                         mem_97136, mem_97139, mem_97142,
                                         mem_97302, mem_97306, mem_97310)
      cl.enqueue_nd_range_kernel(self.queue, self.map_kernel_96062_var,
                                 (np.long((num_groups_96060 * group_sizze_96057)),),
                                 (np.long(group_sizze_96057),))
      if synchronous:
        self.queue.finish()
    group_sizze_96013 = self.sizes["group_size_96012"]
    y_96014 = (group_sizze_96013 - np.int32(1))
    x_96015 = (convop_x_97300 + y_96014)
    num_groups_96016 = squot32(x_96015, group_sizze_96013)
    num_threads_96017 = (num_groups_96016 * group_sizze_96013)
    convop_x_97312 = (x_85956 * num_elems_84232)
    binop_x_97313 = sext_i32_i64(convop_x_97312)
    bytes_97311 = (binop_x_97313 * np.int64(4))
    mem_97314 = opencl_alloc(self, bytes_97311, "mem_97314")
    if ((1 * (num_groups_96016 * group_sizze_96013)) != 0):
      self.map_kernel_96018_var.set_args(np.int32(num_elems_84232),
                                         np.int32(x_85956), mem_97110,
                                         mem_97314)
      cl.enqueue_nd_range_kernel(self.queue, self.map_kernel_96018_var,
                                 (np.long((num_groups_96016 * group_sizze_96013)),),
                                 (np.long(group_sizze_96013),))
      if synchronous:
        self.queue.finish()
    group_sizze_95992 = self.sizes["group_size_95991"]
    y_95993 = (group_sizze_95992 - np.int32(1))
    x_95994 = (convop_x_97300 + y_95993)
    num_groups_95995 = squot32(x_95994, group_sizze_95992)
    num_threads_95996 = (num_groups_95995 * group_sizze_95992)
    bytes_97315 = (binop_x_97313 * np.int64(2))
    mem_97318 = opencl_alloc(self, bytes_97315, "mem_97318")
    self.futhark_map_transpose_opencl_i16(mem_97318, np.int32(0), mem_97302,
                                          np.int32(0), np.int32(1), x_85956,
                                          num_elems_84232,
                                          (x_85956 * num_elems_84232),
                                          (x_85956 * num_elems_84232))
    mem_97322 = opencl_alloc(self, bytes_97315, "mem_97322")
    self.futhark_map_transpose_opencl_i16(mem_97322, np.int32(0), mem_97306,
                                          np.int32(0), np.int32(1), x_85956,
                                          num_elems_84232,
                                          (x_85956 * num_elems_84232),
                                          (x_85956 * num_elems_84232))
    mem_97326 = opencl_alloc(self, bytes_97311, "mem_97326")
    if ((1 * (num_groups_95995 * group_sizze_95992)) != 0):
      self.map_kernel_95997_var.set_args(np.int32(num_elems_84232),
                                         np.int32(res_84233), np.int32(y_84234),
                                         np.int32(x_85956), mem_97318,
                                         mem_97322, mem_97326)
      cl.enqueue_nd_range_kernel(self.queue, self.map_kernel_95997_var,
                                 (np.long((num_groups_95995 * group_sizze_95992)),),
                                 (np.long(group_sizze_95992),))
      if synchronous:
        self.queue.finish()
    group_sizze_96800 = self.sizes["group_size_96799"]
    max_num_groups_96802 = self.sizes["max_num_groups_96801"]
    y_96803 = (group_sizze_96800 - np.int32(1))
    x_96804 = (convop_x_97312 + y_96803)
    w_div_group_sizze_96805 = squot32(x_96804, group_sizze_96800)
    num_groups_maybe_zzero_96806 = smin32(w_div_group_sizze_96805,
                                          max_num_groups_96802)
    num_groups_96807 = smax32(np.int32(1), num_groups_maybe_zzero_96806)
    num_threads_96808 = (num_groups_96807 * group_sizze_96800)
    mem_97329 = opencl_alloc(self, bytes_97311, "mem_97329")
    mem_97332 = opencl_alloc(self, bytes_97311, "mem_97332")
    y_96837 = (num_threads_96808 - np.int32(1))
    x_96838 = (convop_x_97312 + y_96837)
    num_iterations_96839 = squot32(x_96838, num_threads_96808)
    y_96842 = (num_iterations_96839 * group_sizze_96800)
    bytes_97333 = (binop_x_97313 * np.int64(8))
    mem_97336 = opencl_alloc(self, bytes_97333, "mem_97336")
    self.futhark_map_transpose_opencl_f64(mem_97336, np.int32(0), mem_97310,
                                          np.int32(0), np.int32(1), x_85956,
                                          num_elems_84232,
                                          (x_85956 * num_elems_84232),
                                          (x_85956 * num_elems_84232))
    binop_x_97347 = sext_i32_i64(num_groups_96807)
    bytes_97346 = (binop_x_97347 * np.int64(4))
    mem_97348 = opencl_alloc(self, bytes_97346, "mem_97348")
    binop_x_97340 = sext_i32_i64(group_sizze_96800)
    bytes_97339 = (binop_x_97340 * np.int64(4))
    if ((1 * (num_groups_96807 * group_sizze_96800)) != 0):
      self.scan1_kernel_96834_var.set_args(cl.LocalMemory(np.long(bytes_97339)),
                                           np.int32(num_elems_84232),
                                           np.int32(num_iterations_96839),
                                           np.int32(y_96842),
                                           np.int32(convop_x_97312), mem_97329,
                                           mem_97332, mem_97336, mem_97348)
      cl.enqueue_nd_range_kernel(self.queue, self.scan1_kernel_96834_var,
                                 (np.long((num_groups_96807 * group_sizze_96800)),),
                                 (np.long(group_sizze_96800),))
      if synchronous:
        self.queue.finish()
    mem_97354 = opencl_alloc(self, bytes_97346, "mem_97354")
    if ((1 * num_groups_96807) != 0):
      self.scan2_kernel_96870_var.set_args(cl.LocalMemory(np.long(bytes_97346)),
                                           np.int32(num_groups_96807),
                                           mem_97348, mem_97354)
      cl.enqueue_nd_range_kernel(self.queue, self.scan2_kernel_96870_var,
                                 (np.long(num_groups_96807),),
                                 (np.long(num_groups_96807),))
      if synchronous:
        self.queue.finish()
    group_sizze_96893 = self.sizes["group_size_96892"]
    y_96894 = (group_sizze_96893 - np.int32(1))
    x_96895 = (convop_x_97312 + y_96894)
    num_groups_96896 = squot32(x_96895, group_sizze_96893)
    num_threads_96897 = (num_groups_96896 * group_sizze_96893)
    mem_97357 = opencl_alloc(self, bytes_97311, "mem_97357")
    if ((1 * (num_groups_96896 * group_sizze_96893)) != 0):
      self.map_kernel_96898_var.set_args(np.int32(y_96842),
                                         np.int32(convop_x_97312), mem_97329,
                                         mem_97354, mem_97357)
      cl.enqueue_nd_range_kernel(self.queue, self.map_kernel_96898_var,
                                 (np.long((num_groups_96896 * group_sizze_96893)),),
                                 (np.long(group_sizze_96893),))
      if synchronous:
        self.queue.finish()
    last_index_86668 = (convop_x_97312 - np.int32(1))
    is_empty_86669 = (convop_x_97312 == np.int32(0))
    if is_empty_86669:
      partition_sizze_86670 = np.int32(0)
    else:
      read_res_98631 = np.empty(1, dtype=ct.c_int32)
      cl.enqueue_copy(self.queue, read_res_98631, mem_97357,
                      device_offset=np.long((last_index_86668 * np.int32(4))),
                      is_blocking=True)
      last_offset_86671 = read_res_98631[0]
      partition_sizze_86670 = last_offset_86671
    binop_x_97359 = sext_i32_i64(partition_sizze_86670)
    bytes_97358 = (binop_x_97359 * np.int64(4))
    mem_97360 = opencl_alloc(self, bytes_97358, "mem_97360")
    mem_97363 = opencl_alloc(self, bytes_97358, "mem_97363")
    bytes_97364 = (binop_x_97359 * np.int64(8))
    mem_97366 = opencl_alloc(self, bytes_97364, "mem_97366")
    group_sizze_96903 = self.sizes["group_size_96902"]
    y_96904 = (group_sizze_96903 - np.int32(1))
    x_96905 = (convop_x_97312 + y_96904)
    num_groups_96906 = squot32(x_96905, group_sizze_96903)
    num_threads_96907 = (num_groups_96906 * group_sizze_96903)
    if ((1 * (num_groups_96906 * group_sizze_96903)) != 0):
      self.map_kernel_96908_var.set_args(np.int32(num_elems_84232),
                                         np.int32(partition_sizze_86670),
                                         np.int32(convop_x_97312), mem_97314,
                                         mem_97326, mem_97332, mem_97336,
                                         mem_97357, mem_97360, mem_97363,
                                         mem_97366)
      cl.enqueue_nd_range_kernel(self.queue, self.map_kernel_96908_var,
                                 (np.long((num_groups_96906 * group_sizze_96903)),),
                                 (np.long(group_sizze_96903),))
      if synchronous:
        self.queue.finish()
    x_86686 = abs(partition_sizze_86670)
    binop_x_97368 = sext_i32_i64(x_86686)
    bytes_97367 = (binop_x_97368 * np.int64(4))
    mem_97369 = opencl_alloc(self, bytes_97367, "mem_97369")
    if ((x_86686 * np.int32(4)) != 0):
      cl.enqueue_copy(self.queue, mem_97369, mem_97360,
                      dest_offset=np.long(np.int32(0)),
                      src_offset=np.long(np.int32(0)),
                      byte_count=np.long((x_86686 * np.int32(4))))
    if synchronous:
      self.queue.finish()
    mem_97373 = opencl_alloc(self, bytes_97367, "mem_97373")
    if ((x_86686 * np.int32(4)) != 0):
      cl.enqueue_copy(self.queue, mem_97373, mem_97363,
                      dest_offset=np.long(np.int32(0)),
                      src_offset=np.long(np.int32(0)),
                      byte_count=np.long((x_86686 * np.int32(4))))
    if synchronous:
      self.queue.finish()
    bytes_97375 = (binop_x_97368 * np.int64(8))
    mem_97377 = opencl_alloc(self, bytes_97375, "mem_97377")
    if ((x_86686 * np.int32(8)) != 0):
      cl.enqueue_copy(self.queue, mem_97377, mem_97366,
                      dest_offset=np.long(np.int32(0)),
                      src_offset=np.long(np.int32(0)),
                      byte_count=np.long((x_86686 * np.int32(8))))
    if synchronous:
      self.queue.finish()
    out_arrsizze_98463 = x_86686
    out_arrsizze_98466 = x_86686
    out_arrsizze_98469 = x_86686
    out_memsizze_98462 = bytes_97367
    out_mem_98461 = mem_97369
    out_memsizze_98465 = bytes_97367
    out_mem_98464 = mem_97373
    out_memsizze_98468 = bytes_97375
    out_mem_98467 = mem_97377
    return (out_memsizze_98462, out_mem_98461, out_arrsizze_98463,
            out_memsizze_98465, out_mem_98464, out_arrsizze_98466,
            out_memsizze_98468, out_mem_98467, out_arrsizze_98469)
  def main(self, detectorPositions_mem_97020_ext, angles_mem_97022_ext,
           gridHalfWidth_73921_ext, delta_73922_ext, rowOffset_73923_ext,
           inMode_73924_ext, numRows_73925_ext):
    try:
      assert ((type(detectorPositions_mem_97020_ext) in [np.ndarray,
                                                         cl.array.Array]) and (detectorPositions_mem_97020_ext.dtype == np.float64)), 'Parameter has unexpected type'
      sizze_73917 = np.int32(detectorPositions_mem_97020_ext.shape[0])
      detectorPositions_mem_sizze_97019 = np.int64(detectorPositions_mem_97020_ext.nbytes)
      if (type(detectorPositions_mem_97020_ext) == cl.array.Array):
        detectorPositions_mem_97020 = detectorPositions_mem_97020_ext.data
      else:
        detectorPositions_mem_97020 = opencl_alloc(self,
                                                   detectorPositions_mem_sizze_97019,
                                                   "detectorPositions_mem_97020")
        if (detectorPositions_mem_sizze_97019 != 0):
          cl.enqueue_copy(self.queue, detectorPositions_mem_97020,
                          normaliseArray(detectorPositions_mem_97020_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #0 has invalid value\nFuthark type: {}\nType of given Python value: {}\n".format("[]f64",
                                                                                                                 type(detectorPositions_mem_97020_ext)))
    try:
      assert ((type(angles_mem_97022_ext) in [np.ndarray,
                                              cl.array.Array]) and (angles_mem_97022_ext.dtype == np.float64)), 'Parameter has unexpected type'
      sizze_73918 = np.int32(angles_mem_97022_ext.shape[0])
      angles_mem_sizze_97021 = np.int64(angles_mem_97022_ext.nbytes)
      if (type(angles_mem_97022_ext) == cl.array.Array):
        angles_mem_97022 = angles_mem_97022_ext.data
      else:
        angles_mem_97022 = opencl_alloc(self, angles_mem_sizze_97021,
                                        "angles_mem_97022")
        if (angles_mem_sizze_97021 != 0):
          cl.enqueue_copy(self.queue, angles_mem_97022,
                          normaliseArray(angles_mem_97022_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #1 has invalid value\nFuthark type: {}\nType of given Python value: {}\n".format("[]f64",
                                                                                                                 type(angles_mem_97022_ext)))
    try:
      gridHalfWidth_73921 = np.float64(ct.c_double(gridHalfWidth_73921_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #2 has invalid value\nFuthark type: {}\nType of given Python value: {}\n".format("f64",
                                                                                                                 type(gridHalfWidth_73921_ext)))
    try:
      delta_73922 = np.float64(ct.c_double(delta_73922_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #3 has invalid value\nFuthark type: {}\nType of given Python value: {}\n".format("f64",
                                                                                                                 type(delta_73922_ext)))
    try:
      rowOffset_73923 = np.int32(ct.c_int32(rowOffset_73923_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #4 has invalid value\nFuthark type: {}\nType of given Python value: {}\n".format("i32",
                                                                                                                 type(rowOffset_73923_ext)))
    try:
      inMode_73924 = np.int16(ct.c_int16(inMode_73924_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #5 has invalid value\nFuthark type: {}\nType of given Python value: {}\n".format("i16",
                                                                                                                 type(inMode_73924_ext)))
    try:
      numRows_73925 = np.int32(ct.c_int32(numRows_73925_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #6 has invalid value\nFuthark type: {}\nType of given Python value: {}\n".format("i32",
                                                                                                                 type(numRows_73925_ext)))
    (out_memsizze_97778, out_mem_97777, out_arrsizze_97779, out_memsizze_97781,
     out_mem_97780, out_arrsizze_97782, out_memsizze_97784, out_mem_97783,
     out_arrsizze_97785) = self.futhark_main(detectorPositions_mem_sizze_97019,
                                             detectorPositions_mem_97020,
                                             angles_mem_sizze_97021,
                                             angles_mem_97022, sizze_73917,
                                             sizze_73918, gridHalfWidth_73921,
                                             delta_73922, rowOffset_73923,
                                             inMode_73924, numRows_73925)
    return (cl.array.Array(self.queue, (out_arrsizze_97779,), ct.c_int32,
                           data=out_mem_97777), cl.array.Array(self.queue,
                                                               (out_arrsizze_97782,),
                                                               ct.c_int32,
                                                               data=out_mem_97780),
            cl.array.Array(self.queue, (out_arrsizze_97785,), ct.c_double,
                           data=out_mem_97783))
  def inParts(self, detectorPositions_mem_97020_ext, angles_mem_97022_ext,
              gridHalfWidth_78975_ext, delta_78976_ext, parts_78977_ext):
    try:
      assert ((type(detectorPositions_mem_97020_ext) in [np.ndarray,
                                                         cl.array.Array]) and (detectorPositions_mem_97020_ext.dtype == np.float64)), 'Parameter has unexpected type'
      sizze_78971 = np.int32(detectorPositions_mem_97020_ext.shape[0])
      detectorPositions_mem_sizze_97019 = np.int64(detectorPositions_mem_97020_ext.nbytes)
      if (type(detectorPositions_mem_97020_ext) == cl.array.Array):
        detectorPositions_mem_97020 = detectorPositions_mem_97020_ext.data
      else:
        detectorPositions_mem_97020 = opencl_alloc(self,
                                                   detectorPositions_mem_sizze_97019,
                                                   "detectorPositions_mem_97020")
        if (detectorPositions_mem_sizze_97019 != 0):
          cl.enqueue_copy(self.queue, detectorPositions_mem_97020,
                          normaliseArray(detectorPositions_mem_97020_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #0 has invalid value\nFuthark type: {}\nType of given Python value: {}\n".format("[]f64",
                                                                                                                 type(detectorPositions_mem_97020_ext)))
    try:
      assert ((type(angles_mem_97022_ext) in [np.ndarray,
                                              cl.array.Array]) and (angles_mem_97022_ext.dtype == np.float64)), 'Parameter has unexpected type'
      sizze_78972 = np.int32(angles_mem_97022_ext.shape[0])
      angles_mem_sizze_97021 = np.int64(angles_mem_97022_ext.nbytes)
      if (type(angles_mem_97022_ext) == cl.array.Array):
        angles_mem_97022 = angles_mem_97022_ext.data
      else:
        angles_mem_97022 = opencl_alloc(self, angles_mem_sizze_97021,
                                        "angles_mem_97022")
        if (angles_mem_sizze_97021 != 0):
          cl.enqueue_copy(self.queue, angles_mem_97022,
                          normaliseArray(angles_mem_97022_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #1 has invalid value\nFuthark type: {}\nType of given Python value: {}\n".format("[]f64",
                                                                                                                 type(angles_mem_97022_ext)))
    try:
      gridHalfWidth_78975 = np.float64(ct.c_double(gridHalfWidth_78975_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #2 has invalid value\nFuthark type: {}\nType of given Python value: {}\n".format("f64",
                                                                                                                 type(gridHalfWidth_78975_ext)))
    try:
      delta_78976 = np.float64(ct.c_double(delta_78976_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #3 has invalid value\nFuthark type: {}\nType of given Python value: {}\n".format("f64",
                                                                                                                 type(delta_78976_ext)))
    try:
      parts_78977 = np.int32(ct.c_int32(parts_78977_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #4 has invalid value\nFuthark type: {}\nType of given Python value: {}\n".format("i32",
                                                                                                                 type(parts_78977_ext)))
    (out_memsizze_98100, out_mem_98099, out_arrsizze_98101, out_memsizze_98103,
     out_mem_98102, out_arrsizze_98104, out_memsizze_98106, out_mem_98105,
     out_arrsizze_98107) = self.futhark_inParts(detectorPositions_mem_sizze_97019,
                                                detectorPositions_mem_97020,
                                                angles_mem_sizze_97021,
                                                angles_mem_97022, sizze_78971,
                                                sizze_78972,
                                                gridHalfWidth_78975,
                                                delta_78976, parts_78977)
    return (cl.array.Array(self.queue, (out_arrsizze_98101,), ct.c_int32,
                           data=out_mem_98099), cl.array.Array(self.queue,
                                                               (out_arrsizze_98104,),
                                                               ct.c_int32,
                                                               data=out_mem_98102),
            cl.array.Array(self.queue, (out_arrsizze_98107,), ct.c_double,
                           data=out_mem_98105))
  def calculateCSR(self, detectorPositions_mem_97020_ext, angles_mem_97022_ext,
                   gridHalfWidth_81564_ext, delta_81565_ext,
                   rowOffset_81566_ext, numRows_81567_ext):
    try:
      assert ((type(detectorPositions_mem_97020_ext) in [np.ndarray,
                                                         cl.array.Array]) and (detectorPositions_mem_97020_ext.dtype == np.float64)), 'Parameter has unexpected type'
      sizze_81560 = np.int32(detectorPositions_mem_97020_ext.shape[0])
      detectorPositions_mem_sizze_97019 = np.int64(detectorPositions_mem_97020_ext.nbytes)
      if (type(detectorPositions_mem_97020_ext) == cl.array.Array):
        detectorPositions_mem_97020 = detectorPositions_mem_97020_ext.data
      else:
        detectorPositions_mem_97020 = opencl_alloc(self,
                                                   detectorPositions_mem_sizze_97019,
                                                   "detectorPositions_mem_97020")
        if (detectorPositions_mem_sizze_97019 != 0):
          cl.enqueue_copy(self.queue, detectorPositions_mem_97020,
                          normaliseArray(detectorPositions_mem_97020_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #0 has invalid value\nFuthark type: {}\nType of given Python value: {}\n".format("[]f64",
                                                                                                                 type(detectorPositions_mem_97020_ext)))
    try:
      assert ((type(angles_mem_97022_ext) in [np.ndarray,
                                              cl.array.Array]) and (angles_mem_97022_ext.dtype == np.float64)), 'Parameter has unexpected type'
      sizze_81561 = np.int32(angles_mem_97022_ext.shape[0])
      angles_mem_sizze_97021 = np.int64(angles_mem_97022_ext.nbytes)
      if (type(angles_mem_97022_ext) == cl.array.Array):
        angles_mem_97022 = angles_mem_97022_ext.data
      else:
        angles_mem_97022 = opencl_alloc(self, angles_mem_sizze_97021,
                                        "angles_mem_97022")
        if (angles_mem_sizze_97021 != 0):
          cl.enqueue_copy(self.queue, angles_mem_97022,
                          normaliseArray(angles_mem_97022_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #1 has invalid value\nFuthark type: {}\nType of given Python value: {}\n".format("[]f64",
                                                                                                                 type(angles_mem_97022_ext)))
    try:
      gridHalfWidth_81564 = np.float64(ct.c_double(gridHalfWidth_81564_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #2 has invalid value\nFuthark type: {}\nType of given Python value: {}\n".format("f64",
                                                                                                                 type(gridHalfWidth_81564_ext)))
    try:
      delta_81565 = np.float64(ct.c_double(delta_81565_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #3 has invalid value\nFuthark type: {}\nType of given Python value: {}\n".format("f64",
                                                                                                                 type(delta_81565_ext)))
    try:
      rowOffset_81566 = np.int32(ct.c_int32(rowOffset_81566_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #4 has invalid value\nFuthark type: {}\nType of given Python value: {}\n".format("i32",
                                                                                                                 type(rowOffset_81566_ext)))
    try:
      numRows_81567 = np.int32(ct.c_int32(numRows_81567_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #5 has invalid value\nFuthark type: {}\nType of given Python value: {}\n".format("i32",
                                                                                                                 type(numRows_81567_ext)))
    (out_memsizze_98271, out_mem_98270, out_arrsizze_98272, out_memsizze_98274,
     out_mem_98273, out_arrsizze_98275, out_memsizze_98277, out_mem_98276,
     out_arrsizze_98278) = self.futhark_calculateCSR(detectorPositions_mem_sizze_97019,
                                                     detectorPositions_mem_97020,
                                                     angles_mem_sizze_97021,
                                                     angles_mem_97022,
                                                     sizze_81560, sizze_81561,
                                                     gridHalfWidth_81564,
                                                     delta_81565,
                                                     rowOffset_81566,
                                                     numRows_81567)
    return (cl.array.Array(self.queue, (out_arrsizze_98272,), ct.c_int32,
                           data=out_mem_98270), cl.array.Array(self.queue,
                                                               (out_arrsizze_98275,),
                                                               ct.c_int32,
                                                               data=out_mem_98273),
            cl.array.Array(self.queue, (out_arrsizze_98278,), ct.c_double,
                           data=out_mem_98276))
  def calculateCOO(self, detectorPositions_mem_97020_ext, angles_mem_97022_ext,
                   gridHalfWidth_84155_ext, delta_84156_ext,
                   rowOffset_84157_ext):
    try:
      assert ((type(detectorPositions_mem_97020_ext) in [np.ndarray,
                                                         cl.array.Array]) and (detectorPositions_mem_97020_ext.dtype == np.float64)), 'Parameter has unexpected type'
      sizze_84151 = np.int32(detectorPositions_mem_97020_ext.shape[0])
      detectorPositions_mem_sizze_97019 = np.int64(detectorPositions_mem_97020_ext.nbytes)
      if (type(detectorPositions_mem_97020_ext) == cl.array.Array):
        detectorPositions_mem_97020 = detectorPositions_mem_97020_ext.data
      else:
        detectorPositions_mem_97020 = opencl_alloc(self,
                                                   detectorPositions_mem_sizze_97019,
                                                   "detectorPositions_mem_97020")
        if (detectorPositions_mem_sizze_97019 != 0):
          cl.enqueue_copy(self.queue, detectorPositions_mem_97020,
                          normaliseArray(detectorPositions_mem_97020_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #0 has invalid value\nFuthark type: {}\nType of given Python value: {}\n".format("[]f64",
                                                                                                                 type(detectorPositions_mem_97020_ext)))
    try:
      assert ((type(angles_mem_97022_ext) in [np.ndarray,
                                              cl.array.Array]) and (angles_mem_97022_ext.dtype == np.float64)), 'Parameter has unexpected type'
      sizze_84152 = np.int32(angles_mem_97022_ext.shape[0])
      angles_mem_sizze_97021 = np.int64(angles_mem_97022_ext.nbytes)
      if (type(angles_mem_97022_ext) == cl.array.Array):
        angles_mem_97022 = angles_mem_97022_ext.data
      else:
        angles_mem_97022 = opencl_alloc(self, angles_mem_sizze_97021,
                                        "angles_mem_97022")
        if (angles_mem_sizze_97021 != 0):
          cl.enqueue_copy(self.queue, angles_mem_97022,
                          normaliseArray(angles_mem_97022_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #1 has invalid value\nFuthark type: {}\nType of given Python value: {}\n".format("[]f64",
                                                                                                                 type(angles_mem_97022_ext)))
    try:
      gridHalfWidth_84155 = np.float64(ct.c_double(gridHalfWidth_84155_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #2 has invalid value\nFuthark type: {}\nType of given Python value: {}\n".format("f64",
                                                                                                                 type(gridHalfWidth_84155_ext)))
    try:
      delta_84156 = np.float64(ct.c_double(delta_84156_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #3 has invalid value\nFuthark type: {}\nType of given Python value: {}\n".format("f64",
                                                                                                                 type(delta_84156_ext)))
    try:
      rowOffset_84157 = np.int32(ct.c_int32(rowOffset_84157_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #4 has invalid value\nFuthark type: {}\nType of given Python value: {}\n".format("i32",
                                                                                                                 type(rowOffset_84157_ext)))
    (out_memsizze_98462, out_mem_98461, out_arrsizze_98463, out_memsizze_98465,
     out_mem_98464, out_arrsizze_98466, out_memsizze_98468, out_mem_98467,
     out_arrsizze_98469) = self.futhark_calculateCOO(detectorPositions_mem_sizze_97019,
                                                     detectorPositions_mem_97020,
                                                     angles_mem_sizze_97021,
                                                     angles_mem_97022,
                                                     sizze_84151, sizze_84152,
                                                     gridHalfWidth_84155,
                                                     delta_84156,
                                                     rowOffset_84157)
    return (cl.array.Array(self.queue, (out_arrsizze_98463,), ct.c_int32,
                           data=out_mem_98461), cl.array.Array(self.queue,
                                                               (out_arrsizze_98466,),
                                                               ct.c_int32,
                                                               data=out_mem_98464),
            cl.array.Array(self.queue, (out_arrsizze_98469,), ct.c_double,
                           data=out_mem_98467))